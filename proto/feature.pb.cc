// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feature.proto

#include "feature.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_feature_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringBool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringBytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringDouble;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFloat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringInt32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringInt64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringString;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListStringUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Bool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Double;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Fixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Fixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Float;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Int32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sfixed32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sfixed64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Uint32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Uint64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FeaturesMap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FeaturesMap_FEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto ::google::protobuf::internal::SCCInfo<240> scc_info_Feature;
}  // namespace protobuf_feature_2eproto
namespace feature_proto {
class ListDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDouble>
      _instance;
} _ListDouble_default_instance_;
class ListFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloat>
      _instance;
} _ListFloat_default_instance_;
class ListInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32>
      _instance;
} _ListInt32_default_instance_;
class ListInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64>
      _instance;
} _ListInt64_default_instance_;
class ListUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32>
      _instance;
} _ListUint32_default_instance_;
class ListUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64>
      _instance;
} _ListUint64_default_instance_;
class ListSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32>
      _instance;
} _ListSint32_default_instance_;
class ListSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64>
      _instance;
} _ListSint64_default_instance_;
class ListFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32>
      _instance;
} _ListFixed32_default_instance_;
class ListFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64>
      _instance;
} _ListFixed64_default_instance_;
class ListSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32>
      _instance;
} _ListSfixed32_default_instance_;
class ListSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64>
      _instance;
} _ListSfixed64_default_instance_;
class ListBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBool>
      _instance;
} _ListBool_default_instance_;
class ListStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListString>
      _instance;
} _ListString_default_instance_;
class ListBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytes>
      _instance;
} _ListBytes_default_instance_;
class ListStringDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringDouble>
      _instance;
} _ListStringDouble_default_instance_;
class ListStringFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringFloat>
      _instance;
} _ListStringFloat_default_instance_;
class ListStringInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringInt32>
      _instance;
} _ListStringInt32_default_instance_;
class ListStringInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringInt64>
      _instance;
} _ListStringInt64_default_instance_;
class ListStringUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringUint32>
      _instance;
} _ListStringUint32_default_instance_;
class ListStringUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringUint64>
      _instance;
} _ListStringUint64_default_instance_;
class ListStringSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringSint32>
      _instance;
} _ListStringSint32_default_instance_;
class ListStringSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringSint64>
      _instance;
} _ListStringSint64_default_instance_;
class ListStringFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringFixed32>
      _instance;
} _ListStringFixed32_default_instance_;
class ListStringFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringFixed64>
      _instance;
} _ListStringFixed64_default_instance_;
class ListStringSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringSfixed32>
      _instance;
} _ListStringSfixed32_default_instance_;
class ListStringSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringSfixed64>
      _instance;
} _ListStringSfixed64_default_instance_;
class ListStringBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringBool>
      _instance;
} _ListStringBool_default_instance_;
class ListStringStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringString>
      _instance;
} _ListStringString_default_instance_;
class ListStringBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListStringBytes>
      _instance;
} _ListStringBytes_default_instance_;
class ListBytesDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesDouble>
      _instance;
} _ListBytesDouble_default_instance_;
class ListBytesFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesFloat>
      _instance;
} _ListBytesFloat_default_instance_;
class ListBytesInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesInt32>
      _instance;
} _ListBytesInt32_default_instance_;
class ListBytesInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesInt64>
      _instance;
} _ListBytesInt64_default_instance_;
class ListBytesUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesUint32>
      _instance;
} _ListBytesUint32_default_instance_;
class ListBytesUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesUint64>
      _instance;
} _ListBytesUint64_default_instance_;
class ListBytesSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesSint32>
      _instance;
} _ListBytesSint32_default_instance_;
class ListBytesSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesSint64>
      _instance;
} _ListBytesSint64_default_instance_;
class ListBytesFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesFixed32>
      _instance;
} _ListBytesFixed32_default_instance_;
class ListBytesFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesFixed64>
      _instance;
} _ListBytesFixed64_default_instance_;
class ListBytesSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesSfixed32>
      _instance;
} _ListBytesSfixed32_default_instance_;
class ListBytesSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesSfixed64>
      _instance;
} _ListBytesSfixed64_default_instance_;
class ListBytesBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesBool>
      _instance;
} _ListBytesBool_default_instance_;
class ListBytesStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesString>
      _instance;
} _ListBytesString_default_instance_;
class ListBytesBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBytesBytes>
      _instance;
} _ListBytesBytes_default_instance_;
class ListInt32DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Double>
      _instance;
} _ListInt32Double_default_instance_;
class ListInt32FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Float>
      _instance;
} _ListInt32Float_default_instance_;
class ListInt32Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Int32>
      _instance;
} _ListInt32Int32_default_instance_;
class ListInt32Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Int64>
      _instance;
} _ListInt32Int64_default_instance_;
class ListInt32Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Uint32>
      _instance;
} _ListInt32Uint32_default_instance_;
class ListInt32Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Uint64>
      _instance;
} _ListInt32Uint64_default_instance_;
class ListInt32Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Sint32>
      _instance;
} _ListInt32Sint32_default_instance_;
class ListInt32Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Sint64>
      _instance;
} _ListInt32Sint64_default_instance_;
class ListInt32Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Fixed32>
      _instance;
} _ListInt32Fixed32_default_instance_;
class ListInt32Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Fixed64>
      _instance;
} _ListInt32Fixed64_default_instance_;
class ListInt32Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Sfixed32>
      _instance;
} _ListInt32Sfixed32_default_instance_;
class ListInt32Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Sfixed64>
      _instance;
} _ListInt32Sfixed64_default_instance_;
class ListInt32BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Bool>
      _instance;
} _ListInt32Bool_default_instance_;
class ListInt32StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32String>
      _instance;
} _ListInt32String_default_instance_;
class ListInt32BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt32Bytes>
      _instance;
} _ListInt32Bytes_default_instance_;
class ListInt64DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Double>
      _instance;
} _ListInt64Double_default_instance_;
class ListInt64FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Float>
      _instance;
} _ListInt64Float_default_instance_;
class ListInt64Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Int32>
      _instance;
} _ListInt64Int32_default_instance_;
class ListInt64Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Int64>
      _instance;
} _ListInt64Int64_default_instance_;
class ListInt64Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Uint32>
      _instance;
} _ListInt64Uint32_default_instance_;
class ListInt64Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Uint64>
      _instance;
} _ListInt64Uint64_default_instance_;
class ListInt64Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Sint32>
      _instance;
} _ListInt64Sint32_default_instance_;
class ListInt64Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Sint64>
      _instance;
} _ListInt64Sint64_default_instance_;
class ListInt64Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Fixed32>
      _instance;
} _ListInt64Fixed32_default_instance_;
class ListInt64Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Fixed64>
      _instance;
} _ListInt64Fixed64_default_instance_;
class ListInt64Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Sfixed32>
      _instance;
} _ListInt64Sfixed32_default_instance_;
class ListInt64Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Sfixed64>
      _instance;
} _ListInt64Sfixed64_default_instance_;
class ListInt64BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Bool>
      _instance;
} _ListInt64Bool_default_instance_;
class ListInt64StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64String>
      _instance;
} _ListInt64String_default_instance_;
class ListInt64BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListInt64Bytes>
      _instance;
} _ListInt64Bytes_default_instance_;
class ListUint32DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Double>
      _instance;
} _ListUint32Double_default_instance_;
class ListUint32FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Float>
      _instance;
} _ListUint32Float_default_instance_;
class ListUint32Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Int32>
      _instance;
} _ListUint32Int32_default_instance_;
class ListUint32Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Int64>
      _instance;
} _ListUint32Int64_default_instance_;
class ListUint32Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Uint32>
      _instance;
} _ListUint32Uint32_default_instance_;
class ListUint32Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Uint64>
      _instance;
} _ListUint32Uint64_default_instance_;
class ListUint32Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Sint32>
      _instance;
} _ListUint32Sint32_default_instance_;
class ListUint32Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Sint64>
      _instance;
} _ListUint32Sint64_default_instance_;
class ListUint32Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Fixed32>
      _instance;
} _ListUint32Fixed32_default_instance_;
class ListUint32Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Fixed64>
      _instance;
} _ListUint32Fixed64_default_instance_;
class ListUint32Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Sfixed32>
      _instance;
} _ListUint32Sfixed32_default_instance_;
class ListUint32Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Sfixed64>
      _instance;
} _ListUint32Sfixed64_default_instance_;
class ListUint32BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Bool>
      _instance;
} _ListUint32Bool_default_instance_;
class ListUint32StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32String>
      _instance;
} _ListUint32String_default_instance_;
class ListUint32BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint32Bytes>
      _instance;
} _ListUint32Bytes_default_instance_;
class ListUint64DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Double>
      _instance;
} _ListUint64Double_default_instance_;
class ListUint64FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Float>
      _instance;
} _ListUint64Float_default_instance_;
class ListUint64Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Int32>
      _instance;
} _ListUint64Int32_default_instance_;
class ListUint64Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Int64>
      _instance;
} _ListUint64Int64_default_instance_;
class ListUint64Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Uint32>
      _instance;
} _ListUint64Uint32_default_instance_;
class ListUint64Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Uint64>
      _instance;
} _ListUint64Uint64_default_instance_;
class ListUint64Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Sint32>
      _instance;
} _ListUint64Sint32_default_instance_;
class ListUint64Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Sint64>
      _instance;
} _ListUint64Sint64_default_instance_;
class ListUint64Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Fixed32>
      _instance;
} _ListUint64Fixed32_default_instance_;
class ListUint64Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Fixed64>
      _instance;
} _ListUint64Fixed64_default_instance_;
class ListUint64Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Sfixed32>
      _instance;
} _ListUint64Sfixed32_default_instance_;
class ListUint64Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Sfixed64>
      _instance;
} _ListUint64Sfixed64_default_instance_;
class ListUint64BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Bool>
      _instance;
} _ListUint64Bool_default_instance_;
class ListUint64StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64String>
      _instance;
} _ListUint64String_default_instance_;
class ListUint64BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListUint64Bytes>
      _instance;
} _ListUint64Bytes_default_instance_;
class ListSint32DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Double>
      _instance;
} _ListSint32Double_default_instance_;
class ListSint32FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Float>
      _instance;
} _ListSint32Float_default_instance_;
class ListSint32Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Int32>
      _instance;
} _ListSint32Int32_default_instance_;
class ListSint32Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Int64>
      _instance;
} _ListSint32Int64_default_instance_;
class ListSint32Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Uint32>
      _instance;
} _ListSint32Uint32_default_instance_;
class ListSint32Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Uint64>
      _instance;
} _ListSint32Uint64_default_instance_;
class ListSint32Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Sint32>
      _instance;
} _ListSint32Sint32_default_instance_;
class ListSint32Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Sint64>
      _instance;
} _ListSint32Sint64_default_instance_;
class ListSint32Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Fixed32>
      _instance;
} _ListSint32Fixed32_default_instance_;
class ListSint32Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Fixed64>
      _instance;
} _ListSint32Fixed64_default_instance_;
class ListSint32Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Sfixed32>
      _instance;
} _ListSint32Sfixed32_default_instance_;
class ListSint32Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Sfixed64>
      _instance;
} _ListSint32Sfixed64_default_instance_;
class ListSint32BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Bool>
      _instance;
} _ListSint32Bool_default_instance_;
class ListSint32StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32String>
      _instance;
} _ListSint32String_default_instance_;
class ListSint32BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint32Bytes>
      _instance;
} _ListSint32Bytes_default_instance_;
class ListSint64DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Double>
      _instance;
} _ListSint64Double_default_instance_;
class ListSint64FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Float>
      _instance;
} _ListSint64Float_default_instance_;
class ListSint64Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Int32>
      _instance;
} _ListSint64Int32_default_instance_;
class ListSint64Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Int64>
      _instance;
} _ListSint64Int64_default_instance_;
class ListSint64Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Uint32>
      _instance;
} _ListSint64Uint32_default_instance_;
class ListSint64Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Uint64>
      _instance;
} _ListSint64Uint64_default_instance_;
class ListSint64Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Sint32>
      _instance;
} _ListSint64Sint32_default_instance_;
class ListSint64Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Sint64>
      _instance;
} _ListSint64Sint64_default_instance_;
class ListSint64Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Fixed32>
      _instance;
} _ListSint64Fixed32_default_instance_;
class ListSint64Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Fixed64>
      _instance;
} _ListSint64Fixed64_default_instance_;
class ListSint64Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Sfixed32>
      _instance;
} _ListSint64Sfixed32_default_instance_;
class ListSint64Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Sfixed64>
      _instance;
} _ListSint64Sfixed64_default_instance_;
class ListSint64BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Bool>
      _instance;
} _ListSint64Bool_default_instance_;
class ListSint64StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64String>
      _instance;
} _ListSint64String_default_instance_;
class ListSint64BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSint64Bytes>
      _instance;
} _ListSint64Bytes_default_instance_;
class ListFixed32DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Double>
      _instance;
} _ListFixed32Double_default_instance_;
class ListFixed32FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Float>
      _instance;
} _ListFixed32Float_default_instance_;
class ListFixed32Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Int32>
      _instance;
} _ListFixed32Int32_default_instance_;
class ListFixed32Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Int64>
      _instance;
} _ListFixed32Int64_default_instance_;
class ListFixed32Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Uint32>
      _instance;
} _ListFixed32Uint32_default_instance_;
class ListFixed32Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Uint64>
      _instance;
} _ListFixed32Uint64_default_instance_;
class ListFixed32Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Sint32>
      _instance;
} _ListFixed32Sint32_default_instance_;
class ListFixed32Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Sint64>
      _instance;
} _ListFixed32Sint64_default_instance_;
class ListFixed32Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Fixed32>
      _instance;
} _ListFixed32Fixed32_default_instance_;
class ListFixed32Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Fixed64>
      _instance;
} _ListFixed32Fixed64_default_instance_;
class ListFixed32Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Sfixed32>
      _instance;
} _ListFixed32Sfixed32_default_instance_;
class ListFixed32Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Sfixed64>
      _instance;
} _ListFixed32Sfixed64_default_instance_;
class ListFixed32BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Bool>
      _instance;
} _ListFixed32Bool_default_instance_;
class ListFixed32StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32String>
      _instance;
} _ListFixed32String_default_instance_;
class ListFixed32BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed32Bytes>
      _instance;
} _ListFixed32Bytes_default_instance_;
class ListFixed64DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Double>
      _instance;
} _ListFixed64Double_default_instance_;
class ListFixed64FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Float>
      _instance;
} _ListFixed64Float_default_instance_;
class ListFixed64Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Int32>
      _instance;
} _ListFixed64Int32_default_instance_;
class ListFixed64Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Int64>
      _instance;
} _ListFixed64Int64_default_instance_;
class ListFixed64Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Uint32>
      _instance;
} _ListFixed64Uint32_default_instance_;
class ListFixed64Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Uint64>
      _instance;
} _ListFixed64Uint64_default_instance_;
class ListFixed64Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Sint32>
      _instance;
} _ListFixed64Sint32_default_instance_;
class ListFixed64Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Sint64>
      _instance;
} _ListFixed64Sint64_default_instance_;
class ListFixed64Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Fixed32>
      _instance;
} _ListFixed64Fixed32_default_instance_;
class ListFixed64Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Fixed64>
      _instance;
} _ListFixed64Fixed64_default_instance_;
class ListFixed64Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Sfixed32>
      _instance;
} _ListFixed64Sfixed32_default_instance_;
class ListFixed64Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Sfixed64>
      _instance;
} _ListFixed64Sfixed64_default_instance_;
class ListFixed64BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Bool>
      _instance;
} _ListFixed64Bool_default_instance_;
class ListFixed64StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64String>
      _instance;
} _ListFixed64String_default_instance_;
class ListFixed64BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFixed64Bytes>
      _instance;
} _ListFixed64Bytes_default_instance_;
class ListSfixed32DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Double>
      _instance;
} _ListSfixed32Double_default_instance_;
class ListSfixed32FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Float>
      _instance;
} _ListSfixed32Float_default_instance_;
class ListSfixed32Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Int32>
      _instance;
} _ListSfixed32Int32_default_instance_;
class ListSfixed32Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Int64>
      _instance;
} _ListSfixed32Int64_default_instance_;
class ListSfixed32Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Uint32>
      _instance;
} _ListSfixed32Uint32_default_instance_;
class ListSfixed32Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Uint64>
      _instance;
} _ListSfixed32Uint64_default_instance_;
class ListSfixed32Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Sint32>
      _instance;
} _ListSfixed32Sint32_default_instance_;
class ListSfixed32Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Sint64>
      _instance;
} _ListSfixed32Sint64_default_instance_;
class ListSfixed32Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Fixed32>
      _instance;
} _ListSfixed32Fixed32_default_instance_;
class ListSfixed32Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Fixed64>
      _instance;
} _ListSfixed32Fixed64_default_instance_;
class ListSfixed32Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Sfixed32>
      _instance;
} _ListSfixed32Sfixed32_default_instance_;
class ListSfixed32Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Sfixed64>
      _instance;
} _ListSfixed32Sfixed64_default_instance_;
class ListSfixed32BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Bool>
      _instance;
} _ListSfixed32Bool_default_instance_;
class ListSfixed32StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32String>
      _instance;
} _ListSfixed32String_default_instance_;
class ListSfixed32BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed32Bytes>
      _instance;
} _ListSfixed32Bytes_default_instance_;
class ListSfixed64DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Double>
      _instance;
} _ListSfixed64Double_default_instance_;
class ListSfixed64FloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Float>
      _instance;
} _ListSfixed64Float_default_instance_;
class ListSfixed64Int32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Int32>
      _instance;
} _ListSfixed64Int32_default_instance_;
class ListSfixed64Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Int64>
      _instance;
} _ListSfixed64Int64_default_instance_;
class ListSfixed64Uint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Uint32>
      _instance;
} _ListSfixed64Uint32_default_instance_;
class ListSfixed64Uint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Uint64>
      _instance;
} _ListSfixed64Uint64_default_instance_;
class ListSfixed64Sint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Sint32>
      _instance;
} _ListSfixed64Sint32_default_instance_;
class ListSfixed64Sint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Sint64>
      _instance;
} _ListSfixed64Sint64_default_instance_;
class ListSfixed64Fixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Fixed32>
      _instance;
} _ListSfixed64Fixed32_default_instance_;
class ListSfixed64Fixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Fixed64>
      _instance;
} _ListSfixed64Fixed64_default_instance_;
class ListSfixed64Sfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Sfixed32>
      _instance;
} _ListSfixed64Sfixed32_default_instance_;
class ListSfixed64Sfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Sfixed64>
      _instance;
} _ListSfixed64Sfixed64_default_instance_;
class ListSfixed64BoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Bool>
      _instance;
} _ListSfixed64Bool_default_instance_;
class ListSfixed64StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64String>
      _instance;
} _ListSfixed64String_default_instance_;
class ListSfixed64BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSfixed64Bytes>
      _instance;
} _ListSfixed64Bytes_default_instance_;
class ListDoubleDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleDouble>
      _instance;
} _ListDoubleDouble_default_instance_;
class ListDoubleFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleFloat>
      _instance;
} _ListDoubleFloat_default_instance_;
class ListDoubleInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleInt32>
      _instance;
} _ListDoubleInt32_default_instance_;
class ListDoubleInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleInt64>
      _instance;
} _ListDoubleInt64_default_instance_;
class ListDoubleUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleUint32>
      _instance;
} _ListDoubleUint32_default_instance_;
class ListDoubleUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleUint64>
      _instance;
} _ListDoubleUint64_default_instance_;
class ListDoubleSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleSint32>
      _instance;
} _ListDoubleSint32_default_instance_;
class ListDoubleSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleSint64>
      _instance;
} _ListDoubleSint64_default_instance_;
class ListDoubleFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleFixed32>
      _instance;
} _ListDoubleFixed32_default_instance_;
class ListDoubleFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleFixed64>
      _instance;
} _ListDoubleFixed64_default_instance_;
class ListDoubleSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleSfixed32>
      _instance;
} _ListDoubleSfixed32_default_instance_;
class ListDoubleSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleSfixed64>
      _instance;
} _ListDoubleSfixed64_default_instance_;
class ListDoubleBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleBool>
      _instance;
} _ListDoubleBool_default_instance_;
class ListDoubleStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleString>
      _instance;
} _ListDoubleString_default_instance_;
class ListDoubleBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListDoubleBytes>
      _instance;
} _ListDoubleBytes_default_instance_;
class ListFloatDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatDouble>
      _instance;
} _ListFloatDouble_default_instance_;
class ListFloatFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatFloat>
      _instance;
} _ListFloatFloat_default_instance_;
class ListFloatInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatInt32>
      _instance;
} _ListFloatInt32_default_instance_;
class ListFloatInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatInt64>
      _instance;
} _ListFloatInt64_default_instance_;
class ListFloatUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatUint32>
      _instance;
} _ListFloatUint32_default_instance_;
class ListFloatUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatUint64>
      _instance;
} _ListFloatUint64_default_instance_;
class ListFloatSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatSint32>
      _instance;
} _ListFloatSint32_default_instance_;
class ListFloatSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatSint64>
      _instance;
} _ListFloatSint64_default_instance_;
class ListFloatFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatFixed32>
      _instance;
} _ListFloatFixed32_default_instance_;
class ListFloatFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatFixed64>
      _instance;
} _ListFloatFixed64_default_instance_;
class ListFloatSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatSfixed32>
      _instance;
} _ListFloatSfixed32_default_instance_;
class ListFloatSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatSfixed64>
      _instance;
} _ListFloatSfixed64_default_instance_;
class ListFloatBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatBool>
      _instance;
} _ListFloatBool_default_instance_;
class ListFloatStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatString>
      _instance;
} _ListFloatString_default_instance_;
class ListFloatBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFloatBytes>
      _instance;
} _ListFloatBytes_default_instance_;
class ListBoolDoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolDouble>
      _instance;
} _ListBoolDouble_default_instance_;
class ListBoolFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolFloat>
      _instance;
} _ListBoolFloat_default_instance_;
class ListBoolInt32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolInt32>
      _instance;
} _ListBoolInt32_default_instance_;
class ListBoolInt64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolInt64>
      _instance;
} _ListBoolInt64_default_instance_;
class ListBoolUint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolUint32>
      _instance;
} _ListBoolUint32_default_instance_;
class ListBoolUint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolUint64>
      _instance;
} _ListBoolUint64_default_instance_;
class ListBoolSint32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolSint32>
      _instance;
} _ListBoolSint32_default_instance_;
class ListBoolSint64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolSint64>
      _instance;
} _ListBoolSint64_default_instance_;
class ListBoolFixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolFixed32>
      _instance;
} _ListBoolFixed32_default_instance_;
class ListBoolFixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolFixed64>
      _instance;
} _ListBoolFixed64_default_instance_;
class ListBoolSfixed32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolSfixed32>
      _instance;
} _ListBoolSfixed32_default_instance_;
class ListBoolSfixed64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolSfixed64>
      _instance;
} _ListBoolSfixed64_default_instance_;
class ListBoolBoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolBool>
      _instance;
} _ListBoolBool_default_instance_;
class ListBoolStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolString>
      _instance;
} _ListBoolString_default_instance_;
class ListBoolBytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBoolBytes>
      _instance;
} _ListBoolBytes_default_instance_;
class FeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Feature>
      _instance;
  double v_double_;
  float v_float_;
  ::google::protobuf::int32 v_int32_;
  ::google::protobuf::int64 v_int64_;
  ::google::protobuf::uint32 v_uint32_;
  ::google::protobuf::uint64 v_uint64_;
  ::google::protobuf::int32 v_sint32_;
  ::google::protobuf::int64 v_sint64_;
  ::google::protobuf::uint32 v_fixed32_;
  ::google::protobuf::uint64 v_fixed64_;
  ::google::protobuf::int32 v_sfixed32_;
  ::google::protobuf::int64 v_sfixed64_;
  bool v_bool_;
  ::google::protobuf::internal::ArenaStringPtr v_string_;
  ::google::protobuf::internal::ArenaStringPtr v_bytes_;
  const ::feature_proto::ListDouble* v_list_double_;
  const ::feature_proto::ListFloat* v_list_float_;
  const ::feature_proto::ListInt32* v_list_int32_;
  const ::feature_proto::ListInt64* v_list_int64_;
  const ::feature_proto::ListUint32* v_list_uint32_;
  const ::feature_proto::ListUint64* v_list_uint64_;
  const ::feature_proto::ListSint32* v_list_sint32_;
  const ::feature_proto::ListSint64* v_list_sint64_;
  const ::feature_proto::ListFixed32* v_list_fixed32_;
  const ::feature_proto::ListFixed64* v_list_fixed64_;
  const ::feature_proto::ListSfixed32* v_list_sfixed32_;
  const ::feature_proto::ListSfixed64* v_list_sfixed64_;
  const ::feature_proto::ListBool* v_list_bool_;
  const ::feature_proto::ListString* v_list_string_;
  const ::feature_proto::ListBytes* v_list_bytes_;
  const ::feature_proto::ListStringDouble* v_list_string_double_;
  const ::feature_proto::ListStringFloat* v_list_string_float_;
  const ::feature_proto::ListStringInt32* v_list_string_int32_;
  const ::feature_proto::ListStringInt64* v_list_string_int64_;
  const ::feature_proto::ListStringUint32* v_list_string_uint32_;
  const ::feature_proto::ListStringUint64* v_list_string_uint64_;
  const ::feature_proto::ListStringSint32* v_list_string_sint32_;
  const ::feature_proto::ListStringSint64* v_list_string_sint64_;
  const ::feature_proto::ListStringFixed32* v_list_string_fixed32_;
  const ::feature_proto::ListStringFixed64* v_list_string_fixed64_;
  const ::feature_proto::ListStringSfixed32* v_list_string_sfixed32_;
  const ::feature_proto::ListStringSfixed64* v_list_string_sfixed64_;
  const ::feature_proto::ListStringBool* v_list_string_bool_;
  const ::feature_proto::ListStringString* v_list_string_string_;
  const ::feature_proto::ListStringBytes* v_list_string_bytes_;
  const ::feature_proto::ListBytesDouble* v_list_bytes_double_;
  const ::feature_proto::ListBytesFloat* v_list_bytes_float_;
  const ::feature_proto::ListBytesInt32* v_list_bytes_int32_;
  const ::feature_proto::ListBytesInt64* v_list_bytes_int64_;
  const ::feature_proto::ListBytesUint32* v_list_bytes_uint32_;
  const ::feature_proto::ListBytesUint64* v_list_bytes_uint64_;
  const ::feature_proto::ListBytesSint32* v_list_bytes_sint32_;
  const ::feature_proto::ListBytesSint64* v_list_bytes_sint64_;
  const ::feature_proto::ListBytesFixed32* v_list_bytes_fixed32_;
  const ::feature_proto::ListBytesFixed64* v_list_bytes_fixed64_;
  const ::feature_proto::ListBytesSfixed32* v_list_bytes_sfixed32_;
  const ::feature_proto::ListBytesSfixed64* v_list_bytes_sfixed64_;
  const ::feature_proto::ListBytesBool* v_list_bytes_bool_;
  const ::feature_proto::ListBytesString* v_list_bytes_string_;
  const ::feature_proto::ListBytesBytes* v_list_bytes_bytes_;
  const ::feature_proto::ListInt32Double* v_list_int32_double_;
  const ::feature_proto::ListInt32Float* v_list_int32_float_;
  const ::feature_proto::ListInt32Int32* v_list_int32_int32_;
  const ::feature_proto::ListInt32Int64* v_list_int32_int64_;
  const ::feature_proto::ListInt32Uint32* v_list_int32_uint32_;
  const ::feature_proto::ListInt32Uint64* v_list_int32_uint64_;
  const ::feature_proto::ListInt32Sint32* v_list_int32_sint32_;
  const ::feature_proto::ListInt32Sint64* v_list_int32_sint64_;
  const ::feature_proto::ListInt32Fixed32* v_list_int32_fixed32_;
  const ::feature_proto::ListInt32Fixed64* v_list_int32_fixed64_;
  const ::feature_proto::ListInt32Sfixed32* v_list_int32_sfixed32_;
  const ::feature_proto::ListInt32Sfixed64* v_list_int32_sfixed64_;
  const ::feature_proto::ListInt32Bool* v_list_int32_bool_;
  const ::feature_proto::ListInt32String* v_list_int32_string_;
  const ::feature_proto::ListInt32Bytes* v_list_int32_bytes_;
  const ::feature_proto::ListInt64Double* v_list_int64_double_;
  const ::feature_proto::ListInt64Float* v_list_int64_float_;
  const ::feature_proto::ListInt64Int32* v_list_int64_int32_;
  const ::feature_proto::ListInt64Int64* v_list_int64_int64_;
  const ::feature_proto::ListInt64Uint32* v_list_int64_uint32_;
  const ::feature_proto::ListInt64Uint64* v_list_int64_uint64_;
  const ::feature_proto::ListInt64Sint32* v_list_int64_sint32_;
  const ::feature_proto::ListInt64Sint64* v_list_int64_sint64_;
  const ::feature_proto::ListInt64Fixed32* v_list_int64_fixed32_;
  const ::feature_proto::ListInt64Fixed64* v_list_int64_fixed64_;
  const ::feature_proto::ListInt64Sfixed32* v_list_int64_sfixed32_;
  const ::feature_proto::ListInt64Sfixed64* v_list_int64_sfixed64_;
  const ::feature_proto::ListInt64Bool* v_list_int64_bool_;
  const ::feature_proto::ListInt64String* v_list_int64_string_;
  const ::feature_proto::ListInt64Bytes* v_list_int64_bytes_;
  const ::feature_proto::ListUint32Double* v_list_uint32_double_;
  const ::feature_proto::ListUint32Float* v_list_uint32_float_;
  const ::feature_proto::ListUint32Int32* v_list_uint32_int32_;
  const ::feature_proto::ListUint32Int64* v_list_uint32_int64_;
  const ::feature_proto::ListUint32Uint32* v_list_uint32_uint32_;
  const ::feature_proto::ListUint32Uint64* v_list_uint32_uint64_;
  const ::feature_proto::ListUint32Sint32* v_list_uint32_sint32_;
  const ::feature_proto::ListUint32Sint64* v_list_uint32_sint64_;
  const ::feature_proto::ListUint32Fixed32* v_list_uint32_fixed32_;
  const ::feature_proto::ListUint32Fixed64* v_list_uint32_fixed64_;
  const ::feature_proto::ListUint32Sfixed32* v_list_uint32_sfixed32_;
  const ::feature_proto::ListUint32Sfixed64* v_list_uint32_sfixed64_;
  const ::feature_proto::ListUint32Bool* v_list_uint32_bool_;
  const ::feature_proto::ListUint32String* v_list_uint32_string_;
  const ::feature_proto::ListUint32Bytes* v_list_uint32_bytes_;
  const ::feature_proto::ListUint64Double* v_list_uint64_double_;
  const ::feature_proto::ListUint64Float* v_list_uint64_float_;
  const ::feature_proto::ListUint64Int32* v_list_uint64_int32_;
  const ::feature_proto::ListUint64Int64* v_list_uint64_int64_;
  const ::feature_proto::ListUint64Uint32* v_list_uint64_uint32_;
  const ::feature_proto::ListUint64Uint64* v_list_uint64_uint64_;
  const ::feature_proto::ListUint64Sint32* v_list_uint64_sint32_;
  const ::feature_proto::ListUint64Sint64* v_list_uint64_sint64_;
  const ::feature_proto::ListUint64Fixed32* v_list_uint64_fixed32_;
  const ::feature_proto::ListUint64Fixed64* v_list_uint64_fixed64_;
  const ::feature_proto::ListUint64Sfixed32* v_list_uint64_sfixed32_;
  const ::feature_proto::ListUint64Sfixed64* v_list_uint64_sfixed64_;
  const ::feature_proto::ListUint64Bool* v_list_uint64_bool_;
  const ::feature_proto::ListUint64String* v_list_uint64_string_;
  const ::feature_proto::ListUint64Bytes* v_list_uint64_bytes_;
  const ::feature_proto::ListSint32Double* v_list_sint32_double_;
  const ::feature_proto::ListSint32Float* v_list_sint32_float_;
  const ::feature_proto::ListSint32Int32* v_list_sint32_int32_;
  const ::feature_proto::ListSint32Int64* v_list_sint32_int64_;
  const ::feature_proto::ListSint32Uint32* v_list_sint32_uint32_;
  const ::feature_proto::ListSint32Uint64* v_list_sint32_uint64_;
  const ::feature_proto::ListSint32Sint32* v_list_sint32_sint32_;
  const ::feature_proto::ListSint32Sint64* v_list_sint32_sint64_;
  const ::feature_proto::ListSint32Fixed32* v_list_sint32_fixed32_;
  const ::feature_proto::ListSint32Fixed64* v_list_sint32_fixed64_;
  const ::feature_proto::ListSint32Sfixed32* v_list_sint32_sfixed32_;
  const ::feature_proto::ListSint32Sfixed64* v_list_sint32_sfixed64_;
  const ::feature_proto::ListSint32Bool* v_list_sint32_bool_;
  const ::feature_proto::ListSint32String* v_list_sint32_string_;
  const ::feature_proto::ListSint32Bytes* v_list_sint32_bytes_;
  const ::feature_proto::ListSint64Double* v_list_sint64_double_;
  const ::feature_proto::ListSint64Float* v_list_sint64_float_;
  const ::feature_proto::ListSint64Int32* v_list_sint64_int32_;
  const ::feature_proto::ListSint64Int64* v_list_sint64_int64_;
  const ::feature_proto::ListSint64Uint32* v_list_sint64_uint32_;
  const ::feature_proto::ListSint64Uint64* v_list_sint64_uint64_;
  const ::feature_proto::ListSint64Sint32* v_list_sint64_sint32_;
  const ::feature_proto::ListSint64Sint64* v_list_sint64_sint64_;
  const ::feature_proto::ListSint64Fixed32* v_list_sint64_fixed32_;
  const ::feature_proto::ListSint64Fixed64* v_list_sint64_fixed64_;
  const ::feature_proto::ListSint64Sfixed32* v_list_sint64_sfixed32_;
  const ::feature_proto::ListSint64Sfixed64* v_list_sint64_sfixed64_;
  const ::feature_proto::ListSint64Bool* v_list_sint64_bool_;
  const ::feature_proto::ListSint64String* v_list_sint64_string_;
  const ::feature_proto::ListSint64Bytes* v_list_sint64_bytes_;
  const ::feature_proto::ListFixed32Double* v_list_fixed32_double_;
  const ::feature_proto::ListFixed32Float* v_list_fixed32_float_;
  const ::feature_proto::ListFixed32Int32* v_list_fixed32_int32_;
  const ::feature_proto::ListFixed32Int64* v_list_fixed32_int64_;
  const ::feature_proto::ListFixed32Uint32* v_list_fixed32_uint32_;
  const ::feature_proto::ListFixed32Uint64* v_list_fixed32_uint64_;
  const ::feature_proto::ListFixed32Sint32* v_list_fixed32_sint32_;
  const ::feature_proto::ListFixed32Sint64* v_list_fixed32_sint64_;
  const ::feature_proto::ListFixed32Fixed32* v_list_fixed32_fixed32_;
  const ::feature_proto::ListFixed32Fixed64* v_list_fixed32_fixed64_;
  const ::feature_proto::ListFixed32Sfixed32* v_list_fixed32_sfixed32_;
  const ::feature_proto::ListFixed32Sfixed64* v_list_fixed32_sfixed64_;
  const ::feature_proto::ListFixed32Bool* v_list_fixed32_bool_;
  const ::feature_proto::ListFixed32String* v_list_fixed32_string_;
  const ::feature_proto::ListFixed32Bytes* v_list_fixed32_bytes_;
  const ::feature_proto::ListFixed64Double* v_list_fixed64_double_;
  const ::feature_proto::ListFixed64Float* v_list_fixed64_float_;
  const ::feature_proto::ListFixed64Int32* v_list_fixed64_int32_;
  const ::feature_proto::ListFixed64Int64* v_list_fixed64_int64_;
  const ::feature_proto::ListFixed64Uint32* v_list_fixed64_uint32_;
  const ::feature_proto::ListFixed64Uint64* v_list_fixed64_uint64_;
  const ::feature_proto::ListFixed64Sint32* v_list_fixed64_sint32_;
  const ::feature_proto::ListFixed64Sint64* v_list_fixed64_sint64_;
  const ::feature_proto::ListFixed64Fixed32* v_list_fixed64_fixed32_;
  const ::feature_proto::ListFixed64Fixed64* v_list_fixed64_fixed64_;
  const ::feature_proto::ListFixed64Sfixed32* v_list_fixed64_sfixed32_;
  const ::feature_proto::ListFixed64Sfixed64* v_list_fixed64_sfixed64_;
  const ::feature_proto::ListFixed64Bool* v_list_fixed64_bool_;
  const ::feature_proto::ListFixed64String* v_list_fixed64_string_;
  const ::feature_proto::ListFixed64Bytes* v_list_fixed64_bytes_;
  const ::feature_proto::ListSfixed32Double* v_list_sfixed32_double_;
  const ::feature_proto::ListSfixed32Float* v_list_sfixed32_float_;
  const ::feature_proto::ListSfixed32Int32* v_list_sfixed32_int32_;
  const ::feature_proto::ListSfixed32Int64* v_list_sfixed32_int64_;
  const ::feature_proto::ListSfixed32Uint32* v_list_sfixed32_uint32_;
  const ::feature_proto::ListSfixed32Uint64* v_list_sfixed32_uint64_;
  const ::feature_proto::ListSfixed32Sint32* v_list_sfixed32_sint32_;
  const ::feature_proto::ListSfixed32Sint64* v_list_sfixed32_sint64_;
  const ::feature_proto::ListSfixed32Fixed32* v_list_sfixed32_fixed32_;
  const ::feature_proto::ListSfixed32Fixed64* v_list_sfixed32_fixed64_;
  const ::feature_proto::ListSfixed32Sfixed32* v_list_sfixed32_sfixed32_;
  const ::feature_proto::ListSfixed32Sfixed64* v_list_sfixed32_sfixed64_;
  const ::feature_proto::ListSfixed32Bool* v_list_sfixed32_bool_;
  const ::feature_proto::ListSfixed32String* v_list_sfixed32_string_;
  const ::feature_proto::ListSfixed32Bytes* v_list_sfixed32_bytes_;
  const ::feature_proto::ListSfixed64Double* v_list_sfixed64_double_;
  const ::feature_proto::ListSfixed64Float* v_list_sfixed64_float_;
  const ::feature_proto::ListSfixed64Int32* v_list_sfixed64_int32_;
  const ::feature_proto::ListSfixed64Int64* v_list_sfixed64_int64_;
  const ::feature_proto::ListSfixed64Uint32* v_list_sfixed64_uint32_;
  const ::feature_proto::ListSfixed64Uint64* v_list_sfixed64_uint64_;
  const ::feature_proto::ListSfixed64Sint32* v_list_sfixed64_sint32_;
  const ::feature_proto::ListSfixed64Sint64* v_list_sfixed64_sint64_;
  const ::feature_proto::ListSfixed64Fixed32* v_list_sfixed64_fixed32_;
  const ::feature_proto::ListSfixed64Fixed64* v_list_sfixed64_fixed64_;
  const ::feature_proto::ListSfixed64Sfixed32* v_list_sfixed64_sfixed32_;
  const ::feature_proto::ListSfixed64Sfixed64* v_list_sfixed64_sfixed64_;
  const ::feature_proto::ListSfixed64Bool* v_list_sfixed64_bool_;
  const ::feature_proto::ListSfixed64String* v_list_sfixed64_string_;
  const ::feature_proto::ListSfixed64Bytes* v_list_sfixed64_bytes_;
  const ::feature_proto::ListDoubleDouble* v_list_double_double_;
  const ::feature_proto::ListDoubleFloat* v_list_double_float_;
  const ::feature_proto::ListDoubleInt32* v_list_double_int32_;
  const ::feature_proto::ListDoubleInt64* v_list_double_int64_;
  const ::feature_proto::ListDoubleUint32* v_list_double_uint32_;
  const ::feature_proto::ListDoubleUint64* v_list_double_uint64_;
  const ::feature_proto::ListDoubleSint32* v_list_double_sint32_;
  const ::feature_proto::ListDoubleSint64* v_list_double_sint64_;
  const ::feature_proto::ListDoubleFixed32* v_list_double_fixed32_;
  const ::feature_proto::ListDoubleFixed64* v_list_double_fixed64_;
  const ::feature_proto::ListDoubleSfixed32* v_list_double_sfixed32_;
  const ::feature_proto::ListDoubleSfixed64* v_list_double_sfixed64_;
  const ::feature_proto::ListDoubleBool* v_list_double_bool_;
  const ::feature_proto::ListDoubleString* v_list_double_string_;
  const ::feature_proto::ListDoubleBytes* v_list_double_bytes_;
  const ::feature_proto::ListFloatDouble* v_list_float_double_;
  const ::feature_proto::ListFloatFloat* v_list_float_float_;
  const ::feature_proto::ListFloatInt32* v_list_float_int32_;
  const ::feature_proto::ListFloatInt64* v_list_float_int64_;
  const ::feature_proto::ListFloatUint32* v_list_float_uint32_;
  const ::feature_proto::ListFloatUint64* v_list_float_uint64_;
  const ::feature_proto::ListFloatSint32* v_list_float_sint32_;
  const ::feature_proto::ListFloatSint64* v_list_float_sint64_;
  const ::feature_proto::ListFloatFixed32* v_list_float_fixed32_;
  const ::feature_proto::ListFloatFixed64* v_list_float_fixed64_;
  const ::feature_proto::ListFloatSfixed32* v_list_float_sfixed32_;
  const ::feature_proto::ListFloatSfixed64* v_list_float_sfixed64_;
  const ::feature_proto::ListFloatBool* v_list_float_bool_;
  const ::feature_proto::ListFloatString* v_list_float_string_;
  const ::feature_proto::ListFloatBytes* v_list_float_bytes_;
  const ::feature_proto::ListBoolDouble* v_list_bool_double_;
  const ::feature_proto::ListBoolFloat* v_list_bool_float_;
  const ::feature_proto::ListBoolInt32* v_list_bool_int32_;
  const ::feature_proto::ListBoolInt64* v_list_bool_int64_;
  const ::feature_proto::ListBoolUint32* v_list_bool_uint32_;
  const ::feature_proto::ListBoolUint64* v_list_bool_uint64_;
  const ::feature_proto::ListBoolSint32* v_list_bool_sint32_;
  const ::feature_proto::ListBoolSint64* v_list_bool_sint64_;
  const ::feature_proto::ListBoolFixed32* v_list_bool_fixed32_;
  const ::feature_proto::ListBoolFixed64* v_list_bool_fixed64_;
  const ::feature_proto::ListBoolSfixed32* v_list_bool_sfixed32_;
  const ::feature_proto::ListBoolSfixed64* v_list_bool_sfixed64_;
  const ::feature_proto::ListBoolBool* v_list_bool_bool_;
  const ::feature_proto::ListBoolString* v_list_bool_string_;
  const ::feature_proto::ListBoolBytes* v_list_bool_bytes_;
} _Feature_default_instance_;
class FeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Features>
      _instance;
} _Features_default_instance_;
class FeaturesMap_FEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeaturesMap_FEntry_DoNotUse>
      _instance;
} _FeaturesMap_FEntry_DoNotUse_default_instance_;
class FeaturesMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeaturesMap>
      _instance;
} _FeaturesMap_default_instance_;
class FeaturesListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeaturesList>
      _instance;
} _FeaturesList_default_instance_;
}  // namespace feature_proto
namespace protobuf_feature_2eproto {
static void InitDefaultsListDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDouble_default_instance_;
    new (ptr) ::feature_proto::ListDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDouble}, {}};

static void InitDefaultsListFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloat_default_instance_;
    new (ptr) ::feature_proto::ListFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloat}, {}};

static void InitDefaultsListInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32_default_instance_;
    new (ptr) ::feature_proto::ListInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32}, {}};

static void InitDefaultsListInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64_default_instance_;
    new (ptr) ::feature_proto::ListInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64}, {}};

static void InitDefaultsListUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32_default_instance_;
    new (ptr) ::feature_proto::ListUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32}, {}};

static void InitDefaultsListUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64_default_instance_;
    new (ptr) ::feature_proto::ListUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64}, {}};

static void InitDefaultsListSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32_default_instance_;
    new (ptr) ::feature_proto::ListSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32}, {}};

static void InitDefaultsListSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64_default_instance_;
    new (ptr) ::feature_proto::ListSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64}, {}};

static void InitDefaultsListFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32}, {}};

static void InitDefaultsListFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64}, {}};

static void InitDefaultsListSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32}, {}};

static void InitDefaultsListSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64}, {}};

static void InitDefaultsListBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBool_default_instance_;
    new (ptr) ::feature_proto::ListBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBool}, {}};

static void InitDefaultsListString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListString_default_instance_;
    new (ptr) ::feature_proto::ListString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListString}, {}};

static void InitDefaultsListBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytes_default_instance_;
    new (ptr) ::feature_proto::ListBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytes}, {}};

static void InitDefaultsListStringDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringDouble_default_instance_;
    new (ptr) ::feature_proto::ListStringDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringDouble}, {}};

static void InitDefaultsListStringFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringFloat_default_instance_;
    new (ptr) ::feature_proto::ListStringFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringFloat}, {}};

static void InitDefaultsListStringInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringInt32_default_instance_;
    new (ptr) ::feature_proto::ListStringInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringInt32}, {}};

static void InitDefaultsListStringInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringInt64_default_instance_;
    new (ptr) ::feature_proto::ListStringInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringInt64}, {}};

static void InitDefaultsListStringUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringUint32_default_instance_;
    new (ptr) ::feature_proto::ListStringUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringUint32}, {}};

static void InitDefaultsListStringUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringUint64_default_instance_;
    new (ptr) ::feature_proto::ListStringUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringUint64}, {}};

static void InitDefaultsListStringSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringSint32_default_instance_;
    new (ptr) ::feature_proto::ListStringSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringSint32}, {}};

static void InitDefaultsListStringSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringSint64_default_instance_;
    new (ptr) ::feature_proto::ListStringSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringSint64}, {}};

static void InitDefaultsListStringFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringFixed32_default_instance_;
    new (ptr) ::feature_proto::ListStringFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringFixed32}, {}};

static void InitDefaultsListStringFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringFixed64_default_instance_;
    new (ptr) ::feature_proto::ListStringFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringFixed64}, {}};

static void InitDefaultsListStringSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListStringSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringSfixed32}, {}};

static void InitDefaultsListStringSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListStringSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringSfixed64}, {}};

static void InitDefaultsListStringBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringBool_default_instance_;
    new (ptr) ::feature_proto::ListStringBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringBool}, {}};

static void InitDefaultsListStringString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringString_default_instance_;
    new (ptr) ::feature_proto::ListStringString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringString}, {}};

static void InitDefaultsListStringBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListStringBytes_default_instance_;
    new (ptr) ::feature_proto::ListStringBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListStringBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListStringBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListStringBytes}, {}};

static void InitDefaultsListBytesDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesDouble_default_instance_;
    new (ptr) ::feature_proto::ListBytesDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesDouble}, {}};

static void InitDefaultsListBytesFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesFloat_default_instance_;
    new (ptr) ::feature_proto::ListBytesFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesFloat}, {}};

static void InitDefaultsListBytesInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesInt32_default_instance_;
    new (ptr) ::feature_proto::ListBytesInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesInt32}, {}};

static void InitDefaultsListBytesInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesInt64_default_instance_;
    new (ptr) ::feature_proto::ListBytesInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesInt64}, {}};

static void InitDefaultsListBytesUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesUint32_default_instance_;
    new (ptr) ::feature_proto::ListBytesUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesUint32}, {}};

static void InitDefaultsListBytesUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesUint64_default_instance_;
    new (ptr) ::feature_proto::ListBytesUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesUint64}, {}};

static void InitDefaultsListBytesSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesSint32_default_instance_;
    new (ptr) ::feature_proto::ListBytesSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesSint32}, {}};

static void InitDefaultsListBytesSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesSint64_default_instance_;
    new (ptr) ::feature_proto::ListBytesSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesSint64}, {}};

static void InitDefaultsListBytesFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesFixed32_default_instance_;
    new (ptr) ::feature_proto::ListBytesFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesFixed32}, {}};

static void InitDefaultsListBytesFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesFixed64_default_instance_;
    new (ptr) ::feature_proto::ListBytesFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesFixed64}, {}};

static void InitDefaultsListBytesSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListBytesSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesSfixed32}, {}};

static void InitDefaultsListBytesSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListBytesSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesSfixed64}, {}};

static void InitDefaultsListBytesBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesBool_default_instance_;
    new (ptr) ::feature_proto::ListBytesBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesBool}, {}};

static void InitDefaultsListBytesString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesString_default_instance_;
    new (ptr) ::feature_proto::ListBytesString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesString}, {}};

static void InitDefaultsListBytesBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBytesBytes_default_instance_;
    new (ptr) ::feature_proto::ListBytesBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBytesBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBytesBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBytesBytes}, {}};

static void InitDefaultsListInt32Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Double_default_instance_;
    new (ptr) ::feature_proto::ListInt32Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Double}, {}};

static void InitDefaultsListInt32Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Float_default_instance_;
    new (ptr) ::feature_proto::ListInt32Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Float}, {}};

static void InitDefaultsListInt32Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Int32_default_instance_;
    new (ptr) ::feature_proto::ListInt32Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Int32}, {}};

static void InitDefaultsListInt32Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Int64_default_instance_;
    new (ptr) ::feature_proto::ListInt32Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Int64}, {}};

static void InitDefaultsListInt32Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Uint32_default_instance_;
    new (ptr) ::feature_proto::ListInt32Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Uint32}, {}};

static void InitDefaultsListInt32Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Uint64_default_instance_;
    new (ptr) ::feature_proto::ListInt32Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Uint64}, {}};

static void InitDefaultsListInt32Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Sint32_default_instance_;
    new (ptr) ::feature_proto::ListInt32Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Sint32}, {}};

static void InitDefaultsListInt32Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Sint64_default_instance_;
    new (ptr) ::feature_proto::ListInt32Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Sint64}, {}};

static void InitDefaultsListInt32Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListInt32Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Fixed32}, {}};

static void InitDefaultsListInt32Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListInt32Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Fixed64}, {}};

static void InitDefaultsListInt32Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListInt32Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Sfixed32}, {}};

static void InitDefaultsListInt32Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListInt32Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Sfixed64}, {}};

static void InitDefaultsListInt32Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Bool_default_instance_;
    new (ptr) ::feature_proto::ListInt32Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Bool}, {}};

static void InitDefaultsListInt32String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32String_default_instance_;
    new (ptr) ::feature_proto::ListInt32String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32String}, {}};

static void InitDefaultsListInt32Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt32Bytes_default_instance_;
    new (ptr) ::feature_proto::ListInt32Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt32Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt32Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt32Bytes}, {}};

static void InitDefaultsListInt64Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Double_default_instance_;
    new (ptr) ::feature_proto::ListInt64Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Double}, {}};

static void InitDefaultsListInt64Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Float_default_instance_;
    new (ptr) ::feature_proto::ListInt64Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Float}, {}};

static void InitDefaultsListInt64Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Int32_default_instance_;
    new (ptr) ::feature_proto::ListInt64Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Int32}, {}};

static void InitDefaultsListInt64Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Int64_default_instance_;
    new (ptr) ::feature_proto::ListInt64Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Int64}, {}};

static void InitDefaultsListInt64Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Uint32_default_instance_;
    new (ptr) ::feature_proto::ListInt64Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Uint32}, {}};

static void InitDefaultsListInt64Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Uint64_default_instance_;
    new (ptr) ::feature_proto::ListInt64Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Uint64}, {}};

static void InitDefaultsListInt64Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Sint32_default_instance_;
    new (ptr) ::feature_proto::ListInt64Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Sint32}, {}};

static void InitDefaultsListInt64Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Sint64_default_instance_;
    new (ptr) ::feature_proto::ListInt64Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Sint64}, {}};

static void InitDefaultsListInt64Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListInt64Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Fixed32}, {}};

static void InitDefaultsListInt64Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListInt64Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Fixed64}, {}};

static void InitDefaultsListInt64Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListInt64Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Sfixed32}, {}};

static void InitDefaultsListInt64Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListInt64Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Sfixed64}, {}};

static void InitDefaultsListInt64Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Bool_default_instance_;
    new (ptr) ::feature_proto::ListInt64Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Bool}, {}};

static void InitDefaultsListInt64String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64String_default_instance_;
    new (ptr) ::feature_proto::ListInt64String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64String}, {}};

static void InitDefaultsListInt64Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListInt64Bytes_default_instance_;
    new (ptr) ::feature_proto::ListInt64Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListInt64Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListInt64Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListInt64Bytes}, {}};

static void InitDefaultsListUint32Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Double_default_instance_;
    new (ptr) ::feature_proto::ListUint32Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Double}, {}};

static void InitDefaultsListUint32Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Float_default_instance_;
    new (ptr) ::feature_proto::ListUint32Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Float}, {}};

static void InitDefaultsListUint32Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Int32_default_instance_;
    new (ptr) ::feature_proto::ListUint32Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Int32}, {}};

static void InitDefaultsListUint32Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Int64_default_instance_;
    new (ptr) ::feature_proto::ListUint32Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Int64}, {}};

static void InitDefaultsListUint32Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Uint32_default_instance_;
    new (ptr) ::feature_proto::ListUint32Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Uint32}, {}};

static void InitDefaultsListUint32Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Uint64_default_instance_;
    new (ptr) ::feature_proto::ListUint32Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Uint64}, {}};

static void InitDefaultsListUint32Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Sint32_default_instance_;
    new (ptr) ::feature_proto::ListUint32Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Sint32}, {}};

static void InitDefaultsListUint32Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Sint64_default_instance_;
    new (ptr) ::feature_proto::ListUint32Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Sint64}, {}};

static void InitDefaultsListUint32Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListUint32Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Fixed32}, {}};

static void InitDefaultsListUint32Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListUint32Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Fixed64}, {}};

static void InitDefaultsListUint32Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListUint32Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Sfixed32}, {}};

static void InitDefaultsListUint32Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListUint32Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Sfixed64}, {}};

static void InitDefaultsListUint32Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Bool_default_instance_;
    new (ptr) ::feature_proto::ListUint32Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Bool}, {}};

static void InitDefaultsListUint32String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32String_default_instance_;
    new (ptr) ::feature_proto::ListUint32String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32String}, {}};

static void InitDefaultsListUint32Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint32Bytes_default_instance_;
    new (ptr) ::feature_proto::ListUint32Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint32Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint32Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint32Bytes}, {}};

static void InitDefaultsListUint64Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Double_default_instance_;
    new (ptr) ::feature_proto::ListUint64Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Double}, {}};

static void InitDefaultsListUint64Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Float_default_instance_;
    new (ptr) ::feature_proto::ListUint64Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Float}, {}};

static void InitDefaultsListUint64Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Int32_default_instance_;
    new (ptr) ::feature_proto::ListUint64Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Int32}, {}};

static void InitDefaultsListUint64Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Int64_default_instance_;
    new (ptr) ::feature_proto::ListUint64Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Int64}, {}};

static void InitDefaultsListUint64Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Uint32_default_instance_;
    new (ptr) ::feature_proto::ListUint64Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Uint32}, {}};

static void InitDefaultsListUint64Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Uint64_default_instance_;
    new (ptr) ::feature_proto::ListUint64Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Uint64}, {}};

static void InitDefaultsListUint64Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Sint32_default_instance_;
    new (ptr) ::feature_proto::ListUint64Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Sint32}, {}};

static void InitDefaultsListUint64Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Sint64_default_instance_;
    new (ptr) ::feature_proto::ListUint64Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Sint64}, {}};

static void InitDefaultsListUint64Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListUint64Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Fixed32}, {}};

static void InitDefaultsListUint64Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListUint64Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Fixed64}, {}};

static void InitDefaultsListUint64Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListUint64Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Sfixed32}, {}};

static void InitDefaultsListUint64Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListUint64Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Sfixed64}, {}};

static void InitDefaultsListUint64Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Bool_default_instance_;
    new (ptr) ::feature_proto::ListUint64Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Bool}, {}};

static void InitDefaultsListUint64String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64String_default_instance_;
    new (ptr) ::feature_proto::ListUint64String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64String}, {}};

static void InitDefaultsListUint64Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListUint64Bytes_default_instance_;
    new (ptr) ::feature_proto::ListUint64Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListUint64Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListUint64Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListUint64Bytes}, {}};

static void InitDefaultsListSint32Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Double_default_instance_;
    new (ptr) ::feature_proto::ListSint32Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Double}, {}};

static void InitDefaultsListSint32Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Float_default_instance_;
    new (ptr) ::feature_proto::ListSint32Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Float}, {}};

static void InitDefaultsListSint32Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Int32_default_instance_;
    new (ptr) ::feature_proto::ListSint32Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Int32}, {}};

static void InitDefaultsListSint32Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Int64_default_instance_;
    new (ptr) ::feature_proto::ListSint32Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Int64}, {}};

static void InitDefaultsListSint32Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Uint32_default_instance_;
    new (ptr) ::feature_proto::ListSint32Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Uint32}, {}};

static void InitDefaultsListSint32Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Uint64_default_instance_;
    new (ptr) ::feature_proto::ListSint32Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Uint64}, {}};

static void InitDefaultsListSint32Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Sint32_default_instance_;
    new (ptr) ::feature_proto::ListSint32Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Sint32}, {}};

static void InitDefaultsListSint32Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Sint64_default_instance_;
    new (ptr) ::feature_proto::ListSint32Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Sint64}, {}};

static void InitDefaultsListSint32Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListSint32Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Fixed32}, {}};

static void InitDefaultsListSint32Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListSint32Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Fixed64}, {}};

static void InitDefaultsListSint32Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListSint32Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Sfixed32}, {}};

static void InitDefaultsListSint32Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListSint32Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Sfixed64}, {}};

static void InitDefaultsListSint32Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Bool_default_instance_;
    new (ptr) ::feature_proto::ListSint32Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Bool}, {}};

static void InitDefaultsListSint32String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32String_default_instance_;
    new (ptr) ::feature_proto::ListSint32String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32String}, {}};

static void InitDefaultsListSint32Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint32Bytes_default_instance_;
    new (ptr) ::feature_proto::ListSint32Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint32Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint32Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint32Bytes}, {}};

static void InitDefaultsListSint64Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Double_default_instance_;
    new (ptr) ::feature_proto::ListSint64Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Double}, {}};

static void InitDefaultsListSint64Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Float_default_instance_;
    new (ptr) ::feature_proto::ListSint64Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Float}, {}};

static void InitDefaultsListSint64Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Int32_default_instance_;
    new (ptr) ::feature_proto::ListSint64Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Int32}, {}};

static void InitDefaultsListSint64Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Int64_default_instance_;
    new (ptr) ::feature_proto::ListSint64Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Int64}, {}};

static void InitDefaultsListSint64Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Uint32_default_instance_;
    new (ptr) ::feature_proto::ListSint64Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Uint32}, {}};

static void InitDefaultsListSint64Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Uint64_default_instance_;
    new (ptr) ::feature_proto::ListSint64Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Uint64}, {}};

static void InitDefaultsListSint64Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Sint32_default_instance_;
    new (ptr) ::feature_proto::ListSint64Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Sint32}, {}};

static void InitDefaultsListSint64Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Sint64_default_instance_;
    new (ptr) ::feature_proto::ListSint64Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Sint64}, {}};

static void InitDefaultsListSint64Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListSint64Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Fixed32}, {}};

static void InitDefaultsListSint64Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListSint64Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Fixed64}, {}};

static void InitDefaultsListSint64Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListSint64Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Sfixed32}, {}};

static void InitDefaultsListSint64Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListSint64Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Sfixed64}, {}};

static void InitDefaultsListSint64Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Bool_default_instance_;
    new (ptr) ::feature_proto::ListSint64Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Bool}, {}};

static void InitDefaultsListSint64String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64String_default_instance_;
    new (ptr) ::feature_proto::ListSint64String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64String}, {}};

static void InitDefaultsListSint64Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSint64Bytes_default_instance_;
    new (ptr) ::feature_proto::ListSint64Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSint64Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSint64Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSint64Bytes}, {}};

static void InitDefaultsListFixed32Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Double_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Double}, {}};

static void InitDefaultsListFixed32Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Float_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Float}, {}};

static void InitDefaultsListFixed32Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Int32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Int32}, {}};

static void InitDefaultsListFixed32Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Int64_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Int64}, {}};

static void InitDefaultsListFixed32Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Uint32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Uint32}, {}};

static void InitDefaultsListFixed32Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Uint64_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Uint64}, {}};

static void InitDefaultsListFixed32Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Sint32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Sint32}, {}};

static void InitDefaultsListFixed32Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Sint64_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Sint64}, {}};

static void InitDefaultsListFixed32Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Fixed32}, {}};

static void InitDefaultsListFixed32Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Fixed64}, {}};

static void InitDefaultsListFixed32Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Sfixed32}, {}};

static void InitDefaultsListFixed32Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Sfixed64}, {}};

static void InitDefaultsListFixed32Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Bool_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Bool}, {}};

static void InitDefaultsListFixed32String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32String_default_instance_;
    new (ptr) ::feature_proto::ListFixed32String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32String}, {}};

static void InitDefaultsListFixed32Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed32Bytes_default_instance_;
    new (ptr) ::feature_proto::ListFixed32Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed32Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed32Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed32Bytes}, {}};

static void InitDefaultsListFixed64Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Double_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Double}, {}};

static void InitDefaultsListFixed64Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Float_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Float}, {}};

static void InitDefaultsListFixed64Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Int32_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Int32}, {}};

static void InitDefaultsListFixed64Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Int64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Int64}, {}};

static void InitDefaultsListFixed64Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Uint32_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Uint32}, {}};

static void InitDefaultsListFixed64Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Uint64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Uint64}, {}};

static void InitDefaultsListFixed64Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Sint32_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Sint32}, {}};

static void InitDefaultsListFixed64Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Sint64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Sint64}, {}};

static void InitDefaultsListFixed64Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Fixed32}, {}};

static void InitDefaultsListFixed64Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Fixed64}, {}};

static void InitDefaultsListFixed64Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Sfixed32}, {}};

static void InitDefaultsListFixed64Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Sfixed64}, {}};

static void InitDefaultsListFixed64Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Bool_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Bool}, {}};

static void InitDefaultsListFixed64String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64String_default_instance_;
    new (ptr) ::feature_proto::ListFixed64String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64String}, {}};

static void InitDefaultsListFixed64Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFixed64Bytes_default_instance_;
    new (ptr) ::feature_proto::ListFixed64Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFixed64Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFixed64Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFixed64Bytes}, {}};

static void InitDefaultsListSfixed32Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Double_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Double}, {}};

static void InitDefaultsListSfixed32Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Float_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Float}, {}};

static void InitDefaultsListSfixed32Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Int32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Int32}, {}};

static void InitDefaultsListSfixed32Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Int64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Int64}, {}};

static void InitDefaultsListSfixed32Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Uint32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Uint32}, {}};

static void InitDefaultsListSfixed32Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Uint64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Uint64}, {}};

static void InitDefaultsListSfixed32Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Sint32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Sint32}, {}};

static void InitDefaultsListSfixed32Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Sint64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Sint64}, {}};

static void InitDefaultsListSfixed32Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Fixed32}, {}};

static void InitDefaultsListSfixed32Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Fixed64}, {}};

static void InitDefaultsListSfixed32Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Sfixed32}, {}};

static void InitDefaultsListSfixed32Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Sfixed64}, {}};

static void InitDefaultsListSfixed32Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Bool_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Bool}, {}};

static void InitDefaultsListSfixed32String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32String_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32String}, {}};

static void InitDefaultsListSfixed32Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed32Bytes_default_instance_;
    new (ptr) ::feature_proto::ListSfixed32Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed32Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed32Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed32Bytes}, {}};

static void InitDefaultsListSfixed64Double() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Double_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Double}, {}};

static void InitDefaultsListSfixed64Float() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Float_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Float();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Float::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Float =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Float}, {}};

static void InitDefaultsListSfixed64Int32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Int32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Int32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Int32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Int32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Int32}, {}};

static void InitDefaultsListSfixed64Int64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Int64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Int64}, {}};

static void InitDefaultsListSfixed64Uint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Uint32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Uint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Uint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Uint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Uint32}, {}};

static void InitDefaultsListSfixed64Uint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Uint64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Uint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Uint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Uint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Uint64}, {}};

static void InitDefaultsListSfixed64Sint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Sint32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Sint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Sint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Sint32}, {}};

static void InitDefaultsListSfixed64Sint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Sint64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Sint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Sint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Sint64}, {}};

static void InitDefaultsListSfixed64Fixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Fixed32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Fixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Fixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Fixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Fixed32}, {}};

static void InitDefaultsListSfixed64Fixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Fixed64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Fixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Fixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Fixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Fixed64}, {}};

static void InitDefaultsListSfixed64Sfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Sfixed32_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Sfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Sfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Sfixed32}, {}};

static void InitDefaultsListSfixed64Sfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Sfixed64_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Sfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Sfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Sfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Sfixed64}, {}};

static void InitDefaultsListSfixed64Bool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Bool_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Bool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Bool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Bool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Bool}, {}};

static void InitDefaultsListSfixed64String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64String_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64String}, {}};

static void InitDefaultsListSfixed64Bytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListSfixed64Bytes_default_instance_;
    new (ptr) ::feature_proto::ListSfixed64Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListSfixed64Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSfixed64Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSfixed64Bytes}, {}};

static void InitDefaultsListDoubleDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleDouble_default_instance_;
    new (ptr) ::feature_proto::ListDoubleDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleDouble}, {}};

static void InitDefaultsListDoubleFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleFloat_default_instance_;
    new (ptr) ::feature_proto::ListDoubleFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleFloat}, {}};

static void InitDefaultsListDoubleInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleInt32_default_instance_;
    new (ptr) ::feature_proto::ListDoubleInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleInt32}, {}};

static void InitDefaultsListDoubleInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleInt64_default_instance_;
    new (ptr) ::feature_proto::ListDoubleInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleInt64}, {}};

static void InitDefaultsListDoubleUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleUint32_default_instance_;
    new (ptr) ::feature_proto::ListDoubleUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleUint32}, {}};

static void InitDefaultsListDoubleUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleUint64_default_instance_;
    new (ptr) ::feature_proto::ListDoubleUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleUint64}, {}};

static void InitDefaultsListDoubleSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleSint32_default_instance_;
    new (ptr) ::feature_proto::ListDoubleSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleSint32}, {}};

static void InitDefaultsListDoubleSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleSint64_default_instance_;
    new (ptr) ::feature_proto::ListDoubleSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleSint64}, {}};

static void InitDefaultsListDoubleFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleFixed32_default_instance_;
    new (ptr) ::feature_proto::ListDoubleFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleFixed32}, {}};

static void InitDefaultsListDoubleFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleFixed64_default_instance_;
    new (ptr) ::feature_proto::ListDoubleFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleFixed64}, {}};

static void InitDefaultsListDoubleSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListDoubleSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleSfixed32}, {}};

static void InitDefaultsListDoubleSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListDoubleSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleSfixed64}, {}};

static void InitDefaultsListDoubleBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleBool_default_instance_;
    new (ptr) ::feature_proto::ListDoubleBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleBool}, {}};

static void InitDefaultsListDoubleString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleString_default_instance_;
    new (ptr) ::feature_proto::ListDoubleString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleString}, {}};

static void InitDefaultsListDoubleBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListDoubleBytes_default_instance_;
    new (ptr) ::feature_proto::ListDoubleBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListDoubleBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListDoubleBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListDoubleBytes}, {}};

static void InitDefaultsListFloatDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatDouble_default_instance_;
    new (ptr) ::feature_proto::ListFloatDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatDouble}, {}};

static void InitDefaultsListFloatFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatFloat_default_instance_;
    new (ptr) ::feature_proto::ListFloatFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatFloat}, {}};

static void InitDefaultsListFloatInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatInt32_default_instance_;
    new (ptr) ::feature_proto::ListFloatInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatInt32}, {}};

static void InitDefaultsListFloatInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatInt64_default_instance_;
    new (ptr) ::feature_proto::ListFloatInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatInt64}, {}};

static void InitDefaultsListFloatUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatUint32_default_instance_;
    new (ptr) ::feature_proto::ListFloatUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatUint32}, {}};

static void InitDefaultsListFloatUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatUint64_default_instance_;
    new (ptr) ::feature_proto::ListFloatUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatUint64}, {}};

static void InitDefaultsListFloatSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatSint32_default_instance_;
    new (ptr) ::feature_proto::ListFloatSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatSint32}, {}};

static void InitDefaultsListFloatSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatSint64_default_instance_;
    new (ptr) ::feature_proto::ListFloatSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatSint64}, {}};

static void InitDefaultsListFloatFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatFixed32_default_instance_;
    new (ptr) ::feature_proto::ListFloatFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatFixed32}, {}};

static void InitDefaultsListFloatFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatFixed64_default_instance_;
    new (ptr) ::feature_proto::ListFloatFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatFixed64}, {}};

static void InitDefaultsListFloatSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListFloatSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatSfixed32}, {}};

static void InitDefaultsListFloatSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListFloatSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatSfixed64}, {}};

static void InitDefaultsListFloatBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatBool_default_instance_;
    new (ptr) ::feature_proto::ListFloatBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatBool}, {}};

static void InitDefaultsListFloatString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatString_default_instance_;
    new (ptr) ::feature_proto::ListFloatString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatString}, {}};

static void InitDefaultsListFloatBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListFloatBytes_default_instance_;
    new (ptr) ::feature_proto::ListFloatBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListFloatBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFloatBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFloatBytes}, {}};

static void InitDefaultsListBoolDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolDouble_default_instance_;
    new (ptr) ::feature_proto::ListBoolDouble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolDouble::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolDouble =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolDouble}, {}};

static void InitDefaultsListBoolFloat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolFloat_default_instance_;
    new (ptr) ::feature_proto::ListBoolFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolFloat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFloat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolFloat}, {}};

static void InitDefaultsListBoolInt32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolInt32_default_instance_;
    new (ptr) ::feature_proto::ListBoolInt32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolInt32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolInt32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolInt32}, {}};

static void InitDefaultsListBoolInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolInt64_default_instance_;
    new (ptr) ::feature_proto::ListBoolInt64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolInt64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolInt64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolInt64}, {}};

static void InitDefaultsListBoolUint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolUint32_default_instance_;
    new (ptr) ::feature_proto::ListBoolUint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolUint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolUint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolUint32}, {}};

static void InitDefaultsListBoolUint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolUint64_default_instance_;
    new (ptr) ::feature_proto::ListBoolUint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolUint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolUint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolUint64}, {}};

static void InitDefaultsListBoolSint32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolSint32_default_instance_;
    new (ptr) ::feature_proto::ListBoolSint32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolSint32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSint32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolSint32}, {}};

static void InitDefaultsListBoolSint64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolSint64_default_instance_;
    new (ptr) ::feature_proto::ListBoolSint64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolSint64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSint64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolSint64}, {}};

static void InitDefaultsListBoolFixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolFixed32_default_instance_;
    new (ptr) ::feature_proto::ListBoolFixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolFixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolFixed32}, {}};

static void InitDefaultsListBoolFixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolFixed64_default_instance_;
    new (ptr) ::feature_proto::ListBoolFixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolFixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolFixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolFixed64}, {}};

static void InitDefaultsListBoolSfixed32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolSfixed32_default_instance_;
    new (ptr) ::feature_proto::ListBoolSfixed32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolSfixed32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSfixed32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolSfixed32}, {}};

static void InitDefaultsListBoolSfixed64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolSfixed64_default_instance_;
    new (ptr) ::feature_proto::ListBoolSfixed64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolSfixed64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolSfixed64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolSfixed64}, {}};

static void InitDefaultsListBoolBool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolBool_default_instance_;
    new (ptr) ::feature_proto::ListBoolBool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolBool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolBool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolBool}, {}};

static void InitDefaultsListBoolString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolString_default_instance_;
    new (ptr) ::feature_proto::ListBoolString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolString =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolString}, {}};

static void InitDefaultsListBoolBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_ListBoolBytes_default_instance_;
    new (ptr) ::feature_proto::ListBoolBytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::ListBoolBytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListBoolBytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListBoolBytes}, {}};

static void InitDefaultsFeature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_Feature_default_instance_;
    new (ptr) ::feature_proto::Feature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::Feature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<240> scc_info_Feature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 240, InitDefaultsFeature}, {
      &protobuf_feature_2eproto::scc_info_ListDouble.base,
      &protobuf_feature_2eproto::scc_info_ListFloat.base,
      &protobuf_feature_2eproto::scc_info_ListInt32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListBool.base,
      &protobuf_feature_2eproto::scc_info_ListString.base,
      &protobuf_feature_2eproto::scc_info_ListBytes.base,
      &protobuf_feature_2eproto::scc_info_ListStringDouble.base,
      &protobuf_feature_2eproto::scc_info_ListStringFloat.base,
      &protobuf_feature_2eproto::scc_info_ListStringInt32.base,
      &protobuf_feature_2eproto::scc_info_ListStringInt64.base,
      &protobuf_feature_2eproto::scc_info_ListStringUint32.base,
      &protobuf_feature_2eproto::scc_info_ListStringUint64.base,
      &protobuf_feature_2eproto::scc_info_ListStringSint32.base,
      &protobuf_feature_2eproto::scc_info_ListStringSint64.base,
      &protobuf_feature_2eproto::scc_info_ListStringFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListStringFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListStringSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListStringSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListStringBool.base,
      &protobuf_feature_2eproto::scc_info_ListStringString.base,
      &protobuf_feature_2eproto::scc_info_ListStringBytes.base,
      &protobuf_feature_2eproto::scc_info_ListBytesDouble.base,
      &protobuf_feature_2eproto::scc_info_ListBytesFloat.base,
      &protobuf_feature_2eproto::scc_info_ListBytesInt32.base,
      &protobuf_feature_2eproto::scc_info_ListBytesInt64.base,
      &protobuf_feature_2eproto::scc_info_ListBytesUint32.base,
      &protobuf_feature_2eproto::scc_info_ListBytesUint64.base,
      &protobuf_feature_2eproto::scc_info_ListBytesSint32.base,
      &protobuf_feature_2eproto::scc_info_ListBytesSint64.base,
      &protobuf_feature_2eproto::scc_info_ListBytesFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListBytesFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListBytesSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListBytesSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListBytesBool.base,
      &protobuf_feature_2eproto::scc_info_ListBytesString.base,
      &protobuf_feature_2eproto::scc_info_ListBytesBytes.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Double.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Float.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Int32.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Int64.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Bool.base,
      &protobuf_feature_2eproto::scc_info_ListInt32String.base,
      &protobuf_feature_2eproto::scc_info_ListInt32Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Double.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Float.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Int32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Int64.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Bool.base,
      &protobuf_feature_2eproto::scc_info_ListInt64String.base,
      &protobuf_feature_2eproto::scc_info_ListInt64Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Double.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Float.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Int32.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Int64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Bool.base,
      &protobuf_feature_2eproto::scc_info_ListUint32String.base,
      &protobuf_feature_2eproto::scc_info_ListUint32Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Double.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Float.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Int32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Int64.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Bool.base,
      &protobuf_feature_2eproto::scc_info_ListUint64String.base,
      &protobuf_feature_2eproto::scc_info_ListUint64Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Double.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Float.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Int32.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Int64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Bool.base,
      &protobuf_feature_2eproto::scc_info_ListSint32String.base,
      &protobuf_feature_2eproto::scc_info_ListSint32Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Double.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Float.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Int32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Int64.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Bool.base,
      &protobuf_feature_2eproto::scc_info_ListSint64String.base,
      &protobuf_feature_2eproto::scc_info_ListSint64Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Double.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Float.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Int32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Int64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Bool.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32String.base,
      &protobuf_feature_2eproto::scc_info_ListFixed32Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Double.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Float.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Int32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Int64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Bool.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64String.base,
      &protobuf_feature_2eproto::scc_info_ListFixed64Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Double.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Float.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Int32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Int64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Bool.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32String.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed32Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Double.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Float.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Int32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Int64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Uint32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Uint64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sint32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sint64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Fixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Fixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Bool.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64String.base,
      &protobuf_feature_2eproto::scc_info_ListSfixed64Bytes.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleDouble.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleFloat.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleInt32.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleInt64.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleUint32.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleUint64.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleSint32.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleSint64.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleBool.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleString.base,
      &protobuf_feature_2eproto::scc_info_ListDoubleBytes.base,
      &protobuf_feature_2eproto::scc_info_ListFloatDouble.base,
      &protobuf_feature_2eproto::scc_info_ListFloatFloat.base,
      &protobuf_feature_2eproto::scc_info_ListFloatInt32.base,
      &protobuf_feature_2eproto::scc_info_ListFloatInt64.base,
      &protobuf_feature_2eproto::scc_info_ListFloatUint32.base,
      &protobuf_feature_2eproto::scc_info_ListFloatUint64.base,
      &protobuf_feature_2eproto::scc_info_ListFloatSint32.base,
      &protobuf_feature_2eproto::scc_info_ListFloatSint64.base,
      &protobuf_feature_2eproto::scc_info_ListFloatFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFloatFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFloatSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListFloatSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListFloatBool.base,
      &protobuf_feature_2eproto::scc_info_ListFloatString.base,
      &protobuf_feature_2eproto::scc_info_ListFloatBytes.base,
      &protobuf_feature_2eproto::scc_info_ListBoolDouble.base,
      &protobuf_feature_2eproto::scc_info_ListBoolFloat.base,
      &protobuf_feature_2eproto::scc_info_ListBoolInt32.base,
      &protobuf_feature_2eproto::scc_info_ListBoolInt64.base,
      &protobuf_feature_2eproto::scc_info_ListBoolUint32.base,
      &protobuf_feature_2eproto::scc_info_ListBoolUint64.base,
      &protobuf_feature_2eproto::scc_info_ListBoolSint32.base,
      &protobuf_feature_2eproto::scc_info_ListBoolSint64.base,
      &protobuf_feature_2eproto::scc_info_ListBoolFixed32.base,
      &protobuf_feature_2eproto::scc_info_ListBoolFixed64.base,
      &protobuf_feature_2eproto::scc_info_ListBoolSfixed32.base,
      &protobuf_feature_2eproto::scc_info_ListBoolSfixed64.base,
      &protobuf_feature_2eproto::scc_info_ListBoolBool.base,
      &protobuf_feature_2eproto::scc_info_ListBoolString.base,
      &protobuf_feature_2eproto::scc_info_ListBoolBytes.base,}};

static void InitDefaultsFeatures() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_Features_default_instance_;
    new (ptr) ::feature_proto::Features();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::Features::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Features =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFeatures}, {
      &protobuf_feature_2eproto::scc_info_Feature.base,}};

static void InitDefaultsFeaturesMap_FEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_FeaturesMap_FEntry_DoNotUse_default_instance_;
    new (ptr) ::feature_proto::FeaturesMap_FEntry_DoNotUse();
  }
  ::feature_proto::FeaturesMap_FEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FeaturesMap_FEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFeaturesMap_FEntry_DoNotUse}, {
      &protobuf_feature_2eproto::scc_info_Feature.base,}};

static void InitDefaultsFeaturesMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_FeaturesMap_default_instance_;
    new (ptr) ::feature_proto::FeaturesMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::FeaturesMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FeaturesMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFeaturesMap}, {
      &protobuf_feature_2eproto::scc_info_FeaturesMap_FEntry_DoNotUse.base,}};

static void InitDefaultsFeaturesList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::feature_proto::_FeaturesList_default_instance_;
    new (ptr) ::feature_proto::FeaturesList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::feature_proto::FeaturesList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FeaturesList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFeaturesList}, {
      &protobuf_feature_2eproto::scc_info_FeaturesMap.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListStringBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBytesBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt32Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListInt64Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint32Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListUint64Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint32Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSint64Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed32Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFixed64Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed32Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Double.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Float.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Int32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Uint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Uint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Sint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Sint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Fixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Fixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Sfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Sfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Bool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSfixed64Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListDoubleBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFloatBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolDouble.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolFloat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolInt32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolInt64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolUint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolUint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolSint32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolSint64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolFixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolFixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolSfixed32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolSfixed64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolBool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolString.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListBoolBytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Feature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Features.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeaturesMap_FEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeaturesMap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeaturesList.base);
}

::google::protobuf::Metadata file_level_metadata[245];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDouble, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloat, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBool, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListString, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytes, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringDouble, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringDouble, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFloat, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFloat, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringInt64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringUint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringFixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringSfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringString, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringString, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListStringBytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesDouble, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesDouble, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFloat, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFloat, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesInt64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesUint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesFixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesSfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesString, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesString, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBytesBytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt32Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListInt64Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint32Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListUint64Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint32Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSint64Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed32Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFixed64Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed32Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Double, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Double, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Float, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Float, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Int64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Uint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Fixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Sfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64String, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64String, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListSfixed64Bytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleDouble, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleDouble, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFloat, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFloat, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleInt64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleUint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleFixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleSfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleString, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleString, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListDoubleBytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatDouble, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatDouble, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFloat, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFloat, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatInt64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatUint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatFixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatSfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatString, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatString, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListFloatBytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolDouble, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolDouble, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFloat, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFloat, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolInt64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolUint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSint64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolFixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed32, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed32, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed64, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolSfixed64, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBool, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBool, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolString, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolString, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBytes, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::ListBoolBytes, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::Feature, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::Feature, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_string_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bytes_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int32_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_int64_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint32_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_uint64_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint32_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sint64_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed32_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_fixed64_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed32_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_sfixed64_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_double_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_float_bytes_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_double_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_float_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_int32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_int64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_uint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_uint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_sint32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_sint64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_fixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_fixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_sfixed32_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_sfixed64_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_bool_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_string_),
  offsetof(::feature_proto::FeatureDefaultTypeInternal, v_list_bool_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::Feature, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::Features, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::Features, f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap_FEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap_FEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap_FEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap_FEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesMap, f_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::feature_proto::FeaturesList, features_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::feature_proto::ListDouble)},
  { 6, -1, sizeof(::feature_proto::ListFloat)},
  { 12, -1, sizeof(::feature_proto::ListInt32)},
  { 18, -1, sizeof(::feature_proto::ListInt64)},
  { 24, -1, sizeof(::feature_proto::ListUint32)},
  { 30, -1, sizeof(::feature_proto::ListUint64)},
  { 36, -1, sizeof(::feature_proto::ListSint32)},
  { 42, -1, sizeof(::feature_proto::ListSint64)},
  { 48, -1, sizeof(::feature_proto::ListFixed32)},
  { 54, -1, sizeof(::feature_proto::ListFixed64)},
  { 60, -1, sizeof(::feature_proto::ListSfixed32)},
  { 66, -1, sizeof(::feature_proto::ListSfixed64)},
  { 72, -1, sizeof(::feature_proto::ListBool)},
  { 78, -1, sizeof(::feature_proto::ListString)},
  { 84, -1, sizeof(::feature_proto::ListBytes)},
  { 90, -1, sizeof(::feature_proto::ListStringDouble)},
  { 97, -1, sizeof(::feature_proto::ListStringFloat)},
  { 104, -1, sizeof(::feature_proto::ListStringInt32)},
  { 111, -1, sizeof(::feature_proto::ListStringInt64)},
  { 118, -1, sizeof(::feature_proto::ListStringUint32)},
  { 125, -1, sizeof(::feature_proto::ListStringUint64)},
  { 132, -1, sizeof(::feature_proto::ListStringSint32)},
  { 139, -1, sizeof(::feature_proto::ListStringSint64)},
  { 146, -1, sizeof(::feature_proto::ListStringFixed32)},
  { 153, -1, sizeof(::feature_proto::ListStringFixed64)},
  { 160, -1, sizeof(::feature_proto::ListStringSfixed32)},
  { 167, -1, sizeof(::feature_proto::ListStringSfixed64)},
  { 174, -1, sizeof(::feature_proto::ListStringBool)},
  { 181, -1, sizeof(::feature_proto::ListStringString)},
  { 188, -1, sizeof(::feature_proto::ListStringBytes)},
  { 195, -1, sizeof(::feature_proto::ListBytesDouble)},
  { 202, -1, sizeof(::feature_proto::ListBytesFloat)},
  { 209, -1, sizeof(::feature_proto::ListBytesInt32)},
  { 216, -1, sizeof(::feature_proto::ListBytesInt64)},
  { 223, -1, sizeof(::feature_proto::ListBytesUint32)},
  { 230, -1, sizeof(::feature_proto::ListBytesUint64)},
  { 237, -1, sizeof(::feature_proto::ListBytesSint32)},
  { 244, -1, sizeof(::feature_proto::ListBytesSint64)},
  { 251, -1, sizeof(::feature_proto::ListBytesFixed32)},
  { 258, -1, sizeof(::feature_proto::ListBytesFixed64)},
  { 265, -1, sizeof(::feature_proto::ListBytesSfixed32)},
  { 272, -1, sizeof(::feature_proto::ListBytesSfixed64)},
  { 279, -1, sizeof(::feature_proto::ListBytesBool)},
  { 286, -1, sizeof(::feature_proto::ListBytesString)},
  { 293, -1, sizeof(::feature_proto::ListBytesBytes)},
  { 300, -1, sizeof(::feature_proto::ListInt32Double)},
  { 307, -1, sizeof(::feature_proto::ListInt32Float)},
  { 314, -1, sizeof(::feature_proto::ListInt32Int32)},
  { 321, -1, sizeof(::feature_proto::ListInt32Int64)},
  { 328, -1, sizeof(::feature_proto::ListInt32Uint32)},
  { 335, -1, sizeof(::feature_proto::ListInt32Uint64)},
  { 342, -1, sizeof(::feature_proto::ListInt32Sint32)},
  { 349, -1, sizeof(::feature_proto::ListInt32Sint64)},
  { 356, -1, sizeof(::feature_proto::ListInt32Fixed32)},
  { 363, -1, sizeof(::feature_proto::ListInt32Fixed64)},
  { 370, -1, sizeof(::feature_proto::ListInt32Sfixed32)},
  { 377, -1, sizeof(::feature_proto::ListInt32Sfixed64)},
  { 384, -1, sizeof(::feature_proto::ListInt32Bool)},
  { 391, -1, sizeof(::feature_proto::ListInt32String)},
  { 398, -1, sizeof(::feature_proto::ListInt32Bytes)},
  { 405, -1, sizeof(::feature_proto::ListInt64Double)},
  { 412, -1, sizeof(::feature_proto::ListInt64Float)},
  { 419, -1, sizeof(::feature_proto::ListInt64Int32)},
  { 426, -1, sizeof(::feature_proto::ListInt64Int64)},
  { 433, -1, sizeof(::feature_proto::ListInt64Uint32)},
  { 440, -1, sizeof(::feature_proto::ListInt64Uint64)},
  { 447, -1, sizeof(::feature_proto::ListInt64Sint32)},
  { 454, -1, sizeof(::feature_proto::ListInt64Sint64)},
  { 461, -1, sizeof(::feature_proto::ListInt64Fixed32)},
  { 468, -1, sizeof(::feature_proto::ListInt64Fixed64)},
  { 475, -1, sizeof(::feature_proto::ListInt64Sfixed32)},
  { 482, -1, sizeof(::feature_proto::ListInt64Sfixed64)},
  { 489, -1, sizeof(::feature_proto::ListInt64Bool)},
  { 496, -1, sizeof(::feature_proto::ListInt64String)},
  { 503, -1, sizeof(::feature_proto::ListInt64Bytes)},
  { 510, -1, sizeof(::feature_proto::ListUint32Double)},
  { 517, -1, sizeof(::feature_proto::ListUint32Float)},
  { 524, -1, sizeof(::feature_proto::ListUint32Int32)},
  { 531, -1, sizeof(::feature_proto::ListUint32Int64)},
  { 538, -1, sizeof(::feature_proto::ListUint32Uint32)},
  { 545, -1, sizeof(::feature_proto::ListUint32Uint64)},
  { 552, -1, sizeof(::feature_proto::ListUint32Sint32)},
  { 559, -1, sizeof(::feature_proto::ListUint32Sint64)},
  { 566, -1, sizeof(::feature_proto::ListUint32Fixed32)},
  { 573, -1, sizeof(::feature_proto::ListUint32Fixed64)},
  { 580, -1, sizeof(::feature_proto::ListUint32Sfixed32)},
  { 587, -1, sizeof(::feature_proto::ListUint32Sfixed64)},
  { 594, -1, sizeof(::feature_proto::ListUint32Bool)},
  { 601, -1, sizeof(::feature_proto::ListUint32String)},
  { 608, -1, sizeof(::feature_proto::ListUint32Bytes)},
  { 615, -1, sizeof(::feature_proto::ListUint64Double)},
  { 622, -1, sizeof(::feature_proto::ListUint64Float)},
  { 629, -1, sizeof(::feature_proto::ListUint64Int32)},
  { 636, -1, sizeof(::feature_proto::ListUint64Int64)},
  { 643, -1, sizeof(::feature_proto::ListUint64Uint32)},
  { 650, -1, sizeof(::feature_proto::ListUint64Uint64)},
  { 657, -1, sizeof(::feature_proto::ListUint64Sint32)},
  { 664, -1, sizeof(::feature_proto::ListUint64Sint64)},
  { 671, -1, sizeof(::feature_proto::ListUint64Fixed32)},
  { 678, -1, sizeof(::feature_proto::ListUint64Fixed64)},
  { 685, -1, sizeof(::feature_proto::ListUint64Sfixed32)},
  { 692, -1, sizeof(::feature_proto::ListUint64Sfixed64)},
  { 699, -1, sizeof(::feature_proto::ListUint64Bool)},
  { 706, -1, sizeof(::feature_proto::ListUint64String)},
  { 713, -1, sizeof(::feature_proto::ListUint64Bytes)},
  { 720, -1, sizeof(::feature_proto::ListSint32Double)},
  { 727, -1, sizeof(::feature_proto::ListSint32Float)},
  { 734, -1, sizeof(::feature_proto::ListSint32Int32)},
  { 741, -1, sizeof(::feature_proto::ListSint32Int64)},
  { 748, -1, sizeof(::feature_proto::ListSint32Uint32)},
  { 755, -1, sizeof(::feature_proto::ListSint32Uint64)},
  { 762, -1, sizeof(::feature_proto::ListSint32Sint32)},
  { 769, -1, sizeof(::feature_proto::ListSint32Sint64)},
  { 776, -1, sizeof(::feature_proto::ListSint32Fixed32)},
  { 783, -1, sizeof(::feature_proto::ListSint32Fixed64)},
  { 790, -1, sizeof(::feature_proto::ListSint32Sfixed32)},
  { 797, -1, sizeof(::feature_proto::ListSint32Sfixed64)},
  { 804, -1, sizeof(::feature_proto::ListSint32Bool)},
  { 811, -1, sizeof(::feature_proto::ListSint32String)},
  { 818, -1, sizeof(::feature_proto::ListSint32Bytes)},
  { 825, -1, sizeof(::feature_proto::ListSint64Double)},
  { 832, -1, sizeof(::feature_proto::ListSint64Float)},
  { 839, -1, sizeof(::feature_proto::ListSint64Int32)},
  { 846, -1, sizeof(::feature_proto::ListSint64Int64)},
  { 853, -1, sizeof(::feature_proto::ListSint64Uint32)},
  { 860, -1, sizeof(::feature_proto::ListSint64Uint64)},
  { 867, -1, sizeof(::feature_proto::ListSint64Sint32)},
  { 874, -1, sizeof(::feature_proto::ListSint64Sint64)},
  { 881, -1, sizeof(::feature_proto::ListSint64Fixed32)},
  { 888, -1, sizeof(::feature_proto::ListSint64Fixed64)},
  { 895, -1, sizeof(::feature_proto::ListSint64Sfixed32)},
  { 902, -1, sizeof(::feature_proto::ListSint64Sfixed64)},
  { 909, -1, sizeof(::feature_proto::ListSint64Bool)},
  { 916, -1, sizeof(::feature_proto::ListSint64String)},
  { 923, -1, sizeof(::feature_proto::ListSint64Bytes)},
  { 930, -1, sizeof(::feature_proto::ListFixed32Double)},
  { 937, -1, sizeof(::feature_proto::ListFixed32Float)},
  { 944, -1, sizeof(::feature_proto::ListFixed32Int32)},
  { 951, -1, sizeof(::feature_proto::ListFixed32Int64)},
  { 958, -1, sizeof(::feature_proto::ListFixed32Uint32)},
  { 965, -1, sizeof(::feature_proto::ListFixed32Uint64)},
  { 972, -1, sizeof(::feature_proto::ListFixed32Sint32)},
  { 979, -1, sizeof(::feature_proto::ListFixed32Sint64)},
  { 986, -1, sizeof(::feature_proto::ListFixed32Fixed32)},
  { 993, -1, sizeof(::feature_proto::ListFixed32Fixed64)},
  { 1000, -1, sizeof(::feature_proto::ListFixed32Sfixed32)},
  { 1007, -1, sizeof(::feature_proto::ListFixed32Sfixed64)},
  { 1014, -1, sizeof(::feature_proto::ListFixed32Bool)},
  { 1021, -1, sizeof(::feature_proto::ListFixed32String)},
  { 1028, -1, sizeof(::feature_proto::ListFixed32Bytes)},
  { 1035, -1, sizeof(::feature_proto::ListFixed64Double)},
  { 1042, -1, sizeof(::feature_proto::ListFixed64Float)},
  { 1049, -1, sizeof(::feature_proto::ListFixed64Int32)},
  { 1056, -1, sizeof(::feature_proto::ListFixed64Int64)},
  { 1063, -1, sizeof(::feature_proto::ListFixed64Uint32)},
  { 1070, -1, sizeof(::feature_proto::ListFixed64Uint64)},
  { 1077, -1, sizeof(::feature_proto::ListFixed64Sint32)},
  { 1084, -1, sizeof(::feature_proto::ListFixed64Sint64)},
  { 1091, -1, sizeof(::feature_proto::ListFixed64Fixed32)},
  { 1098, -1, sizeof(::feature_proto::ListFixed64Fixed64)},
  { 1105, -1, sizeof(::feature_proto::ListFixed64Sfixed32)},
  { 1112, -1, sizeof(::feature_proto::ListFixed64Sfixed64)},
  { 1119, -1, sizeof(::feature_proto::ListFixed64Bool)},
  { 1126, -1, sizeof(::feature_proto::ListFixed64String)},
  { 1133, -1, sizeof(::feature_proto::ListFixed64Bytes)},
  { 1140, -1, sizeof(::feature_proto::ListSfixed32Double)},
  { 1147, -1, sizeof(::feature_proto::ListSfixed32Float)},
  { 1154, -1, sizeof(::feature_proto::ListSfixed32Int32)},
  { 1161, -1, sizeof(::feature_proto::ListSfixed32Int64)},
  { 1168, -1, sizeof(::feature_proto::ListSfixed32Uint32)},
  { 1175, -1, sizeof(::feature_proto::ListSfixed32Uint64)},
  { 1182, -1, sizeof(::feature_proto::ListSfixed32Sint32)},
  { 1189, -1, sizeof(::feature_proto::ListSfixed32Sint64)},
  { 1196, -1, sizeof(::feature_proto::ListSfixed32Fixed32)},
  { 1203, -1, sizeof(::feature_proto::ListSfixed32Fixed64)},
  { 1210, -1, sizeof(::feature_proto::ListSfixed32Sfixed32)},
  { 1217, -1, sizeof(::feature_proto::ListSfixed32Sfixed64)},
  { 1224, -1, sizeof(::feature_proto::ListSfixed32Bool)},
  { 1231, -1, sizeof(::feature_proto::ListSfixed32String)},
  { 1238, -1, sizeof(::feature_proto::ListSfixed32Bytes)},
  { 1245, -1, sizeof(::feature_proto::ListSfixed64Double)},
  { 1252, -1, sizeof(::feature_proto::ListSfixed64Float)},
  { 1259, -1, sizeof(::feature_proto::ListSfixed64Int32)},
  { 1266, -1, sizeof(::feature_proto::ListSfixed64Int64)},
  { 1273, -1, sizeof(::feature_proto::ListSfixed64Uint32)},
  { 1280, -1, sizeof(::feature_proto::ListSfixed64Uint64)},
  { 1287, -1, sizeof(::feature_proto::ListSfixed64Sint32)},
  { 1294, -1, sizeof(::feature_proto::ListSfixed64Sint64)},
  { 1301, -1, sizeof(::feature_proto::ListSfixed64Fixed32)},
  { 1308, -1, sizeof(::feature_proto::ListSfixed64Fixed64)},
  { 1315, -1, sizeof(::feature_proto::ListSfixed64Sfixed32)},
  { 1322, -1, sizeof(::feature_proto::ListSfixed64Sfixed64)},
  { 1329, -1, sizeof(::feature_proto::ListSfixed64Bool)},
  { 1336, -1, sizeof(::feature_proto::ListSfixed64String)},
  { 1343, -1, sizeof(::feature_proto::ListSfixed64Bytes)},
  { 1350, -1, sizeof(::feature_proto::ListDoubleDouble)},
  { 1357, -1, sizeof(::feature_proto::ListDoubleFloat)},
  { 1364, -1, sizeof(::feature_proto::ListDoubleInt32)},
  { 1371, -1, sizeof(::feature_proto::ListDoubleInt64)},
  { 1378, -1, sizeof(::feature_proto::ListDoubleUint32)},
  { 1385, -1, sizeof(::feature_proto::ListDoubleUint64)},
  { 1392, -1, sizeof(::feature_proto::ListDoubleSint32)},
  { 1399, -1, sizeof(::feature_proto::ListDoubleSint64)},
  { 1406, -1, sizeof(::feature_proto::ListDoubleFixed32)},
  { 1413, -1, sizeof(::feature_proto::ListDoubleFixed64)},
  { 1420, -1, sizeof(::feature_proto::ListDoubleSfixed32)},
  { 1427, -1, sizeof(::feature_proto::ListDoubleSfixed64)},
  { 1434, -1, sizeof(::feature_proto::ListDoubleBool)},
  { 1441, -1, sizeof(::feature_proto::ListDoubleString)},
  { 1448, -1, sizeof(::feature_proto::ListDoubleBytes)},
  { 1455, -1, sizeof(::feature_proto::ListFloatDouble)},
  { 1462, -1, sizeof(::feature_proto::ListFloatFloat)},
  { 1469, -1, sizeof(::feature_proto::ListFloatInt32)},
  { 1476, -1, sizeof(::feature_proto::ListFloatInt64)},
  { 1483, -1, sizeof(::feature_proto::ListFloatUint32)},
  { 1490, -1, sizeof(::feature_proto::ListFloatUint64)},
  { 1497, -1, sizeof(::feature_proto::ListFloatSint32)},
  { 1504, -1, sizeof(::feature_proto::ListFloatSint64)},
  { 1511, -1, sizeof(::feature_proto::ListFloatFixed32)},
  { 1518, -1, sizeof(::feature_proto::ListFloatFixed64)},
  { 1525, -1, sizeof(::feature_proto::ListFloatSfixed32)},
  { 1532, -1, sizeof(::feature_proto::ListFloatSfixed64)},
  { 1539, -1, sizeof(::feature_proto::ListFloatBool)},
  { 1546, -1, sizeof(::feature_proto::ListFloatString)},
  { 1553, -1, sizeof(::feature_proto::ListFloatBytes)},
  { 1560, -1, sizeof(::feature_proto::ListBoolDouble)},
  { 1567, -1, sizeof(::feature_proto::ListBoolFloat)},
  { 1574, -1, sizeof(::feature_proto::ListBoolInt32)},
  { 1581, -1, sizeof(::feature_proto::ListBoolInt64)},
  { 1588, -1, sizeof(::feature_proto::ListBoolUint32)},
  { 1595, -1, sizeof(::feature_proto::ListBoolUint64)},
  { 1602, -1, sizeof(::feature_proto::ListBoolSint32)},
  { 1609, -1, sizeof(::feature_proto::ListBoolSint64)},
  { 1616, -1, sizeof(::feature_proto::ListBoolFixed32)},
  { 1623, -1, sizeof(::feature_proto::ListBoolFixed64)},
  { 1630, -1, sizeof(::feature_proto::ListBoolSfixed32)},
  { 1637, -1, sizeof(::feature_proto::ListBoolSfixed64)},
  { 1644, -1, sizeof(::feature_proto::ListBoolBool)},
  { 1651, -1, sizeof(::feature_proto::ListBoolString)},
  { 1658, -1, sizeof(::feature_proto::ListBoolBytes)},
  { 1665, -1, sizeof(::feature_proto::Feature)},
  { 1926, -1, sizeof(::feature_proto::Features)},
  { 1932, 1939, sizeof(::feature_proto::FeaturesMap_FEntry_DoNotUse)},
  { 1941, -1, sizeof(::feature_proto::FeaturesMap)},
  { 1947, -1, sizeof(::feature_proto::FeaturesList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListStringBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBytesBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt32Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListInt64Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint32Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListUint64Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint32Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSint64Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed32Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFixed64Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed32Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Double_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Uint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Uint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Sint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Sint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Fixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Fixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Sfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Sfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListSfixed64Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListDoubleBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListFloatBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolInt32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolInt64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolUint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolUint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolSint32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolSint64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolFixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolFixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolSfixed32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolSfixed64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_ListBoolBytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_Feature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_Features_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_FeaturesMap_FEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_FeaturesMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::feature_proto::_FeaturesList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "feature.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 245);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rfeature.proto\022\rfeature_proto\"\027\n\nListDo"
      "uble\022\t\n\001k\030\001 \003(\001\"\026\n\tListFloat\022\t\n\001k\030\001 \003(\002\""
      "\026\n\tListInt32\022\t\n\001k\030\001 \003(\005\"\026\n\tListInt64\022\t\n\001"
      "k\030\001 \003(\003\"\027\n\nListUint32\022\t\n\001k\030\001 \003(\r\"\027\n\nList"
      "Uint64\022\t\n\001k\030\001 \003(\004\"\027\n\nListSint32\022\t\n\001k\030\001 \003"
      "(\021\"\027\n\nListSint64\022\t\n\001k\030\001 \003(\022\"\030\n\013ListFixed"
      "32\022\t\n\001k\030\001 \003(\007\"\030\n\013ListFixed64\022\t\n\001k\030\001 \003(\006\""
      "\031\n\014ListSfixed32\022\t\n\001k\030\001 \003(\017\"\031\n\014ListSfixed"
      "64\022\t\n\001k\030\001 \003(\020\"\025\n\010ListBool\022\t\n\001k\030\001 \003(\010\"\027\n\n"
      "ListString\022\t\n\001k\030\001 \003(\t\"\026\n\tListBytes\022\t\n\001k\030"
      "\001 \003(\014\"(\n\020ListStringDouble\022\t\n\001k\030\001 \003(\t\022\t\n\001"
      "w\030\002 \003(\001\"\'\n\017ListStringFloat\022\t\n\001k\030\001 \003(\t\022\t\n"
      "\001w\030\002 \003(\002\"\'\n\017ListStringInt32\022\t\n\001k\030\001 \003(\t\022\t"
      "\n\001w\030\002 \003(\005\"\'\n\017ListStringInt64\022\t\n\001k\030\001 \003(\t\022"
      "\t\n\001w\030\002 \003(\003\"(\n\020ListStringUint32\022\t\n\001k\030\001 \003("
      "\t\022\t\n\001w\030\002 \003(\r\"(\n\020ListStringUint64\022\t\n\001k\030\001 "
      "\003(\t\022\t\n\001w\030\002 \003(\004\"(\n\020ListStringSint32\022\t\n\001k\030"
      "\001 \003(\t\022\t\n\001w\030\002 \003(\021\"(\n\020ListStringSint64\022\t\n\001"
      "k\030\001 \003(\t\022\t\n\001w\030\002 \003(\022\")\n\021ListStringFixed32\022"
      "\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\007\")\n\021ListStringFixed"
      "64\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\006\"*\n\022ListStringSf"
      "ixed32\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\017\"*\n\022ListStri"
      "ngSfixed64\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\020\"&\n\016List"
      "StringBool\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\010\"(\n\020List"
      "StringString\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\t\"\'\n\017Li"
      "stStringBytes\022\t\n\001k\030\001 \003(\t\022\t\n\001w\030\002 \003(\014\"\'\n\017L"
      "istBytesDouble\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\001\"&\n\016"
      "ListBytesFloat\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\002\"&\n\016"
      "ListBytesInt32\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\005\"&\n\016"
      "ListBytesInt64\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\003\"\'\n\017"
      "ListBytesUint32\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\r\"\'\n"
      "\017ListBytesUint64\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\004\"\'"
      "\n\017ListBytesSint32\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\021\""
      "\'\n\017ListBytesSint64\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003(\022"
      "\"(\n\020ListBytesFixed32\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002 \003"
      "(\007\"(\n\020ListBytesFixed64\022\t\n\001k\030\001 \003(\014\022\t\n\001w\030\002"
      " \003(\006\")\n\021ListBytesSfixed32\022\t\n\001k\030\001 \003(\014\022\t\n\001"
      "w\030\002 \003(\017\")\n\021ListBytesSfixed64\022\t\n\001k\030\001 \003(\014\022"
      "\t\n\001w\030\002 \003(\020\"%\n\rListBytesBool\022\t\n\001k\030\001 \003(\014\022\t"
      "\n\001w\030\002 \003(\010\"\'\n\017ListBytesString\022\t\n\001k\030\001 \003(\014\022"
      "\t\n\001w\030\002 \003(\t\"&\n\016ListBytesBytes\022\t\n\001k\030\001 \003(\014\022"
      "\t\n\001w\030\002 \003(\014\"\'\n\017ListInt32Double\022\t\n\001k\030\001 \003(\005"
      "\022\t\n\001w\030\002 \003(\001\"&\n\016ListInt32Float\022\t\n\001k\030\001 \003(\005"
      "\022\t\n\001w\030\002 \003(\002\"&\n\016ListInt32Int32\022\t\n\001k\030\001 \003(\005"
      "\022\t\n\001w\030\002 \003(\005\"&\n\016ListInt32Int64\022\t\n\001k\030\001 \003(\005"
      "\022\t\n\001w\030\002 \003(\003\"\'\n\017ListInt32Uint32\022\t\n\001k\030\001 \003("
      "\005\022\t\n\001w\030\002 \003(\r\"\'\n\017ListInt32Uint64\022\t\n\001k\030\001 \003"
      "(\005\022\t\n\001w\030\002 \003(\004\"\'\n\017ListInt32Sint32\022\t\n\001k\030\001 "
      "\003(\005\022\t\n\001w\030\002 \003(\021\"\'\n\017ListInt32Sint64\022\t\n\001k\030\001"
      " \003(\005\022\t\n\001w\030\002 \003(\022\"(\n\020ListInt32Fixed32\022\t\n\001k"
      "\030\001 \003(\005\022\t\n\001w\030\002 \003(\007\"(\n\020ListInt32Fixed64\022\t\n"
      "\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\006\")\n\021ListInt32Sfixed32"
      "\022\t\n\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\017\")\n\021ListInt32Sfixe"
      "d64\022\t\n\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\020\"%\n\rListInt32Bo"
      "ol\022\t\n\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\010\"\'\n\017ListInt32Str"
      "ing\022\t\n\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\t\"&\n\016ListInt32By"
      "tes\022\t\n\001k\030\001 \003(\005\022\t\n\001w\030\002 \003(\014\"\'\n\017ListInt64Do"
      "uble\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\001\"&\n\016ListInt64F"
      "loat\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\002\"&\n\016ListInt64I"
      "nt32\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\005\"&\n\016ListInt64I"
      "nt64\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\003\"\'\n\017ListInt64U"
      "int32\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\r\"\'\n\017ListInt64"
      "Uint64\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\004\"\'\n\017ListInt6"
      "4Sint32\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\021\"\'\n\017ListInt"
      "64Sint64\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\022\"(\n\020ListIn"
      "t64Fixed32\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\007\"(\n\020List"
      "Int64Fixed64\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\006\")\n\021Li"
      "stInt64Sfixed32\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\017\")\n"
      "\021ListInt64Sfixed64\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\020"
      "\"%\n\rListInt64Bool\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\010\""
      "\'\n\017ListInt64String\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\t"
      "\"&\n\016ListInt64Bytes\022\t\n\001k\030\001 \003(\003\022\t\n\001w\030\002 \003(\014"
      "\"(\n\020ListUint32Double\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003"
      "(\001\"\'\n\017ListUint32Float\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 "
      "\003(\002\"\'\n\017ListUint32Int32\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002"
      " \003(\005\"\'\n\017ListUint32Int64\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030"
      "\002 \003(\003\"(\n\020ListUint32Uint32\022\t\n\001k\030\001 \003(\r\022\t\n\001"
      "w\030\002 \003(\r\"(\n\020ListUint32Uint64\022\t\n\001k\030\001 \003(\r\022\t"
      "\n\001w\030\002 \003(\004\"(\n\020ListUint32Sint32\022\t\n\001k\030\001 \003(\r"
      "\022\t\n\001w\030\002 \003(\021\"(\n\020ListUint32Sint64\022\t\n\001k\030\001 \003"
      "(\r\022\t\n\001w\030\002 \003(\022\")\n\021ListUint32Fixed32\022\t\n\001k\030"
      "\001 \003(\r\022\t\n\001w\030\002 \003(\007\")\n\021ListUint32Fixed64\022\t\n"
      "\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\006\"*\n\022ListUint32Sfixed3"
      "2\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\017\"*\n\022ListUint32Sfi"
      "xed64\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\020\"&\n\016ListUint3"
      "2Bool\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\010\"(\n\020ListUint3"
      "2String\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\t\"\'\n\017ListUin"
      "t32Bytes\022\t\n\001k\030\001 \003(\r\022\t\n\001w\030\002 \003(\014\"(\n\020ListUi"
      "nt64Double\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\001\"\'\n\017List"
      "Uint64Float\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\002\"\'\n\017Lis"
      "tUint64Int32\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\005\"\'\n\017Li"
      "stUint64Int64\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\003\"(\n\020L"
      "istUint64Uint32\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\r\"(\n"
      "\020ListUint64Uint64\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\004\""
      "(\n\020ListUint64Sint32\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003("
      "\021\"(\n\020ListUint64Sint64\022\t\n\001k\030\001 \003(\004\022\t\n\001w\030\002 "
      "\003(\022\")\n\021ListUint64Fixed32\022\t\n\001k\030\001 \003(\004\022\t\n\001w"
      "\030\002 \003(\007\")\n\021ListUint64Fixed64\022\t\n\001k\030\001 \003(\004\022\t"
      "\n\001w\030\002 \003(\006\"*\n\022ListUint64Sfixed32\022\t\n\001k\030\001 \003"
      "(\004\022\t\n\001w\030\002 \003(\017\"*\n\022ListUint64Sfixed64\022\t\n\001k"
      "\030\001 \003(\004\022\t\n\001w\030\002 \003(\020\"&\n\016ListUint64Bool\022\t\n\001k"
      "\030\001 \003(\004\022\t\n\001w\030\002 \003(\010\"(\n\020ListUint64String\022\t\n"
      "\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\t\"\'\n\017ListUint64Bytes\022\t"
      "\n\001k\030\001 \003(\004\022\t\n\001w\030\002 \003(\014\"(\n\020ListSint32Double"
      "\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\001\"\'\n\017ListSint32Floa"
      "t\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\002\"\'\n\017ListSint32Int"
      "32\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\005\"\'\n\017ListSint32In"
      "t64\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\003\"(\n\020ListSint32U"
      "int32\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\r\"(\n\020ListSint3"
      "2Uint64\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\004\"(\n\020ListSin"
      "t32Sint32\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\021\"(\n\020ListS"
      "int32Sint64\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\022\")\n\021Lis"
      "tSint32Fixed32\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\007\")\n\021"
      "ListSint32Fixed64\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 \003(\006\""
      "*\n\022ListSint32Sfixed32\022\t\n\001k\030\001 \003(\021\022\t\n\001w\030\002 "
      "\003(\017\"*\n\022ListSint32Sfixed64\022\t\n\001k\030\001 \003(\021\022\t\n\001"
      "w\030\002 \003(\020\"&\n\016ListSint32Bool\022\t\n\001k\030\001 \003(\021\022\t\n\001"
      "w\030\002 \003(\010\"(\n\020ListSint32String\022\t\n\001k\030\001 \003(\021\022\t"
      "\n\001w\030\002 \003(\t\"\'\n\017ListSint32Bytes\022\t\n\001k\030\001 \003(\021\022"
      "\t\n\001w\030\002 \003(\014\"(\n\020ListSint64Double\022\t\n\001k\030\001 \003("
      "\022\022\t\n\001w\030\002 \003(\001\"\'\n\017ListSint64Float\022\t\n\001k\030\001 \003"
      "(\022\022\t\n\001w\030\002 \003(\002\"\'\n\017ListSint64Int32\022\t\n\001k\030\001 "
      "\003(\022\022\t\n\001w\030\002 \003(\005\"\'\n\017ListSint64Int64\022\t\n\001k\030\001"
      " \003(\022\022\t\n\001w\030\002 \003(\003\"(\n\020ListSint64Uint32\022\t\n\001k"
      "\030\001 \003(\022\022\t\n\001w\030\002 \003(\r\"(\n\020ListSint64Uint64\022\t\n"
      "\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\004\"(\n\020ListSint64Sint32\022"
      "\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\021\"(\n\020ListSint64Sint6"
      "4\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\022\")\n\021ListSint64Fix"
      "ed32\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\007\")\n\021ListSint64"
      "Fixed64\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\006\"*\n\022ListSin"
      "t64Sfixed32\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\017\"*\n\022Lis"
      "tSint64Sfixed64\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\020\"&\n"
      "\016ListSint64Bool\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\010\"(\n"
      "\020ListSint64String\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\t\""
      "\'\n\017ListSint64Bytes\022\t\n\001k\030\001 \003(\022\022\t\n\001w\030\002 \003(\014"
      "\")\n\021ListFixed32Double\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 "
      "\003(\001\"(\n\020ListFixed32Float\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030"
      "\002 \003(\002\"(\n\020ListFixed32Int32\022\t\n\001k\030\001 \003(\007\022\t\n\001"
      "w\030\002 \003(\005\"(\n\020ListFixed32Int64\022\t\n\001k\030\001 \003(\007\022\t"
      "\n\001w\030\002 \003(\003\")\n\021ListFixed32Uint32\022\t\n\001k\030\001 \003("
      "\007\022\t\n\001w\030\002 \003(\r\")\n\021ListFixed32Uint64\022\t\n\001k\030\001"
      " \003(\007\022\t\n\001w\030\002 \003(\004\")\n\021ListFixed32Sint32\022\t\n\001"
      "k\030\001 \003(\007\022\t\n\001w\030\002 \003(\021\")\n\021ListFixed32Sint64\022"
      "\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\022\"*\n\022ListFixed32Fixe"
      "d32\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\007\"*\n\022ListFixed32"
      "Fixed64\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\006\"+\n\023ListFix"
      "ed32Sfixed32\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\017\"+\n\023Li"
      "stFixed32Sfixed64\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\020\""
      "\'\n\017ListFixed32Bool\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 \003(\010"
      "\")\n\021ListFixed32String\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030\002 "
      "\003(\t\"(\n\020ListFixed32Bytes\022\t\n\001k\030\001 \003(\007\022\t\n\001w\030"
      "\002 \003(\014\")\n\021ListFixed64Double\022\t\n\001k\030\001 \003(\006\022\t\n"
      "\001w\030\002 \003(\001\"(\n\020ListFixed64Float\022\t\n\001k\030\001 \003(\006\022"
      "\t\n\001w\030\002 \003(\002\"(\n\020ListFixed64Int32\022\t\n\001k\030\001 \003("
      "\006\022\t\n\001w\030\002 \003(\005\"(\n\020ListFixed64Int64\022\t\n\001k\030\001 "
      "\003(\006\022\t\n\001w\030\002 \003(\003\")\n\021ListFixed64Uint32\022\t\n\001k"
      "\030\001 \003(\006\022\t\n\001w\030\002 \003(\r\")\n\021ListFixed64Uint64\022\t"
      "\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\004\")\n\021ListFixed64Sint3"
      "2\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\021\")\n\021ListFixed64Si"
      "nt64\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\022\"*\n\022ListFixed6"
      "4Fixed32\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\007\"*\n\022ListFi"
      "xed64Fixed64\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\006\"+\n\023Li"
      "stFixed64Sfixed32\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002 \003(\017\""
      "+\n\023ListFixed64Sfixed64\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030\002"
      " \003(\020\"\'\n\017ListFixed64Bool\022\t\n\001k\030\001 \003(\006\022\t\n\001w\030"
      "\002 \003(\010\")\n\021ListFixed64String\022\t\n\001k\030\001 \003(\006\022\t\n"
      "\001w\030\002 \003(\t\"(\n\020ListFixed64Bytes\022\t\n\001k\030\001 \003(\006\022"
      "\t\n\001w\030\002 \003(\014\"*\n\022ListSfixed32Double\022\t\n\001k\030\001 "
      "\003(\017\022\t\n\001w\030\002 \003(\001\")\n\021ListSfixed32Float\022\t\n\001k"
      "\030\001 \003(\017\022\t\n\001w\030\002 \003(\002\")\n\021ListSfixed32Int32\022\t"
      "\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\005\")\n\021ListSfixed32Int6"
      "4\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\003\"*\n\022ListSfixed32U"
      "int32\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\r\"*\n\022ListSfixe"
      "d32Uint64\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\004\"*\n\022ListS"
      "fixed32Sint32\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\021\"*\n\022L"
      "istSfixed32Sint64\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\022\""
      "+\n\023ListSfixed32Fixed32\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002"
      " \003(\007\"+\n\023ListSfixed32Fixed64\022\t\n\001k\030\001 \003(\017\022\t"
      "\n\001w\030\002 \003(\006\",\n\024ListSfixed32Sfixed32\022\t\n\001k\030\001"
      " \003(\017\022\t\n\001w\030\002 \003(\017\",\n\024ListSfixed32Sfixed64\022"
      "\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\020\"(\n\020ListSfixed32Boo"
      "l\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\010\"*\n\022ListSfixed32S"
      "tring\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\t\")\n\021ListSfixe"
      "d32Bytes\022\t\n\001k\030\001 \003(\017\022\t\n\001w\030\002 \003(\014\"*\n\022ListSf"
      "ixed64Double\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\001\")\n\021Li"
      "stSfixed64Float\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\002\")\n"
      "\021ListSfixed64Int32\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\005"
      "\")\n\021ListSfixed64Int64\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 "
      "\003(\003\"*\n\022ListSfixed64Uint32\022\t\n\001k\030\001 \003(\020\022\t\n\001"
      "w\030\002 \003(\r\"*\n\022ListSfixed64Uint64\022\t\n\001k\030\001 \003(\020"
      "\022\t\n\001w\030\002 \003(\004\"*\n\022ListSfixed64Sint32\022\t\n\001k\030\001"
      " \003(\020\022\t\n\001w\030\002 \003(\021\"*\n\022ListSfixed64Sint64\022\t\n"
      "\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\022\"+\n\023ListSfixed64Fixed"
      "32\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\007\"+\n\023ListSfixed64"
      "Fixed64\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\006\",\n\024ListSfi"
      "xed64Sfixed32\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003(\017\",\n\024L"
      "istSfixed64Sfixed64\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 \003("
      "\020\"(\n\020ListSfixed64Bool\022\t\n\001k\030\001 \003(\020\022\t\n\001w\030\002 "
      "\003(\010\"*\n\022ListSfixed64String\022\t\n\001k\030\001 \003(\020\022\t\n\001"
      "w\030\002 \003(\t\")\n\021ListSfixed64Bytes\022\t\n\001k\030\001 \003(\020\022"
      "\t\n\001w\030\002 \003(\014\"(\n\020ListDoubleDouble\022\t\n\001k\030\001 \003("
      "\001\022\t\n\001w\030\002 \003(\001\"\'\n\017ListDoubleFloat\022\t\n\001k\030\001 \003"
      "(\001\022\t\n\001w\030\002 \003(\002\"\'\n\017ListDoubleInt32\022\t\n\001k\030\001 "
      "\003(\001\022\t\n\001w\030\002 \003(\005\"\'\n\017ListDoubleInt64\022\t\n\001k\030\001"
      " \003(\001\022\t\n\001w\030\002 \003(\003\"(\n\020ListDoubleUint32\022\t\n\001k"
      "\030\001 \003(\001\022\t\n\001w\030\002 \003(\r\"(\n\020ListDoubleUint64\022\t\n"
      "\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\004\"(\n\020ListDoubleSint32\022"
      "\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\021\"(\n\020ListDoubleSint6"
      "4\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\022\")\n\021ListDoubleFix"
      "ed32\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\007\")\n\021ListDouble"
      "Fixed64\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\006\"*\n\022ListDou"
      "bleSfixed32\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\017\"*\n\022Lis"
      "tDoubleSfixed64\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\020\"&\n"
      "\016ListDoubleBool\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\010\"(\n"
      "\020ListDoubleString\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\t\""
      "\'\n\017ListDoubleBytes\022\t\n\001k\030\001 \003(\001\022\t\n\001w\030\002 \003(\014"
      "\"\'\n\017ListFloatDouble\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 \003("
      "\001\"&\n\016ListFloatFloat\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 \003("
      "\002\"&\n\016ListFloatInt32\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 \003("
      "\005\"&\n\016ListFloatInt64\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 \003("
      "\003\"\'\n\017ListFloatUint32\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 \003"
      "(\r\"\'\n\017ListFloatUint64\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002 "
      "\003(\004\"\'\n\017ListFloatSint32\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030\002"
      " \003(\021\"\'\n\017ListFloatSint64\022\t\n\001k\030\001 \003(\002\022\t\n\001w\030"
      "\002 \003(\022\"(\n\020ListFloatFixed32\022\t\n\001k\030\001 \003(\002\022\t\n\001"
      "w\030\002 \003(\007\"(\n\020ListFloatFixed64\022\t\n\001k\030\001 \003(\002\022\t"
      "\n\001w\030\002 \003(\006\")\n\021ListFloatSfixed32\022\t\n\001k\030\001 \003("
      "\002\022\t\n\001w\030\002 \003(\017\")\n\021ListFloatSfixed64\022\t\n\001k\030\001"
      " \003(\002\022\t\n\001w\030\002 \003(\020\"%\n\rListFloatBool\022\t\n\001k\030\001 "
      "\003(\002\022\t\n\001w\030\002 \003(\010\"\'\n\017ListFloatString\022\t\n\001k\030\001"
      " \003(\002\022\t\n\001w\030\002 \003(\t\"&\n\016ListFloatBytes\022\t\n\001k\030\001"
      " \003(\002\022\t\n\001w\030\002 \003(\014\"&\n\016ListBoolDouble\022\t\n\001k\030\001"
      " \003(\010\022\t\n\001w\030\002 \003(\001\"%\n\rListBoolFloat\022\t\n\001k\030\001 "
      "\003(\010\022\t\n\001w\030\002 \003(\002\"%\n\rListBoolInt32\022\t\n\001k\030\001 \003"
      "(\010\022\t\n\001w\030\002 \003(\005\"%\n\rListBoolInt64\022\t\n\001k\030\001 \003("
      "\010\022\t\n\001w\030\002 \003(\003\"&\n\016ListBoolUint32\022\t\n\001k\030\001 \003("
      "\010\022\t\n\001w\030\002 \003(\r\"&\n\016ListBoolUint64\022\t\n\001k\030\001 \003("
      "\010\022\t\n\001w\030\002 \003(\004\"&\n\016ListBoolSint32\022\t\n\001k\030\001 \003("
      "\010\022\t\n\001w\030\002 \003(\021\"&\n\016ListBoolSint64\022\t\n\001k\030\001 \003("
      "\010\022\t\n\001w\030\002 \003(\022\"\'\n\017ListBoolFixed32\022\t\n\001k\030\001 \003"
      "(\010\022\t\n\001w\030\002 \003(\007\"\'\n\017ListBoolFixed64\022\t\n\001k\030\001 "
      "\003(\010\022\t\n\001w\030\002 \003(\006\"(\n\020ListBoolSfixed32\022\t\n\001k\030"
      "\001 \003(\010\022\t\n\001w\030\002 \003(\017\"(\n\020ListBoolSfixed64\022\t\n\001"
      "k\030\001 \003(\010\022\t\n\001w\030\002 \003(\020\"$\n\014ListBoolBool\022\t\n\001k\030"
      "\001 \003(\010\022\t\n\001w\030\002 \003(\010\"&\n\016ListBoolString\022\t\n\001k\030"
      "\001 \003(\010\022\t\n\001w\030\002 \003(\t\"%\n\rListBoolBytes\022\t\n\001k\030\001"
      " \003(\010\022\t\n\001w\030\002 \003(\014\"\352{\n\007Feature\022\022\n\010v_double\030"
      "\001 \001(\001H\000\022\021\n\007v_float\030\002 \001(\002H\000\022\021\n\007v_int32\030\003 "
      "\001(\005H\000\022\021\n\007v_int64\030\004 \001(\003H\000\022\022\n\010v_uint32\030\005 \001"
      "(\rH\000\022\022\n\010v_uint64\030\006 \001(\004H\000\022\022\n\010v_sint32\030\007 \001"
      "(\021H\000\022\022\n\010v_sint64\030\010 \001(\022H\000\022\023\n\tv_fixed32\030\t "
      "\001(\007H\000\022\023\n\tv_fixed64\030\n \001(\006H\000\022\024\n\nv_sfixed32"
      "\030\013 \001(\017H\000\022\024\n\nv_sfixed64\030\014 \001(\020H\000\022\020\n\006v_bool"
      "\030\r \001(\010H\000\022\022\n\010v_string\030\016 \001(\tH\000\022\021\n\007v_bytes\030"
      "\017 \001(\014H\000\0222\n\rv_list_double\030\020 \001(\0132\031.feature"
      "_proto.ListDoubleH\000\0220\n\014v_list_float\030\021 \001("
      "\0132\030.feature_proto.ListFloatH\000\0220\n\014v_list_"
      "int32\030\022 \001(\0132\030.feature_proto.ListInt32H\000\022"
      "0\n\014v_list_int64\030\023 \001(\0132\030.feature_proto.Li"
      "stInt64H\000\0222\n\rv_list_uint32\030\024 \001(\0132\031.featu"
      "re_proto.ListUint32H\000\0222\n\rv_list_uint64\030\025"
      " \001(\0132\031.feature_proto.ListUint64H\000\0222\n\rv_l"
      "ist_sint32\030\026 \001(\0132\031.feature_proto.ListSin"
      "t32H\000\0222\n\rv_list_sint64\030\027 \001(\0132\031.feature_p"
      "roto.ListSint64H\000\0224\n\016v_list_fixed32\030\030 \001("
      "\0132\032.feature_proto.ListFixed32H\000\0224\n\016v_lis"
      "t_fixed64\030\031 \001(\0132\032.feature_proto.ListFixe"
      "d64H\000\0226\n\017v_list_sfixed32\030\032 \001(\0132\033.feature"
      "_proto.ListSfixed32H\000\0226\n\017v_list_sfixed64"
      "\030\033 \001(\0132\033.feature_proto.ListSfixed64H\000\022.\n"
      "\013v_list_bool\030\034 \001(\0132\027.feature_proto.ListB"
      "oolH\000\0222\n\rv_list_string\030\035 \001(\0132\031.feature_p"
      "roto.ListStringH\000\0220\n\014v_list_bytes\030\036 \001(\0132"
      "\030.feature_proto.ListBytesH\000\022\?\n\024v_list_st"
      "ring_double\030\037 \001(\0132\037.feature_proto.ListSt"
      "ringDoubleH\000\022=\n\023v_list_string_float\030  \001("
      "\0132\036.feature_proto.ListStringFloatH\000\022=\n\023v"
      "_list_string_int32\030! \001(\0132\036.feature_proto"
      ".ListStringInt32H\000\022=\n\023v_list_string_int6"
      "4\030\" \001(\0132\036.feature_proto.ListStringInt64H"
      "\000\022\?\n\024v_list_string_uint32\030# \001(\0132\037.featur"
      "e_proto.ListStringUint32H\000\022\?\n\024v_list_str"
      "ing_uint64\030$ \001(\0132\037.feature_proto.ListStr"
      "ingUint64H\000\022\?\n\024v_list_string_sint32\030% \001("
      "\0132\037.feature_proto.ListStringSint32H\000\022\?\n\024"
      "v_list_string_sint64\030& \001(\0132\037.feature_pro"
      "to.ListStringSint64H\000\022A\n\025v_list_string_f"
      "ixed32\030\' \001(\0132 .feature_proto.ListStringF"
      "ixed32H\000\022A\n\025v_list_string_fixed64\030( \001(\0132"
      " .feature_proto.ListStringFixed64H\000\022C\n\026v"
      "_list_string_sfixed32\030) \001(\0132!.feature_pr"
      "oto.ListStringSfixed32H\000\022C\n\026v_list_strin"
      "g_sfixed64\030* \001(\0132!.feature_proto.ListStr"
      "ingSfixed64H\000\022;\n\022v_list_string_bool\030+ \001("
      "\0132\035.feature_proto.ListStringBoolH\000\022\?\n\024v_"
      "list_string_string\030, \001(\0132\037.feature_proto"
      ".ListStringStringH\000\022=\n\023v_list_string_byt"
      "es\030- \001(\0132\036.feature_proto.ListStringBytes"
      "H\000\022=\n\023v_list_bytes_double\030. \001(\0132\036.featur"
      "e_proto.ListBytesDoubleH\000\022;\n\022v_list_byte"
      "s_float\030/ \001(\0132\035.feature_proto.ListBytesF"
      "loatH\000\022;\n\022v_list_bytes_int32\0300 \001(\0132\035.fea"
      "ture_proto.ListBytesInt32H\000\022;\n\022v_list_by"
      "tes_int64\0301 \001(\0132\035.feature_proto.ListByte"
      "sInt64H\000\022=\n\023v_list_bytes_uint32\0302 \001(\0132\036."
      "feature_proto.ListBytesUint32H\000\022=\n\023v_lis"
      "t_bytes_uint64\0303 \001(\0132\036.feature_proto.Lis"
      "tBytesUint64H\000\022=\n\023v_list_bytes_sint32\0304 "
      "\001(\0132\036.feature_proto.ListBytesSint32H\000\022=\n"
      "\023v_list_bytes_sint64\0305 \001(\0132\036.feature_pro"
      "to.ListBytesSint64H\000\022\?\n\024v_list_bytes_fix"
      "ed32\0306 \001(\0132\037.feature_proto.ListBytesFixe"
      "d32H\000\022\?\n\024v_list_bytes_fixed64\0307 \001(\0132\037.fe"
      "ature_proto.ListBytesFixed64H\000\022A\n\025v_list"
      "_bytes_sfixed32\0308 \001(\0132 .feature_proto.Li"
      "stBytesSfixed32H\000\022A\n\025v_list_bytes_sfixed"
      "64\0309 \001(\0132 .feature_proto.ListBytesSfixed"
      "64H\000\0229\n\021v_list_bytes_bool\030: \001(\0132\034.featur"
      "e_proto.ListBytesBoolH\000\022=\n\023v_list_bytes_"
      "string\030; \001(\0132\036.feature_proto.ListBytesSt"
      "ringH\000\022;\n\022v_list_bytes_bytes\030< \001(\0132\035.fea"
      "ture_proto.ListBytesBytesH\000\022=\n\023v_list_in"
      "t32_double\030= \001(\0132\036.feature_proto.ListInt"
      "32DoubleH\000\022;\n\022v_list_int32_float\030> \001(\0132\035"
      ".feature_proto.ListInt32FloatH\000\022;\n\022v_lis"
      "t_int32_int32\030\? \001(\0132\035.feature_proto.List"
      "Int32Int32H\000\022;\n\022v_list_int32_int64\030@ \001(\013"
      "2\035.feature_proto.ListInt32Int64H\000\022=\n\023v_l"
      "ist_int32_uint32\030A \001(\0132\036.feature_proto.L"
      "istInt32Uint32H\000\022=\n\023v_list_int32_uint64\030"
      "B \001(\0132\036.feature_proto.ListInt32Uint64H\000\022"
      "=\n\023v_list_int32_sint32\030C \001(\0132\036.feature_p"
      "roto.ListInt32Sint32H\000\022=\n\023v_list_int32_s"
      "int64\030D \001(\0132\036.feature_proto.ListInt32Sin"
      "t64H\000\022\?\n\024v_list_int32_fixed32\030E \001(\0132\037.fe"
      "ature_proto.ListInt32Fixed32H\000\022\?\n\024v_list"
      "_int32_fixed64\030F \001(\0132\037.feature_proto.Lis"
      "tInt32Fixed64H\000\022A\n\025v_list_int32_sfixed32"
      "\030G \001(\0132 .feature_proto.ListInt32Sfixed32"
      "H\000\022A\n\025v_list_int32_sfixed64\030H \001(\0132 .feat"
      "ure_proto.ListInt32Sfixed64H\000\0229\n\021v_list_"
      "int32_bool\030I \001(\0132\034.feature_proto.ListInt"
      "32BoolH\000\022=\n\023v_list_int32_string\030J \001(\0132\036."
      "feature_proto.ListInt32StringH\000\022;\n\022v_lis"
      "t_int32_bytes\030K \001(\0132\035.feature_proto.List"
      "Int32BytesH\000\022=\n\023v_list_int64_double\030L \001("
      "\0132\036.feature_proto.ListInt64DoubleH\000\022;\n\022v"
      "_list_int64_float\030M \001(\0132\035.feature_proto."
      "ListInt64FloatH\000\022;\n\022v_list_int64_int32\030N"
      " \001(\0132\035.feature_proto.ListInt64Int32H\000\022;\n"
      "\022v_list_int64_int64\030O \001(\0132\035.feature_prot"
      "o.ListInt64Int64H\000\022=\n\023v_list_int64_uint3"
      "2\030P \001(\0132\036.feature_proto.ListInt64Uint32H"
      "\000\022=\n\023v_list_int64_uint64\030Q \001(\0132\036.feature"
      "_proto.ListInt64Uint64H\000\022=\n\023v_list_int64"
      "_sint32\030R \001(\0132\036.feature_proto.ListInt64S"
      "int32H\000\022=\n\023v_list_int64_sint64\030S \001(\0132\036.f"
      "eature_proto.ListInt64Sint64H\000\022\?\n\024v_list"
      "_int64_fixed32\030T \001(\0132\037.feature_proto.Lis"
      "tInt64Fixed32H\000\022\?\n\024v_list_int64_fixed64\030"
      "U \001(\0132\037.feature_proto.ListInt64Fixed64H\000"
      "\022A\n\025v_list_int64_sfixed32\030V \001(\0132 .featur"
      "e_proto.ListInt64Sfixed32H\000\022A\n\025v_list_in"
      "t64_sfixed64\030W \001(\0132 .feature_proto.ListI"
      "nt64Sfixed64H\000\0229\n\021v_list_int64_bool\030X \001("
      "\0132\034.feature_proto.ListInt64BoolH\000\022=\n\023v_l"
      "ist_int64_string\030Y \001(\0132\036.feature_proto.L"
      "istInt64StringH\000\022;\n\022v_list_int64_bytes\030Z"
      " \001(\0132\035.feature_proto.ListInt64BytesH\000\022\?\n"
      "\024v_list_uint32_double\030[ \001(\0132\037.feature_pr"
      "oto.ListUint32DoubleH\000\022=\n\023v_list_uint32_"
      "float\030\\ \001(\0132\036.feature_proto.ListUint32Fl"
      "oatH\000\022=\n\023v_list_uint32_int32\030] \001(\0132\036.fea"
      "ture_proto.ListUint32Int32H\000\022=\n\023v_list_u"
      "int32_int64\030^ \001(\0132\036.feature_proto.ListUi"
      "nt32Int64H\000\022\?\n\024v_list_uint32_uint32\030_ \001("
      "\0132\037.feature_proto.ListUint32Uint32H\000\022\?\n\024"
      "v_list_uint32_uint64\030` \001(\0132\037.feature_pro"
      "to.ListUint32Uint64H\000\022\?\n\024v_list_uint32_s"
      "int32\030a \001(\0132\037.feature_proto.ListUint32Si"
      "nt32H\000\022\?\n\024v_list_uint32_sint64\030b \001(\0132\037.f"
      "eature_proto.ListUint32Sint64H\000\022A\n\025v_lis"
      "t_uint32_fixed32\030c \001(\0132 .feature_proto.L"
      "istUint32Fixed32H\000\022A\n\025v_list_uint32_fixe"
      "d64\030d \001(\0132 .feature_proto.ListUint32Fixe"
      "d64H\000\022C\n\026v_list_uint32_sfixed32\030e \001(\0132!."
      "feature_proto.ListUint32Sfixed32H\000\022C\n\026v_"
      "list_uint32_sfixed64\030f \001(\0132!.feature_pro"
      "to.ListUint32Sfixed64H\000\022;\n\022v_list_uint32"
      "_bool\030g \001(\0132\035.feature_proto.ListUint32Bo"
      "olH\000\022\?\n\024v_list_uint32_string\030h \001(\0132\037.fea"
      "ture_proto.ListUint32StringH\000\022=\n\023v_list_"
      "uint32_bytes\030i \001(\0132\036.feature_proto.ListU"
      "int32BytesH\000\022\?\n\024v_list_uint64_double\030j \001"
      "(\0132\037.feature_proto.ListUint64DoubleH\000\022=\n"
      "\023v_list_uint64_float\030k \001(\0132\036.feature_pro"
      "to.ListUint64FloatH\000\022=\n\023v_list_uint64_in"
      "t32\030l \001(\0132\036.feature_proto.ListUint64Int3"
      "2H\000\022=\n\023v_list_uint64_int64\030m \001(\0132\036.featu"
      "re_proto.ListUint64Int64H\000\022\?\n\024v_list_uin"
      "t64_uint32\030n \001(\0132\037.feature_proto.ListUin"
      "t64Uint32H\000\022\?\n\024v_list_uint64_uint64\030o \001("
      "\0132\037.feature_proto.ListUint64Uint64H\000\022\?\n\024"
      "v_list_uint64_sint32\030p \001(\0132\037.feature_pro"
      "to.ListUint64Sint32H\000\022\?\n\024v_list_uint64_s"
      "int64\030q \001(\0132\037.feature_proto.ListUint64Si"
      "nt64H\000\022A\n\025v_list_uint64_fixed32\030r \001(\0132 ."
      "feature_proto.ListUint64Fixed32H\000\022A\n\025v_l"
      "ist_uint64_fixed64\030s \001(\0132 .feature_proto"
      ".ListUint64Fixed64H\000\022C\n\026v_list_uint64_sf"
      "ixed32\030t \001(\0132!.feature_proto.ListUint64S"
      "fixed32H\000\022C\n\026v_list_uint64_sfixed64\030u \001("
      "\0132!.feature_proto.ListUint64Sfixed64H\000\022;"
      "\n\022v_list_uint64_bool\030v \001(\0132\035.feature_pro"
      "to.ListUint64BoolH\000\022\?\n\024v_list_uint64_str"
      "ing\030w \001(\0132\037.feature_proto.ListUint64Stri"
      "ngH\000\022=\n\023v_list_uint64_bytes\030x \001(\0132\036.feat"
      "ure_proto.ListUint64BytesH\000\022\?\n\024v_list_si"
      "nt32_double\030y \001(\0132\037.feature_proto.ListSi"
      "nt32DoubleH\000\022=\n\023v_list_sint32_float\030z \001("
      "\0132\036.feature_proto.ListSint32FloatH\000\022=\n\023v"
      "_list_sint32_int32\030{ \001(\0132\036.feature_proto"
      ".ListSint32Int32H\000\022=\n\023v_list_sint32_int6"
      "4\030| \001(\0132\036.feature_proto.ListSint32Int64H"
      "\000\022\?\n\024v_list_sint32_uint32\030} \001(\0132\037.featur"
      "e_proto.ListSint32Uint32H\000\022\?\n\024v_list_sin"
      "t32_uint64\030~ \001(\0132\037.feature_proto.ListSin"
      "t32Uint64H\000\022\?\n\024v_list_sint32_sint32\030\177 \001("
      "\0132\037.feature_proto.ListSint32Sint32H\000\022@\n\024"
      "v_list_sint32_sint64\030\200\001 \001(\0132\037.feature_pr"
      "oto.ListSint32Sint64H\000\022B\n\025v_list_sint32_"
      "fixed32\030\201\001 \001(\0132 .feature_proto.ListSint3"
      "2Fixed32H\000\022B\n\025v_list_sint32_fixed64\030\202\001 \001"
      "(\0132 .feature_proto.ListSint32Fixed64H\000\022D"
      "\n\026v_list_sint32_sfixed32\030\203\001 \001(\0132!.featur"
      "e_proto.ListSint32Sfixed32H\000\022D\n\026v_list_s"
      "int32_sfixed64\030\204\001 \001(\0132!.feature_proto.Li"
      "stSint32Sfixed64H\000\022<\n\022v_list_sint32_bool"
      "\030\205\001 \001(\0132\035.feature_proto.ListSint32BoolH\000"
      "\022@\n\024v_list_sint32_string\030\206\001 \001(\0132\037.featur"
      "e_proto.ListSint32StringH\000\022>\n\023v_list_sin"
      "t32_bytes\030\207\001 \001(\0132\036.feature_proto.ListSin"
      "t32BytesH\000\022@\n\024v_list_sint64_double\030\210\001 \001("
      "\0132\037.feature_proto.ListSint64DoubleH\000\022>\n\023"
      "v_list_sint64_float\030\211\001 \001(\0132\036.feature_pro"
      "to.ListSint64FloatH\000\022>\n\023v_list_sint64_in"
      "t32\030\212\001 \001(\0132\036.feature_proto.ListSint64Int"
      "32H\000\022>\n\023v_list_sint64_int64\030\213\001 \001(\0132\036.fea"
      "ture_proto.ListSint64Int64H\000\022@\n\024v_list_s"
      "int64_uint32\030\214\001 \001(\0132\037.feature_proto.List"
      "Sint64Uint32H\000\022@\n\024v_list_sint64_uint64\030\215"
      "\001 \001(\0132\037.feature_proto.ListSint64Uint64H\000"
      "\022@\n\024v_list_sint64_sint32\030\216\001 \001(\0132\037.featur"
      "e_proto.ListSint64Sint32H\000\022@\n\024v_list_sin"
      "t64_sint64\030\217\001 \001(\0132\037.feature_proto.ListSi"
      "nt64Sint64H\000\022B\n\025v_list_sint64_fixed32\030\220\001"
      " \001(\0132 .feature_proto.ListSint64Fixed32H\000"
      "\022B\n\025v_list_sint64_fixed64\030\221\001 \001(\0132 .featu"
      "re_proto.ListSint64Fixed64H\000\022D\n\026v_list_s"
      "int64_sfixed32\030\222\001 \001(\0132!.feature_proto.Li"
      "stSint64Sfixed32H\000\022D\n\026v_list_sint64_sfix"
      "ed64\030\223\001 \001(\0132!.feature_proto.ListSint64Sf"
      "ixed64H\000\022<\n\022v_list_sint64_bool\030\224\001 \001(\0132\035."
      "feature_proto.ListSint64BoolH\000\022@\n\024v_list"
      "_sint64_string\030\225\001 \001(\0132\037.feature_proto.Li"
      "stSint64StringH\000\022>\n\023v_list_sint64_bytes\030"
      "\226\001 \001(\0132\036.feature_proto.ListSint64BytesH\000"
      "\022B\n\025v_list_fixed32_double\030\227\001 \001(\0132 .featu"
      "re_proto.ListFixed32DoubleH\000\022@\n\024v_list_f"
      "ixed32_float\030\230\001 \001(\0132\037.feature_proto.List"
      "Fixed32FloatH\000\022@\n\024v_list_fixed32_int32\030\231"
      "\001 \001(\0132\037.feature_proto.ListFixed32Int32H\000"
      "\022@\n\024v_list_fixed32_int64\030\232\001 \001(\0132\037.featur"
      "e_proto.ListFixed32Int64H\000\022B\n\025v_list_fix"
      "ed32_uint32\030\233\001 \001(\0132 .feature_proto.ListF"
      "ixed32Uint32H\000\022B\n\025v_list_fixed32_uint64\030"
      "\234\001 \001(\0132 .feature_proto.ListFixed32Uint64"
      "H\000\022B\n\025v_list_fixed32_sint32\030\235\001 \001(\0132 .fea"
      "ture_proto.ListFixed32Sint32H\000\022B\n\025v_list"
      "_fixed32_sint64\030\236\001 \001(\0132 .feature_proto.L"
      "istFixed32Sint64H\000\022D\n\026v_list_fixed32_fix"
      "ed32\030\237\001 \001(\0132!.feature_proto.ListFixed32F"
      "ixed32H\000\022D\n\026v_list_fixed32_fixed64\030\240\001 \001("
      "\0132!.feature_proto.ListFixed32Fixed64H\000\022F"
      "\n\027v_list_fixed32_sfixed32\030\241\001 \001(\0132\".featu"
      "re_proto.ListFixed32Sfixed32H\000\022F\n\027v_list"
      "_fixed32_sfixed64\030\242\001 \001(\0132\".feature_proto"
      ".ListFixed32Sfixed64H\000\022>\n\023v_list_fixed32"
      "_bool\030\243\001 \001(\0132\036.feature_proto.ListFixed32"
      "BoolH\000\022B\n\025v_list_fixed32_string\030\244\001 \001(\0132 "
      ".feature_proto.ListFixed32StringH\000\022@\n\024v_"
      "list_fixed32_bytes\030\245\001 \001(\0132\037.feature_prot"
      "o.ListFixed32BytesH\000\022B\n\025v_list_fixed64_d"
      "ouble\030\246\001 \001(\0132 .feature_proto.ListFixed64"
      "DoubleH\000\022@\n\024v_list_fixed64_float\030\247\001 \001(\0132"
      "\037.feature_proto.ListFixed64FloatH\000\022@\n\024v_"
      "list_fixed64_int32\030\250\001 \001(\0132\037.feature_prot"
      "o.ListFixed64Int32H\000\022@\n\024v_list_fixed64_i"
      "nt64\030\251\001 \001(\0132\037.feature_proto.ListFixed64I"
      "nt64H\000\022B\n\025v_list_fixed64_uint32\030\252\001 \001(\0132 "
      ".feature_proto.ListFixed64Uint32H\000\022B\n\025v_"
      "list_fixed64_uint64\030\253\001 \001(\0132 .feature_pro"
      "to.ListFixed64Uint64H\000\022B\n\025v_list_fixed64"
      "_sint32\030\254\001 \001(\0132 .feature_proto.ListFixed"
      "64Sint32H\000\022B\n\025v_list_fixed64_sint64\030\255\001 \001"
      "(\0132 .feature_proto.ListFixed64Sint64H\000\022D"
      "\n\026v_list_fixed64_fixed32\030\256\001 \001(\0132!.featur"
      "e_proto.ListFixed64Fixed32H\000\022D\n\026v_list_f"
      "ixed64_fixed64\030\257\001 \001(\0132!.feature_proto.Li"
      "stFixed64Fixed64H\000\022F\n\027v_list_fixed64_sfi"
      "xed32\030\260\001 \001(\0132\".feature_proto.ListFixed64"
      "Sfixed32H\000\022F\n\027v_list_fixed64_sfixed64\030\261\001"
      " \001(\0132\".feature_proto.ListFixed64Sfixed64"
      "H\000\022>\n\023v_list_fixed64_bool\030\262\001 \001(\0132\036.featu"
      "re_proto.ListFixed64BoolH\000\022B\n\025v_list_fix"
      "ed64_string\030\263\001 \001(\0132 .feature_proto.ListF"
      "ixed64StringH\000\022@\n\024v_list_fixed64_bytes\030\264"
      "\001 \001(\0132\037.feature_proto.ListFixed64BytesH\000"
      "\022D\n\026v_list_sfixed32_double\030\265\001 \001(\0132!.feat"
      "ure_proto.ListSfixed32DoubleH\000\022B\n\025v_list"
      "_sfixed32_float\030\266\001 \001(\0132 .feature_proto.L"
      "istSfixed32FloatH\000\022B\n\025v_list_sfixed32_in"
      "t32\030\267\001 \001(\0132 .feature_proto.ListSfixed32I"
      "nt32H\000\022B\n\025v_list_sfixed32_int64\030\270\001 \001(\0132 "
      ".feature_proto.ListSfixed32Int64H\000\022D\n\026v_"
      "list_sfixed32_uint32\030\271\001 \001(\0132!.feature_pr"
      "oto.ListSfixed32Uint32H\000\022D\n\026v_list_sfixe"
      "d32_uint64\030\272\001 \001(\0132!.feature_proto.ListSf"
      "ixed32Uint64H\000\022D\n\026v_list_sfixed32_sint32"
      "\030\273\001 \001(\0132!.feature_proto.ListSfixed32Sint"
      "32H\000\022D\n\026v_list_sfixed32_sint64\030\274\001 \001(\0132!."
      "feature_proto.ListSfixed32Sint64H\000\022F\n\027v_"
      "list_sfixed32_fixed32\030\275\001 \001(\0132\".feature_p"
      "roto.ListSfixed32Fixed32H\000\022F\n\027v_list_sfi"
      "xed32_fixed64\030\276\001 \001(\0132\".feature_proto.Lis"
      "tSfixed32Fixed64H\000\022H\n\030v_list_sfixed32_sf"
      "ixed32\030\277\001 \001(\0132#.feature_proto.ListSfixed"
      "32Sfixed32H\000\022H\n\030v_list_sfixed32_sfixed64"
      "\030\300\001 \001(\0132#.feature_proto.ListSfixed32Sfix"
      "ed64H\000\022@\n\024v_list_sfixed32_bool\030\301\001 \001(\0132\037."
      "feature_proto.ListSfixed32BoolH\000\022D\n\026v_li"
      "st_sfixed32_string\030\302\001 \001(\0132!.feature_prot"
      "o.ListSfixed32StringH\000\022B\n\025v_list_sfixed3"
      "2_bytes\030\303\001 \001(\0132 .feature_proto.ListSfixe"
      "d32BytesH\000\022D\n\026v_list_sfixed64_double\030\304\001 "
      "\001(\0132!.feature_proto.ListSfixed64DoubleH\000"
      "\022B\n\025v_list_sfixed64_float\030\305\001 \001(\0132 .featu"
      "re_proto.ListSfixed64FloatH\000\022B\n\025v_list_s"
      "fixed64_int32\030\306\001 \001(\0132 .feature_proto.Lis"
      "tSfixed64Int32H\000\022B\n\025v_list_sfixed64_int6"
      "4\030\307\001 \001(\0132 .feature_proto.ListSfixed64Int"
      "64H\000\022D\n\026v_list_sfixed64_uint32\030\310\001 \001(\0132!."
      "feature_proto.ListSfixed64Uint32H\000\022D\n\026v_"
      "list_sfixed64_uint64\030\311\001 \001(\0132!.feature_pr"
      "oto.ListSfixed64Uint64H\000\022D\n\026v_list_sfixe"
      "d64_sint32\030\312\001 \001(\0132!.feature_proto.ListSf"
      "ixed64Sint32H\000\022D\n\026v_list_sfixed64_sint64"
      "\030\313\001 \001(\0132!.feature_proto.ListSfixed64Sint"
      "64H\000\022F\n\027v_list_sfixed64_fixed32\030\314\001 \001(\0132\""
      ".feature_proto.ListSfixed64Fixed32H\000\022F\n\027"
      "v_list_sfixed64_fixed64\030\315\001 \001(\0132\".feature"
      "_proto.ListSfixed64Fixed64H\000\022H\n\030v_list_s"
      "fixed64_sfixed32\030\316\001 \001(\0132#.feature_proto."
      "ListSfixed64Sfixed32H\000\022H\n\030v_list_sfixed6"
      "4_sfixed64\030\317\001 \001(\0132#.feature_proto.ListSf"
      "ixed64Sfixed64H\000\022@\n\024v_list_sfixed64_bool"
      "\030\320\001 \001(\0132\037.feature_proto.ListSfixed64Bool"
      "H\000\022D\n\026v_list_sfixed64_string\030\321\001 \001(\0132!.fe"
      "ature_proto.ListSfixed64StringH\000\022B\n\025v_li"
      "st_sfixed64_bytes\030\322\001 \001(\0132 .feature_proto"
      ".ListSfixed64BytesH\000\022@\n\024v_list_double_do"
      "uble\030\323\001 \001(\0132\037.feature_proto.ListDoubleDo"
      "ubleH\000\022>\n\023v_list_double_float\030\324\001 \001(\0132\036.f"
      "eature_proto.ListDoubleFloatH\000\022>\n\023v_list"
      "_double_int32\030\325\001 \001(\0132\036.feature_proto.Lis"
      "tDoubleInt32H\000\022>\n\023v_list_double_int64\030\326\001"
      " \001(\0132\036.feature_proto.ListDoubleInt64H\000\022@"
      "\n\024v_list_double_uint32\030\327\001 \001(\0132\037.feature_"
      "proto.ListDoubleUint32H\000\022@\n\024v_list_doubl"
      "e_uint64\030\330\001 \001(\0132\037.feature_proto.ListDoub"
      "leUint64H\000\022@\n\024v_list_double_sint32\030\331\001 \001("
      "\0132\037.feature_proto.ListDoubleSint32H\000\022@\n\024"
      "v_list_double_sint64\030\332\001 \001(\0132\037.feature_pr"
      "oto.ListDoubleSint64H\000\022B\n\025v_list_double_"
      "fixed32\030\333\001 \001(\0132 .feature_proto.ListDoubl"
      "eFixed32H\000\022B\n\025v_list_double_fixed64\030\334\001 \001"
      "(\0132 .feature_proto.ListDoubleFixed64H\000\022D"
      "\n\026v_list_double_sfixed32\030\335\001 \001(\0132!.featur"
      "e_proto.ListDoubleSfixed32H\000\022D\n\026v_list_d"
      "ouble_sfixed64\030\336\001 \001(\0132!.feature_proto.Li"
      "stDoubleSfixed64H\000\022<\n\022v_list_double_bool"
      "\030\337\001 \001(\0132\035.feature_proto.ListDoubleBoolH\000"
      "\022@\n\024v_list_double_string\030\340\001 \001(\0132\037.featur"
      "e_proto.ListDoubleStringH\000\022>\n\023v_list_dou"
      "ble_bytes\030\341\001 \001(\0132\036.feature_proto.ListDou"
      "bleBytesH\000\022>\n\023v_list_float_double\030\342\001 \001(\013"
      "2\036.feature_proto.ListFloatDoubleH\000\022<\n\022v_"
      "list_float_float\030\343\001 \001(\0132\035.feature_proto."
      "ListFloatFloatH\000\022<\n\022v_list_float_int32\030\344"
      "\001 \001(\0132\035.feature_proto.ListFloatInt32H\000\022<"
      "\n\022v_list_float_int64\030\345\001 \001(\0132\035.feature_pr"
      "oto.ListFloatInt64H\000\022>\n\023v_list_float_uin"
      "t32\030\346\001 \001(\0132\036.feature_proto.ListFloatUint"
      "32H\000\022>\n\023v_list_float_uint64\030\347\001 \001(\0132\036.fea"
      "ture_proto.ListFloatUint64H\000\022>\n\023v_list_f"
      "loat_sint32\030\350\001 \001(\0132\036.feature_proto.ListF"
      "loatSint32H\000\022>\n\023v_list_float_sint64\030\351\001 \001"
      "(\0132\036.feature_proto.ListFloatSint64H\000\022@\n\024"
      "v_list_float_fixed32\030\352\001 \001(\0132\037.feature_pr"
      "oto.ListFloatFixed32H\000\022@\n\024v_list_float_f"
      "ixed64\030\353\001 \001(\0132\037.feature_proto.ListFloatF"
      "ixed64H\000\022B\n\025v_list_float_sfixed32\030\354\001 \001(\013"
      "2 .feature_proto.ListFloatSfixed32H\000\022B\n\025"
      "v_list_float_sfixed64\030\355\001 \001(\0132 .feature_p"
      "roto.ListFloatSfixed64H\000\022:\n\021v_list_float"
      "_bool\030\356\001 \001(\0132\034.feature_proto.ListFloatBo"
      "olH\000\022>\n\023v_list_float_string\030\357\001 \001(\0132\036.fea"
      "ture_proto.ListFloatStringH\000\022<\n\022v_list_f"
      "loat_bytes\030\360\001 \001(\0132\035.feature_proto.ListFl"
      "oatBytesH\000\022<\n\022v_list_bool_double\030\361\001 \001(\0132"
      "\035.feature_proto.ListBoolDoubleH\000\022:\n\021v_li"
      "st_bool_float\030\362\001 \001(\0132\034.feature_proto.Lis"
      "tBoolFloatH\000\022:\n\021v_list_bool_int32\030\363\001 \001(\013"
      "2\034.feature_proto.ListBoolInt32H\000\022:\n\021v_li"
      "st_bool_int64\030\364\001 \001(\0132\034.feature_proto.Lis"
      "tBoolInt64H\000\022<\n\022v_list_bool_uint32\030\365\001 \001("
      "\0132\035.feature_proto.ListBoolUint32H\000\022<\n\022v_"
      "list_bool_uint64\030\366\001 \001(\0132\035.feature_proto."
      "ListBoolUint64H\000\022<\n\022v_list_bool_sint32\030\367"
      "\001 \001(\0132\035.feature_proto.ListBoolSint32H\000\022<"
      "\n\022v_list_bool_sint64\030\370\001 \001(\0132\035.feature_pr"
      "oto.ListBoolSint64H\000\022>\n\023v_list_bool_fixe"
      "d32\030\371\001 \001(\0132\036.feature_proto.ListBoolFixed"
      "32H\000\022>\n\023v_list_bool_fixed64\030\372\001 \001(\0132\036.fea"
      "ture_proto.ListBoolFixed64H\000\022@\n\024v_list_b"
      "ool_sfixed32\030\373\001 \001(\0132\037.feature_proto.List"
      "BoolSfixed32H\000\022@\n\024v_list_bool_sfixed64\030\374"
      "\001 \001(\0132\037.feature_proto.ListBoolSfixed64H\000"
      "\0228\n\020v_list_bool_bool\030\375\001 \001(\0132\033.feature_pr"
      "oto.ListBoolBoolH\000\022<\n\022v_list_bool_string"
      "\030\376\001 \001(\0132\035.feature_proto.ListBoolStringH\000"
      "\022:\n\021v_list_bool_bytes\030\377\001 \001(\0132\034.feature_p"
      "roto.ListBoolBytesH\000B\006\n\004kind\"-\n\010Features"
      "\022!\n\001f\030\001 \003(\0132\026.feature_proto.Feature\"}\n\013F"
      "eaturesMap\022,\n\001f\030\001 \003(\0132!.feature_proto.Fe"
      "aturesMap.FEntry\032@\n\006FEntry\022\013\n\003key\030\001 \001(\005\022"
      "%\n\005value\030\002 \001(\0132\026.feature_proto.Feature:\002"
      "8\001\"<\n\014FeaturesList\022,\n\010features\030\001 \003(\0132\032.f"
      "eature_proto.FeaturesMapb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 25952);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "feature.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_feature_2eproto
namespace feature_proto {

// ===================================================================

void ListDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDouble::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDouble::ListDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDouble)
}
ListDouble::ListDouble(const ListDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDouble)
}

void ListDouble::SharedCtor() {
}

ListDouble::~ListDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDouble)
  SharedDtor();
}

void ListDouble::SharedDtor() {
}

void ListDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDouble& ListDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDouble.base);
  return *internal_default_instance();
}


void ListDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDouble)
  return false;
#undef DO_
}

void ListDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDouble)
}

::google::protobuf::uint8* ListDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDouble)
  return target;
}

size_t ListDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDouble)
    MergeFrom(*source);
  }
}

void ListDouble::MergeFrom(const ListDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDouble::CopyFrom(const ListDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDouble::IsInitialized() const {
  return true;
}

void ListDouble::Swap(ListDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDouble::InternalSwap(ListDouble* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloat::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloat::ListFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloat)
}
ListFloat::ListFloat(const ListFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloat)
}

void ListFloat::SharedCtor() {
}

ListFloat::~ListFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloat)
  SharedDtor();
}

void ListFloat::SharedDtor() {
}

void ListFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloat& ListFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloat.base);
  return *internal_default_instance();
}


void ListFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloat)
  return false;
#undef DO_
}

void ListFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloat)
}

::google::protobuf::uint8* ListFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloat)
  return target;
}

size_t ListFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloat)
    MergeFrom(*source);
  }
}

void ListFloat::MergeFrom(const ListFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloat::CopyFrom(const ListFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloat::IsInitialized() const {
  return true;
}

void ListFloat::Swap(ListFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloat::InternalSwap(ListFloat* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32::ListInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32)
}
ListInt32::ListInt32(const ListInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32)
}

void ListInt32::SharedCtor() {
}

ListInt32::~ListInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32)
  SharedDtor();
}

void ListInt32::SharedDtor() {
}

void ListInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32& ListInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32.base);
  return *internal_default_instance();
}


void ListInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32)
  return false;
#undef DO_
}

void ListInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32)
}

::google::protobuf::uint8* ListInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32)
  return target;
}

size_t ListInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32)
    MergeFrom(*source);
  }
}

void ListInt32::MergeFrom(const ListInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32::CopyFrom(const ListInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32::IsInitialized() const {
  return true;
}

void ListInt32::Swap(ListInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32::InternalSwap(ListInt32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64::ListInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64)
}
ListInt64::ListInt64(const ListInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64)
}

void ListInt64::SharedCtor() {
}

ListInt64::~ListInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64)
  SharedDtor();
}

void ListInt64::SharedDtor() {
}

void ListInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64& ListInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64.base);
  return *internal_default_instance();
}


void ListInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64)
  return false;
#undef DO_
}

void ListInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64)
}

::google::protobuf::uint8* ListInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64)
  return target;
}

size_t ListInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64)
    MergeFrom(*source);
  }
}

void ListInt64::MergeFrom(const ListInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64::CopyFrom(const ListInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64::IsInitialized() const {
  return true;
}

void ListInt64::Swap(ListInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64::InternalSwap(ListInt64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32::ListUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32)
}
ListUint32::ListUint32(const ListUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32)
}

void ListUint32::SharedCtor() {
}

ListUint32::~ListUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32)
  SharedDtor();
}

void ListUint32::SharedDtor() {
}

void ListUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32& ListUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32.base);
  return *internal_default_instance();
}


void ListUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32)
  return false;
#undef DO_
}

void ListUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32)
}

::google::protobuf::uint8* ListUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32)
  return target;
}

size_t ListUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32)
    MergeFrom(*source);
  }
}

void ListUint32::MergeFrom(const ListUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32::CopyFrom(const ListUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32::IsInitialized() const {
  return true;
}

void ListUint32::Swap(ListUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32::InternalSwap(ListUint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64::ListUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64)
}
ListUint64::ListUint64(const ListUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64)
}

void ListUint64::SharedCtor() {
}

ListUint64::~ListUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64)
  SharedDtor();
}

void ListUint64::SharedDtor() {
}

void ListUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64& ListUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64.base);
  return *internal_default_instance();
}


void ListUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64)
  return false;
#undef DO_
}

void ListUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64)
}

::google::protobuf::uint8* ListUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64)
  return target;
}

size_t ListUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64)
    MergeFrom(*source);
  }
}

void ListUint64::MergeFrom(const ListUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64::CopyFrom(const ListUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64::IsInitialized() const {
  return true;
}

void ListUint64::Swap(ListUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64::InternalSwap(ListUint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32::ListSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32)
}
ListSint32::ListSint32(const ListSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32)
}

void ListSint32::SharedCtor() {
}

ListSint32::~ListSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32)
  SharedDtor();
}

void ListSint32::SharedDtor() {
}

void ListSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32& ListSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32.base);
  return *internal_default_instance();
}


void ListSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32)
  return false;
#undef DO_
}

void ListSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32)
}

::google::protobuf::uint8* ListSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32)
  return target;
}

size_t ListSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32)
    MergeFrom(*source);
  }
}

void ListSint32::MergeFrom(const ListSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32::CopyFrom(const ListSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32::IsInitialized() const {
  return true;
}

void ListSint32::Swap(ListSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32::InternalSwap(ListSint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64::ListSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64)
}
ListSint64::ListSint64(const ListSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64)
}

void ListSint64::SharedCtor() {
}

ListSint64::~ListSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64)
  SharedDtor();
}

void ListSint64::SharedDtor() {
}

void ListSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64& ListSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64.base);
  return *internal_default_instance();
}


void ListSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64)
  return false;
#undef DO_
}

void ListSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64)
}

::google::protobuf::uint8* ListSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64)
  return target;
}

size_t ListSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64)
    MergeFrom(*source);
  }
}

void ListSint64::MergeFrom(const ListSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64::CopyFrom(const ListSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64::IsInitialized() const {
  return true;
}

void ListSint64::Swap(ListSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64::InternalSwap(ListSint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32::ListFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32)
}
ListFixed32::ListFixed32(const ListFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32)
}

void ListFixed32::SharedCtor() {
}

ListFixed32::~ListFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32)
  SharedDtor();
}

void ListFixed32::SharedDtor() {
}

void ListFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32& ListFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32.base);
  return *internal_default_instance();
}


void ListFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32)
  return false;
#undef DO_
}

void ListFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32)
}

::google::protobuf::uint8* ListFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32)
  return target;
}

size_t ListFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32)
    MergeFrom(*source);
  }
}

void ListFixed32::MergeFrom(const ListFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32::CopyFrom(const ListFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32::IsInitialized() const {
  return true;
}

void ListFixed32::Swap(ListFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32::InternalSwap(ListFixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64::ListFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64)
}
ListFixed64::ListFixed64(const ListFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64)
}

void ListFixed64::SharedCtor() {
}

ListFixed64::~ListFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64)
  SharedDtor();
}

void ListFixed64::SharedDtor() {
}

void ListFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64& ListFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64.base);
  return *internal_default_instance();
}


void ListFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64)
  return false;
#undef DO_
}

void ListFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64)
}

::google::protobuf::uint8* ListFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64)
  return target;
}

size_t ListFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64)
    MergeFrom(*source);
  }
}

void ListFixed64::MergeFrom(const ListFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64::CopyFrom(const ListFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64::IsInitialized() const {
  return true;
}

void ListFixed64::Swap(ListFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64::InternalSwap(ListFixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32::ListSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32)
}
ListSfixed32::ListSfixed32(const ListSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32)
}

void ListSfixed32::SharedCtor() {
}

ListSfixed32::~ListSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32)
  SharedDtor();
}

void ListSfixed32::SharedDtor() {
}

void ListSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32& ListSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32.base);
  return *internal_default_instance();
}


void ListSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32)
  return false;
#undef DO_
}

void ListSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32)
}

::google::protobuf::uint8* ListSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32)
  return target;
}

size_t ListSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32)
    MergeFrom(*source);
  }
}

void ListSfixed32::MergeFrom(const ListSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32::CopyFrom(const ListSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32::IsInitialized() const {
  return true;
}

void ListSfixed32::Swap(ListSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32::InternalSwap(ListSfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64::ListSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64)
}
ListSfixed64::ListSfixed64(const ListSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64)
}

void ListSfixed64::SharedCtor() {
}

ListSfixed64::~ListSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64)
  SharedDtor();
}

void ListSfixed64::SharedDtor() {
}

void ListSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64& ListSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64.base);
  return *internal_default_instance();
}


void ListSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64)
  return false;
#undef DO_
}

void ListSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64)
}

::google::protobuf::uint8* ListSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64)
  return target;
}

size_t ListSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64)
    MergeFrom(*source);
  }
}

void ListSfixed64::MergeFrom(const ListSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64::CopyFrom(const ListSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64::IsInitialized() const {
  return true;
}

void ListSfixed64::Swap(ListSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64::InternalSwap(ListSfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBool::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBool::ListBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBool)
}
ListBool::ListBool(const ListBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBool)
}

void ListBool::SharedCtor() {
}

ListBool::~ListBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBool)
  SharedDtor();
}

void ListBool::SharedDtor() {
}

void ListBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBool& ListBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBool.base);
  return *internal_default_instance();
}


void ListBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBool)
  return false;
#undef DO_
}

void ListBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBool)
}

::google::protobuf::uint8* ListBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBool)
  return target;
}

size_t ListBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBool)
    MergeFrom(*source);
  }
}

void ListBool::MergeFrom(const ListBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBool::CopyFrom(const ListBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBool::IsInitialized() const {
  return true;
}

void ListBool::Swap(ListBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBool::InternalSwap(ListBool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListString::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListString::ListString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListString)
}
ListString::ListString(const ListString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListString)
}

void ListString::SharedCtor() {
}

ListString::~ListString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListString)
  SharedDtor();
}

void ListString::SharedDtor() {
}

void ListString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListString& ListString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListString.base);
  return *internal_default_instance();
}


void ListString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListString.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListString)
  return false;
#undef DO_
}

void ListString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListString.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListString)
}

::google::protobuf::uint8* ListString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListString.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListString)
  return target;
}

size_t ListString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListString)
    MergeFrom(*source);
  }
}

void ListString::MergeFrom(const ListString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListString::CopyFrom(const ListString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListString::IsInitialized() const {
  return true;
}

void ListString::Swap(ListString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListString::InternalSwap(ListString* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytes::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytes::ListBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytes)
}
ListBytes::ListBytes(const ListBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytes)
}

void ListBytes::SharedCtor() {
}

ListBytes::~ListBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytes)
  SharedDtor();
}

void ListBytes::SharedDtor() {
}

void ListBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytes& ListBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytes.base);
  return *internal_default_instance();
}


void ListBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytes)
  return false;
#undef DO_
}

void ListBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytes)
}

::google::protobuf::uint8* ListBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytes)
  return target;
}

size_t ListBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytes)
    MergeFrom(*source);
  }
}

void ListBytes::MergeFrom(const ListBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void ListBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytes::CopyFrom(const ListBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytes::IsInitialized() const {
  return true;
}

void ListBytes::Swap(ListBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytes::InternalSwap(ListBytes* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringDouble::kKFieldNumber;
const int ListStringDouble::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringDouble::ListStringDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringDouble)
}
ListStringDouble::ListStringDouble(const ListStringDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringDouble)
}

void ListStringDouble::SharedCtor() {
}

ListStringDouble::~ListStringDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringDouble)
  SharedDtor();
}

void ListStringDouble::SharedDtor() {
}

void ListStringDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringDouble& ListStringDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringDouble.base);
  return *internal_default_instance();
}


void ListStringDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringDouble.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringDouble)
  return false;
#undef DO_
}

void ListStringDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringDouble.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringDouble)
}

::google::protobuf::uint8* ListStringDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringDouble.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringDouble)
  return target;
}

size_t ListStringDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringDouble)
    MergeFrom(*source);
  }
}

void ListStringDouble::MergeFrom(const ListStringDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringDouble::CopyFrom(const ListStringDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringDouble::IsInitialized() const {
  return true;
}

void ListStringDouble::Swap(ListStringDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringDouble::InternalSwap(ListStringDouble* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringFloat::kKFieldNumber;
const int ListStringFloat::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringFloat::ListStringFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringFloat)
}
ListStringFloat::ListStringFloat(const ListStringFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringFloat)
}

void ListStringFloat::SharedCtor() {
}

ListStringFloat::~ListStringFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringFloat)
  SharedDtor();
}

void ListStringFloat::SharedDtor() {
}

void ListStringFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringFloat& ListStringFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringFloat.base);
  return *internal_default_instance();
}


void ListStringFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringFloat.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringFloat)
  return false;
#undef DO_
}

void ListStringFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFloat.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringFloat)
}

::google::protobuf::uint8* ListStringFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFloat.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringFloat)
  return target;
}

size_t ListStringFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringFloat)
    MergeFrom(*source);
  }
}

void ListStringFloat::MergeFrom(const ListStringFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringFloat::CopyFrom(const ListStringFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringFloat::IsInitialized() const {
  return true;
}

void ListStringFloat::Swap(ListStringFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringFloat::InternalSwap(ListStringFloat* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringInt32::kKFieldNumber;
const int ListStringInt32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringInt32::ListStringInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringInt32)
}
ListStringInt32::ListStringInt32(const ListStringInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringInt32)
}

void ListStringInt32::SharedCtor() {
}

ListStringInt32::~ListStringInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringInt32)
  SharedDtor();
}

void ListStringInt32::SharedDtor() {
}

void ListStringInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringInt32& ListStringInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringInt32.base);
  return *internal_default_instance();
}


void ListStringInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringInt32.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringInt32)
  return false;
#undef DO_
}

void ListStringInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringInt32.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringInt32)
}

::google::protobuf::uint8* ListStringInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringInt32.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringInt32)
  return target;
}

size_t ListStringInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringInt32)
    MergeFrom(*source);
  }
}

void ListStringInt32::MergeFrom(const ListStringInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringInt32::CopyFrom(const ListStringInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringInt32::IsInitialized() const {
  return true;
}

void ListStringInt32::Swap(ListStringInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringInt32::InternalSwap(ListStringInt32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringInt64::kKFieldNumber;
const int ListStringInt64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringInt64::ListStringInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringInt64)
}
ListStringInt64::ListStringInt64(const ListStringInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringInt64)
}

void ListStringInt64::SharedCtor() {
}

ListStringInt64::~ListStringInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringInt64)
  SharedDtor();
}

void ListStringInt64::SharedDtor() {
}

void ListStringInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringInt64& ListStringInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringInt64.base);
  return *internal_default_instance();
}


void ListStringInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringInt64.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringInt64)
  return false;
#undef DO_
}

void ListStringInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringInt64.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringInt64)
}

::google::protobuf::uint8* ListStringInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringInt64.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringInt64)
  return target;
}

size_t ListStringInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringInt64)
    MergeFrom(*source);
  }
}

void ListStringInt64::MergeFrom(const ListStringInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringInt64::CopyFrom(const ListStringInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringInt64::IsInitialized() const {
  return true;
}

void ListStringInt64::Swap(ListStringInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringInt64::InternalSwap(ListStringInt64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringUint32::kKFieldNumber;
const int ListStringUint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringUint32::ListStringUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringUint32)
}
ListStringUint32::ListStringUint32(const ListStringUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringUint32)
}

void ListStringUint32::SharedCtor() {
}

ListStringUint32::~ListStringUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringUint32)
  SharedDtor();
}

void ListStringUint32::SharedDtor() {
}

void ListStringUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringUint32& ListStringUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringUint32.base);
  return *internal_default_instance();
}


void ListStringUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringUint32.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringUint32)
  return false;
#undef DO_
}

void ListStringUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringUint32.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringUint32)
}

::google::protobuf::uint8* ListStringUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringUint32.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringUint32)
  return target;
}

size_t ListStringUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringUint32)
    MergeFrom(*source);
  }
}

void ListStringUint32::MergeFrom(const ListStringUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringUint32::CopyFrom(const ListStringUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringUint32::IsInitialized() const {
  return true;
}

void ListStringUint32::Swap(ListStringUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringUint32::InternalSwap(ListStringUint32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringUint64::kKFieldNumber;
const int ListStringUint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringUint64::ListStringUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringUint64)
}
ListStringUint64::ListStringUint64(const ListStringUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringUint64)
}

void ListStringUint64::SharedCtor() {
}

ListStringUint64::~ListStringUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringUint64)
  SharedDtor();
}

void ListStringUint64::SharedDtor() {
}

void ListStringUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringUint64& ListStringUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringUint64.base);
  return *internal_default_instance();
}


void ListStringUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringUint64.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringUint64)
  return false;
#undef DO_
}

void ListStringUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringUint64.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringUint64)
}

::google::protobuf::uint8* ListStringUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringUint64.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringUint64)
  return target;
}

size_t ListStringUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringUint64)
    MergeFrom(*source);
  }
}

void ListStringUint64::MergeFrom(const ListStringUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringUint64::CopyFrom(const ListStringUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringUint64::IsInitialized() const {
  return true;
}

void ListStringUint64::Swap(ListStringUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringUint64::InternalSwap(ListStringUint64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringSint32::kKFieldNumber;
const int ListStringSint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringSint32::ListStringSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringSint32)
}
ListStringSint32::ListStringSint32(const ListStringSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringSint32)
}

void ListStringSint32::SharedCtor() {
}

ListStringSint32::~ListStringSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringSint32)
  SharedDtor();
}

void ListStringSint32::SharedDtor() {
}

void ListStringSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringSint32& ListStringSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringSint32.base);
  return *internal_default_instance();
}


void ListStringSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringSint32.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringSint32)
  return false;
#undef DO_
}

void ListStringSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSint32.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringSint32)
}

::google::protobuf::uint8* ListStringSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSint32.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringSint32)
  return target;
}

size_t ListStringSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringSint32)
    MergeFrom(*source);
  }
}

void ListStringSint32::MergeFrom(const ListStringSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringSint32::CopyFrom(const ListStringSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringSint32::IsInitialized() const {
  return true;
}

void ListStringSint32::Swap(ListStringSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringSint32::InternalSwap(ListStringSint32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringSint64::kKFieldNumber;
const int ListStringSint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringSint64::ListStringSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringSint64)
}
ListStringSint64::ListStringSint64(const ListStringSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringSint64)
}

void ListStringSint64::SharedCtor() {
}

ListStringSint64::~ListStringSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringSint64)
  SharedDtor();
}

void ListStringSint64::SharedDtor() {
}

void ListStringSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringSint64& ListStringSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringSint64.base);
  return *internal_default_instance();
}


void ListStringSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringSint64.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringSint64)
  return false;
#undef DO_
}

void ListStringSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSint64.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringSint64)
}

::google::protobuf::uint8* ListStringSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSint64.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringSint64)
  return target;
}

size_t ListStringSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringSint64)
    MergeFrom(*source);
  }
}

void ListStringSint64::MergeFrom(const ListStringSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringSint64::CopyFrom(const ListStringSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringSint64::IsInitialized() const {
  return true;
}

void ListStringSint64::Swap(ListStringSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringSint64::InternalSwap(ListStringSint64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringFixed32::kKFieldNumber;
const int ListStringFixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringFixed32::ListStringFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringFixed32)
}
ListStringFixed32::ListStringFixed32(const ListStringFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringFixed32)
}

void ListStringFixed32::SharedCtor() {
}

ListStringFixed32::~ListStringFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringFixed32)
  SharedDtor();
}

void ListStringFixed32::SharedDtor() {
}

void ListStringFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringFixed32& ListStringFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringFixed32.base);
  return *internal_default_instance();
}


void ListStringFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringFixed32.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringFixed32)
  return false;
#undef DO_
}

void ListStringFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFixed32.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringFixed32)
}

::google::protobuf::uint8* ListStringFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFixed32.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringFixed32)
  return target;
}

size_t ListStringFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringFixed32)
    MergeFrom(*source);
  }
}

void ListStringFixed32::MergeFrom(const ListStringFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringFixed32::CopyFrom(const ListStringFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringFixed32::IsInitialized() const {
  return true;
}

void ListStringFixed32::Swap(ListStringFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringFixed32::InternalSwap(ListStringFixed32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringFixed64::kKFieldNumber;
const int ListStringFixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringFixed64::ListStringFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringFixed64)
}
ListStringFixed64::ListStringFixed64(const ListStringFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringFixed64)
}

void ListStringFixed64::SharedCtor() {
}

ListStringFixed64::~ListStringFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringFixed64)
  SharedDtor();
}

void ListStringFixed64::SharedDtor() {
}

void ListStringFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringFixed64& ListStringFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringFixed64.base);
  return *internal_default_instance();
}


void ListStringFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringFixed64.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringFixed64)
  return false;
#undef DO_
}

void ListStringFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFixed64.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringFixed64)
}

::google::protobuf::uint8* ListStringFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringFixed64.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringFixed64)
  return target;
}

size_t ListStringFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringFixed64)
    MergeFrom(*source);
  }
}

void ListStringFixed64::MergeFrom(const ListStringFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringFixed64::CopyFrom(const ListStringFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringFixed64::IsInitialized() const {
  return true;
}

void ListStringFixed64::Swap(ListStringFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringFixed64::InternalSwap(ListStringFixed64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringSfixed32::kKFieldNumber;
const int ListStringSfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringSfixed32::ListStringSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringSfixed32)
}
ListStringSfixed32::ListStringSfixed32(const ListStringSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringSfixed32)
}

void ListStringSfixed32::SharedCtor() {
}

ListStringSfixed32::~ListStringSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringSfixed32)
  SharedDtor();
}

void ListStringSfixed32::SharedDtor() {
}

void ListStringSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringSfixed32& ListStringSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringSfixed32.base);
  return *internal_default_instance();
}


void ListStringSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringSfixed32.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringSfixed32)
  return false;
#undef DO_
}

void ListStringSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSfixed32.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringSfixed32)
}

::google::protobuf::uint8* ListStringSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSfixed32.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringSfixed32)
  return target;
}

size_t ListStringSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringSfixed32)
    MergeFrom(*source);
  }
}

void ListStringSfixed32::MergeFrom(const ListStringSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringSfixed32::CopyFrom(const ListStringSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringSfixed32::IsInitialized() const {
  return true;
}

void ListStringSfixed32::Swap(ListStringSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringSfixed32::InternalSwap(ListStringSfixed32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringSfixed64::kKFieldNumber;
const int ListStringSfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringSfixed64::ListStringSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringSfixed64)
}
ListStringSfixed64::ListStringSfixed64(const ListStringSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringSfixed64)
}

void ListStringSfixed64::SharedCtor() {
}

ListStringSfixed64::~ListStringSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringSfixed64)
  SharedDtor();
}

void ListStringSfixed64::SharedDtor() {
}

void ListStringSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringSfixed64& ListStringSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringSfixed64.base);
  return *internal_default_instance();
}


void ListStringSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringSfixed64.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringSfixed64)
  return false;
#undef DO_
}

void ListStringSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSfixed64.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringSfixed64)
}

::google::protobuf::uint8* ListStringSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringSfixed64.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringSfixed64)
  return target;
}

size_t ListStringSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringSfixed64)
    MergeFrom(*source);
  }
}

void ListStringSfixed64::MergeFrom(const ListStringSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringSfixed64::CopyFrom(const ListStringSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringSfixed64::IsInitialized() const {
  return true;
}

void ListStringSfixed64::Swap(ListStringSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringSfixed64::InternalSwap(ListStringSfixed64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringBool::kKFieldNumber;
const int ListStringBool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringBool::ListStringBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringBool)
}
ListStringBool::ListStringBool(const ListStringBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringBool)
}

void ListStringBool::SharedCtor() {
}

ListStringBool::~ListStringBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringBool)
  SharedDtor();
}

void ListStringBool::SharedDtor() {
}

void ListStringBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringBool& ListStringBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringBool.base);
  return *internal_default_instance();
}


void ListStringBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringBool.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringBool)
  return false;
#undef DO_
}

void ListStringBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringBool.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringBool)
}

::google::protobuf::uint8* ListStringBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringBool.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringBool)
  return target;
}

size_t ListStringBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringBool)
    MergeFrom(*source);
  }
}

void ListStringBool::MergeFrom(const ListStringBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringBool::CopyFrom(const ListStringBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringBool::IsInitialized() const {
  return true;
}

void ListStringBool::Swap(ListStringBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringBool::InternalSwap(ListStringBool* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringString::kKFieldNumber;
const int ListStringString::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringString::ListStringString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringString)
}
ListStringString::ListStringString(const ListStringString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringString)
}

void ListStringString::SharedCtor() {
}

ListStringString::~ListStringString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringString)
  SharedDtor();
}

void ListStringString::SharedDtor() {
}

void ListStringString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringString& ListStringString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringString.base);
  return *internal_default_instance();
}


void ListStringString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringString.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringString.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringString)
  return false;
#undef DO_
}

void ListStringString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringString.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringString.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringString)
}

::google::protobuf::uint8* ListStringString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringString.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringString.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringString)
  return target;
}

size_t ListStringString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringString)
    MergeFrom(*source);
  }
}

void ListStringString::MergeFrom(const ListStringString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringString::CopyFrom(const ListStringString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringString::IsInitialized() const {
  return true;
}

void ListStringString::Swap(ListStringString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringString::InternalSwap(ListStringString* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListStringBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListStringBytes::kKFieldNumber;
const int ListStringBytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListStringBytes::ListStringBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListStringBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListStringBytes)
}
ListStringBytes::ListStringBytes(const ListStringBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListStringBytes)
}

void ListStringBytes::SharedCtor() {
}

ListStringBytes::~ListStringBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListStringBytes)
  SharedDtor();
}

void ListStringBytes::SharedDtor() {
}

void ListStringBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListStringBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListStringBytes& ListStringBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListStringBytes.base);
  return *internal_default_instance();
}


void ListStringBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListStringBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListStringBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListStringBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListStringBytes.k"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListStringBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListStringBytes)
  return false;
#undef DO_
}

void ListStringBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListStringBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringBytes.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListStringBytes)
}

::google::protobuf::uint8* ListStringBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListStringBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListStringBytes.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->k(i), target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListStringBytes)
  return target;
}

size_t ListStringBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListStringBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListStringBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListStringBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListStringBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListStringBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListStringBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListStringBytes)
    MergeFrom(*source);
  }
}

void ListStringBytes::MergeFrom(const ListStringBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListStringBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListStringBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListStringBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListStringBytes::CopyFrom(const ListStringBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListStringBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListStringBytes::IsInitialized() const {
  return true;
}

void ListStringBytes::Swap(ListStringBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListStringBytes::InternalSwap(ListStringBytes* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListStringBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesDouble::kKFieldNumber;
const int ListBytesDouble::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesDouble::ListBytesDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesDouble)
}
ListBytesDouble::ListBytesDouble(const ListBytesDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesDouble)
}

void ListBytesDouble::SharedCtor() {
}

ListBytesDouble::~ListBytesDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesDouble)
  SharedDtor();
}

void ListBytesDouble::SharedDtor() {
}

void ListBytesDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesDouble& ListBytesDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesDouble.base);
  return *internal_default_instance();
}


void ListBytesDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesDouble)
  return false;
#undef DO_
}

void ListBytesDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesDouble)
}

::google::protobuf::uint8* ListBytesDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesDouble)
  return target;
}

size_t ListBytesDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesDouble)
    MergeFrom(*source);
  }
}

void ListBytesDouble::MergeFrom(const ListBytesDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesDouble::CopyFrom(const ListBytesDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesDouble::IsInitialized() const {
  return true;
}

void ListBytesDouble::Swap(ListBytesDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesDouble::InternalSwap(ListBytesDouble* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesFloat::kKFieldNumber;
const int ListBytesFloat::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesFloat::ListBytesFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesFloat)
}
ListBytesFloat::ListBytesFloat(const ListBytesFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesFloat)
}

void ListBytesFloat::SharedCtor() {
}

ListBytesFloat::~ListBytesFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesFloat)
  SharedDtor();
}

void ListBytesFloat::SharedDtor() {
}

void ListBytesFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesFloat& ListBytesFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesFloat.base);
  return *internal_default_instance();
}


void ListBytesFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesFloat)
  return false;
#undef DO_
}

void ListBytesFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesFloat)
}

::google::protobuf::uint8* ListBytesFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesFloat)
  return target;
}

size_t ListBytesFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesFloat)
    MergeFrom(*source);
  }
}

void ListBytesFloat::MergeFrom(const ListBytesFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesFloat::CopyFrom(const ListBytesFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesFloat::IsInitialized() const {
  return true;
}

void ListBytesFloat::Swap(ListBytesFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesFloat::InternalSwap(ListBytesFloat* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesInt32::kKFieldNumber;
const int ListBytesInt32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesInt32::ListBytesInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesInt32)
}
ListBytesInt32::ListBytesInt32(const ListBytesInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesInt32)
}

void ListBytesInt32::SharedCtor() {
}

ListBytesInt32::~ListBytesInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesInt32)
  SharedDtor();
}

void ListBytesInt32::SharedDtor() {
}

void ListBytesInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesInt32& ListBytesInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesInt32.base);
  return *internal_default_instance();
}


void ListBytesInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesInt32)
  return false;
#undef DO_
}

void ListBytesInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesInt32)
}

::google::protobuf::uint8* ListBytesInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesInt32)
  return target;
}

size_t ListBytesInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesInt32)
    MergeFrom(*source);
  }
}

void ListBytesInt32::MergeFrom(const ListBytesInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesInt32::CopyFrom(const ListBytesInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesInt32::IsInitialized() const {
  return true;
}

void ListBytesInt32::Swap(ListBytesInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesInt32::InternalSwap(ListBytesInt32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesInt64::kKFieldNumber;
const int ListBytesInt64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesInt64::ListBytesInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesInt64)
}
ListBytesInt64::ListBytesInt64(const ListBytesInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesInt64)
}

void ListBytesInt64::SharedCtor() {
}

ListBytesInt64::~ListBytesInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesInt64)
  SharedDtor();
}

void ListBytesInt64::SharedDtor() {
}

void ListBytesInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesInt64& ListBytesInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesInt64.base);
  return *internal_default_instance();
}


void ListBytesInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesInt64)
  return false;
#undef DO_
}

void ListBytesInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesInt64)
}

::google::protobuf::uint8* ListBytesInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesInt64)
  return target;
}

size_t ListBytesInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesInt64)
    MergeFrom(*source);
  }
}

void ListBytesInt64::MergeFrom(const ListBytesInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesInt64::CopyFrom(const ListBytesInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesInt64::IsInitialized() const {
  return true;
}

void ListBytesInt64::Swap(ListBytesInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesInt64::InternalSwap(ListBytesInt64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesUint32::kKFieldNumber;
const int ListBytesUint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesUint32::ListBytesUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesUint32)
}
ListBytesUint32::ListBytesUint32(const ListBytesUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesUint32)
}

void ListBytesUint32::SharedCtor() {
}

ListBytesUint32::~ListBytesUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesUint32)
  SharedDtor();
}

void ListBytesUint32::SharedDtor() {
}

void ListBytesUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesUint32& ListBytesUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesUint32.base);
  return *internal_default_instance();
}


void ListBytesUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesUint32)
  return false;
#undef DO_
}

void ListBytesUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesUint32)
}

::google::protobuf::uint8* ListBytesUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesUint32)
  return target;
}

size_t ListBytesUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesUint32)
    MergeFrom(*source);
  }
}

void ListBytesUint32::MergeFrom(const ListBytesUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesUint32::CopyFrom(const ListBytesUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesUint32::IsInitialized() const {
  return true;
}

void ListBytesUint32::Swap(ListBytesUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesUint32::InternalSwap(ListBytesUint32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesUint64::kKFieldNumber;
const int ListBytesUint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesUint64::ListBytesUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesUint64)
}
ListBytesUint64::ListBytesUint64(const ListBytesUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesUint64)
}

void ListBytesUint64::SharedCtor() {
}

ListBytesUint64::~ListBytesUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesUint64)
  SharedDtor();
}

void ListBytesUint64::SharedDtor() {
}

void ListBytesUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesUint64& ListBytesUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesUint64.base);
  return *internal_default_instance();
}


void ListBytesUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesUint64)
  return false;
#undef DO_
}

void ListBytesUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesUint64)
}

::google::protobuf::uint8* ListBytesUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesUint64)
  return target;
}

size_t ListBytesUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesUint64)
    MergeFrom(*source);
  }
}

void ListBytesUint64::MergeFrom(const ListBytesUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesUint64::CopyFrom(const ListBytesUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesUint64::IsInitialized() const {
  return true;
}

void ListBytesUint64::Swap(ListBytesUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesUint64::InternalSwap(ListBytesUint64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesSint32::kKFieldNumber;
const int ListBytesSint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesSint32::ListBytesSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesSint32)
}
ListBytesSint32::ListBytesSint32(const ListBytesSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesSint32)
}

void ListBytesSint32::SharedCtor() {
}

ListBytesSint32::~ListBytesSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesSint32)
  SharedDtor();
}

void ListBytesSint32::SharedDtor() {
}

void ListBytesSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesSint32& ListBytesSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesSint32.base);
  return *internal_default_instance();
}


void ListBytesSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesSint32)
  return false;
#undef DO_
}

void ListBytesSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesSint32)
}

::google::protobuf::uint8* ListBytesSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesSint32)
  return target;
}

size_t ListBytesSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesSint32)
    MergeFrom(*source);
  }
}

void ListBytesSint32::MergeFrom(const ListBytesSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesSint32::CopyFrom(const ListBytesSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesSint32::IsInitialized() const {
  return true;
}

void ListBytesSint32::Swap(ListBytesSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesSint32::InternalSwap(ListBytesSint32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesSint64::kKFieldNumber;
const int ListBytesSint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesSint64::ListBytesSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesSint64)
}
ListBytesSint64::ListBytesSint64(const ListBytesSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesSint64)
}

void ListBytesSint64::SharedCtor() {
}

ListBytesSint64::~ListBytesSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesSint64)
  SharedDtor();
}

void ListBytesSint64::SharedDtor() {
}

void ListBytesSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesSint64& ListBytesSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesSint64.base);
  return *internal_default_instance();
}


void ListBytesSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesSint64)
  return false;
#undef DO_
}

void ListBytesSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesSint64)
}

::google::protobuf::uint8* ListBytesSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesSint64)
  return target;
}

size_t ListBytesSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesSint64)
    MergeFrom(*source);
  }
}

void ListBytesSint64::MergeFrom(const ListBytesSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesSint64::CopyFrom(const ListBytesSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesSint64::IsInitialized() const {
  return true;
}

void ListBytesSint64::Swap(ListBytesSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesSint64::InternalSwap(ListBytesSint64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesFixed32::kKFieldNumber;
const int ListBytesFixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesFixed32::ListBytesFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesFixed32)
}
ListBytesFixed32::ListBytesFixed32(const ListBytesFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesFixed32)
}

void ListBytesFixed32::SharedCtor() {
}

ListBytesFixed32::~ListBytesFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesFixed32)
  SharedDtor();
}

void ListBytesFixed32::SharedDtor() {
}

void ListBytesFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesFixed32& ListBytesFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesFixed32.base);
  return *internal_default_instance();
}


void ListBytesFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesFixed32)
  return false;
#undef DO_
}

void ListBytesFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesFixed32)
}

::google::protobuf::uint8* ListBytesFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesFixed32)
  return target;
}

size_t ListBytesFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesFixed32)
    MergeFrom(*source);
  }
}

void ListBytesFixed32::MergeFrom(const ListBytesFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesFixed32::CopyFrom(const ListBytesFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesFixed32::IsInitialized() const {
  return true;
}

void ListBytesFixed32::Swap(ListBytesFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesFixed32::InternalSwap(ListBytesFixed32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesFixed64::kKFieldNumber;
const int ListBytesFixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesFixed64::ListBytesFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesFixed64)
}
ListBytesFixed64::ListBytesFixed64(const ListBytesFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesFixed64)
}

void ListBytesFixed64::SharedCtor() {
}

ListBytesFixed64::~ListBytesFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesFixed64)
  SharedDtor();
}

void ListBytesFixed64::SharedDtor() {
}

void ListBytesFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesFixed64& ListBytesFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesFixed64.base);
  return *internal_default_instance();
}


void ListBytesFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesFixed64)
  return false;
#undef DO_
}

void ListBytesFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesFixed64)
}

::google::protobuf::uint8* ListBytesFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesFixed64)
  return target;
}

size_t ListBytesFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesFixed64)
    MergeFrom(*source);
  }
}

void ListBytesFixed64::MergeFrom(const ListBytesFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesFixed64::CopyFrom(const ListBytesFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesFixed64::IsInitialized() const {
  return true;
}

void ListBytesFixed64::Swap(ListBytesFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesFixed64::InternalSwap(ListBytesFixed64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesSfixed32::kKFieldNumber;
const int ListBytesSfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesSfixed32::ListBytesSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesSfixed32)
}
ListBytesSfixed32::ListBytesSfixed32(const ListBytesSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesSfixed32)
}

void ListBytesSfixed32::SharedCtor() {
}

ListBytesSfixed32::~ListBytesSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesSfixed32)
  SharedDtor();
}

void ListBytesSfixed32::SharedDtor() {
}

void ListBytesSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesSfixed32& ListBytesSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesSfixed32.base);
  return *internal_default_instance();
}


void ListBytesSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesSfixed32)
  return false;
#undef DO_
}

void ListBytesSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesSfixed32)
}

::google::protobuf::uint8* ListBytesSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesSfixed32)
  return target;
}

size_t ListBytesSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesSfixed32)
    MergeFrom(*source);
  }
}

void ListBytesSfixed32::MergeFrom(const ListBytesSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesSfixed32::CopyFrom(const ListBytesSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesSfixed32::IsInitialized() const {
  return true;
}

void ListBytesSfixed32::Swap(ListBytesSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesSfixed32::InternalSwap(ListBytesSfixed32* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesSfixed64::kKFieldNumber;
const int ListBytesSfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesSfixed64::ListBytesSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesSfixed64)
}
ListBytesSfixed64::ListBytesSfixed64(const ListBytesSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesSfixed64)
}

void ListBytesSfixed64::SharedCtor() {
}

ListBytesSfixed64::~ListBytesSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesSfixed64)
  SharedDtor();
}

void ListBytesSfixed64::SharedDtor() {
}

void ListBytesSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesSfixed64& ListBytesSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesSfixed64.base);
  return *internal_default_instance();
}


void ListBytesSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesSfixed64)
  return false;
#undef DO_
}

void ListBytesSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesSfixed64)
}

::google::protobuf::uint8* ListBytesSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesSfixed64)
  return target;
}

size_t ListBytesSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesSfixed64)
    MergeFrom(*source);
  }
}

void ListBytesSfixed64::MergeFrom(const ListBytesSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesSfixed64::CopyFrom(const ListBytesSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesSfixed64::IsInitialized() const {
  return true;
}

void ListBytesSfixed64::Swap(ListBytesSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesSfixed64::InternalSwap(ListBytesSfixed64* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesBool::kKFieldNumber;
const int ListBytesBool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesBool::ListBytesBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesBool)
}
ListBytesBool::ListBytesBool(const ListBytesBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesBool)
}

void ListBytesBool::SharedCtor() {
}

ListBytesBool::~ListBytesBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesBool)
  SharedDtor();
}

void ListBytesBool::SharedDtor() {
}

void ListBytesBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesBool& ListBytesBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesBool.base);
  return *internal_default_instance();
}


void ListBytesBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesBool)
  return false;
#undef DO_
}

void ListBytesBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesBool)
}

::google::protobuf::uint8* ListBytesBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesBool)
  return target;
}

size_t ListBytesBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesBool)
    MergeFrom(*source);
  }
}

void ListBytesBool::MergeFrom(const ListBytesBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesBool::CopyFrom(const ListBytesBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesBool::IsInitialized() const {
  return true;
}

void ListBytesBool::Swap(ListBytesBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesBool::InternalSwap(ListBytesBool* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesString::kKFieldNumber;
const int ListBytesString::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesString::ListBytesString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesString)
}
ListBytesString::ListBytesString(const ListBytesString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesString)
}

void ListBytesString::SharedCtor() {
}

ListBytesString::~ListBytesString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesString)
  SharedDtor();
}

void ListBytesString::SharedDtor() {
}

void ListBytesString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesString& ListBytesString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesString.base);
  return *internal_default_instance();
}


void ListBytesString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListBytesString.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesString)
  return false;
#undef DO_
}

void ListBytesString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListBytesString.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesString)
}

::google::protobuf::uint8* ListBytesString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListBytesString.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesString)
  return target;
}

size_t ListBytesString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesString)
    MergeFrom(*source);
  }
}

void ListBytesString::MergeFrom(const ListBytesString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesString::CopyFrom(const ListBytesString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesString::IsInitialized() const {
  return true;
}

void ListBytesString::Swap(ListBytesString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesString::InternalSwap(ListBytesString* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBytesBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBytesBytes::kKFieldNumber;
const int ListBytesBytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBytesBytes::ListBytesBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBytesBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBytesBytes)
}
ListBytesBytes::ListBytesBytes(const ListBytesBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBytesBytes)
}

void ListBytesBytes::SharedCtor() {
}

ListBytesBytes::~ListBytesBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBytesBytes)
  SharedDtor();
}

void ListBytesBytes::SharedDtor() {
}

void ListBytesBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBytesBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBytesBytes& ListBytesBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBytesBytes.base);
  return *internal_default_instance();
}


void ListBytesBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBytesBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBytesBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBytesBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBytesBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBytesBytes)
  return false;
#undef DO_
}

void ListBytesBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBytesBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBytesBytes)
}

::google::protobuf::uint8* ListBytesBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBytesBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes k = 1;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->k(i), target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBytesBytes)
  return target;
}

size_t ListBytesBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBytesBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes k = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->k(i));
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBytesBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBytesBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBytesBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBytesBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBytesBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBytesBytes)
    MergeFrom(*source);
  }
}

void ListBytesBytes::MergeFrom(const ListBytesBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBytesBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBytesBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBytesBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBytesBytes::CopyFrom(const ListBytesBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBytesBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBytesBytes::IsInitialized() const {
  return true;
}

void ListBytesBytes::Swap(ListBytesBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBytesBytes::InternalSwap(ListBytesBytes* other) {
  using std::swap;
  k_.InternalSwap(CastToBase(&other->k_));
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBytesBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Double::kKFieldNumber;
const int ListInt32Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Double::ListInt32Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Double)
}
ListInt32Double::ListInt32Double(const ListInt32Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Double)
}

void ListInt32Double::SharedCtor() {
}

ListInt32Double::~ListInt32Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Double)
  SharedDtor();
}

void ListInt32Double::SharedDtor() {
}

void ListInt32Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Double& ListInt32Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Double.base);
  return *internal_default_instance();
}


void ListInt32Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Double)
  return false;
#undef DO_
}

void ListInt32Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Double)
}

::google::protobuf::uint8* ListInt32Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Double)
  return target;
}

size_t ListInt32Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Double)
    MergeFrom(*source);
  }
}

void ListInt32Double::MergeFrom(const ListInt32Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Double::CopyFrom(const ListInt32Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Double::IsInitialized() const {
  return true;
}

void ListInt32Double::Swap(ListInt32Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Double::InternalSwap(ListInt32Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Float::kKFieldNumber;
const int ListInt32Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Float::ListInt32Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Float)
}
ListInt32Float::ListInt32Float(const ListInt32Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Float)
}

void ListInt32Float::SharedCtor() {
}

ListInt32Float::~ListInt32Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Float)
  SharedDtor();
}

void ListInt32Float::SharedDtor() {
}

void ListInt32Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Float& ListInt32Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Float.base);
  return *internal_default_instance();
}


void ListInt32Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Float)
  return false;
#undef DO_
}

void ListInt32Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Float)
}

::google::protobuf::uint8* ListInt32Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Float)
  return target;
}

size_t ListInt32Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Float)
    MergeFrom(*source);
  }
}

void ListInt32Float::MergeFrom(const ListInt32Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Float::CopyFrom(const ListInt32Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Float::IsInitialized() const {
  return true;
}

void ListInt32Float::Swap(ListInt32Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Float::InternalSwap(ListInt32Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Int32::kKFieldNumber;
const int ListInt32Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Int32::ListInt32Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Int32)
}
ListInt32Int32::ListInt32Int32(const ListInt32Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Int32)
}

void ListInt32Int32::SharedCtor() {
}

ListInt32Int32::~ListInt32Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Int32)
  SharedDtor();
}

void ListInt32Int32::SharedDtor() {
}

void ListInt32Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Int32& ListInt32Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Int32.base);
  return *internal_default_instance();
}


void ListInt32Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Int32)
  return false;
#undef DO_
}

void ListInt32Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Int32)
}

::google::protobuf::uint8* ListInt32Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Int32)
  return target;
}

size_t ListInt32Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Int32)
    MergeFrom(*source);
  }
}

void ListInt32Int32::MergeFrom(const ListInt32Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Int32::CopyFrom(const ListInt32Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Int32::IsInitialized() const {
  return true;
}

void ListInt32Int32::Swap(ListInt32Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Int32::InternalSwap(ListInt32Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Int64::kKFieldNumber;
const int ListInt32Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Int64::ListInt32Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Int64)
}
ListInt32Int64::ListInt32Int64(const ListInt32Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Int64)
}

void ListInt32Int64::SharedCtor() {
}

ListInt32Int64::~ListInt32Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Int64)
  SharedDtor();
}

void ListInt32Int64::SharedDtor() {
}

void ListInt32Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Int64& ListInt32Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Int64.base);
  return *internal_default_instance();
}


void ListInt32Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Int64)
  return false;
#undef DO_
}

void ListInt32Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Int64)
}

::google::protobuf::uint8* ListInt32Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Int64)
  return target;
}

size_t ListInt32Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Int64)
    MergeFrom(*source);
  }
}

void ListInt32Int64::MergeFrom(const ListInt32Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Int64::CopyFrom(const ListInt32Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Int64::IsInitialized() const {
  return true;
}

void ListInt32Int64::Swap(ListInt32Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Int64::InternalSwap(ListInt32Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Uint32::kKFieldNumber;
const int ListInt32Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Uint32::ListInt32Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Uint32)
}
ListInt32Uint32::ListInt32Uint32(const ListInt32Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Uint32)
}

void ListInt32Uint32::SharedCtor() {
}

ListInt32Uint32::~ListInt32Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Uint32)
  SharedDtor();
}

void ListInt32Uint32::SharedDtor() {
}

void ListInt32Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Uint32& ListInt32Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Uint32.base);
  return *internal_default_instance();
}


void ListInt32Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Uint32)
  return false;
#undef DO_
}

void ListInt32Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Uint32)
}

::google::protobuf::uint8* ListInt32Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Uint32)
  return target;
}

size_t ListInt32Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Uint32)
    MergeFrom(*source);
  }
}

void ListInt32Uint32::MergeFrom(const ListInt32Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Uint32::CopyFrom(const ListInt32Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Uint32::IsInitialized() const {
  return true;
}

void ListInt32Uint32::Swap(ListInt32Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Uint32::InternalSwap(ListInt32Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Uint64::kKFieldNumber;
const int ListInt32Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Uint64::ListInt32Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Uint64)
}
ListInt32Uint64::ListInt32Uint64(const ListInt32Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Uint64)
}

void ListInt32Uint64::SharedCtor() {
}

ListInt32Uint64::~ListInt32Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Uint64)
  SharedDtor();
}

void ListInt32Uint64::SharedDtor() {
}

void ListInt32Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Uint64& ListInt32Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Uint64.base);
  return *internal_default_instance();
}


void ListInt32Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Uint64)
  return false;
#undef DO_
}

void ListInt32Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Uint64)
}

::google::protobuf::uint8* ListInt32Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Uint64)
  return target;
}

size_t ListInt32Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Uint64)
    MergeFrom(*source);
  }
}

void ListInt32Uint64::MergeFrom(const ListInt32Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Uint64::CopyFrom(const ListInt32Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Uint64::IsInitialized() const {
  return true;
}

void ListInt32Uint64::Swap(ListInt32Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Uint64::InternalSwap(ListInt32Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Sint32::kKFieldNumber;
const int ListInt32Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Sint32::ListInt32Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Sint32)
}
ListInt32Sint32::ListInt32Sint32(const ListInt32Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Sint32)
}

void ListInt32Sint32::SharedCtor() {
}

ListInt32Sint32::~ListInt32Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Sint32)
  SharedDtor();
}

void ListInt32Sint32::SharedDtor() {
}

void ListInt32Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Sint32& ListInt32Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Sint32.base);
  return *internal_default_instance();
}


void ListInt32Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Sint32)
  return false;
#undef DO_
}

void ListInt32Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Sint32)
}

::google::protobuf::uint8* ListInt32Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Sint32)
  return target;
}

size_t ListInt32Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Sint32)
    MergeFrom(*source);
  }
}

void ListInt32Sint32::MergeFrom(const ListInt32Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Sint32::CopyFrom(const ListInt32Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Sint32::IsInitialized() const {
  return true;
}

void ListInt32Sint32::Swap(ListInt32Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Sint32::InternalSwap(ListInt32Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Sint64::kKFieldNumber;
const int ListInt32Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Sint64::ListInt32Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Sint64)
}
ListInt32Sint64::ListInt32Sint64(const ListInt32Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Sint64)
}

void ListInt32Sint64::SharedCtor() {
}

ListInt32Sint64::~ListInt32Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Sint64)
  SharedDtor();
}

void ListInt32Sint64::SharedDtor() {
}

void ListInt32Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Sint64& ListInt32Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Sint64.base);
  return *internal_default_instance();
}


void ListInt32Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Sint64)
  return false;
#undef DO_
}

void ListInt32Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Sint64)
}

::google::protobuf::uint8* ListInt32Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Sint64)
  return target;
}

size_t ListInt32Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Sint64)
    MergeFrom(*source);
  }
}

void ListInt32Sint64::MergeFrom(const ListInt32Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Sint64::CopyFrom(const ListInt32Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Sint64::IsInitialized() const {
  return true;
}

void ListInt32Sint64::Swap(ListInt32Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Sint64::InternalSwap(ListInt32Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Fixed32::kKFieldNumber;
const int ListInt32Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Fixed32::ListInt32Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Fixed32)
}
ListInt32Fixed32::ListInt32Fixed32(const ListInt32Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Fixed32)
}

void ListInt32Fixed32::SharedCtor() {
}

ListInt32Fixed32::~ListInt32Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Fixed32)
  SharedDtor();
}

void ListInt32Fixed32::SharedDtor() {
}

void ListInt32Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Fixed32& ListInt32Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Fixed32.base);
  return *internal_default_instance();
}


void ListInt32Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Fixed32)
  return false;
#undef DO_
}

void ListInt32Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Fixed32)
}

::google::protobuf::uint8* ListInt32Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Fixed32)
  return target;
}

size_t ListInt32Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Fixed32)
    MergeFrom(*source);
  }
}

void ListInt32Fixed32::MergeFrom(const ListInt32Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Fixed32::CopyFrom(const ListInt32Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Fixed32::IsInitialized() const {
  return true;
}

void ListInt32Fixed32::Swap(ListInt32Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Fixed32::InternalSwap(ListInt32Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Fixed64::kKFieldNumber;
const int ListInt32Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Fixed64::ListInt32Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Fixed64)
}
ListInt32Fixed64::ListInt32Fixed64(const ListInt32Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Fixed64)
}

void ListInt32Fixed64::SharedCtor() {
}

ListInt32Fixed64::~ListInt32Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Fixed64)
  SharedDtor();
}

void ListInt32Fixed64::SharedDtor() {
}

void ListInt32Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Fixed64& ListInt32Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Fixed64.base);
  return *internal_default_instance();
}


void ListInt32Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Fixed64)
  return false;
#undef DO_
}

void ListInt32Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Fixed64)
}

::google::protobuf::uint8* ListInt32Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Fixed64)
  return target;
}

size_t ListInt32Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Fixed64)
    MergeFrom(*source);
  }
}

void ListInt32Fixed64::MergeFrom(const ListInt32Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Fixed64::CopyFrom(const ListInt32Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Fixed64::IsInitialized() const {
  return true;
}

void ListInt32Fixed64::Swap(ListInt32Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Fixed64::InternalSwap(ListInt32Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Sfixed32::kKFieldNumber;
const int ListInt32Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Sfixed32::ListInt32Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Sfixed32)
}
ListInt32Sfixed32::ListInt32Sfixed32(const ListInt32Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Sfixed32)
}

void ListInt32Sfixed32::SharedCtor() {
}

ListInt32Sfixed32::~ListInt32Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Sfixed32)
  SharedDtor();
}

void ListInt32Sfixed32::SharedDtor() {
}

void ListInt32Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Sfixed32& ListInt32Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Sfixed32.base);
  return *internal_default_instance();
}


void ListInt32Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Sfixed32)
  return false;
#undef DO_
}

void ListInt32Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Sfixed32)
}

::google::protobuf::uint8* ListInt32Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Sfixed32)
  return target;
}

size_t ListInt32Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Sfixed32)
    MergeFrom(*source);
  }
}

void ListInt32Sfixed32::MergeFrom(const ListInt32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Sfixed32::CopyFrom(const ListInt32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Sfixed32::IsInitialized() const {
  return true;
}

void ListInt32Sfixed32::Swap(ListInt32Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Sfixed32::InternalSwap(ListInt32Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Sfixed64::kKFieldNumber;
const int ListInt32Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Sfixed64::ListInt32Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Sfixed64)
}
ListInt32Sfixed64::ListInt32Sfixed64(const ListInt32Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Sfixed64)
}

void ListInt32Sfixed64::SharedCtor() {
}

ListInt32Sfixed64::~ListInt32Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Sfixed64)
  SharedDtor();
}

void ListInt32Sfixed64::SharedDtor() {
}

void ListInt32Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Sfixed64& ListInt32Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Sfixed64.base);
  return *internal_default_instance();
}


void ListInt32Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Sfixed64)
  return false;
#undef DO_
}

void ListInt32Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Sfixed64)
}

::google::protobuf::uint8* ListInt32Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Sfixed64)
  return target;
}

size_t ListInt32Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Sfixed64)
    MergeFrom(*source);
  }
}

void ListInt32Sfixed64::MergeFrom(const ListInt32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Sfixed64::CopyFrom(const ListInt32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Sfixed64::IsInitialized() const {
  return true;
}

void ListInt32Sfixed64::Swap(ListInt32Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Sfixed64::InternalSwap(ListInt32Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Bool::kKFieldNumber;
const int ListInt32Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Bool::ListInt32Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Bool)
}
ListInt32Bool::ListInt32Bool(const ListInt32Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Bool)
}

void ListInt32Bool::SharedCtor() {
}

ListInt32Bool::~ListInt32Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Bool)
  SharedDtor();
}

void ListInt32Bool::SharedDtor() {
}

void ListInt32Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Bool& ListInt32Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Bool.base);
  return *internal_default_instance();
}


void ListInt32Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Bool)
  return false;
#undef DO_
}

void ListInt32Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Bool)
}

::google::protobuf::uint8* ListInt32Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Bool)
  return target;
}

size_t ListInt32Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Bool)
    MergeFrom(*source);
  }
}

void ListInt32Bool::MergeFrom(const ListInt32Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Bool::CopyFrom(const ListInt32Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Bool::IsInitialized() const {
  return true;
}

void ListInt32Bool::Swap(ListInt32Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Bool::InternalSwap(ListInt32Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32String::kKFieldNumber;
const int ListInt32String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32String::ListInt32String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32String)
}
ListInt32String::ListInt32String(const ListInt32String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32String)
}

void ListInt32String::SharedCtor() {
}

ListInt32String::~ListInt32String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32String)
  SharedDtor();
}

void ListInt32String::SharedDtor() {
}

void ListInt32String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32String& ListInt32String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32String.base);
  return *internal_default_instance();
}


void ListInt32String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListInt32String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32String)
  return false;
#undef DO_
}

void ListInt32String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListInt32String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32String)
}

::google::protobuf::uint8* ListInt32String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListInt32String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32String)
  return target;
}

size_t ListInt32String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32String)
    MergeFrom(*source);
  }
}

void ListInt32String::MergeFrom(const ListInt32String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32String::CopyFrom(const ListInt32String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32String::IsInitialized() const {
  return true;
}

void ListInt32String::Swap(ListInt32String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32String::InternalSwap(ListInt32String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt32Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt32Bytes::kKFieldNumber;
const int ListInt32Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt32Bytes::ListInt32Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt32Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt32Bytes)
}
ListInt32Bytes::ListInt32Bytes(const ListInt32Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt32Bytes)
}

void ListInt32Bytes::SharedCtor() {
}

ListInt32Bytes::~ListInt32Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt32Bytes)
  SharedDtor();
}

void ListInt32Bytes::SharedDtor() {
}

void ListInt32Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt32Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt32Bytes& ListInt32Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt32Bytes.base);
  return *internal_default_instance();
}


void ListInt32Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt32Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt32Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt32Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt32Bytes)
  return false;
#undef DO_
}

void ListInt32Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt32Bytes)
}

::google::protobuf::uint8* ListInt32Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt32Bytes)
  return target;
}

size_t ListInt32Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt32Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt32Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt32Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt32Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt32Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt32Bytes)
    MergeFrom(*source);
  }
}

void ListInt32Bytes::MergeFrom(const ListInt32Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt32Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt32Bytes::CopyFrom(const ListInt32Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt32Bytes::IsInitialized() const {
  return true;
}

void ListInt32Bytes::Swap(ListInt32Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt32Bytes::InternalSwap(ListInt32Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt32Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Double::kKFieldNumber;
const int ListInt64Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Double::ListInt64Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Double)
}
ListInt64Double::ListInt64Double(const ListInt64Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Double)
}

void ListInt64Double::SharedCtor() {
}

ListInt64Double::~ListInt64Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Double)
  SharedDtor();
}

void ListInt64Double::SharedDtor() {
}

void ListInt64Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Double& ListInt64Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Double.base);
  return *internal_default_instance();
}


void ListInt64Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Double)
  return false;
#undef DO_
}

void ListInt64Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Double)
}

::google::protobuf::uint8* ListInt64Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Double)
  return target;
}

size_t ListInt64Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Double)
    MergeFrom(*source);
  }
}

void ListInt64Double::MergeFrom(const ListInt64Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Double::CopyFrom(const ListInt64Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Double::IsInitialized() const {
  return true;
}

void ListInt64Double::Swap(ListInt64Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Double::InternalSwap(ListInt64Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Float::kKFieldNumber;
const int ListInt64Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Float::ListInt64Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Float)
}
ListInt64Float::ListInt64Float(const ListInt64Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Float)
}

void ListInt64Float::SharedCtor() {
}

ListInt64Float::~ListInt64Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Float)
  SharedDtor();
}

void ListInt64Float::SharedDtor() {
}

void ListInt64Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Float& ListInt64Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Float.base);
  return *internal_default_instance();
}


void ListInt64Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Float)
  return false;
#undef DO_
}

void ListInt64Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Float)
}

::google::protobuf::uint8* ListInt64Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Float)
  return target;
}

size_t ListInt64Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Float)
    MergeFrom(*source);
  }
}

void ListInt64Float::MergeFrom(const ListInt64Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Float::CopyFrom(const ListInt64Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Float::IsInitialized() const {
  return true;
}

void ListInt64Float::Swap(ListInt64Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Float::InternalSwap(ListInt64Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Int32::kKFieldNumber;
const int ListInt64Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Int32::ListInt64Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Int32)
}
ListInt64Int32::ListInt64Int32(const ListInt64Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Int32)
}

void ListInt64Int32::SharedCtor() {
}

ListInt64Int32::~ListInt64Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Int32)
  SharedDtor();
}

void ListInt64Int32::SharedDtor() {
}

void ListInt64Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Int32& ListInt64Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Int32.base);
  return *internal_default_instance();
}


void ListInt64Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Int32)
  return false;
#undef DO_
}

void ListInt64Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Int32)
}

::google::protobuf::uint8* ListInt64Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Int32)
  return target;
}

size_t ListInt64Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Int32)
    MergeFrom(*source);
  }
}

void ListInt64Int32::MergeFrom(const ListInt64Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Int32::CopyFrom(const ListInt64Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Int32::IsInitialized() const {
  return true;
}

void ListInt64Int32::Swap(ListInt64Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Int32::InternalSwap(ListInt64Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Int64::kKFieldNumber;
const int ListInt64Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Int64::ListInt64Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Int64)
}
ListInt64Int64::ListInt64Int64(const ListInt64Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Int64)
}

void ListInt64Int64::SharedCtor() {
}

ListInt64Int64::~ListInt64Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Int64)
  SharedDtor();
}

void ListInt64Int64::SharedDtor() {
}

void ListInt64Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Int64& ListInt64Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Int64.base);
  return *internal_default_instance();
}


void ListInt64Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Int64)
  return false;
#undef DO_
}

void ListInt64Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Int64)
}

::google::protobuf::uint8* ListInt64Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Int64)
  return target;
}

size_t ListInt64Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Int64)
    MergeFrom(*source);
  }
}

void ListInt64Int64::MergeFrom(const ListInt64Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Int64::CopyFrom(const ListInt64Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Int64::IsInitialized() const {
  return true;
}

void ListInt64Int64::Swap(ListInt64Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Int64::InternalSwap(ListInt64Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Uint32::kKFieldNumber;
const int ListInt64Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Uint32::ListInt64Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Uint32)
}
ListInt64Uint32::ListInt64Uint32(const ListInt64Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Uint32)
}

void ListInt64Uint32::SharedCtor() {
}

ListInt64Uint32::~ListInt64Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Uint32)
  SharedDtor();
}

void ListInt64Uint32::SharedDtor() {
}

void ListInt64Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Uint32& ListInt64Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Uint32.base);
  return *internal_default_instance();
}


void ListInt64Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Uint32)
  return false;
#undef DO_
}

void ListInt64Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Uint32)
}

::google::protobuf::uint8* ListInt64Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Uint32)
  return target;
}

size_t ListInt64Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Uint32)
    MergeFrom(*source);
  }
}

void ListInt64Uint32::MergeFrom(const ListInt64Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Uint32::CopyFrom(const ListInt64Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Uint32::IsInitialized() const {
  return true;
}

void ListInt64Uint32::Swap(ListInt64Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Uint32::InternalSwap(ListInt64Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Uint64::kKFieldNumber;
const int ListInt64Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Uint64::ListInt64Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Uint64)
}
ListInt64Uint64::ListInt64Uint64(const ListInt64Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Uint64)
}

void ListInt64Uint64::SharedCtor() {
}

ListInt64Uint64::~ListInt64Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Uint64)
  SharedDtor();
}

void ListInt64Uint64::SharedDtor() {
}

void ListInt64Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Uint64& ListInt64Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Uint64.base);
  return *internal_default_instance();
}


void ListInt64Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Uint64)
  return false;
#undef DO_
}

void ListInt64Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Uint64)
}

::google::protobuf::uint8* ListInt64Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Uint64)
  return target;
}

size_t ListInt64Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Uint64)
    MergeFrom(*source);
  }
}

void ListInt64Uint64::MergeFrom(const ListInt64Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Uint64::CopyFrom(const ListInt64Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Uint64::IsInitialized() const {
  return true;
}

void ListInt64Uint64::Swap(ListInt64Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Uint64::InternalSwap(ListInt64Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Sint32::kKFieldNumber;
const int ListInt64Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Sint32::ListInt64Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Sint32)
}
ListInt64Sint32::ListInt64Sint32(const ListInt64Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Sint32)
}

void ListInt64Sint32::SharedCtor() {
}

ListInt64Sint32::~ListInt64Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Sint32)
  SharedDtor();
}

void ListInt64Sint32::SharedDtor() {
}

void ListInt64Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Sint32& ListInt64Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Sint32.base);
  return *internal_default_instance();
}


void ListInt64Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Sint32)
  return false;
#undef DO_
}

void ListInt64Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Sint32)
}

::google::protobuf::uint8* ListInt64Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Sint32)
  return target;
}

size_t ListInt64Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Sint32)
    MergeFrom(*source);
  }
}

void ListInt64Sint32::MergeFrom(const ListInt64Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Sint32::CopyFrom(const ListInt64Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Sint32::IsInitialized() const {
  return true;
}

void ListInt64Sint32::Swap(ListInt64Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Sint32::InternalSwap(ListInt64Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Sint64::kKFieldNumber;
const int ListInt64Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Sint64::ListInt64Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Sint64)
}
ListInt64Sint64::ListInt64Sint64(const ListInt64Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Sint64)
}

void ListInt64Sint64::SharedCtor() {
}

ListInt64Sint64::~ListInt64Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Sint64)
  SharedDtor();
}

void ListInt64Sint64::SharedDtor() {
}

void ListInt64Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Sint64& ListInt64Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Sint64.base);
  return *internal_default_instance();
}


void ListInt64Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Sint64)
  return false;
#undef DO_
}

void ListInt64Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Sint64)
}

::google::protobuf::uint8* ListInt64Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Sint64)
  return target;
}

size_t ListInt64Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Sint64)
    MergeFrom(*source);
  }
}

void ListInt64Sint64::MergeFrom(const ListInt64Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Sint64::CopyFrom(const ListInt64Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Sint64::IsInitialized() const {
  return true;
}

void ListInt64Sint64::Swap(ListInt64Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Sint64::InternalSwap(ListInt64Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Fixed32::kKFieldNumber;
const int ListInt64Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Fixed32::ListInt64Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Fixed32)
}
ListInt64Fixed32::ListInt64Fixed32(const ListInt64Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Fixed32)
}

void ListInt64Fixed32::SharedCtor() {
}

ListInt64Fixed32::~ListInt64Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Fixed32)
  SharedDtor();
}

void ListInt64Fixed32::SharedDtor() {
}

void ListInt64Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Fixed32& ListInt64Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Fixed32.base);
  return *internal_default_instance();
}


void ListInt64Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Fixed32)
  return false;
#undef DO_
}

void ListInt64Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Fixed32)
}

::google::protobuf::uint8* ListInt64Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Fixed32)
  return target;
}

size_t ListInt64Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Fixed32)
    MergeFrom(*source);
  }
}

void ListInt64Fixed32::MergeFrom(const ListInt64Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Fixed32::CopyFrom(const ListInt64Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Fixed32::IsInitialized() const {
  return true;
}

void ListInt64Fixed32::Swap(ListInt64Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Fixed32::InternalSwap(ListInt64Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Fixed64::kKFieldNumber;
const int ListInt64Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Fixed64::ListInt64Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Fixed64)
}
ListInt64Fixed64::ListInt64Fixed64(const ListInt64Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Fixed64)
}

void ListInt64Fixed64::SharedCtor() {
}

ListInt64Fixed64::~ListInt64Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Fixed64)
  SharedDtor();
}

void ListInt64Fixed64::SharedDtor() {
}

void ListInt64Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Fixed64& ListInt64Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Fixed64.base);
  return *internal_default_instance();
}


void ListInt64Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Fixed64)
  return false;
#undef DO_
}

void ListInt64Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Fixed64)
}

::google::protobuf::uint8* ListInt64Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Fixed64)
  return target;
}

size_t ListInt64Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Fixed64)
    MergeFrom(*source);
  }
}

void ListInt64Fixed64::MergeFrom(const ListInt64Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Fixed64::CopyFrom(const ListInt64Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Fixed64::IsInitialized() const {
  return true;
}

void ListInt64Fixed64::Swap(ListInt64Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Fixed64::InternalSwap(ListInt64Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Sfixed32::kKFieldNumber;
const int ListInt64Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Sfixed32::ListInt64Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Sfixed32)
}
ListInt64Sfixed32::ListInt64Sfixed32(const ListInt64Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Sfixed32)
}

void ListInt64Sfixed32::SharedCtor() {
}

ListInt64Sfixed32::~ListInt64Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Sfixed32)
  SharedDtor();
}

void ListInt64Sfixed32::SharedDtor() {
}

void ListInt64Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Sfixed32& ListInt64Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Sfixed32.base);
  return *internal_default_instance();
}


void ListInt64Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Sfixed32)
  return false;
#undef DO_
}

void ListInt64Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Sfixed32)
}

::google::protobuf::uint8* ListInt64Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Sfixed32)
  return target;
}

size_t ListInt64Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Sfixed32)
    MergeFrom(*source);
  }
}

void ListInt64Sfixed32::MergeFrom(const ListInt64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Sfixed32::CopyFrom(const ListInt64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Sfixed32::IsInitialized() const {
  return true;
}

void ListInt64Sfixed32::Swap(ListInt64Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Sfixed32::InternalSwap(ListInt64Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Sfixed64::kKFieldNumber;
const int ListInt64Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Sfixed64::ListInt64Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Sfixed64)
}
ListInt64Sfixed64::ListInt64Sfixed64(const ListInt64Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Sfixed64)
}

void ListInt64Sfixed64::SharedCtor() {
}

ListInt64Sfixed64::~ListInt64Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Sfixed64)
  SharedDtor();
}

void ListInt64Sfixed64::SharedDtor() {
}

void ListInt64Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Sfixed64& ListInt64Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Sfixed64.base);
  return *internal_default_instance();
}


void ListInt64Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Sfixed64)
  return false;
#undef DO_
}

void ListInt64Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Sfixed64)
}

::google::protobuf::uint8* ListInt64Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Sfixed64)
  return target;
}

size_t ListInt64Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Sfixed64)
    MergeFrom(*source);
  }
}

void ListInt64Sfixed64::MergeFrom(const ListInt64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Sfixed64::CopyFrom(const ListInt64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Sfixed64::IsInitialized() const {
  return true;
}

void ListInt64Sfixed64::Swap(ListInt64Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Sfixed64::InternalSwap(ListInt64Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Bool::kKFieldNumber;
const int ListInt64Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Bool::ListInt64Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Bool)
}
ListInt64Bool::ListInt64Bool(const ListInt64Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Bool)
}

void ListInt64Bool::SharedCtor() {
}

ListInt64Bool::~ListInt64Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Bool)
  SharedDtor();
}

void ListInt64Bool::SharedDtor() {
}

void ListInt64Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Bool& ListInt64Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Bool.base);
  return *internal_default_instance();
}


void ListInt64Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Bool)
  return false;
#undef DO_
}

void ListInt64Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Bool)
}

::google::protobuf::uint8* ListInt64Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Bool)
  return target;
}

size_t ListInt64Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Bool)
    MergeFrom(*source);
  }
}

void ListInt64Bool::MergeFrom(const ListInt64Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Bool::CopyFrom(const ListInt64Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Bool::IsInitialized() const {
  return true;
}

void ListInt64Bool::Swap(ListInt64Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Bool::InternalSwap(ListInt64Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64String::kKFieldNumber;
const int ListInt64String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64String::ListInt64String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64String)
}
ListInt64String::ListInt64String(const ListInt64String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64String)
}

void ListInt64String::SharedCtor() {
}

ListInt64String::~ListInt64String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64String)
  SharedDtor();
}

void ListInt64String::SharedDtor() {
}

void ListInt64String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64String& ListInt64String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64String.base);
  return *internal_default_instance();
}


void ListInt64String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListInt64String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64String)
  return false;
#undef DO_
}

void ListInt64String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListInt64String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64String)
}

::google::protobuf::uint8* ListInt64String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListInt64String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64String)
  return target;
}

size_t ListInt64String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64String)
    MergeFrom(*source);
  }
}

void ListInt64String::MergeFrom(const ListInt64String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64String::CopyFrom(const ListInt64String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64String::IsInitialized() const {
  return true;
}

void ListInt64String::Swap(ListInt64String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64String::InternalSwap(ListInt64String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListInt64Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListInt64Bytes::kKFieldNumber;
const int ListInt64Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListInt64Bytes::ListInt64Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListInt64Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListInt64Bytes)
}
ListInt64Bytes::ListInt64Bytes(const ListInt64Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListInt64Bytes)
}

void ListInt64Bytes::SharedCtor() {
}

ListInt64Bytes::~ListInt64Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListInt64Bytes)
  SharedDtor();
}

void ListInt64Bytes::SharedDtor() {
}

void ListInt64Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListInt64Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListInt64Bytes& ListInt64Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListInt64Bytes.base);
  return *internal_default_instance();
}


void ListInt64Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListInt64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListInt64Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListInt64Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListInt64Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListInt64Bytes)
  return false;
#undef DO_
}

void ListInt64Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListInt64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListInt64Bytes)
}

::google::protobuf::uint8* ListInt64Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListInt64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListInt64Bytes)
  return target;
}

size_t ListInt64Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListInt64Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListInt64Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListInt64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListInt64Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListInt64Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListInt64Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListInt64Bytes)
    MergeFrom(*source);
  }
}

void ListInt64Bytes::MergeFrom(const ListInt64Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListInt64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListInt64Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListInt64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListInt64Bytes::CopyFrom(const ListInt64Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListInt64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInt64Bytes::IsInitialized() const {
  return true;
}

void ListInt64Bytes::Swap(ListInt64Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListInt64Bytes::InternalSwap(ListInt64Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListInt64Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Double::kKFieldNumber;
const int ListUint32Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Double::ListUint32Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Double)
}
ListUint32Double::ListUint32Double(const ListUint32Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Double)
}

void ListUint32Double::SharedCtor() {
}

ListUint32Double::~ListUint32Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Double)
  SharedDtor();
}

void ListUint32Double::SharedDtor() {
}

void ListUint32Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Double& ListUint32Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Double.base);
  return *internal_default_instance();
}


void ListUint32Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Double)
  return false;
#undef DO_
}

void ListUint32Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Double)
}

::google::protobuf::uint8* ListUint32Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Double)
  return target;
}

size_t ListUint32Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Double)
    MergeFrom(*source);
  }
}

void ListUint32Double::MergeFrom(const ListUint32Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Double::CopyFrom(const ListUint32Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Double::IsInitialized() const {
  return true;
}

void ListUint32Double::Swap(ListUint32Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Double::InternalSwap(ListUint32Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Float::kKFieldNumber;
const int ListUint32Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Float::ListUint32Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Float)
}
ListUint32Float::ListUint32Float(const ListUint32Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Float)
}

void ListUint32Float::SharedCtor() {
}

ListUint32Float::~ListUint32Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Float)
  SharedDtor();
}

void ListUint32Float::SharedDtor() {
}

void ListUint32Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Float& ListUint32Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Float.base);
  return *internal_default_instance();
}


void ListUint32Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Float)
  return false;
#undef DO_
}

void ListUint32Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Float)
}

::google::protobuf::uint8* ListUint32Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Float)
  return target;
}

size_t ListUint32Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Float)
    MergeFrom(*source);
  }
}

void ListUint32Float::MergeFrom(const ListUint32Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Float::CopyFrom(const ListUint32Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Float::IsInitialized() const {
  return true;
}

void ListUint32Float::Swap(ListUint32Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Float::InternalSwap(ListUint32Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Int32::kKFieldNumber;
const int ListUint32Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Int32::ListUint32Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Int32)
}
ListUint32Int32::ListUint32Int32(const ListUint32Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Int32)
}

void ListUint32Int32::SharedCtor() {
}

ListUint32Int32::~ListUint32Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Int32)
  SharedDtor();
}

void ListUint32Int32::SharedDtor() {
}

void ListUint32Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Int32& ListUint32Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Int32.base);
  return *internal_default_instance();
}


void ListUint32Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Int32)
  return false;
#undef DO_
}

void ListUint32Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Int32)
}

::google::protobuf::uint8* ListUint32Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Int32)
  return target;
}

size_t ListUint32Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Int32)
    MergeFrom(*source);
  }
}

void ListUint32Int32::MergeFrom(const ListUint32Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Int32::CopyFrom(const ListUint32Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Int32::IsInitialized() const {
  return true;
}

void ListUint32Int32::Swap(ListUint32Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Int32::InternalSwap(ListUint32Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Int64::kKFieldNumber;
const int ListUint32Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Int64::ListUint32Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Int64)
}
ListUint32Int64::ListUint32Int64(const ListUint32Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Int64)
}

void ListUint32Int64::SharedCtor() {
}

ListUint32Int64::~ListUint32Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Int64)
  SharedDtor();
}

void ListUint32Int64::SharedDtor() {
}

void ListUint32Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Int64& ListUint32Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Int64.base);
  return *internal_default_instance();
}


void ListUint32Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Int64)
  return false;
#undef DO_
}

void ListUint32Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Int64)
}

::google::protobuf::uint8* ListUint32Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Int64)
  return target;
}

size_t ListUint32Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Int64)
    MergeFrom(*source);
  }
}

void ListUint32Int64::MergeFrom(const ListUint32Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Int64::CopyFrom(const ListUint32Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Int64::IsInitialized() const {
  return true;
}

void ListUint32Int64::Swap(ListUint32Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Int64::InternalSwap(ListUint32Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Uint32::kKFieldNumber;
const int ListUint32Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Uint32::ListUint32Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Uint32)
}
ListUint32Uint32::ListUint32Uint32(const ListUint32Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Uint32)
}

void ListUint32Uint32::SharedCtor() {
}

ListUint32Uint32::~ListUint32Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Uint32)
  SharedDtor();
}

void ListUint32Uint32::SharedDtor() {
}

void ListUint32Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Uint32& ListUint32Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Uint32.base);
  return *internal_default_instance();
}


void ListUint32Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Uint32)
  return false;
#undef DO_
}

void ListUint32Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Uint32)
}

::google::protobuf::uint8* ListUint32Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Uint32)
  return target;
}

size_t ListUint32Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Uint32)
    MergeFrom(*source);
  }
}

void ListUint32Uint32::MergeFrom(const ListUint32Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Uint32::CopyFrom(const ListUint32Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Uint32::IsInitialized() const {
  return true;
}

void ListUint32Uint32::Swap(ListUint32Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Uint32::InternalSwap(ListUint32Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Uint64::kKFieldNumber;
const int ListUint32Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Uint64::ListUint32Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Uint64)
}
ListUint32Uint64::ListUint32Uint64(const ListUint32Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Uint64)
}

void ListUint32Uint64::SharedCtor() {
}

ListUint32Uint64::~ListUint32Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Uint64)
  SharedDtor();
}

void ListUint32Uint64::SharedDtor() {
}

void ListUint32Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Uint64& ListUint32Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Uint64.base);
  return *internal_default_instance();
}


void ListUint32Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Uint64)
  return false;
#undef DO_
}

void ListUint32Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Uint64)
}

::google::protobuf::uint8* ListUint32Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Uint64)
  return target;
}

size_t ListUint32Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Uint64)
    MergeFrom(*source);
  }
}

void ListUint32Uint64::MergeFrom(const ListUint32Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Uint64::CopyFrom(const ListUint32Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Uint64::IsInitialized() const {
  return true;
}

void ListUint32Uint64::Swap(ListUint32Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Uint64::InternalSwap(ListUint32Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Sint32::kKFieldNumber;
const int ListUint32Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Sint32::ListUint32Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Sint32)
}
ListUint32Sint32::ListUint32Sint32(const ListUint32Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Sint32)
}

void ListUint32Sint32::SharedCtor() {
}

ListUint32Sint32::~ListUint32Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Sint32)
  SharedDtor();
}

void ListUint32Sint32::SharedDtor() {
}

void ListUint32Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Sint32& ListUint32Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Sint32.base);
  return *internal_default_instance();
}


void ListUint32Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Sint32)
  return false;
#undef DO_
}

void ListUint32Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Sint32)
}

::google::protobuf::uint8* ListUint32Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Sint32)
  return target;
}

size_t ListUint32Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Sint32)
    MergeFrom(*source);
  }
}

void ListUint32Sint32::MergeFrom(const ListUint32Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Sint32::CopyFrom(const ListUint32Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Sint32::IsInitialized() const {
  return true;
}

void ListUint32Sint32::Swap(ListUint32Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Sint32::InternalSwap(ListUint32Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Sint64::kKFieldNumber;
const int ListUint32Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Sint64::ListUint32Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Sint64)
}
ListUint32Sint64::ListUint32Sint64(const ListUint32Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Sint64)
}

void ListUint32Sint64::SharedCtor() {
}

ListUint32Sint64::~ListUint32Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Sint64)
  SharedDtor();
}

void ListUint32Sint64::SharedDtor() {
}

void ListUint32Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Sint64& ListUint32Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Sint64.base);
  return *internal_default_instance();
}


void ListUint32Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Sint64)
  return false;
#undef DO_
}

void ListUint32Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Sint64)
}

::google::protobuf::uint8* ListUint32Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Sint64)
  return target;
}

size_t ListUint32Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Sint64)
    MergeFrom(*source);
  }
}

void ListUint32Sint64::MergeFrom(const ListUint32Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Sint64::CopyFrom(const ListUint32Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Sint64::IsInitialized() const {
  return true;
}

void ListUint32Sint64::Swap(ListUint32Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Sint64::InternalSwap(ListUint32Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Fixed32::kKFieldNumber;
const int ListUint32Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Fixed32::ListUint32Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Fixed32)
}
ListUint32Fixed32::ListUint32Fixed32(const ListUint32Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Fixed32)
}

void ListUint32Fixed32::SharedCtor() {
}

ListUint32Fixed32::~ListUint32Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Fixed32)
  SharedDtor();
}

void ListUint32Fixed32::SharedDtor() {
}

void ListUint32Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Fixed32& ListUint32Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Fixed32.base);
  return *internal_default_instance();
}


void ListUint32Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Fixed32)
  return false;
#undef DO_
}

void ListUint32Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Fixed32)
}

::google::protobuf::uint8* ListUint32Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Fixed32)
  return target;
}

size_t ListUint32Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Fixed32)
    MergeFrom(*source);
  }
}

void ListUint32Fixed32::MergeFrom(const ListUint32Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Fixed32::CopyFrom(const ListUint32Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Fixed32::IsInitialized() const {
  return true;
}

void ListUint32Fixed32::Swap(ListUint32Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Fixed32::InternalSwap(ListUint32Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Fixed64::kKFieldNumber;
const int ListUint32Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Fixed64::ListUint32Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Fixed64)
}
ListUint32Fixed64::ListUint32Fixed64(const ListUint32Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Fixed64)
}

void ListUint32Fixed64::SharedCtor() {
}

ListUint32Fixed64::~ListUint32Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Fixed64)
  SharedDtor();
}

void ListUint32Fixed64::SharedDtor() {
}

void ListUint32Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Fixed64& ListUint32Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Fixed64.base);
  return *internal_default_instance();
}


void ListUint32Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Fixed64)
  return false;
#undef DO_
}

void ListUint32Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Fixed64)
}

::google::protobuf::uint8* ListUint32Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Fixed64)
  return target;
}

size_t ListUint32Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Fixed64)
    MergeFrom(*source);
  }
}

void ListUint32Fixed64::MergeFrom(const ListUint32Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Fixed64::CopyFrom(const ListUint32Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Fixed64::IsInitialized() const {
  return true;
}

void ListUint32Fixed64::Swap(ListUint32Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Fixed64::InternalSwap(ListUint32Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Sfixed32::kKFieldNumber;
const int ListUint32Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Sfixed32::ListUint32Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Sfixed32)
}
ListUint32Sfixed32::ListUint32Sfixed32(const ListUint32Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Sfixed32)
}

void ListUint32Sfixed32::SharedCtor() {
}

ListUint32Sfixed32::~ListUint32Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Sfixed32)
  SharedDtor();
}

void ListUint32Sfixed32::SharedDtor() {
}

void ListUint32Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Sfixed32& ListUint32Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Sfixed32.base);
  return *internal_default_instance();
}


void ListUint32Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Sfixed32)
  return false;
#undef DO_
}

void ListUint32Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Sfixed32)
}

::google::protobuf::uint8* ListUint32Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Sfixed32)
  return target;
}

size_t ListUint32Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Sfixed32)
    MergeFrom(*source);
  }
}

void ListUint32Sfixed32::MergeFrom(const ListUint32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Sfixed32::CopyFrom(const ListUint32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Sfixed32::IsInitialized() const {
  return true;
}

void ListUint32Sfixed32::Swap(ListUint32Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Sfixed32::InternalSwap(ListUint32Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Sfixed64::kKFieldNumber;
const int ListUint32Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Sfixed64::ListUint32Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Sfixed64)
}
ListUint32Sfixed64::ListUint32Sfixed64(const ListUint32Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Sfixed64)
}

void ListUint32Sfixed64::SharedCtor() {
}

ListUint32Sfixed64::~ListUint32Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Sfixed64)
  SharedDtor();
}

void ListUint32Sfixed64::SharedDtor() {
}

void ListUint32Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Sfixed64& ListUint32Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Sfixed64.base);
  return *internal_default_instance();
}


void ListUint32Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Sfixed64)
  return false;
#undef DO_
}

void ListUint32Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Sfixed64)
}

::google::protobuf::uint8* ListUint32Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Sfixed64)
  return target;
}

size_t ListUint32Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Sfixed64)
    MergeFrom(*source);
  }
}

void ListUint32Sfixed64::MergeFrom(const ListUint32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Sfixed64::CopyFrom(const ListUint32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Sfixed64::IsInitialized() const {
  return true;
}

void ListUint32Sfixed64::Swap(ListUint32Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Sfixed64::InternalSwap(ListUint32Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Bool::kKFieldNumber;
const int ListUint32Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Bool::ListUint32Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Bool)
}
ListUint32Bool::ListUint32Bool(const ListUint32Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Bool)
}

void ListUint32Bool::SharedCtor() {
}

ListUint32Bool::~ListUint32Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Bool)
  SharedDtor();
}

void ListUint32Bool::SharedDtor() {
}

void ListUint32Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Bool& ListUint32Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Bool.base);
  return *internal_default_instance();
}


void ListUint32Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Bool)
  return false;
#undef DO_
}

void ListUint32Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Bool)
}

::google::protobuf::uint8* ListUint32Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Bool)
  return target;
}

size_t ListUint32Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Bool)
    MergeFrom(*source);
  }
}

void ListUint32Bool::MergeFrom(const ListUint32Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Bool::CopyFrom(const ListUint32Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Bool::IsInitialized() const {
  return true;
}

void ListUint32Bool::Swap(ListUint32Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Bool::InternalSwap(ListUint32Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32String::kKFieldNumber;
const int ListUint32String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32String::ListUint32String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32String)
}
ListUint32String::ListUint32String(const ListUint32String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32String)
}

void ListUint32String::SharedCtor() {
}

ListUint32String::~ListUint32String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32String)
  SharedDtor();
}

void ListUint32String::SharedDtor() {
}

void ListUint32String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32String& ListUint32String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32String.base);
  return *internal_default_instance();
}


void ListUint32String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListUint32String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32String)
  return false;
#undef DO_
}

void ListUint32String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListUint32String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32String)
}

::google::protobuf::uint8* ListUint32String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListUint32String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32String)
  return target;
}

size_t ListUint32String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32String)
    MergeFrom(*source);
  }
}

void ListUint32String::MergeFrom(const ListUint32String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32String::CopyFrom(const ListUint32String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32String::IsInitialized() const {
  return true;
}

void ListUint32String::Swap(ListUint32String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32String::InternalSwap(ListUint32String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint32Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint32Bytes::kKFieldNumber;
const int ListUint32Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint32Bytes::ListUint32Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint32Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint32Bytes)
}
ListUint32Bytes::ListUint32Bytes(const ListUint32Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint32Bytes)
}

void ListUint32Bytes::SharedCtor() {
}

ListUint32Bytes::~ListUint32Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint32Bytes)
  SharedDtor();
}

void ListUint32Bytes::SharedDtor() {
}

void ListUint32Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint32Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint32Bytes& ListUint32Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint32Bytes.base);
  return *internal_default_instance();
}


void ListUint32Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint32Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint32Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint32Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint32Bytes)
  return false;
#undef DO_
}

void ListUint32Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint32Bytes)
}

::google::protobuf::uint8* ListUint32Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint32Bytes)
  return target;
}

size_t ListUint32Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint32Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint32Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint32Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint32Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint32Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint32Bytes)
    MergeFrom(*source);
  }
}

void ListUint32Bytes::MergeFrom(const ListUint32Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint32Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint32Bytes::CopyFrom(const ListUint32Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint32Bytes::IsInitialized() const {
  return true;
}

void ListUint32Bytes::Swap(ListUint32Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint32Bytes::InternalSwap(ListUint32Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint32Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Double::kKFieldNumber;
const int ListUint64Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Double::ListUint64Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Double)
}
ListUint64Double::ListUint64Double(const ListUint64Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Double)
}

void ListUint64Double::SharedCtor() {
}

ListUint64Double::~ListUint64Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Double)
  SharedDtor();
}

void ListUint64Double::SharedDtor() {
}

void ListUint64Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Double& ListUint64Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Double.base);
  return *internal_default_instance();
}


void ListUint64Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Double)
  return false;
#undef DO_
}

void ListUint64Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Double)
}

::google::protobuf::uint8* ListUint64Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Double)
  return target;
}

size_t ListUint64Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Double)
    MergeFrom(*source);
  }
}

void ListUint64Double::MergeFrom(const ListUint64Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Double::CopyFrom(const ListUint64Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Double::IsInitialized() const {
  return true;
}

void ListUint64Double::Swap(ListUint64Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Double::InternalSwap(ListUint64Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Float::kKFieldNumber;
const int ListUint64Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Float::ListUint64Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Float)
}
ListUint64Float::ListUint64Float(const ListUint64Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Float)
}

void ListUint64Float::SharedCtor() {
}

ListUint64Float::~ListUint64Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Float)
  SharedDtor();
}

void ListUint64Float::SharedDtor() {
}

void ListUint64Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Float& ListUint64Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Float.base);
  return *internal_default_instance();
}


void ListUint64Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Float)
  return false;
#undef DO_
}

void ListUint64Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Float)
}

::google::protobuf::uint8* ListUint64Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Float)
  return target;
}

size_t ListUint64Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Float)
    MergeFrom(*source);
  }
}

void ListUint64Float::MergeFrom(const ListUint64Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Float::CopyFrom(const ListUint64Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Float::IsInitialized() const {
  return true;
}

void ListUint64Float::Swap(ListUint64Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Float::InternalSwap(ListUint64Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Int32::kKFieldNumber;
const int ListUint64Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Int32::ListUint64Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Int32)
}
ListUint64Int32::ListUint64Int32(const ListUint64Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Int32)
}

void ListUint64Int32::SharedCtor() {
}

ListUint64Int32::~ListUint64Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Int32)
  SharedDtor();
}

void ListUint64Int32::SharedDtor() {
}

void ListUint64Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Int32& ListUint64Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Int32.base);
  return *internal_default_instance();
}


void ListUint64Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Int32)
  return false;
#undef DO_
}

void ListUint64Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Int32)
}

::google::protobuf::uint8* ListUint64Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Int32)
  return target;
}

size_t ListUint64Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Int32)
    MergeFrom(*source);
  }
}

void ListUint64Int32::MergeFrom(const ListUint64Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Int32::CopyFrom(const ListUint64Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Int32::IsInitialized() const {
  return true;
}

void ListUint64Int32::Swap(ListUint64Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Int32::InternalSwap(ListUint64Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Int64::kKFieldNumber;
const int ListUint64Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Int64::ListUint64Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Int64)
}
ListUint64Int64::ListUint64Int64(const ListUint64Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Int64)
}

void ListUint64Int64::SharedCtor() {
}

ListUint64Int64::~ListUint64Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Int64)
  SharedDtor();
}

void ListUint64Int64::SharedDtor() {
}

void ListUint64Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Int64& ListUint64Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Int64.base);
  return *internal_default_instance();
}


void ListUint64Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Int64)
  return false;
#undef DO_
}

void ListUint64Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Int64)
}

::google::protobuf::uint8* ListUint64Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Int64)
  return target;
}

size_t ListUint64Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Int64)
    MergeFrom(*source);
  }
}

void ListUint64Int64::MergeFrom(const ListUint64Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Int64::CopyFrom(const ListUint64Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Int64::IsInitialized() const {
  return true;
}

void ListUint64Int64::Swap(ListUint64Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Int64::InternalSwap(ListUint64Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Uint32::kKFieldNumber;
const int ListUint64Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Uint32::ListUint64Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Uint32)
}
ListUint64Uint32::ListUint64Uint32(const ListUint64Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Uint32)
}

void ListUint64Uint32::SharedCtor() {
}

ListUint64Uint32::~ListUint64Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Uint32)
  SharedDtor();
}

void ListUint64Uint32::SharedDtor() {
}

void ListUint64Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Uint32& ListUint64Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Uint32.base);
  return *internal_default_instance();
}


void ListUint64Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Uint32)
  return false;
#undef DO_
}

void ListUint64Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Uint32)
}

::google::protobuf::uint8* ListUint64Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Uint32)
  return target;
}

size_t ListUint64Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Uint32)
    MergeFrom(*source);
  }
}

void ListUint64Uint32::MergeFrom(const ListUint64Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Uint32::CopyFrom(const ListUint64Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Uint32::IsInitialized() const {
  return true;
}

void ListUint64Uint32::Swap(ListUint64Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Uint32::InternalSwap(ListUint64Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Uint64::kKFieldNumber;
const int ListUint64Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Uint64::ListUint64Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Uint64)
}
ListUint64Uint64::ListUint64Uint64(const ListUint64Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Uint64)
}

void ListUint64Uint64::SharedCtor() {
}

ListUint64Uint64::~ListUint64Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Uint64)
  SharedDtor();
}

void ListUint64Uint64::SharedDtor() {
}

void ListUint64Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Uint64& ListUint64Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Uint64.base);
  return *internal_default_instance();
}


void ListUint64Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Uint64)
  return false;
#undef DO_
}

void ListUint64Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Uint64)
}

::google::protobuf::uint8* ListUint64Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Uint64)
  return target;
}

size_t ListUint64Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Uint64)
    MergeFrom(*source);
  }
}

void ListUint64Uint64::MergeFrom(const ListUint64Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Uint64::CopyFrom(const ListUint64Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Uint64::IsInitialized() const {
  return true;
}

void ListUint64Uint64::Swap(ListUint64Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Uint64::InternalSwap(ListUint64Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Sint32::kKFieldNumber;
const int ListUint64Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Sint32::ListUint64Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Sint32)
}
ListUint64Sint32::ListUint64Sint32(const ListUint64Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Sint32)
}

void ListUint64Sint32::SharedCtor() {
}

ListUint64Sint32::~ListUint64Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Sint32)
  SharedDtor();
}

void ListUint64Sint32::SharedDtor() {
}

void ListUint64Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Sint32& ListUint64Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Sint32.base);
  return *internal_default_instance();
}


void ListUint64Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Sint32)
  return false;
#undef DO_
}

void ListUint64Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Sint32)
}

::google::protobuf::uint8* ListUint64Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Sint32)
  return target;
}

size_t ListUint64Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Sint32)
    MergeFrom(*source);
  }
}

void ListUint64Sint32::MergeFrom(const ListUint64Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Sint32::CopyFrom(const ListUint64Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Sint32::IsInitialized() const {
  return true;
}

void ListUint64Sint32::Swap(ListUint64Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Sint32::InternalSwap(ListUint64Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Sint64::kKFieldNumber;
const int ListUint64Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Sint64::ListUint64Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Sint64)
}
ListUint64Sint64::ListUint64Sint64(const ListUint64Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Sint64)
}

void ListUint64Sint64::SharedCtor() {
}

ListUint64Sint64::~ListUint64Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Sint64)
  SharedDtor();
}

void ListUint64Sint64::SharedDtor() {
}

void ListUint64Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Sint64& ListUint64Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Sint64.base);
  return *internal_default_instance();
}


void ListUint64Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Sint64)
  return false;
#undef DO_
}

void ListUint64Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Sint64)
}

::google::protobuf::uint8* ListUint64Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Sint64)
  return target;
}

size_t ListUint64Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Sint64)
    MergeFrom(*source);
  }
}

void ListUint64Sint64::MergeFrom(const ListUint64Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Sint64::CopyFrom(const ListUint64Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Sint64::IsInitialized() const {
  return true;
}

void ListUint64Sint64::Swap(ListUint64Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Sint64::InternalSwap(ListUint64Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Fixed32::kKFieldNumber;
const int ListUint64Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Fixed32::ListUint64Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Fixed32)
}
ListUint64Fixed32::ListUint64Fixed32(const ListUint64Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Fixed32)
}

void ListUint64Fixed32::SharedCtor() {
}

ListUint64Fixed32::~ListUint64Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Fixed32)
  SharedDtor();
}

void ListUint64Fixed32::SharedDtor() {
}

void ListUint64Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Fixed32& ListUint64Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Fixed32.base);
  return *internal_default_instance();
}


void ListUint64Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Fixed32)
  return false;
#undef DO_
}

void ListUint64Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Fixed32)
}

::google::protobuf::uint8* ListUint64Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Fixed32)
  return target;
}

size_t ListUint64Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Fixed32)
    MergeFrom(*source);
  }
}

void ListUint64Fixed32::MergeFrom(const ListUint64Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Fixed32::CopyFrom(const ListUint64Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Fixed32::IsInitialized() const {
  return true;
}

void ListUint64Fixed32::Swap(ListUint64Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Fixed32::InternalSwap(ListUint64Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Fixed64::kKFieldNumber;
const int ListUint64Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Fixed64::ListUint64Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Fixed64)
}
ListUint64Fixed64::ListUint64Fixed64(const ListUint64Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Fixed64)
}

void ListUint64Fixed64::SharedCtor() {
}

ListUint64Fixed64::~ListUint64Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Fixed64)
  SharedDtor();
}

void ListUint64Fixed64::SharedDtor() {
}

void ListUint64Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Fixed64& ListUint64Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Fixed64.base);
  return *internal_default_instance();
}


void ListUint64Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Fixed64)
  return false;
#undef DO_
}

void ListUint64Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Fixed64)
}

::google::protobuf::uint8* ListUint64Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Fixed64)
  return target;
}

size_t ListUint64Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Fixed64)
    MergeFrom(*source);
  }
}

void ListUint64Fixed64::MergeFrom(const ListUint64Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Fixed64::CopyFrom(const ListUint64Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Fixed64::IsInitialized() const {
  return true;
}

void ListUint64Fixed64::Swap(ListUint64Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Fixed64::InternalSwap(ListUint64Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Sfixed32::kKFieldNumber;
const int ListUint64Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Sfixed32::ListUint64Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Sfixed32)
}
ListUint64Sfixed32::ListUint64Sfixed32(const ListUint64Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Sfixed32)
}

void ListUint64Sfixed32::SharedCtor() {
}

ListUint64Sfixed32::~ListUint64Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Sfixed32)
  SharedDtor();
}

void ListUint64Sfixed32::SharedDtor() {
}

void ListUint64Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Sfixed32& ListUint64Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Sfixed32.base);
  return *internal_default_instance();
}


void ListUint64Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Sfixed32)
  return false;
#undef DO_
}

void ListUint64Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Sfixed32)
}

::google::protobuf::uint8* ListUint64Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Sfixed32)
  return target;
}

size_t ListUint64Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Sfixed32)
    MergeFrom(*source);
  }
}

void ListUint64Sfixed32::MergeFrom(const ListUint64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Sfixed32::CopyFrom(const ListUint64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Sfixed32::IsInitialized() const {
  return true;
}

void ListUint64Sfixed32::Swap(ListUint64Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Sfixed32::InternalSwap(ListUint64Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Sfixed64::kKFieldNumber;
const int ListUint64Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Sfixed64::ListUint64Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Sfixed64)
}
ListUint64Sfixed64::ListUint64Sfixed64(const ListUint64Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Sfixed64)
}

void ListUint64Sfixed64::SharedCtor() {
}

ListUint64Sfixed64::~ListUint64Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Sfixed64)
  SharedDtor();
}

void ListUint64Sfixed64::SharedDtor() {
}

void ListUint64Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Sfixed64& ListUint64Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Sfixed64.base);
  return *internal_default_instance();
}


void ListUint64Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Sfixed64)
  return false;
#undef DO_
}

void ListUint64Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Sfixed64)
}

::google::protobuf::uint8* ListUint64Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Sfixed64)
  return target;
}

size_t ListUint64Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Sfixed64)
    MergeFrom(*source);
  }
}

void ListUint64Sfixed64::MergeFrom(const ListUint64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Sfixed64::CopyFrom(const ListUint64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Sfixed64::IsInitialized() const {
  return true;
}

void ListUint64Sfixed64::Swap(ListUint64Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Sfixed64::InternalSwap(ListUint64Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Bool::kKFieldNumber;
const int ListUint64Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Bool::ListUint64Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Bool)
}
ListUint64Bool::ListUint64Bool(const ListUint64Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Bool)
}

void ListUint64Bool::SharedCtor() {
}

ListUint64Bool::~ListUint64Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Bool)
  SharedDtor();
}

void ListUint64Bool::SharedDtor() {
}

void ListUint64Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Bool& ListUint64Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Bool.base);
  return *internal_default_instance();
}


void ListUint64Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Bool)
  return false;
#undef DO_
}

void ListUint64Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Bool)
}

::google::protobuf::uint8* ListUint64Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Bool)
  return target;
}

size_t ListUint64Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Bool)
    MergeFrom(*source);
  }
}

void ListUint64Bool::MergeFrom(const ListUint64Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Bool::CopyFrom(const ListUint64Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Bool::IsInitialized() const {
  return true;
}

void ListUint64Bool::Swap(ListUint64Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Bool::InternalSwap(ListUint64Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64String::kKFieldNumber;
const int ListUint64String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64String::ListUint64String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64String)
}
ListUint64String::ListUint64String(const ListUint64String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64String)
}

void ListUint64String::SharedCtor() {
}

ListUint64String::~ListUint64String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64String)
  SharedDtor();
}

void ListUint64String::SharedDtor() {
}

void ListUint64String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64String& ListUint64String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64String.base);
  return *internal_default_instance();
}


void ListUint64String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListUint64String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64String)
  return false;
#undef DO_
}

void ListUint64String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListUint64String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64String)
}

::google::protobuf::uint8* ListUint64String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListUint64String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64String)
  return target;
}

size_t ListUint64String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64String)
    MergeFrom(*source);
  }
}

void ListUint64String::MergeFrom(const ListUint64String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64String::CopyFrom(const ListUint64String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64String::IsInitialized() const {
  return true;
}

void ListUint64String::Swap(ListUint64String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64String::InternalSwap(ListUint64String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListUint64Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListUint64Bytes::kKFieldNumber;
const int ListUint64Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListUint64Bytes::ListUint64Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListUint64Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListUint64Bytes)
}
ListUint64Bytes::ListUint64Bytes(const ListUint64Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListUint64Bytes)
}

void ListUint64Bytes::SharedCtor() {
}

ListUint64Bytes::~ListUint64Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListUint64Bytes)
  SharedDtor();
}

void ListUint64Bytes::SharedDtor() {
}

void ListUint64Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListUint64Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListUint64Bytes& ListUint64Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListUint64Bytes.base);
  return *internal_default_instance();
}


void ListUint64Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListUint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListUint64Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListUint64Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListUint64Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListUint64Bytes)
  return false;
#undef DO_
}

void ListUint64Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListUint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListUint64Bytes)
}

::google::protobuf::uint8* ListUint64Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListUint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListUint64Bytes)
  return target;
}

size_t ListUint64Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListUint64Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListUint64Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListUint64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListUint64Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListUint64Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListUint64Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListUint64Bytes)
    MergeFrom(*source);
  }
}

void ListUint64Bytes::MergeFrom(const ListUint64Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListUint64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListUint64Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListUint64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListUint64Bytes::CopyFrom(const ListUint64Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListUint64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUint64Bytes::IsInitialized() const {
  return true;
}

void ListUint64Bytes::Swap(ListUint64Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListUint64Bytes::InternalSwap(ListUint64Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListUint64Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Double::kKFieldNumber;
const int ListSint32Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Double::ListSint32Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Double)
}
ListSint32Double::ListSint32Double(const ListSint32Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Double)
}

void ListSint32Double::SharedCtor() {
}

ListSint32Double::~ListSint32Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Double)
  SharedDtor();
}

void ListSint32Double::SharedDtor() {
}

void ListSint32Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Double& ListSint32Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Double.base);
  return *internal_default_instance();
}


void ListSint32Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Double)
  return false;
#undef DO_
}

void ListSint32Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Double)
}

::google::protobuf::uint8* ListSint32Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Double)
  return target;
}

size_t ListSint32Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Double)
    MergeFrom(*source);
  }
}

void ListSint32Double::MergeFrom(const ListSint32Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Double::CopyFrom(const ListSint32Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Double::IsInitialized() const {
  return true;
}

void ListSint32Double::Swap(ListSint32Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Double::InternalSwap(ListSint32Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Float::kKFieldNumber;
const int ListSint32Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Float::ListSint32Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Float)
}
ListSint32Float::ListSint32Float(const ListSint32Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Float)
}

void ListSint32Float::SharedCtor() {
}

ListSint32Float::~ListSint32Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Float)
  SharedDtor();
}

void ListSint32Float::SharedDtor() {
}

void ListSint32Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Float& ListSint32Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Float.base);
  return *internal_default_instance();
}


void ListSint32Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Float)
  return false;
#undef DO_
}

void ListSint32Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Float)
}

::google::protobuf::uint8* ListSint32Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Float)
  return target;
}

size_t ListSint32Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Float)
    MergeFrom(*source);
  }
}

void ListSint32Float::MergeFrom(const ListSint32Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Float::CopyFrom(const ListSint32Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Float::IsInitialized() const {
  return true;
}

void ListSint32Float::Swap(ListSint32Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Float::InternalSwap(ListSint32Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Int32::kKFieldNumber;
const int ListSint32Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Int32::ListSint32Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Int32)
}
ListSint32Int32::ListSint32Int32(const ListSint32Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Int32)
}

void ListSint32Int32::SharedCtor() {
}

ListSint32Int32::~ListSint32Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Int32)
  SharedDtor();
}

void ListSint32Int32::SharedDtor() {
}

void ListSint32Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Int32& ListSint32Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Int32.base);
  return *internal_default_instance();
}


void ListSint32Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Int32)
  return false;
#undef DO_
}

void ListSint32Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Int32)
}

::google::protobuf::uint8* ListSint32Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Int32)
  return target;
}

size_t ListSint32Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Int32)
    MergeFrom(*source);
  }
}

void ListSint32Int32::MergeFrom(const ListSint32Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Int32::CopyFrom(const ListSint32Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Int32::IsInitialized() const {
  return true;
}

void ListSint32Int32::Swap(ListSint32Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Int32::InternalSwap(ListSint32Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Int64::kKFieldNumber;
const int ListSint32Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Int64::ListSint32Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Int64)
}
ListSint32Int64::ListSint32Int64(const ListSint32Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Int64)
}

void ListSint32Int64::SharedCtor() {
}

ListSint32Int64::~ListSint32Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Int64)
  SharedDtor();
}

void ListSint32Int64::SharedDtor() {
}

void ListSint32Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Int64& ListSint32Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Int64.base);
  return *internal_default_instance();
}


void ListSint32Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Int64)
  return false;
#undef DO_
}

void ListSint32Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Int64)
}

::google::protobuf::uint8* ListSint32Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Int64)
  return target;
}

size_t ListSint32Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Int64)
    MergeFrom(*source);
  }
}

void ListSint32Int64::MergeFrom(const ListSint32Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Int64::CopyFrom(const ListSint32Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Int64::IsInitialized() const {
  return true;
}

void ListSint32Int64::Swap(ListSint32Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Int64::InternalSwap(ListSint32Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Uint32::kKFieldNumber;
const int ListSint32Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Uint32::ListSint32Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Uint32)
}
ListSint32Uint32::ListSint32Uint32(const ListSint32Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Uint32)
}

void ListSint32Uint32::SharedCtor() {
}

ListSint32Uint32::~ListSint32Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Uint32)
  SharedDtor();
}

void ListSint32Uint32::SharedDtor() {
}

void ListSint32Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Uint32& ListSint32Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Uint32.base);
  return *internal_default_instance();
}


void ListSint32Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Uint32)
  return false;
#undef DO_
}

void ListSint32Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Uint32)
}

::google::protobuf::uint8* ListSint32Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Uint32)
  return target;
}

size_t ListSint32Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Uint32)
    MergeFrom(*source);
  }
}

void ListSint32Uint32::MergeFrom(const ListSint32Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Uint32::CopyFrom(const ListSint32Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Uint32::IsInitialized() const {
  return true;
}

void ListSint32Uint32::Swap(ListSint32Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Uint32::InternalSwap(ListSint32Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Uint64::kKFieldNumber;
const int ListSint32Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Uint64::ListSint32Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Uint64)
}
ListSint32Uint64::ListSint32Uint64(const ListSint32Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Uint64)
}

void ListSint32Uint64::SharedCtor() {
}

ListSint32Uint64::~ListSint32Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Uint64)
  SharedDtor();
}

void ListSint32Uint64::SharedDtor() {
}

void ListSint32Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Uint64& ListSint32Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Uint64.base);
  return *internal_default_instance();
}


void ListSint32Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Uint64)
  return false;
#undef DO_
}

void ListSint32Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Uint64)
}

::google::protobuf::uint8* ListSint32Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Uint64)
  return target;
}

size_t ListSint32Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Uint64)
    MergeFrom(*source);
  }
}

void ListSint32Uint64::MergeFrom(const ListSint32Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Uint64::CopyFrom(const ListSint32Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Uint64::IsInitialized() const {
  return true;
}

void ListSint32Uint64::Swap(ListSint32Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Uint64::InternalSwap(ListSint32Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Sint32::kKFieldNumber;
const int ListSint32Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Sint32::ListSint32Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Sint32)
}
ListSint32Sint32::ListSint32Sint32(const ListSint32Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Sint32)
}

void ListSint32Sint32::SharedCtor() {
}

ListSint32Sint32::~ListSint32Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Sint32)
  SharedDtor();
}

void ListSint32Sint32::SharedDtor() {
}

void ListSint32Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Sint32& ListSint32Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Sint32.base);
  return *internal_default_instance();
}


void ListSint32Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Sint32)
  return false;
#undef DO_
}

void ListSint32Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Sint32)
}

::google::protobuf::uint8* ListSint32Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Sint32)
  return target;
}

size_t ListSint32Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Sint32)
    MergeFrom(*source);
  }
}

void ListSint32Sint32::MergeFrom(const ListSint32Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Sint32::CopyFrom(const ListSint32Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Sint32::IsInitialized() const {
  return true;
}

void ListSint32Sint32::Swap(ListSint32Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Sint32::InternalSwap(ListSint32Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Sint64::kKFieldNumber;
const int ListSint32Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Sint64::ListSint32Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Sint64)
}
ListSint32Sint64::ListSint32Sint64(const ListSint32Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Sint64)
}

void ListSint32Sint64::SharedCtor() {
}

ListSint32Sint64::~ListSint32Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Sint64)
  SharedDtor();
}

void ListSint32Sint64::SharedDtor() {
}

void ListSint32Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Sint64& ListSint32Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Sint64.base);
  return *internal_default_instance();
}


void ListSint32Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Sint64)
  return false;
#undef DO_
}

void ListSint32Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Sint64)
}

::google::protobuf::uint8* ListSint32Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Sint64)
  return target;
}

size_t ListSint32Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Sint64)
    MergeFrom(*source);
  }
}

void ListSint32Sint64::MergeFrom(const ListSint32Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Sint64::CopyFrom(const ListSint32Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Sint64::IsInitialized() const {
  return true;
}

void ListSint32Sint64::Swap(ListSint32Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Sint64::InternalSwap(ListSint32Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Fixed32::kKFieldNumber;
const int ListSint32Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Fixed32::ListSint32Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Fixed32)
}
ListSint32Fixed32::ListSint32Fixed32(const ListSint32Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Fixed32)
}

void ListSint32Fixed32::SharedCtor() {
}

ListSint32Fixed32::~ListSint32Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Fixed32)
  SharedDtor();
}

void ListSint32Fixed32::SharedDtor() {
}

void ListSint32Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Fixed32& ListSint32Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Fixed32.base);
  return *internal_default_instance();
}


void ListSint32Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Fixed32)
  return false;
#undef DO_
}

void ListSint32Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Fixed32)
}

::google::protobuf::uint8* ListSint32Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Fixed32)
  return target;
}

size_t ListSint32Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Fixed32)
    MergeFrom(*source);
  }
}

void ListSint32Fixed32::MergeFrom(const ListSint32Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Fixed32::CopyFrom(const ListSint32Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Fixed32::IsInitialized() const {
  return true;
}

void ListSint32Fixed32::Swap(ListSint32Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Fixed32::InternalSwap(ListSint32Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Fixed64::kKFieldNumber;
const int ListSint32Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Fixed64::ListSint32Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Fixed64)
}
ListSint32Fixed64::ListSint32Fixed64(const ListSint32Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Fixed64)
}

void ListSint32Fixed64::SharedCtor() {
}

ListSint32Fixed64::~ListSint32Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Fixed64)
  SharedDtor();
}

void ListSint32Fixed64::SharedDtor() {
}

void ListSint32Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Fixed64& ListSint32Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Fixed64.base);
  return *internal_default_instance();
}


void ListSint32Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Fixed64)
  return false;
#undef DO_
}

void ListSint32Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Fixed64)
}

::google::protobuf::uint8* ListSint32Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Fixed64)
  return target;
}

size_t ListSint32Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Fixed64)
    MergeFrom(*source);
  }
}

void ListSint32Fixed64::MergeFrom(const ListSint32Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Fixed64::CopyFrom(const ListSint32Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Fixed64::IsInitialized() const {
  return true;
}

void ListSint32Fixed64::Swap(ListSint32Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Fixed64::InternalSwap(ListSint32Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Sfixed32::kKFieldNumber;
const int ListSint32Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Sfixed32::ListSint32Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Sfixed32)
}
ListSint32Sfixed32::ListSint32Sfixed32(const ListSint32Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Sfixed32)
}

void ListSint32Sfixed32::SharedCtor() {
}

ListSint32Sfixed32::~ListSint32Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Sfixed32)
  SharedDtor();
}

void ListSint32Sfixed32::SharedDtor() {
}

void ListSint32Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Sfixed32& ListSint32Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Sfixed32.base);
  return *internal_default_instance();
}


void ListSint32Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Sfixed32)
  return false;
#undef DO_
}

void ListSint32Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Sfixed32)
}

::google::protobuf::uint8* ListSint32Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Sfixed32)
  return target;
}

size_t ListSint32Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Sfixed32)
    MergeFrom(*source);
  }
}

void ListSint32Sfixed32::MergeFrom(const ListSint32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Sfixed32::CopyFrom(const ListSint32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Sfixed32::IsInitialized() const {
  return true;
}

void ListSint32Sfixed32::Swap(ListSint32Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Sfixed32::InternalSwap(ListSint32Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Sfixed64::kKFieldNumber;
const int ListSint32Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Sfixed64::ListSint32Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Sfixed64)
}
ListSint32Sfixed64::ListSint32Sfixed64(const ListSint32Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Sfixed64)
}

void ListSint32Sfixed64::SharedCtor() {
}

ListSint32Sfixed64::~ListSint32Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Sfixed64)
  SharedDtor();
}

void ListSint32Sfixed64::SharedDtor() {
}

void ListSint32Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Sfixed64& ListSint32Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Sfixed64.base);
  return *internal_default_instance();
}


void ListSint32Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Sfixed64)
  return false;
#undef DO_
}

void ListSint32Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Sfixed64)
}

::google::protobuf::uint8* ListSint32Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Sfixed64)
  return target;
}

size_t ListSint32Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Sfixed64)
    MergeFrom(*source);
  }
}

void ListSint32Sfixed64::MergeFrom(const ListSint32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Sfixed64::CopyFrom(const ListSint32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Sfixed64::IsInitialized() const {
  return true;
}

void ListSint32Sfixed64::Swap(ListSint32Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Sfixed64::InternalSwap(ListSint32Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Bool::kKFieldNumber;
const int ListSint32Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Bool::ListSint32Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Bool)
}
ListSint32Bool::ListSint32Bool(const ListSint32Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Bool)
}

void ListSint32Bool::SharedCtor() {
}

ListSint32Bool::~ListSint32Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Bool)
  SharedDtor();
}

void ListSint32Bool::SharedDtor() {
}

void ListSint32Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Bool& ListSint32Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Bool.base);
  return *internal_default_instance();
}


void ListSint32Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Bool)
  return false;
#undef DO_
}

void ListSint32Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Bool)
}

::google::protobuf::uint8* ListSint32Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Bool)
  return target;
}

size_t ListSint32Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Bool)
    MergeFrom(*source);
  }
}

void ListSint32Bool::MergeFrom(const ListSint32Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Bool::CopyFrom(const ListSint32Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Bool::IsInitialized() const {
  return true;
}

void ListSint32Bool::Swap(ListSint32Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Bool::InternalSwap(ListSint32Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32String::kKFieldNumber;
const int ListSint32String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32String::ListSint32String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32String)
}
ListSint32String::ListSint32String(const ListSint32String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32String)
}

void ListSint32String::SharedCtor() {
}

ListSint32String::~ListSint32String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32String)
  SharedDtor();
}

void ListSint32String::SharedDtor() {
}

void ListSint32String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32String& ListSint32String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32String.base);
  return *internal_default_instance();
}


void ListSint32String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListSint32String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32String)
  return false;
#undef DO_
}

void ListSint32String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSint32String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32String)
}

::google::protobuf::uint8* ListSint32String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSint32String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32String)
  return target;
}

size_t ListSint32String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32String)
    MergeFrom(*source);
  }
}

void ListSint32String::MergeFrom(const ListSint32String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32String::CopyFrom(const ListSint32String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32String::IsInitialized() const {
  return true;
}

void ListSint32String::Swap(ListSint32String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32String::InternalSwap(ListSint32String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint32Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint32Bytes::kKFieldNumber;
const int ListSint32Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint32Bytes::ListSint32Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint32Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint32Bytes)
}
ListSint32Bytes::ListSint32Bytes(const ListSint32Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint32Bytes)
}

void ListSint32Bytes::SharedCtor() {
}

ListSint32Bytes::~ListSint32Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint32Bytes)
  SharedDtor();
}

void ListSint32Bytes::SharedDtor() {
}

void ListSint32Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint32Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint32Bytes& ListSint32Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint32Bytes.base);
  return *internal_default_instance();
}


void ListSint32Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint32Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint32Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint32Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint32Bytes)
  return false;
#undef DO_
}

void ListSint32Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint32Bytes)
}

::google::protobuf::uint8* ListSint32Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint32Bytes)
  return target;
}

size_t ListSint32Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint32Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint32Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint32Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint32Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint32Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint32Bytes)
    MergeFrom(*source);
  }
}

void ListSint32Bytes::MergeFrom(const ListSint32Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint32Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint32Bytes::CopyFrom(const ListSint32Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint32Bytes::IsInitialized() const {
  return true;
}

void ListSint32Bytes::Swap(ListSint32Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint32Bytes::InternalSwap(ListSint32Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint32Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Double::kKFieldNumber;
const int ListSint64Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Double::ListSint64Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Double)
}
ListSint64Double::ListSint64Double(const ListSint64Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Double)
}

void ListSint64Double::SharedCtor() {
}

ListSint64Double::~ListSint64Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Double)
  SharedDtor();
}

void ListSint64Double::SharedDtor() {
}

void ListSint64Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Double& ListSint64Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Double.base);
  return *internal_default_instance();
}


void ListSint64Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Double)
  return false;
#undef DO_
}

void ListSint64Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Double)
}

::google::protobuf::uint8* ListSint64Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Double)
  return target;
}

size_t ListSint64Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Double)
    MergeFrom(*source);
  }
}

void ListSint64Double::MergeFrom(const ListSint64Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Double::CopyFrom(const ListSint64Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Double::IsInitialized() const {
  return true;
}

void ListSint64Double::Swap(ListSint64Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Double::InternalSwap(ListSint64Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Float::kKFieldNumber;
const int ListSint64Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Float::ListSint64Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Float)
}
ListSint64Float::ListSint64Float(const ListSint64Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Float)
}

void ListSint64Float::SharedCtor() {
}

ListSint64Float::~ListSint64Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Float)
  SharedDtor();
}

void ListSint64Float::SharedDtor() {
}

void ListSint64Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Float& ListSint64Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Float.base);
  return *internal_default_instance();
}


void ListSint64Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Float)
  return false;
#undef DO_
}

void ListSint64Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Float)
}

::google::protobuf::uint8* ListSint64Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Float)
  return target;
}

size_t ListSint64Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Float)
    MergeFrom(*source);
  }
}

void ListSint64Float::MergeFrom(const ListSint64Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Float::CopyFrom(const ListSint64Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Float::IsInitialized() const {
  return true;
}

void ListSint64Float::Swap(ListSint64Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Float::InternalSwap(ListSint64Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Int32::kKFieldNumber;
const int ListSint64Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Int32::ListSint64Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Int32)
}
ListSint64Int32::ListSint64Int32(const ListSint64Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Int32)
}

void ListSint64Int32::SharedCtor() {
}

ListSint64Int32::~ListSint64Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Int32)
  SharedDtor();
}

void ListSint64Int32::SharedDtor() {
}

void ListSint64Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Int32& ListSint64Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Int32.base);
  return *internal_default_instance();
}


void ListSint64Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Int32)
  return false;
#undef DO_
}

void ListSint64Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Int32)
}

::google::protobuf::uint8* ListSint64Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Int32)
  return target;
}

size_t ListSint64Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Int32)
    MergeFrom(*source);
  }
}

void ListSint64Int32::MergeFrom(const ListSint64Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Int32::CopyFrom(const ListSint64Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Int32::IsInitialized() const {
  return true;
}

void ListSint64Int32::Swap(ListSint64Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Int32::InternalSwap(ListSint64Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Int64::kKFieldNumber;
const int ListSint64Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Int64::ListSint64Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Int64)
}
ListSint64Int64::ListSint64Int64(const ListSint64Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Int64)
}

void ListSint64Int64::SharedCtor() {
}

ListSint64Int64::~ListSint64Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Int64)
  SharedDtor();
}

void ListSint64Int64::SharedDtor() {
}

void ListSint64Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Int64& ListSint64Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Int64.base);
  return *internal_default_instance();
}


void ListSint64Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Int64)
  return false;
#undef DO_
}

void ListSint64Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Int64)
}

::google::protobuf::uint8* ListSint64Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Int64)
  return target;
}

size_t ListSint64Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Int64)
    MergeFrom(*source);
  }
}

void ListSint64Int64::MergeFrom(const ListSint64Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Int64::CopyFrom(const ListSint64Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Int64::IsInitialized() const {
  return true;
}

void ListSint64Int64::Swap(ListSint64Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Int64::InternalSwap(ListSint64Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Uint32::kKFieldNumber;
const int ListSint64Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Uint32::ListSint64Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Uint32)
}
ListSint64Uint32::ListSint64Uint32(const ListSint64Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Uint32)
}

void ListSint64Uint32::SharedCtor() {
}

ListSint64Uint32::~ListSint64Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Uint32)
  SharedDtor();
}

void ListSint64Uint32::SharedDtor() {
}

void ListSint64Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Uint32& ListSint64Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Uint32.base);
  return *internal_default_instance();
}


void ListSint64Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Uint32)
  return false;
#undef DO_
}

void ListSint64Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Uint32)
}

::google::protobuf::uint8* ListSint64Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Uint32)
  return target;
}

size_t ListSint64Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Uint32)
    MergeFrom(*source);
  }
}

void ListSint64Uint32::MergeFrom(const ListSint64Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Uint32::CopyFrom(const ListSint64Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Uint32::IsInitialized() const {
  return true;
}

void ListSint64Uint32::Swap(ListSint64Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Uint32::InternalSwap(ListSint64Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Uint64::kKFieldNumber;
const int ListSint64Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Uint64::ListSint64Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Uint64)
}
ListSint64Uint64::ListSint64Uint64(const ListSint64Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Uint64)
}

void ListSint64Uint64::SharedCtor() {
}

ListSint64Uint64::~ListSint64Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Uint64)
  SharedDtor();
}

void ListSint64Uint64::SharedDtor() {
}

void ListSint64Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Uint64& ListSint64Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Uint64.base);
  return *internal_default_instance();
}


void ListSint64Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Uint64)
  return false;
#undef DO_
}

void ListSint64Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Uint64)
}

::google::protobuf::uint8* ListSint64Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Uint64)
  return target;
}

size_t ListSint64Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Uint64)
    MergeFrom(*source);
  }
}

void ListSint64Uint64::MergeFrom(const ListSint64Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Uint64::CopyFrom(const ListSint64Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Uint64::IsInitialized() const {
  return true;
}

void ListSint64Uint64::Swap(ListSint64Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Uint64::InternalSwap(ListSint64Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Sint32::kKFieldNumber;
const int ListSint64Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Sint32::ListSint64Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Sint32)
}
ListSint64Sint32::ListSint64Sint32(const ListSint64Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Sint32)
}

void ListSint64Sint32::SharedCtor() {
}

ListSint64Sint32::~ListSint64Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Sint32)
  SharedDtor();
}

void ListSint64Sint32::SharedDtor() {
}

void ListSint64Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Sint32& ListSint64Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Sint32.base);
  return *internal_default_instance();
}


void ListSint64Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Sint32)
  return false;
#undef DO_
}

void ListSint64Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Sint32)
}

::google::protobuf::uint8* ListSint64Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Sint32)
  return target;
}

size_t ListSint64Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Sint32)
    MergeFrom(*source);
  }
}

void ListSint64Sint32::MergeFrom(const ListSint64Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Sint32::CopyFrom(const ListSint64Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Sint32::IsInitialized() const {
  return true;
}

void ListSint64Sint32::Swap(ListSint64Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Sint32::InternalSwap(ListSint64Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Sint64::kKFieldNumber;
const int ListSint64Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Sint64::ListSint64Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Sint64)
}
ListSint64Sint64::ListSint64Sint64(const ListSint64Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Sint64)
}

void ListSint64Sint64::SharedCtor() {
}

ListSint64Sint64::~ListSint64Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Sint64)
  SharedDtor();
}

void ListSint64Sint64::SharedDtor() {
}

void ListSint64Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Sint64& ListSint64Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Sint64.base);
  return *internal_default_instance();
}


void ListSint64Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Sint64)
  return false;
#undef DO_
}

void ListSint64Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Sint64)
}

::google::protobuf::uint8* ListSint64Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Sint64)
  return target;
}

size_t ListSint64Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Sint64)
    MergeFrom(*source);
  }
}

void ListSint64Sint64::MergeFrom(const ListSint64Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Sint64::CopyFrom(const ListSint64Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Sint64::IsInitialized() const {
  return true;
}

void ListSint64Sint64::Swap(ListSint64Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Sint64::InternalSwap(ListSint64Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Fixed32::kKFieldNumber;
const int ListSint64Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Fixed32::ListSint64Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Fixed32)
}
ListSint64Fixed32::ListSint64Fixed32(const ListSint64Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Fixed32)
}

void ListSint64Fixed32::SharedCtor() {
}

ListSint64Fixed32::~ListSint64Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Fixed32)
  SharedDtor();
}

void ListSint64Fixed32::SharedDtor() {
}

void ListSint64Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Fixed32& ListSint64Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Fixed32.base);
  return *internal_default_instance();
}


void ListSint64Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Fixed32)
  return false;
#undef DO_
}

void ListSint64Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Fixed32)
}

::google::protobuf::uint8* ListSint64Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Fixed32)
  return target;
}

size_t ListSint64Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Fixed32)
    MergeFrom(*source);
  }
}

void ListSint64Fixed32::MergeFrom(const ListSint64Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Fixed32::CopyFrom(const ListSint64Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Fixed32::IsInitialized() const {
  return true;
}

void ListSint64Fixed32::Swap(ListSint64Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Fixed32::InternalSwap(ListSint64Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Fixed64::kKFieldNumber;
const int ListSint64Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Fixed64::ListSint64Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Fixed64)
}
ListSint64Fixed64::ListSint64Fixed64(const ListSint64Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Fixed64)
}

void ListSint64Fixed64::SharedCtor() {
}

ListSint64Fixed64::~ListSint64Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Fixed64)
  SharedDtor();
}

void ListSint64Fixed64::SharedDtor() {
}

void ListSint64Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Fixed64& ListSint64Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Fixed64.base);
  return *internal_default_instance();
}


void ListSint64Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Fixed64)
  return false;
#undef DO_
}

void ListSint64Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Fixed64)
}

::google::protobuf::uint8* ListSint64Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Fixed64)
  return target;
}

size_t ListSint64Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Fixed64)
    MergeFrom(*source);
  }
}

void ListSint64Fixed64::MergeFrom(const ListSint64Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Fixed64::CopyFrom(const ListSint64Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Fixed64::IsInitialized() const {
  return true;
}

void ListSint64Fixed64::Swap(ListSint64Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Fixed64::InternalSwap(ListSint64Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Sfixed32::kKFieldNumber;
const int ListSint64Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Sfixed32::ListSint64Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Sfixed32)
}
ListSint64Sfixed32::ListSint64Sfixed32(const ListSint64Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Sfixed32)
}

void ListSint64Sfixed32::SharedCtor() {
}

ListSint64Sfixed32::~ListSint64Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Sfixed32)
  SharedDtor();
}

void ListSint64Sfixed32::SharedDtor() {
}

void ListSint64Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Sfixed32& ListSint64Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Sfixed32.base);
  return *internal_default_instance();
}


void ListSint64Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Sfixed32)
  return false;
#undef DO_
}

void ListSint64Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Sfixed32)
}

::google::protobuf::uint8* ListSint64Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Sfixed32)
  return target;
}

size_t ListSint64Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Sfixed32)
    MergeFrom(*source);
  }
}

void ListSint64Sfixed32::MergeFrom(const ListSint64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Sfixed32::CopyFrom(const ListSint64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Sfixed32::IsInitialized() const {
  return true;
}

void ListSint64Sfixed32::Swap(ListSint64Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Sfixed32::InternalSwap(ListSint64Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Sfixed64::kKFieldNumber;
const int ListSint64Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Sfixed64::ListSint64Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Sfixed64)
}
ListSint64Sfixed64::ListSint64Sfixed64(const ListSint64Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Sfixed64)
}

void ListSint64Sfixed64::SharedCtor() {
}

ListSint64Sfixed64::~ListSint64Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Sfixed64)
  SharedDtor();
}

void ListSint64Sfixed64::SharedDtor() {
}

void ListSint64Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Sfixed64& ListSint64Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Sfixed64.base);
  return *internal_default_instance();
}


void ListSint64Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Sfixed64)
  return false;
#undef DO_
}

void ListSint64Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Sfixed64)
}

::google::protobuf::uint8* ListSint64Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Sfixed64)
  return target;
}

size_t ListSint64Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Sfixed64)
    MergeFrom(*source);
  }
}

void ListSint64Sfixed64::MergeFrom(const ListSint64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Sfixed64::CopyFrom(const ListSint64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Sfixed64::IsInitialized() const {
  return true;
}

void ListSint64Sfixed64::Swap(ListSint64Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Sfixed64::InternalSwap(ListSint64Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Bool::kKFieldNumber;
const int ListSint64Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Bool::ListSint64Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Bool)
}
ListSint64Bool::ListSint64Bool(const ListSint64Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Bool)
}

void ListSint64Bool::SharedCtor() {
}

ListSint64Bool::~ListSint64Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Bool)
  SharedDtor();
}

void ListSint64Bool::SharedDtor() {
}

void ListSint64Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Bool& ListSint64Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Bool.base);
  return *internal_default_instance();
}


void ListSint64Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Bool)
  return false;
#undef DO_
}

void ListSint64Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Bool)
}

::google::protobuf::uint8* ListSint64Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Bool)
  return target;
}

size_t ListSint64Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Bool)
    MergeFrom(*source);
  }
}

void ListSint64Bool::MergeFrom(const ListSint64Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Bool::CopyFrom(const ListSint64Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Bool::IsInitialized() const {
  return true;
}

void ListSint64Bool::Swap(ListSint64Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Bool::InternalSwap(ListSint64Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64String::kKFieldNumber;
const int ListSint64String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64String::ListSint64String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64String)
}
ListSint64String::ListSint64String(const ListSint64String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64String)
}

void ListSint64String::SharedCtor() {
}

ListSint64String::~ListSint64String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64String)
  SharedDtor();
}

void ListSint64String::SharedDtor() {
}

void ListSint64String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64String& ListSint64String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64String.base);
  return *internal_default_instance();
}


void ListSint64String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListSint64String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64String)
  return false;
#undef DO_
}

void ListSint64String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSint64String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64String)
}

::google::protobuf::uint8* ListSint64String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSint64String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64String)
  return target;
}

size_t ListSint64String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64String)
    MergeFrom(*source);
  }
}

void ListSint64String::MergeFrom(const ListSint64String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64String::CopyFrom(const ListSint64String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64String::IsInitialized() const {
  return true;
}

void ListSint64String::Swap(ListSint64String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64String::InternalSwap(ListSint64String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSint64Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSint64Bytes::kKFieldNumber;
const int ListSint64Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSint64Bytes::ListSint64Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSint64Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSint64Bytes)
}
ListSint64Bytes::ListSint64Bytes(const ListSint64Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSint64Bytes)
}

void ListSint64Bytes::SharedCtor() {
}

ListSint64Bytes::~ListSint64Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSint64Bytes)
  SharedDtor();
}

void ListSint64Bytes::SharedDtor() {
}

void ListSint64Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSint64Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSint64Bytes& ListSint64Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSint64Bytes.base);
  return *internal_default_instance();
}


void ListSint64Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSint64Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSint64Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSint64Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSint64Bytes)
  return false;
#undef DO_
}

void ListSint64Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
  }
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->k(i), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSint64Bytes)
}

::google::protobuf::uint8* ListSint64Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSint64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSint64Bytes)
  return target;
}

size_t ListSint64Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSint64Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 k = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->k_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSint64Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSint64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSint64Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSint64Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSint64Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSint64Bytes)
    MergeFrom(*source);
  }
}

void ListSint64Bytes::MergeFrom(const ListSint64Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSint64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSint64Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSint64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSint64Bytes::CopyFrom(const ListSint64Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSint64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSint64Bytes::IsInitialized() const {
  return true;
}

void ListSint64Bytes::Swap(ListSint64Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSint64Bytes::InternalSwap(ListSint64Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSint64Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Double::kKFieldNumber;
const int ListFixed32Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Double::ListFixed32Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Double)
}
ListFixed32Double::ListFixed32Double(const ListFixed32Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Double)
}

void ListFixed32Double::SharedCtor() {
}

ListFixed32Double::~ListFixed32Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Double)
  SharedDtor();
}

void ListFixed32Double::SharedDtor() {
}

void ListFixed32Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Double& ListFixed32Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Double.base);
  return *internal_default_instance();
}


void ListFixed32Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Double)
  return false;
#undef DO_
}

void ListFixed32Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Double)
}

::google::protobuf::uint8* ListFixed32Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Double)
  return target;
}

size_t ListFixed32Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Double)
    MergeFrom(*source);
  }
}

void ListFixed32Double::MergeFrom(const ListFixed32Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Double::CopyFrom(const ListFixed32Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Double::IsInitialized() const {
  return true;
}

void ListFixed32Double::Swap(ListFixed32Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Double::InternalSwap(ListFixed32Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Float::kKFieldNumber;
const int ListFixed32Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Float::ListFixed32Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Float)
}
ListFixed32Float::ListFixed32Float(const ListFixed32Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Float)
}

void ListFixed32Float::SharedCtor() {
}

ListFixed32Float::~ListFixed32Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Float)
  SharedDtor();
}

void ListFixed32Float::SharedDtor() {
}

void ListFixed32Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Float& ListFixed32Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Float.base);
  return *internal_default_instance();
}


void ListFixed32Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Float)
  return false;
#undef DO_
}

void ListFixed32Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Float)
}

::google::protobuf::uint8* ListFixed32Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Float)
  return target;
}

size_t ListFixed32Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Float)
    MergeFrom(*source);
  }
}

void ListFixed32Float::MergeFrom(const ListFixed32Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Float::CopyFrom(const ListFixed32Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Float::IsInitialized() const {
  return true;
}

void ListFixed32Float::Swap(ListFixed32Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Float::InternalSwap(ListFixed32Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Int32::kKFieldNumber;
const int ListFixed32Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Int32::ListFixed32Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Int32)
}
ListFixed32Int32::ListFixed32Int32(const ListFixed32Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Int32)
}

void ListFixed32Int32::SharedCtor() {
}

ListFixed32Int32::~ListFixed32Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Int32)
  SharedDtor();
}

void ListFixed32Int32::SharedDtor() {
}

void ListFixed32Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Int32& ListFixed32Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Int32.base);
  return *internal_default_instance();
}


void ListFixed32Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Int32)
  return false;
#undef DO_
}

void ListFixed32Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Int32)
}

::google::protobuf::uint8* ListFixed32Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Int32)
  return target;
}

size_t ListFixed32Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Int32)
    MergeFrom(*source);
  }
}

void ListFixed32Int32::MergeFrom(const ListFixed32Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Int32::CopyFrom(const ListFixed32Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Int32::IsInitialized() const {
  return true;
}

void ListFixed32Int32::Swap(ListFixed32Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Int32::InternalSwap(ListFixed32Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Int64::kKFieldNumber;
const int ListFixed32Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Int64::ListFixed32Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Int64)
}
ListFixed32Int64::ListFixed32Int64(const ListFixed32Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Int64)
}

void ListFixed32Int64::SharedCtor() {
}

ListFixed32Int64::~ListFixed32Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Int64)
  SharedDtor();
}

void ListFixed32Int64::SharedDtor() {
}

void ListFixed32Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Int64& ListFixed32Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Int64.base);
  return *internal_default_instance();
}


void ListFixed32Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Int64)
  return false;
#undef DO_
}

void ListFixed32Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Int64)
}

::google::protobuf::uint8* ListFixed32Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Int64)
  return target;
}

size_t ListFixed32Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Int64)
    MergeFrom(*source);
  }
}

void ListFixed32Int64::MergeFrom(const ListFixed32Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Int64::CopyFrom(const ListFixed32Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Int64::IsInitialized() const {
  return true;
}

void ListFixed32Int64::Swap(ListFixed32Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Int64::InternalSwap(ListFixed32Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Uint32::kKFieldNumber;
const int ListFixed32Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Uint32::ListFixed32Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Uint32)
}
ListFixed32Uint32::ListFixed32Uint32(const ListFixed32Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Uint32)
}

void ListFixed32Uint32::SharedCtor() {
}

ListFixed32Uint32::~ListFixed32Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Uint32)
  SharedDtor();
}

void ListFixed32Uint32::SharedDtor() {
}

void ListFixed32Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Uint32& ListFixed32Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Uint32.base);
  return *internal_default_instance();
}


void ListFixed32Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Uint32)
  return false;
#undef DO_
}

void ListFixed32Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Uint32)
}

::google::protobuf::uint8* ListFixed32Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Uint32)
  return target;
}

size_t ListFixed32Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Uint32)
    MergeFrom(*source);
  }
}

void ListFixed32Uint32::MergeFrom(const ListFixed32Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Uint32::CopyFrom(const ListFixed32Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Uint32::IsInitialized() const {
  return true;
}

void ListFixed32Uint32::Swap(ListFixed32Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Uint32::InternalSwap(ListFixed32Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Uint64::kKFieldNumber;
const int ListFixed32Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Uint64::ListFixed32Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Uint64)
}
ListFixed32Uint64::ListFixed32Uint64(const ListFixed32Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Uint64)
}

void ListFixed32Uint64::SharedCtor() {
}

ListFixed32Uint64::~ListFixed32Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Uint64)
  SharedDtor();
}

void ListFixed32Uint64::SharedDtor() {
}

void ListFixed32Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Uint64& ListFixed32Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Uint64.base);
  return *internal_default_instance();
}


void ListFixed32Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Uint64)
  return false;
#undef DO_
}

void ListFixed32Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Uint64)
}

::google::protobuf::uint8* ListFixed32Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Uint64)
  return target;
}

size_t ListFixed32Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Uint64)
    MergeFrom(*source);
  }
}

void ListFixed32Uint64::MergeFrom(const ListFixed32Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Uint64::CopyFrom(const ListFixed32Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Uint64::IsInitialized() const {
  return true;
}

void ListFixed32Uint64::Swap(ListFixed32Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Uint64::InternalSwap(ListFixed32Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Sint32::kKFieldNumber;
const int ListFixed32Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Sint32::ListFixed32Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Sint32)
}
ListFixed32Sint32::ListFixed32Sint32(const ListFixed32Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Sint32)
}

void ListFixed32Sint32::SharedCtor() {
}

ListFixed32Sint32::~ListFixed32Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Sint32)
  SharedDtor();
}

void ListFixed32Sint32::SharedDtor() {
}

void ListFixed32Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Sint32& ListFixed32Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Sint32.base);
  return *internal_default_instance();
}


void ListFixed32Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Sint32)
  return false;
#undef DO_
}

void ListFixed32Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Sint32)
}

::google::protobuf::uint8* ListFixed32Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Sint32)
  return target;
}

size_t ListFixed32Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Sint32)
    MergeFrom(*source);
  }
}

void ListFixed32Sint32::MergeFrom(const ListFixed32Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Sint32::CopyFrom(const ListFixed32Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Sint32::IsInitialized() const {
  return true;
}

void ListFixed32Sint32::Swap(ListFixed32Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Sint32::InternalSwap(ListFixed32Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Sint64::kKFieldNumber;
const int ListFixed32Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Sint64::ListFixed32Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Sint64)
}
ListFixed32Sint64::ListFixed32Sint64(const ListFixed32Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Sint64)
}

void ListFixed32Sint64::SharedCtor() {
}

ListFixed32Sint64::~ListFixed32Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Sint64)
  SharedDtor();
}

void ListFixed32Sint64::SharedDtor() {
}

void ListFixed32Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Sint64& ListFixed32Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Sint64.base);
  return *internal_default_instance();
}


void ListFixed32Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Sint64)
  return false;
#undef DO_
}

void ListFixed32Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Sint64)
}

::google::protobuf::uint8* ListFixed32Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Sint64)
  return target;
}

size_t ListFixed32Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Sint64)
    MergeFrom(*source);
  }
}

void ListFixed32Sint64::MergeFrom(const ListFixed32Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Sint64::CopyFrom(const ListFixed32Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Sint64::IsInitialized() const {
  return true;
}

void ListFixed32Sint64::Swap(ListFixed32Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Sint64::InternalSwap(ListFixed32Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Fixed32::kKFieldNumber;
const int ListFixed32Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Fixed32::ListFixed32Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Fixed32)
}
ListFixed32Fixed32::ListFixed32Fixed32(const ListFixed32Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Fixed32)
}

void ListFixed32Fixed32::SharedCtor() {
}

ListFixed32Fixed32::~ListFixed32Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Fixed32)
  SharedDtor();
}

void ListFixed32Fixed32::SharedDtor() {
}

void ListFixed32Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Fixed32& ListFixed32Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Fixed32.base);
  return *internal_default_instance();
}


void ListFixed32Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Fixed32)
  return false;
#undef DO_
}

void ListFixed32Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Fixed32)
}

::google::protobuf::uint8* ListFixed32Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Fixed32)
  return target;
}

size_t ListFixed32Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Fixed32)
    MergeFrom(*source);
  }
}

void ListFixed32Fixed32::MergeFrom(const ListFixed32Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Fixed32::CopyFrom(const ListFixed32Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Fixed32::IsInitialized() const {
  return true;
}

void ListFixed32Fixed32::Swap(ListFixed32Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Fixed32::InternalSwap(ListFixed32Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Fixed64::kKFieldNumber;
const int ListFixed32Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Fixed64::ListFixed32Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Fixed64)
}
ListFixed32Fixed64::ListFixed32Fixed64(const ListFixed32Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Fixed64)
}

void ListFixed32Fixed64::SharedCtor() {
}

ListFixed32Fixed64::~ListFixed32Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Fixed64)
  SharedDtor();
}

void ListFixed32Fixed64::SharedDtor() {
}

void ListFixed32Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Fixed64& ListFixed32Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Fixed64.base);
  return *internal_default_instance();
}


void ListFixed32Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Fixed64)
  return false;
#undef DO_
}

void ListFixed32Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Fixed64)
}

::google::protobuf::uint8* ListFixed32Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Fixed64)
  return target;
}

size_t ListFixed32Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Fixed64)
    MergeFrom(*source);
  }
}

void ListFixed32Fixed64::MergeFrom(const ListFixed32Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Fixed64::CopyFrom(const ListFixed32Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Fixed64::IsInitialized() const {
  return true;
}

void ListFixed32Fixed64::Swap(ListFixed32Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Fixed64::InternalSwap(ListFixed32Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Sfixed32::kKFieldNumber;
const int ListFixed32Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Sfixed32::ListFixed32Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Sfixed32)
}
ListFixed32Sfixed32::ListFixed32Sfixed32(const ListFixed32Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Sfixed32)
}

void ListFixed32Sfixed32::SharedCtor() {
}

ListFixed32Sfixed32::~ListFixed32Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Sfixed32)
  SharedDtor();
}

void ListFixed32Sfixed32::SharedDtor() {
}

void ListFixed32Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Sfixed32& ListFixed32Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Sfixed32.base);
  return *internal_default_instance();
}


void ListFixed32Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Sfixed32)
  return false;
#undef DO_
}

void ListFixed32Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Sfixed32)
}

::google::protobuf::uint8* ListFixed32Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Sfixed32)
  return target;
}

size_t ListFixed32Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Sfixed32)
    MergeFrom(*source);
  }
}

void ListFixed32Sfixed32::MergeFrom(const ListFixed32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Sfixed32::CopyFrom(const ListFixed32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Sfixed32::IsInitialized() const {
  return true;
}

void ListFixed32Sfixed32::Swap(ListFixed32Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Sfixed32::InternalSwap(ListFixed32Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Sfixed64::kKFieldNumber;
const int ListFixed32Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Sfixed64::ListFixed32Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Sfixed64)
}
ListFixed32Sfixed64::ListFixed32Sfixed64(const ListFixed32Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Sfixed64)
}

void ListFixed32Sfixed64::SharedCtor() {
}

ListFixed32Sfixed64::~ListFixed32Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Sfixed64)
  SharedDtor();
}

void ListFixed32Sfixed64::SharedDtor() {
}

void ListFixed32Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Sfixed64& ListFixed32Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Sfixed64.base);
  return *internal_default_instance();
}


void ListFixed32Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Sfixed64)
  return false;
#undef DO_
}

void ListFixed32Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Sfixed64)
}

::google::protobuf::uint8* ListFixed32Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Sfixed64)
  return target;
}

size_t ListFixed32Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Sfixed64)
    MergeFrom(*source);
  }
}

void ListFixed32Sfixed64::MergeFrom(const ListFixed32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Sfixed64::CopyFrom(const ListFixed32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Sfixed64::IsInitialized() const {
  return true;
}

void ListFixed32Sfixed64::Swap(ListFixed32Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Sfixed64::InternalSwap(ListFixed32Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Bool::kKFieldNumber;
const int ListFixed32Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Bool::ListFixed32Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Bool)
}
ListFixed32Bool::ListFixed32Bool(const ListFixed32Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Bool)
}

void ListFixed32Bool::SharedCtor() {
}

ListFixed32Bool::~ListFixed32Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Bool)
  SharedDtor();
}

void ListFixed32Bool::SharedDtor() {
}

void ListFixed32Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Bool& ListFixed32Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Bool.base);
  return *internal_default_instance();
}


void ListFixed32Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Bool)
  return false;
#undef DO_
}

void ListFixed32Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Bool)
}

::google::protobuf::uint8* ListFixed32Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Bool)
  return target;
}

size_t ListFixed32Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Bool)
    MergeFrom(*source);
  }
}

void ListFixed32Bool::MergeFrom(const ListFixed32Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Bool::CopyFrom(const ListFixed32Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Bool::IsInitialized() const {
  return true;
}

void ListFixed32Bool::Swap(ListFixed32Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Bool::InternalSwap(ListFixed32Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32String::kKFieldNumber;
const int ListFixed32String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32String::ListFixed32String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32String)
}
ListFixed32String::ListFixed32String(const ListFixed32String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32String)
}

void ListFixed32String::SharedCtor() {
}

ListFixed32String::~ListFixed32String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32String)
  SharedDtor();
}

void ListFixed32String::SharedDtor() {
}

void ListFixed32String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32String& ListFixed32String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32String.base);
  return *internal_default_instance();
}


void ListFixed32String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListFixed32String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32String)
  return false;
#undef DO_
}

void ListFixed32String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFixed32String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32String)
}

::google::protobuf::uint8* ListFixed32String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFixed32String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32String)
  return target;
}

size_t ListFixed32String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32String)
    MergeFrom(*source);
  }
}

void ListFixed32String::MergeFrom(const ListFixed32String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32String::CopyFrom(const ListFixed32String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32String::IsInitialized() const {
  return true;
}

void ListFixed32String::Swap(ListFixed32String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32String::InternalSwap(ListFixed32String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed32Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed32Bytes::kKFieldNumber;
const int ListFixed32Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed32Bytes::ListFixed32Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed32Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed32Bytes)
}
ListFixed32Bytes::ListFixed32Bytes(const ListFixed32Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed32Bytes)
}

void ListFixed32Bytes::SharedCtor() {
}

ListFixed32Bytes::~ListFixed32Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed32Bytes)
  SharedDtor();
}

void ListFixed32Bytes::SharedDtor() {
}

void ListFixed32Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed32Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed32Bytes& ListFixed32Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed32Bytes.base);
  return *internal_default_instance();
}


void ListFixed32Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed32Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed32Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed32Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed32Bytes)
  return false;
#undef DO_
}

void ListFixed32Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed32Bytes)
}

::google::protobuf::uint8* ListFixed32Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed32Bytes)
  return target;
}

size_t ListFixed32Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed32Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed32Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed32Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed32Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed32Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed32Bytes)
    MergeFrom(*source);
  }
}

void ListFixed32Bytes::MergeFrom(const ListFixed32Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed32Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed32Bytes::CopyFrom(const ListFixed32Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed32Bytes::IsInitialized() const {
  return true;
}

void ListFixed32Bytes::Swap(ListFixed32Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed32Bytes::InternalSwap(ListFixed32Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed32Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Double::kKFieldNumber;
const int ListFixed64Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Double::ListFixed64Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Double)
}
ListFixed64Double::ListFixed64Double(const ListFixed64Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Double)
}

void ListFixed64Double::SharedCtor() {
}

ListFixed64Double::~ListFixed64Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Double)
  SharedDtor();
}

void ListFixed64Double::SharedDtor() {
}

void ListFixed64Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Double& ListFixed64Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Double.base);
  return *internal_default_instance();
}


void ListFixed64Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Double)
  return false;
#undef DO_
}

void ListFixed64Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Double)
}

::google::protobuf::uint8* ListFixed64Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Double)
  return target;
}

size_t ListFixed64Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Double)
    MergeFrom(*source);
  }
}

void ListFixed64Double::MergeFrom(const ListFixed64Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Double::CopyFrom(const ListFixed64Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Double::IsInitialized() const {
  return true;
}

void ListFixed64Double::Swap(ListFixed64Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Double::InternalSwap(ListFixed64Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Float::kKFieldNumber;
const int ListFixed64Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Float::ListFixed64Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Float)
}
ListFixed64Float::ListFixed64Float(const ListFixed64Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Float)
}

void ListFixed64Float::SharedCtor() {
}

ListFixed64Float::~ListFixed64Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Float)
  SharedDtor();
}

void ListFixed64Float::SharedDtor() {
}

void ListFixed64Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Float& ListFixed64Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Float.base);
  return *internal_default_instance();
}


void ListFixed64Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Float)
  return false;
#undef DO_
}

void ListFixed64Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Float)
}

::google::protobuf::uint8* ListFixed64Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Float)
  return target;
}

size_t ListFixed64Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Float)
    MergeFrom(*source);
  }
}

void ListFixed64Float::MergeFrom(const ListFixed64Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Float::CopyFrom(const ListFixed64Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Float::IsInitialized() const {
  return true;
}

void ListFixed64Float::Swap(ListFixed64Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Float::InternalSwap(ListFixed64Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Int32::kKFieldNumber;
const int ListFixed64Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Int32::ListFixed64Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Int32)
}
ListFixed64Int32::ListFixed64Int32(const ListFixed64Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Int32)
}

void ListFixed64Int32::SharedCtor() {
}

ListFixed64Int32::~ListFixed64Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Int32)
  SharedDtor();
}

void ListFixed64Int32::SharedDtor() {
}

void ListFixed64Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Int32& ListFixed64Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Int32.base);
  return *internal_default_instance();
}


void ListFixed64Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Int32)
  return false;
#undef DO_
}

void ListFixed64Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Int32)
}

::google::protobuf::uint8* ListFixed64Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Int32)
  return target;
}

size_t ListFixed64Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Int32)
    MergeFrom(*source);
  }
}

void ListFixed64Int32::MergeFrom(const ListFixed64Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Int32::CopyFrom(const ListFixed64Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Int32::IsInitialized() const {
  return true;
}

void ListFixed64Int32::Swap(ListFixed64Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Int32::InternalSwap(ListFixed64Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Int64::kKFieldNumber;
const int ListFixed64Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Int64::ListFixed64Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Int64)
}
ListFixed64Int64::ListFixed64Int64(const ListFixed64Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Int64)
}

void ListFixed64Int64::SharedCtor() {
}

ListFixed64Int64::~ListFixed64Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Int64)
  SharedDtor();
}

void ListFixed64Int64::SharedDtor() {
}

void ListFixed64Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Int64& ListFixed64Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Int64.base);
  return *internal_default_instance();
}


void ListFixed64Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Int64)
  return false;
#undef DO_
}

void ListFixed64Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Int64)
}

::google::protobuf::uint8* ListFixed64Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Int64)
  return target;
}

size_t ListFixed64Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Int64)
    MergeFrom(*source);
  }
}

void ListFixed64Int64::MergeFrom(const ListFixed64Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Int64::CopyFrom(const ListFixed64Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Int64::IsInitialized() const {
  return true;
}

void ListFixed64Int64::Swap(ListFixed64Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Int64::InternalSwap(ListFixed64Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Uint32::kKFieldNumber;
const int ListFixed64Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Uint32::ListFixed64Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Uint32)
}
ListFixed64Uint32::ListFixed64Uint32(const ListFixed64Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Uint32)
}

void ListFixed64Uint32::SharedCtor() {
}

ListFixed64Uint32::~ListFixed64Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Uint32)
  SharedDtor();
}

void ListFixed64Uint32::SharedDtor() {
}

void ListFixed64Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Uint32& ListFixed64Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Uint32.base);
  return *internal_default_instance();
}


void ListFixed64Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Uint32)
  return false;
#undef DO_
}

void ListFixed64Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Uint32)
}

::google::protobuf::uint8* ListFixed64Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Uint32)
  return target;
}

size_t ListFixed64Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Uint32)
    MergeFrom(*source);
  }
}

void ListFixed64Uint32::MergeFrom(const ListFixed64Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Uint32::CopyFrom(const ListFixed64Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Uint32::IsInitialized() const {
  return true;
}

void ListFixed64Uint32::Swap(ListFixed64Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Uint32::InternalSwap(ListFixed64Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Uint64::kKFieldNumber;
const int ListFixed64Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Uint64::ListFixed64Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Uint64)
}
ListFixed64Uint64::ListFixed64Uint64(const ListFixed64Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Uint64)
}

void ListFixed64Uint64::SharedCtor() {
}

ListFixed64Uint64::~ListFixed64Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Uint64)
  SharedDtor();
}

void ListFixed64Uint64::SharedDtor() {
}

void ListFixed64Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Uint64& ListFixed64Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Uint64.base);
  return *internal_default_instance();
}


void ListFixed64Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Uint64)
  return false;
#undef DO_
}

void ListFixed64Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Uint64)
}

::google::protobuf::uint8* ListFixed64Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Uint64)
  return target;
}

size_t ListFixed64Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Uint64)
    MergeFrom(*source);
  }
}

void ListFixed64Uint64::MergeFrom(const ListFixed64Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Uint64::CopyFrom(const ListFixed64Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Uint64::IsInitialized() const {
  return true;
}

void ListFixed64Uint64::Swap(ListFixed64Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Uint64::InternalSwap(ListFixed64Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Sint32::kKFieldNumber;
const int ListFixed64Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Sint32::ListFixed64Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Sint32)
}
ListFixed64Sint32::ListFixed64Sint32(const ListFixed64Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Sint32)
}

void ListFixed64Sint32::SharedCtor() {
}

ListFixed64Sint32::~ListFixed64Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Sint32)
  SharedDtor();
}

void ListFixed64Sint32::SharedDtor() {
}

void ListFixed64Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Sint32& ListFixed64Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Sint32.base);
  return *internal_default_instance();
}


void ListFixed64Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Sint32)
  return false;
#undef DO_
}

void ListFixed64Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Sint32)
}

::google::protobuf::uint8* ListFixed64Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Sint32)
  return target;
}

size_t ListFixed64Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Sint32)
    MergeFrom(*source);
  }
}

void ListFixed64Sint32::MergeFrom(const ListFixed64Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Sint32::CopyFrom(const ListFixed64Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Sint32::IsInitialized() const {
  return true;
}

void ListFixed64Sint32::Swap(ListFixed64Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Sint32::InternalSwap(ListFixed64Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Sint64::kKFieldNumber;
const int ListFixed64Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Sint64::ListFixed64Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Sint64)
}
ListFixed64Sint64::ListFixed64Sint64(const ListFixed64Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Sint64)
}

void ListFixed64Sint64::SharedCtor() {
}

ListFixed64Sint64::~ListFixed64Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Sint64)
  SharedDtor();
}

void ListFixed64Sint64::SharedDtor() {
}

void ListFixed64Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Sint64& ListFixed64Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Sint64.base);
  return *internal_default_instance();
}


void ListFixed64Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Sint64)
  return false;
#undef DO_
}

void ListFixed64Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Sint64)
}

::google::protobuf::uint8* ListFixed64Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Sint64)
  return target;
}

size_t ListFixed64Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Sint64)
    MergeFrom(*source);
  }
}

void ListFixed64Sint64::MergeFrom(const ListFixed64Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Sint64::CopyFrom(const ListFixed64Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Sint64::IsInitialized() const {
  return true;
}

void ListFixed64Sint64::Swap(ListFixed64Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Sint64::InternalSwap(ListFixed64Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Fixed32::kKFieldNumber;
const int ListFixed64Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Fixed32::ListFixed64Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Fixed32)
}
ListFixed64Fixed32::ListFixed64Fixed32(const ListFixed64Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Fixed32)
}

void ListFixed64Fixed32::SharedCtor() {
}

ListFixed64Fixed32::~ListFixed64Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Fixed32)
  SharedDtor();
}

void ListFixed64Fixed32::SharedDtor() {
}

void ListFixed64Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Fixed32& ListFixed64Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Fixed32.base);
  return *internal_default_instance();
}


void ListFixed64Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Fixed32)
  return false;
#undef DO_
}

void ListFixed64Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Fixed32)
}

::google::protobuf::uint8* ListFixed64Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Fixed32)
  return target;
}

size_t ListFixed64Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Fixed32)
    MergeFrom(*source);
  }
}

void ListFixed64Fixed32::MergeFrom(const ListFixed64Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Fixed32::CopyFrom(const ListFixed64Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Fixed32::IsInitialized() const {
  return true;
}

void ListFixed64Fixed32::Swap(ListFixed64Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Fixed32::InternalSwap(ListFixed64Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Fixed64::kKFieldNumber;
const int ListFixed64Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Fixed64::ListFixed64Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Fixed64)
}
ListFixed64Fixed64::ListFixed64Fixed64(const ListFixed64Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Fixed64)
}

void ListFixed64Fixed64::SharedCtor() {
}

ListFixed64Fixed64::~ListFixed64Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Fixed64)
  SharedDtor();
}

void ListFixed64Fixed64::SharedDtor() {
}

void ListFixed64Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Fixed64& ListFixed64Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Fixed64.base);
  return *internal_default_instance();
}


void ListFixed64Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Fixed64)
  return false;
#undef DO_
}

void ListFixed64Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Fixed64)
}

::google::protobuf::uint8* ListFixed64Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Fixed64)
  return target;
}

size_t ListFixed64Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Fixed64)
    MergeFrom(*source);
  }
}

void ListFixed64Fixed64::MergeFrom(const ListFixed64Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Fixed64::CopyFrom(const ListFixed64Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Fixed64::IsInitialized() const {
  return true;
}

void ListFixed64Fixed64::Swap(ListFixed64Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Fixed64::InternalSwap(ListFixed64Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Sfixed32::kKFieldNumber;
const int ListFixed64Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Sfixed32::ListFixed64Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Sfixed32)
}
ListFixed64Sfixed32::ListFixed64Sfixed32(const ListFixed64Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Sfixed32)
}

void ListFixed64Sfixed32::SharedCtor() {
}

ListFixed64Sfixed32::~ListFixed64Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Sfixed32)
  SharedDtor();
}

void ListFixed64Sfixed32::SharedDtor() {
}

void ListFixed64Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Sfixed32& ListFixed64Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Sfixed32.base);
  return *internal_default_instance();
}


void ListFixed64Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Sfixed32)
  return false;
#undef DO_
}

void ListFixed64Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Sfixed32)
}

::google::protobuf::uint8* ListFixed64Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Sfixed32)
  return target;
}

size_t ListFixed64Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Sfixed32)
    MergeFrom(*source);
  }
}

void ListFixed64Sfixed32::MergeFrom(const ListFixed64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Sfixed32::CopyFrom(const ListFixed64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Sfixed32::IsInitialized() const {
  return true;
}

void ListFixed64Sfixed32::Swap(ListFixed64Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Sfixed32::InternalSwap(ListFixed64Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Sfixed64::kKFieldNumber;
const int ListFixed64Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Sfixed64::ListFixed64Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Sfixed64)
}
ListFixed64Sfixed64::ListFixed64Sfixed64(const ListFixed64Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Sfixed64)
}

void ListFixed64Sfixed64::SharedCtor() {
}

ListFixed64Sfixed64::~ListFixed64Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Sfixed64)
  SharedDtor();
}

void ListFixed64Sfixed64::SharedDtor() {
}

void ListFixed64Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Sfixed64& ListFixed64Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Sfixed64.base);
  return *internal_default_instance();
}


void ListFixed64Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Sfixed64)
  return false;
#undef DO_
}

void ListFixed64Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Sfixed64)
}

::google::protobuf::uint8* ListFixed64Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Sfixed64)
  return target;
}

size_t ListFixed64Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Sfixed64)
    MergeFrom(*source);
  }
}

void ListFixed64Sfixed64::MergeFrom(const ListFixed64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Sfixed64::CopyFrom(const ListFixed64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Sfixed64::IsInitialized() const {
  return true;
}

void ListFixed64Sfixed64::Swap(ListFixed64Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Sfixed64::InternalSwap(ListFixed64Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Bool::kKFieldNumber;
const int ListFixed64Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Bool::ListFixed64Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Bool)
}
ListFixed64Bool::ListFixed64Bool(const ListFixed64Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Bool)
}

void ListFixed64Bool::SharedCtor() {
}

ListFixed64Bool::~ListFixed64Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Bool)
  SharedDtor();
}

void ListFixed64Bool::SharedDtor() {
}

void ListFixed64Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Bool& ListFixed64Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Bool.base);
  return *internal_default_instance();
}


void ListFixed64Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Bool)
  return false;
#undef DO_
}

void ListFixed64Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Bool)
}

::google::protobuf::uint8* ListFixed64Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Bool)
  return target;
}

size_t ListFixed64Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Bool)
    MergeFrom(*source);
  }
}

void ListFixed64Bool::MergeFrom(const ListFixed64Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Bool::CopyFrom(const ListFixed64Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Bool::IsInitialized() const {
  return true;
}

void ListFixed64Bool::Swap(ListFixed64Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Bool::InternalSwap(ListFixed64Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64String::kKFieldNumber;
const int ListFixed64String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64String::ListFixed64String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64String)
}
ListFixed64String::ListFixed64String(const ListFixed64String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64String)
}

void ListFixed64String::SharedCtor() {
}

ListFixed64String::~ListFixed64String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64String)
  SharedDtor();
}

void ListFixed64String::SharedDtor() {
}

void ListFixed64String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64String& ListFixed64String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64String.base);
  return *internal_default_instance();
}


void ListFixed64String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListFixed64String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64String)
  return false;
#undef DO_
}

void ListFixed64String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFixed64String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64String)
}

::google::protobuf::uint8* ListFixed64String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFixed64String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64String)
  return target;
}

size_t ListFixed64String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64String)
    MergeFrom(*source);
  }
}

void ListFixed64String::MergeFrom(const ListFixed64String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64String::CopyFrom(const ListFixed64String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64String::IsInitialized() const {
  return true;
}

void ListFixed64String::Swap(ListFixed64String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64String::InternalSwap(ListFixed64String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFixed64Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFixed64Bytes::kKFieldNumber;
const int ListFixed64Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFixed64Bytes::ListFixed64Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFixed64Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFixed64Bytes)
}
ListFixed64Bytes::ListFixed64Bytes(const ListFixed64Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFixed64Bytes)
}

void ListFixed64Bytes::SharedCtor() {
}

ListFixed64Bytes::~ListFixed64Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFixed64Bytes)
  SharedDtor();
}

void ListFixed64Bytes::SharedDtor() {
}

void ListFixed64Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFixed64Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFixed64Bytes& ListFixed64Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFixed64Bytes.base);
  return *internal_default_instance();
}


void ListFixed64Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFixed64Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFixed64Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFixed64Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFixed64Bytes)
  return false;
#undef DO_
}

void ListFixed64Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFixed64Bytes)
}

::google::protobuf::uint8* ListFixed64Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFixed64Bytes)
  return target;
}

size_t ListFixed64Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFixed64Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFixed64Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFixed64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFixed64Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFixed64Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFixed64Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFixed64Bytes)
    MergeFrom(*source);
  }
}

void ListFixed64Bytes::MergeFrom(const ListFixed64Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFixed64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFixed64Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFixed64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFixed64Bytes::CopyFrom(const ListFixed64Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFixed64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFixed64Bytes::IsInitialized() const {
  return true;
}

void ListFixed64Bytes::Swap(ListFixed64Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFixed64Bytes::InternalSwap(ListFixed64Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFixed64Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Double::kKFieldNumber;
const int ListSfixed32Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Double::ListSfixed32Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Double)
}
ListSfixed32Double::ListSfixed32Double(const ListSfixed32Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Double)
}

void ListSfixed32Double::SharedCtor() {
}

ListSfixed32Double::~ListSfixed32Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Double)
  SharedDtor();
}

void ListSfixed32Double::SharedDtor() {
}

void ListSfixed32Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Double& ListSfixed32Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Double.base);
  return *internal_default_instance();
}


void ListSfixed32Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Double)
  return false;
#undef DO_
}

void ListSfixed32Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Double)
}

::google::protobuf::uint8* ListSfixed32Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Double)
  return target;
}

size_t ListSfixed32Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Double)
    MergeFrom(*source);
  }
}

void ListSfixed32Double::MergeFrom(const ListSfixed32Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Double::CopyFrom(const ListSfixed32Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Double::IsInitialized() const {
  return true;
}

void ListSfixed32Double::Swap(ListSfixed32Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Double::InternalSwap(ListSfixed32Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Float::kKFieldNumber;
const int ListSfixed32Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Float::ListSfixed32Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Float)
}
ListSfixed32Float::ListSfixed32Float(const ListSfixed32Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Float)
}

void ListSfixed32Float::SharedCtor() {
}

ListSfixed32Float::~ListSfixed32Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Float)
  SharedDtor();
}

void ListSfixed32Float::SharedDtor() {
}

void ListSfixed32Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Float& ListSfixed32Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Float.base);
  return *internal_default_instance();
}


void ListSfixed32Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Float)
  return false;
#undef DO_
}

void ListSfixed32Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Float)
}

::google::protobuf::uint8* ListSfixed32Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Float)
  return target;
}

size_t ListSfixed32Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Float)
    MergeFrom(*source);
  }
}

void ListSfixed32Float::MergeFrom(const ListSfixed32Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Float::CopyFrom(const ListSfixed32Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Float::IsInitialized() const {
  return true;
}

void ListSfixed32Float::Swap(ListSfixed32Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Float::InternalSwap(ListSfixed32Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Int32::kKFieldNumber;
const int ListSfixed32Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Int32::ListSfixed32Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Int32)
}
ListSfixed32Int32::ListSfixed32Int32(const ListSfixed32Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Int32)
}

void ListSfixed32Int32::SharedCtor() {
}

ListSfixed32Int32::~ListSfixed32Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Int32)
  SharedDtor();
}

void ListSfixed32Int32::SharedDtor() {
}

void ListSfixed32Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Int32& ListSfixed32Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Int32.base);
  return *internal_default_instance();
}


void ListSfixed32Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Int32)
  return false;
#undef DO_
}

void ListSfixed32Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Int32)
}

::google::protobuf::uint8* ListSfixed32Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Int32)
  return target;
}

size_t ListSfixed32Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Int32)
    MergeFrom(*source);
  }
}

void ListSfixed32Int32::MergeFrom(const ListSfixed32Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Int32::CopyFrom(const ListSfixed32Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Int32::IsInitialized() const {
  return true;
}

void ListSfixed32Int32::Swap(ListSfixed32Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Int32::InternalSwap(ListSfixed32Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Int64::kKFieldNumber;
const int ListSfixed32Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Int64::ListSfixed32Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Int64)
}
ListSfixed32Int64::ListSfixed32Int64(const ListSfixed32Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Int64)
}

void ListSfixed32Int64::SharedCtor() {
}

ListSfixed32Int64::~ListSfixed32Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Int64)
  SharedDtor();
}

void ListSfixed32Int64::SharedDtor() {
}

void ListSfixed32Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Int64& ListSfixed32Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Int64.base);
  return *internal_default_instance();
}


void ListSfixed32Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Int64)
  return false;
#undef DO_
}

void ListSfixed32Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Int64)
}

::google::protobuf::uint8* ListSfixed32Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Int64)
  return target;
}

size_t ListSfixed32Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Int64)
    MergeFrom(*source);
  }
}

void ListSfixed32Int64::MergeFrom(const ListSfixed32Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Int64::CopyFrom(const ListSfixed32Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Int64::IsInitialized() const {
  return true;
}

void ListSfixed32Int64::Swap(ListSfixed32Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Int64::InternalSwap(ListSfixed32Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Uint32::kKFieldNumber;
const int ListSfixed32Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Uint32::ListSfixed32Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Uint32)
}
ListSfixed32Uint32::ListSfixed32Uint32(const ListSfixed32Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Uint32)
}

void ListSfixed32Uint32::SharedCtor() {
}

ListSfixed32Uint32::~ListSfixed32Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Uint32)
  SharedDtor();
}

void ListSfixed32Uint32::SharedDtor() {
}

void ListSfixed32Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Uint32& ListSfixed32Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Uint32.base);
  return *internal_default_instance();
}


void ListSfixed32Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Uint32)
  return false;
#undef DO_
}

void ListSfixed32Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Uint32)
}

::google::protobuf::uint8* ListSfixed32Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Uint32)
  return target;
}

size_t ListSfixed32Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Uint32)
    MergeFrom(*source);
  }
}

void ListSfixed32Uint32::MergeFrom(const ListSfixed32Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Uint32::CopyFrom(const ListSfixed32Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Uint32::IsInitialized() const {
  return true;
}

void ListSfixed32Uint32::Swap(ListSfixed32Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Uint32::InternalSwap(ListSfixed32Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Uint64::kKFieldNumber;
const int ListSfixed32Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Uint64::ListSfixed32Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Uint64)
}
ListSfixed32Uint64::ListSfixed32Uint64(const ListSfixed32Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Uint64)
}

void ListSfixed32Uint64::SharedCtor() {
}

ListSfixed32Uint64::~ListSfixed32Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Uint64)
  SharedDtor();
}

void ListSfixed32Uint64::SharedDtor() {
}

void ListSfixed32Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Uint64& ListSfixed32Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Uint64.base);
  return *internal_default_instance();
}


void ListSfixed32Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Uint64)
  return false;
#undef DO_
}

void ListSfixed32Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Uint64)
}

::google::protobuf::uint8* ListSfixed32Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Uint64)
  return target;
}

size_t ListSfixed32Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Uint64)
    MergeFrom(*source);
  }
}

void ListSfixed32Uint64::MergeFrom(const ListSfixed32Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Uint64::CopyFrom(const ListSfixed32Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Uint64::IsInitialized() const {
  return true;
}

void ListSfixed32Uint64::Swap(ListSfixed32Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Uint64::InternalSwap(ListSfixed32Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Sint32::kKFieldNumber;
const int ListSfixed32Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Sint32::ListSfixed32Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Sint32)
}
ListSfixed32Sint32::ListSfixed32Sint32(const ListSfixed32Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Sint32)
}

void ListSfixed32Sint32::SharedCtor() {
}

ListSfixed32Sint32::~ListSfixed32Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Sint32)
  SharedDtor();
}

void ListSfixed32Sint32::SharedDtor() {
}

void ListSfixed32Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Sint32& ListSfixed32Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Sint32.base);
  return *internal_default_instance();
}


void ListSfixed32Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Sint32)
  return false;
#undef DO_
}

void ListSfixed32Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Sint32)
}

::google::protobuf::uint8* ListSfixed32Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Sint32)
  return target;
}

size_t ListSfixed32Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Sint32)
    MergeFrom(*source);
  }
}

void ListSfixed32Sint32::MergeFrom(const ListSfixed32Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Sint32::CopyFrom(const ListSfixed32Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Sint32::IsInitialized() const {
  return true;
}

void ListSfixed32Sint32::Swap(ListSfixed32Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Sint32::InternalSwap(ListSfixed32Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Sint64::kKFieldNumber;
const int ListSfixed32Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Sint64::ListSfixed32Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Sint64)
}
ListSfixed32Sint64::ListSfixed32Sint64(const ListSfixed32Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Sint64)
}

void ListSfixed32Sint64::SharedCtor() {
}

ListSfixed32Sint64::~ListSfixed32Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Sint64)
  SharedDtor();
}

void ListSfixed32Sint64::SharedDtor() {
}

void ListSfixed32Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Sint64& ListSfixed32Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Sint64.base);
  return *internal_default_instance();
}


void ListSfixed32Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Sint64)
  return false;
#undef DO_
}

void ListSfixed32Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Sint64)
}

::google::protobuf::uint8* ListSfixed32Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Sint64)
  return target;
}

size_t ListSfixed32Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Sint64)
    MergeFrom(*source);
  }
}

void ListSfixed32Sint64::MergeFrom(const ListSfixed32Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Sint64::CopyFrom(const ListSfixed32Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Sint64::IsInitialized() const {
  return true;
}

void ListSfixed32Sint64::Swap(ListSfixed32Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Sint64::InternalSwap(ListSfixed32Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Fixed32::kKFieldNumber;
const int ListSfixed32Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Fixed32::ListSfixed32Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Fixed32)
}
ListSfixed32Fixed32::ListSfixed32Fixed32(const ListSfixed32Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Fixed32)
}

void ListSfixed32Fixed32::SharedCtor() {
}

ListSfixed32Fixed32::~ListSfixed32Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Fixed32)
  SharedDtor();
}

void ListSfixed32Fixed32::SharedDtor() {
}

void ListSfixed32Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Fixed32& ListSfixed32Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Fixed32.base);
  return *internal_default_instance();
}


void ListSfixed32Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Fixed32)
  return false;
#undef DO_
}

void ListSfixed32Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Fixed32)
}

::google::protobuf::uint8* ListSfixed32Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Fixed32)
  return target;
}

size_t ListSfixed32Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Fixed32)
    MergeFrom(*source);
  }
}

void ListSfixed32Fixed32::MergeFrom(const ListSfixed32Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Fixed32::CopyFrom(const ListSfixed32Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Fixed32::IsInitialized() const {
  return true;
}

void ListSfixed32Fixed32::Swap(ListSfixed32Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Fixed32::InternalSwap(ListSfixed32Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Fixed64::kKFieldNumber;
const int ListSfixed32Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Fixed64::ListSfixed32Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Fixed64)
}
ListSfixed32Fixed64::ListSfixed32Fixed64(const ListSfixed32Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Fixed64)
}

void ListSfixed32Fixed64::SharedCtor() {
}

ListSfixed32Fixed64::~ListSfixed32Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Fixed64)
  SharedDtor();
}

void ListSfixed32Fixed64::SharedDtor() {
}

void ListSfixed32Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Fixed64& ListSfixed32Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Fixed64.base);
  return *internal_default_instance();
}


void ListSfixed32Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Fixed64)
  return false;
#undef DO_
}

void ListSfixed32Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Fixed64)
}

::google::protobuf::uint8* ListSfixed32Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Fixed64)
  return target;
}

size_t ListSfixed32Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Fixed64)
    MergeFrom(*source);
  }
}

void ListSfixed32Fixed64::MergeFrom(const ListSfixed32Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Fixed64::CopyFrom(const ListSfixed32Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Fixed64::IsInitialized() const {
  return true;
}

void ListSfixed32Fixed64::Swap(ListSfixed32Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Fixed64::InternalSwap(ListSfixed32Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Sfixed32::kKFieldNumber;
const int ListSfixed32Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Sfixed32::ListSfixed32Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Sfixed32)
}
ListSfixed32Sfixed32::ListSfixed32Sfixed32(const ListSfixed32Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Sfixed32)
}

void ListSfixed32Sfixed32::SharedCtor() {
}

ListSfixed32Sfixed32::~ListSfixed32Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Sfixed32)
  SharedDtor();
}

void ListSfixed32Sfixed32::SharedDtor() {
}

void ListSfixed32Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Sfixed32& ListSfixed32Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed32.base);
  return *internal_default_instance();
}


void ListSfixed32Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Sfixed32)
  return false;
#undef DO_
}

void ListSfixed32Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Sfixed32)
}

::google::protobuf::uint8* ListSfixed32Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Sfixed32)
  return target;
}

size_t ListSfixed32Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Sfixed32)
    MergeFrom(*source);
  }
}

void ListSfixed32Sfixed32::MergeFrom(const ListSfixed32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Sfixed32::CopyFrom(const ListSfixed32Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Sfixed32::IsInitialized() const {
  return true;
}

void ListSfixed32Sfixed32::Swap(ListSfixed32Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Sfixed32::InternalSwap(ListSfixed32Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Sfixed64::kKFieldNumber;
const int ListSfixed32Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Sfixed64::ListSfixed32Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Sfixed64)
}
ListSfixed32Sfixed64::ListSfixed32Sfixed64(const ListSfixed32Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Sfixed64)
}

void ListSfixed32Sfixed64::SharedCtor() {
}

ListSfixed32Sfixed64::~ListSfixed32Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Sfixed64)
  SharedDtor();
}

void ListSfixed32Sfixed64::SharedDtor() {
}

void ListSfixed32Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Sfixed64& ListSfixed32Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Sfixed64.base);
  return *internal_default_instance();
}


void ListSfixed32Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Sfixed64)
  return false;
#undef DO_
}

void ListSfixed32Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Sfixed64)
}

::google::protobuf::uint8* ListSfixed32Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Sfixed64)
  return target;
}

size_t ListSfixed32Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Sfixed64)
    MergeFrom(*source);
  }
}

void ListSfixed32Sfixed64::MergeFrom(const ListSfixed32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Sfixed64::CopyFrom(const ListSfixed32Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Sfixed64::IsInitialized() const {
  return true;
}

void ListSfixed32Sfixed64::Swap(ListSfixed32Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Sfixed64::InternalSwap(ListSfixed32Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Bool::kKFieldNumber;
const int ListSfixed32Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Bool::ListSfixed32Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Bool)
}
ListSfixed32Bool::ListSfixed32Bool(const ListSfixed32Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Bool)
}

void ListSfixed32Bool::SharedCtor() {
}

ListSfixed32Bool::~ListSfixed32Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Bool)
  SharedDtor();
}

void ListSfixed32Bool::SharedDtor() {
}

void ListSfixed32Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Bool& ListSfixed32Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Bool.base);
  return *internal_default_instance();
}


void ListSfixed32Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Bool)
  return false;
#undef DO_
}

void ListSfixed32Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Bool)
}

::google::protobuf::uint8* ListSfixed32Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Bool)
  return target;
}

size_t ListSfixed32Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Bool)
    MergeFrom(*source);
  }
}

void ListSfixed32Bool::MergeFrom(const ListSfixed32Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Bool::CopyFrom(const ListSfixed32Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Bool::IsInitialized() const {
  return true;
}

void ListSfixed32Bool::Swap(ListSfixed32Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Bool::InternalSwap(ListSfixed32Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32String::kKFieldNumber;
const int ListSfixed32String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32String::ListSfixed32String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32String)
}
ListSfixed32String::ListSfixed32String(const ListSfixed32String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32String)
}

void ListSfixed32String::SharedCtor() {
}

ListSfixed32String::~ListSfixed32String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32String)
  SharedDtor();
}

void ListSfixed32String::SharedDtor() {
}

void ListSfixed32String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32String& ListSfixed32String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32String.base);
  return *internal_default_instance();
}


void ListSfixed32String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListSfixed32String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32String)
  return false;
#undef DO_
}

void ListSfixed32String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSfixed32String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32String)
}

::google::protobuf::uint8* ListSfixed32String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSfixed32String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32String)
  return target;
}

size_t ListSfixed32String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32String)
    MergeFrom(*source);
  }
}

void ListSfixed32String::MergeFrom(const ListSfixed32String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32String::CopyFrom(const ListSfixed32String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32String::IsInitialized() const {
  return true;
}

void ListSfixed32String::Swap(ListSfixed32String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32String::InternalSwap(ListSfixed32String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed32Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed32Bytes::kKFieldNumber;
const int ListSfixed32Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed32Bytes::ListSfixed32Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed32Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed32Bytes)
}
ListSfixed32Bytes::ListSfixed32Bytes(const ListSfixed32Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed32Bytes)
}

void ListSfixed32Bytes::SharedCtor() {
}

ListSfixed32Bytes::~ListSfixed32Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed32Bytes)
  SharedDtor();
}

void ListSfixed32Bytes::SharedDtor() {
}

void ListSfixed32Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed32Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed32Bytes& ListSfixed32Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed32Bytes.base);
  return *internal_default_instance();
}


void ListSfixed32Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed32Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed32Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed32Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed32Bytes)
  return false;
#undef DO_
}

void ListSfixed32Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed32Bytes)
}

::google::protobuf::uint8* ListSfixed32Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed32Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed32Bytes)
  return target;
}

size_t ListSfixed32Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed32Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed32Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed32Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed32Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed32Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed32Bytes)
    MergeFrom(*source);
  }
}

void ListSfixed32Bytes::MergeFrom(const ListSfixed32Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed32Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed32Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed32Bytes::CopyFrom(const ListSfixed32Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed32Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed32Bytes::IsInitialized() const {
  return true;
}

void ListSfixed32Bytes::Swap(ListSfixed32Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed32Bytes::InternalSwap(ListSfixed32Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed32Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Double::kKFieldNumber;
const int ListSfixed64Double::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Double::ListSfixed64Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Double)
}
ListSfixed64Double::ListSfixed64Double(const ListSfixed64Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Double)
}

void ListSfixed64Double::SharedCtor() {
}

ListSfixed64Double::~ListSfixed64Double() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Double)
  SharedDtor();
}

void ListSfixed64Double::SharedDtor() {
}

void ListSfixed64Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Double::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Double& ListSfixed64Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Double.base);
  return *internal_default_instance();
}


void ListSfixed64Double::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Double)
  return false;
#undef DO_
}

void ListSfixed64Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Double)
}

::google::protobuf::uint8* ListSfixed64Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Double)
  return target;
}

size_t ListSfixed64Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Double)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Double)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Double)
    MergeFrom(*source);
  }
}

void ListSfixed64Double::MergeFrom(const ListSfixed64Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Double::CopyFrom(const ListSfixed64Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Double::IsInitialized() const {
  return true;
}

void ListSfixed64Double::Swap(ListSfixed64Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Double::InternalSwap(ListSfixed64Double* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Double::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Float::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Float::kKFieldNumber;
const int ListSfixed64Float::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Float::ListSfixed64Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Float.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Float)
}
ListSfixed64Float::ListSfixed64Float(const ListSfixed64Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Float)
}

void ListSfixed64Float::SharedCtor() {
}

ListSfixed64Float::~ListSfixed64Float() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Float)
  SharedDtor();
}

void ListSfixed64Float::SharedDtor() {
}

void ListSfixed64Float::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Float::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Float& ListSfixed64Float::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Float.base);
  return *internal_default_instance();
}


void ListSfixed64Float::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Float)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Float)
  return false;
#undef DO_
}

void ListSfixed64Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Float)
}

::google::protobuf::uint8* ListSfixed64Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Float)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Float)
  return target;
}

size_t ListSfixed64Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Float)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Float)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Float)
    MergeFrom(*source);
  }
}

void ListSfixed64Float::MergeFrom(const ListSfixed64Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Float::CopyFrom(const ListSfixed64Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Float::IsInitialized() const {
  return true;
}

void ListSfixed64Float::Swap(ListSfixed64Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Float::InternalSwap(ListSfixed64Float* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Float::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Int32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Int32::kKFieldNumber;
const int ListSfixed64Int32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Int32::ListSfixed64Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Int32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Int32)
}
ListSfixed64Int32::ListSfixed64Int32(const ListSfixed64Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Int32)
}

void ListSfixed64Int32::SharedCtor() {
}

ListSfixed64Int32::~ListSfixed64Int32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Int32)
  SharedDtor();
}

void ListSfixed64Int32::SharedDtor() {
}

void ListSfixed64Int32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Int32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Int32& ListSfixed64Int32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Int32.base);
  return *internal_default_instance();
}


void ListSfixed64Int32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Int32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Int32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Int32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Int32)
  return false;
#undef DO_
}

void ListSfixed64Int32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Int32)
}

::google::protobuf::uint8* ListSfixed64Int32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Int32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Int32)
  return target;
}

size_t ListSfixed64Int32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Int32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Int32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Int32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Int32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Int32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Int32)
    MergeFrom(*source);
  }
}

void ListSfixed64Int32::MergeFrom(const ListSfixed64Int32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Int32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Int32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Int32::CopyFrom(const ListSfixed64Int32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Int32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Int32::IsInitialized() const {
  return true;
}

void ListSfixed64Int32::Swap(ListSfixed64Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Int32::InternalSwap(ListSfixed64Int32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Int32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Int64::kKFieldNumber;
const int ListSfixed64Int64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Int64::ListSfixed64Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Int64)
}
ListSfixed64Int64::ListSfixed64Int64(const ListSfixed64Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Int64)
}

void ListSfixed64Int64::SharedCtor() {
}

ListSfixed64Int64::~ListSfixed64Int64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Int64)
  SharedDtor();
}

void ListSfixed64Int64::SharedDtor() {
}

void ListSfixed64Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Int64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Int64& ListSfixed64Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Int64.base);
  return *internal_default_instance();
}


void ListSfixed64Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Int64)
  return false;
#undef DO_
}

void ListSfixed64Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Int64)
}

::google::protobuf::uint8* ListSfixed64Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Int64)
  return target;
}

size_t ListSfixed64Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Int64)
    MergeFrom(*source);
  }
}

void ListSfixed64Int64::MergeFrom(const ListSfixed64Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Int64::CopyFrom(const ListSfixed64Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Int64::IsInitialized() const {
  return true;
}

void ListSfixed64Int64::Swap(ListSfixed64Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Int64::InternalSwap(ListSfixed64Int64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Int64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Uint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Uint32::kKFieldNumber;
const int ListSfixed64Uint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Uint32::ListSfixed64Uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Uint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Uint32)
}
ListSfixed64Uint32::ListSfixed64Uint32(const ListSfixed64Uint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Uint32)
}

void ListSfixed64Uint32::SharedCtor() {
}

ListSfixed64Uint32::~ListSfixed64Uint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Uint32)
  SharedDtor();
}

void ListSfixed64Uint32::SharedDtor() {
}

void ListSfixed64Uint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Uint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Uint32& ListSfixed64Uint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Uint32.base);
  return *internal_default_instance();
}


void ListSfixed64Uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Uint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Uint32)
  return false;
#undef DO_
}

void ListSfixed64Uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Uint32)
}

::google::protobuf::uint8* ListSfixed64Uint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Uint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Uint32)
  return target;
}

size_t ListSfixed64Uint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Uint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Uint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Uint32)
    MergeFrom(*source);
  }
}

void ListSfixed64Uint32::MergeFrom(const ListSfixed64Uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Uint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Uint32::CopyFrom(const ListSfixed64Uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Uint32::IsInitialized() const {
  return true;
}

void ListSfixed64Uint32::Swap(ListSfixed64Uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Uint32::InternalSwap(ListSfixed64Uint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Uint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Uint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Uint64::kKFieldNumber;
const int ListSfixed64Uint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Uint64::ListSfixed64Uint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Uint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Uint64)
}
ListSfixed64Uint64::ListSfixed64Uint64(const ListSfixed64Uint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Uint64)
}

void ListSfixed64Uint64::SharedCtor() {
}

ListSfixed64Uint64::~ListSfixed64Uint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Uint64)
  SharedDtor();
}

void ListSfixed64Uint64::SharedDtor() {
}

void ListSfixed64Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Uint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Uint64& ListSfixed64Uint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Uint64.base);
  return *internal_default_instance();
}


void ListSfixed64Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Uint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Uint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Uint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Uint64)
  return false;
#undef DO_
}

void ListSfixed64Uint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Uint64)
}

::google::protobuf::uint8* ListSfixed64Uint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Uint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Uint64)
  return target;
}

size_t ListSfixed64Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Uint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Uint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Uint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Uint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Uint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Uint64)
    MergeFrom(*source);
  }
}

void ListSfixed64Uint64::MergeFrom(const ListSfixed64Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Uint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Uint64::CopyFrom(const ListSfixed64Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Uint64::IsInitialized() const {
  return true;
}

void ListSfixed64Uint64::Swap(ListSfixed64Uint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Uint64::InternalSwap(ListSfixed64Uint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Uint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Sint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Sint32::kKFieldNumber;
const int ListSfixed64Sint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Sint32::ListSfixed64Sint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Sint32)
}
ListSfixed64Sint32::ListSfixed64Sint32(const ListSfixed64Sint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Sint32)
}

void ListSfixed64Sint32::SharedCtor() {
}

ListSfixed64Sint32::~ListSfixed64Sint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Sint32)
  SharedDtor();
}

void ListSfixed64Sint32::SharedDtor() {
}

void ListSfixed64Sint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Sint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Sint32& ListSfixed64Sint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Sint32.base);
  return *internal_default_instance();
}


void ListSfixed64Sint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Sint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Sint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Sint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Sint32)
  return false;
#undef DO_
}

void ListSfixed64Sint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Sint32)
}

::google::protobuf::uint8* ListSfixed64Sint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Sint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Sint32)
  return target;
}

size_t ListSfixed64Sint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Sint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Sint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Sint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Sint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Sint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Sint32)
    MergeFrom(*source);
  }
}

void ListSfixed64Sint32::MergeFrom(const ListSfixed64Sint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Sint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Sint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Sint32::CopyFrom(const ListSfixed64Sint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Sint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Sint32::IsInitialized() const {
  return true;
}

void ListSfixed64Sint32::Swap(ListSfixed64Sint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Sint32::InternalSwap(ListSfixed64Sint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Sint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Sint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Sint64::kKFieldNumber;
const int ListSfixed64Sint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Sint64::ListSfixed64Sint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Sint64)
}
ListSfixed64Sint64::ListSfixed64Sint64(const ListSfixed64Sint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Sint64)
}

void ListSfixed64Sint64::SharedCtor() {
}

ListSfixed64Sint64::~ListSfixed64Sint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Sint64)
  SharedDtor();
}

void ListSfixed64Sint64::SharedDtor() {
}

void ListSfixed64Sint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Sint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Sint64& ListSfixed64Sint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Sint64.base);
  return *internal_default_instance();
}


void ListSfixed64Sint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Sint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Sint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Sint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Sint64)
  return false;
#undef DO_
}

void ListSfixed64Sint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Sint64)
}

::google::protobuf::uint8* ListSfixed64Sint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Sint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Sint64)
  return target;
}

size_t ListSfixed64Sint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Sint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Sint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Sint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Sint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Sint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Sint64)
    MergeFrom(*source);
  }
}

void ListSfixed64Sint64::MergeFrom(const ListSfixed64Sint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Sint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Sint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Sint64::CopyFrom(const ListSfixed64Sint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Sint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Sint64::IsInitialized() const {
  return true;
}

void ListSfixed64Sint64::Swap(ListSfixed64Sint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Sint64::InternalSwap(ListSfixed64Sint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Sint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Fixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Fixed32::kKFieldNumber;
const int ListSfixed64Fixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Fixed32::ListSfixed64Fixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Fixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Fixed32)
}
ListSfixed64Fixed32::ListSfixed64Fixed32(const ListSfixed64Fixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Fixed32)
}

void ListSfixed64Fixed32::SharedCtor() {
}

ListSfixed64Fixed32::~ListSfixed64Fixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Fixed32)
  SharedDtor();
}

void ListSfixed64Fixed32::SharedDtor() {
}

void ListSfixed64Fixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Fixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Fixed32& ListSfixed64Fixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Fixed32.base);
  return *internal_default_instance();
}


void ListSfixed64Fixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Fixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Fixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Fixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Fixed32)
  return false;
#undef DO_
}

void ListSfixed64Fixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Fixed32)
}

::google::protobuf::uint8* ListSfixed64Fixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Fixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Fixed32)
  return target;
}

size_t ListSfixed64Fixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Fixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Fixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Fixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Fixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Fixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Fixed32)
    MergeFrom(*source);
  }
}

void ListSfixed64Fixed32::MergeFrom(const ListSfixed64Fixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Fixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Fixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Fixed32::CopyFrom(const ListSfixed64Fixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Fixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Fixed32::IsInitialized() const {
  return true;
}

void ListSfixed64Fixed32::Swap(ListSfixed64Fixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Fixed32::InternalSwap(ListSfixed64Fixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Fixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Fixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Fixed64::kKFieldNumber;
const int ListSfixed64Fixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Fixed64::ListSfixed64Fixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Fixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Fixed64)
}
ListSfixed64Fixed64::ListSfixed64Fixed64(const ListSfixed64Fixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Fixed64)
}

void ListSfixed64Fixed64::SharedCtor() {
}

ListSfixed64Fixed64::~ListSfixed64Fixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Fixed64)
  SharedDtor();
}

void ListSfixed64Fixed64::SharedDtor() {
}

void ListSfixed64Fixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Fixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Fixed64& ListSfixed64Fixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Fixed64.base);
  return *internal_default_instance();
}


void ListSfixed64Fixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Fixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Fixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Fixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Fixed64)
  return false;
#undef DO_
}

void ListSfixed64Fixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Fixed64)
}

::google::protobuf::uint8* ListSfixed64Fixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Fixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Fixed64)
  return target;
}

size_t ListSfixed64Fixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Fixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Fixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Fixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Fixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Fixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Fixed64)
    MergeFrom(*source);
  }
}

void ListSfixed64Fixed64::MergeFrom(const ListSfixed64Fixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Fixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Fixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Fixed64::CopyFrom(const ListSfixed64Fixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Fixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Fixed64::IsInitialized() const {
  return true;
}

void ListSfixed64Fixed64::Swap(ListSfixed64Fixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Fixed64::InternalSwap(ListSfixed64Fixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Fixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Sfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Sfixed32::kKFieldNumber;
const int ListSfixed64Sfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Sfixed32::ListSfixed64Sfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Sfixed32)
}
ListSfixed64Sfixed32::ListSfixed64Sfixed32(const ListSfixed64Sfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Sfixed32)
}

void ListSfixed64Sfixed32::SharedCtor() {
}

ListSfixed64Sfixed32::~ListSfixed64Sfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Sfixed32)
  SharedDtor();
}

void ListSfixed64Sfixed32::SharedDtor() {
}

void ListSfixed64Sfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Sfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Sfixed32& ListSfixed64Sfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed32.base);
  return *internal_default_instance();
}


void ListSfixed64Sfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Sfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Sfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Sfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Sfixed32)
  return false;
#undef DO_
}

void ListSfixed64Sfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Sfixed32)
}

::google::protobuf::uint8* ListSfixed64Sfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Sfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Sfixed32)
  return target;
}

size_t ListSfixed64Sfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Sfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Sfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Sfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Sfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Sfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Sfixed32)
    MergeFrom(*source);
  }
}

void ListSfixed64Sfixed32::MergeFrom(const ListSfixed64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Sfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Sfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Sfixed32::CopyFrom(const ListSfixed64Sfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Sfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Sfixed32::IsInitialized() const {
  return true;
}

void ListSfixed64Sfixed32::Swap(ListSfixed64Sfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Sfixed32::InternalSwap(ListSfixed64Sfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Sfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Sfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Sfixed64::kKFieldNumber;
const int ListSfixed64Sfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Sfixed64::ListSfixed64Sfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Sfixed64)
}
ListSfixed64Sfixed64::ListSfixed64Sfixed64(const ListSfixed64Sfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Sfixed64)
}

void ListSfixed64Sfixed64::SharedCtor() {
}

ListSfixed64Sfixed64::~ListSfixed64Sfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Sfixed64)
  SharedDtor();
}

void ListSfixed64Sfixed64::SharedDtor() {
}

void ListSfixed64Sfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Sfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Sfixed64& ListSfixed64Sfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Sfixed64.base);
  return *internal_default_instance();
}


void ListSfixed64Sfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Sfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Sfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Sfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Sfixed64)
  return false;
#undef DO_
}

void ListSfixed64Sfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Sfixed64)
}

::google::protobuf::uint8* ListSfixed64Sfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Sfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Sfixed64)
  return target;
}

size_t ListSfixed64Sfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Sfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Sfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Sfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Sfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Sfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Sfixed64)
    MergeFrom(*source);
  }
}

void ListSfixed64Sfixed64::MergeFrom(const ListSfixed64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Sfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Sfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Sfixed64::CopyFrom(const ListSfixed64Sfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Sfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Sfixed64::IsInitialized() const {
  return true;
}

void ListSfixed64Sfixed64::Swap(ListSfixed64Sfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Sfixed64::InternalSwap(ListSfixed64Sfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Sfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Bool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Bool::kKFieldNumber;
const int ListSfixed64Bool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Bool::ListSfixed64Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Bool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Bool)
}
ListSfixed64Bool::ListSfixed64Bool(const ListSfixed64Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Bool)
}

void ListSfixed64Bool::SharedCtor() {
}

ListSfixed64Bool::~ListSfixed64Bool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Bool)
  SharedDtor();
}

void ListSfixed64Bool::SharedDtor() {
}

void ListSfixed64Bool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Bool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Bool& ListSfixed64Bool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Bool.base);
  return *internal_default_instance();
}


void ListSfixed64Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Bool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Bool)
  return false;
#undef DO_
}

void ListSfixed64Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Bool)
}

::google::protobuf::uint8* ListSfixed64Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Bool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Bool)
  return target;
}

size_t ListSfixed64Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Bool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Bool)
    MergeFrom(*source);
  }
}

void ListSfixed64Bool::MergeFrom(const ListSfixed64Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Bool::CopyFrom(const ListSfixed64Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Bool::IsInitialized() const {
  return true;
}

void ListSfixed64Bool::Swap(ListSfixed64Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Bool::InternalSwap(ListSfixed64Bool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Bool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64String::kKFieldNumber;
const int ListSfixed64String::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64String::ListSfixed64String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64String)
}
ListSfixed64String::ListSfixed64String(const ListSfixed64String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64String)
}

void ListSfixed64String::SharedCtor() {
}

ListSfixed64String::~ListSfixed64String() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64String)
  SharedDtor();
}

void ListSfixed64String::SharedDtor() {
}

void ListSfixed64String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64String::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64String& ListSfixed64String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64String.base);
  return *internal_default_instance();
}


void ListSfixed64String::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListSfixed64String.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64String)
  return false;
#undef DO_
}

void ListSfixed64String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSfixed64String.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64String)
}

::google::protobuf::uint8* ListSfixed64String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListSfixed64String.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64String)
  return target;
}

size_t ListSfixed64String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64String)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64String)
    MergeFrom(*source);
  }
}

void ListSfixed64String::MergeFrom(const ListSfixed64String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64String::CopyFrom(const ListSfixed64String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64String::IsInitialized() const {
  return true;
}

void ListSfixed64String::Swap(ListSfixed64String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64String::InternalSwap(ListSfixed64String* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64String::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListSfixed64Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSfixed64Bytes::kKFieldNumber;
const int ListSfixed64Bytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSfixed64Bytes::ListSfixed64Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListSfixed64Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListSfixed64Bytes)
}
ListSfixed64Bytes::ListSfixed64Bytes(const ListSfixed64Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListSfixed64Bytes)
}

void ListSfixed64Bytes::SharedCtor() {
}

ListSfixed64Bytes::~ListSfixed64Bytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListSfixed64Bytes)
  SharedDtor();
}

void ListSfixed64Bytes::SharedDtor() {
}

void ListSfixed64Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListSfixed64Bytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListSfixed64Bytes& ListSfixed64Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListSfixed64Bytes.base);
  return *internal_default_instance();
}


void ListSfixed64Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListSfixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListSfixed64Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListSfixed64Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListSfixed64Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListSfixed64Bytes)
  return false;
#undef DO_
}

void ListSfixed64Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListSfixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListSfixed64Bytes)
}

::google::protobuf::uint8* ListSfixed64Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListSfixed64Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed64 k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListSfixed64Bytes)
  return target;
}

size_t ListSfixed64Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListSfixed64Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed64 k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSfixed64Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListSfixed64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSfixed64Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListSfixed64Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListSfixed64Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListSfixed64Bytes)
    MergeFrom(*source);
  }
}

void ListSfixed64Bytes::MergeFrom(const ListSfixed64Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListSfixed64Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListSfixed64Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListSfixed64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSfixed64Bytes::CopyFrom(const ListSfixed64Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListSfixed64Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSfixed64Bytes::IsInitialized() const {
  return true;
}

void ListSfixed64Bytes::Swap(ListSfixed64Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSfixed64Bytes::InternalSwap(ListSfixed64Bytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSfixed64Bytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleDouble::kKFieldNumber;
const int ListDoubleDouble::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleDouble::ListDoubleDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleDouble)
}
ListDoubleDouble::ListDoubleDouble(const ListDoubleDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleDouble)
}

void ListDoubleDouble::SharedCtor() {
}

ListDoubleDouble::~ListDoubleDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleDouble)
  SharedDtor();
}

void ListDoubleDouble::SharedDtor() {
}

void ListDoubleDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleDouble& ListDoubleDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleDouble.base);
  return *internal_default_instance();
}


void ListDoubleDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleDouble)
  return false;
#undef DO_
}

void ListDoubleDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleDouble)
}

::google::protobuf::uint8* ListDoubleDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleDouble)
  return target;
}

size_t ListDoubleDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleDouble)
    MergeFrom(*source);
  }
}

void ListDoubleDouble::MergeFrom(const ListDoubleDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleDouble::CopyFrom(const ListDoubleDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleDouble::IsInitialized() const {
  return true;
}

void ListDoubleDouble::Swap(ListDoubleDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleDouble::InternalSwap(ListDoubleDouble* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleFloat::kKFieldNumber;
const int ListDoubleFloat::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleFloat::ListDoubleFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleFloat)
}
ListDoubleFloat::ListDoubleFloat(const ListDoubleFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleFloat)
}

void ListDoubleFloat::SharedCtor() {
}

ListDoubleFloat::~ListDoubleFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleFloat)
  SharedDtor();
}

void ListDoubleFloat::SharedDtor() {
}

void ListDoubleFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleFloat& ListDoubleFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleFloat.base);
  return *internal_default_instance();
}


void ListDoubleFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleFloat)
  return false;
#undef DO_
}

void ListDoubleFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleFloat)
}

::google::protobuf::uint8* ListDoubleFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleFloat)
  return target;
}

size_t ListDoubleFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleFloat)
    MergeFrom(*source);
  }
}

void ListDoubleFloat::MergeFrom(const ListDoubleFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleFloat::CopyFrom(const ListDoubleFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleFloat::IsInitialized() const {
  return true;
}

void ListDoubleFloat::Swap(ListDoubleFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleFloat::InternalSwap(ListDoubleFloat* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleInt32::kKFieldNumber;
const int ListDoubleInt32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleInt32::ListDoubleInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleInt32)
}
ListDoubleInt32::ListDoubleInt32(const ListDoubleInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleInt32)
}

void ListDoubleInt32::SharedCtor() {
}

ListDoubleInt32::~ListDoubleInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleInt32)
  SharedDtor();
}

void ListDoubleInt32::SharedDtor() {
}

void ListDoubleInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleInt32& ListDoubleInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleInt32.base);
  return *internal_default_instance();
}


void ListDoubleInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleInt32)
  return false;
#undef DO_
}

void ListDoubleInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleInt32)
}

::google::protobuf::uint8* ListDoubleInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleInt32)
  return target;
}

size_t ListDoubleInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleInt32)
    MergeFrom(*source);
  }
}

void ListDoubleInt32::MergeFrom(const ListDoubleInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleInt32::CopyFrom(const ListDoubleInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleInt32::IsInitialized() const {
  return true;
}

void ListDoubleInt32::Swap(ListDoubleInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleInt32::InternalSwap(ListDoubleInt32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleInt64::kKFieldNumber;
const int ListDoubleInt64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleInt64::ListDoubleInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleInt64)
}
ListDoubleInt64::ListDoubleInt64(const ListDoubleInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleInt64)
}

void ListDoubleInt64::SharedCtor() {
}

ListDoubleInt64::~ListDoubleInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleInt64)
  SharedDtor();
}

void ListDoubleInt64::SharedDtor() {
}

void ListDoubleInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleInt64& ListDoubleInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleInt64.base);
  return *internal_default_instance();
}


void ListDoubleInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleInt64)
  return false;
#undef DO_
}

void ListDoubleInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleInt64)
}

::google::protobuf::uint8* ListDoubleInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleInt64)
  return target;
}

size_t ListDoubleInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleInt64)
    MergeFrom(*source);
  }
}

void ListDoubleInt64::MergeFrom(const ListDoubleInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleInt64::CopyFrom(const ListDoubleInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleInt64::IsInitialized() const {
  return true;
}

void ListDoubleInt64::Swap(ListDoubleInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleInt64::InternalSwap(ListDoubleInt64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleUint32::kKFieldNumber;
const int ListDoubleUint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleUint32::ListDoubleUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleUint32)
}
ListDoubleUint32::ListDoubleUint32(const ListDoubleUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleUint32)
}

void ListDoubleUint32::SharedCtor() {
}

ListDoubleUint32::~ListDoubleUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleUint32)
  SharedDtor();
}

void ListDoubleUint32::SharedDtor() {
}

void ListDoubleUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleUint32& ListDoubleUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleUint32.base);
  return *internal_default_instance();
}


void ListDoubleUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleUint32)
  return false;
#undef DO_
}

void ListDoubleUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleUint32)
}

::google::protobuf::uint8* ListDoubleUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleUint32)
  return target;
}

size_t ListDoubleUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleUint32)
    MergeFrom(*source);
  }
}

void ListDoubleUint32::MergeFrom(const ListDoubleUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleUint32::CopyFrom(const ListDoubleUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleUint32::IsInitialized() const {
  return true;
}

void ListDoubleUint32::Swap(ListDoubleUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleUint32::InternalSwap(ListDoubleUint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleUint64::kKFieldNumber;
const int ListDoubleUint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleUint64::ListDoubleUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleUint64)
}
ListDoubleUint64::ListDoubleUint64(const ListDoubleUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleUint64)
}

void ListDoubleUint64::SharedCtor() {
}

ListDoubleUint64::~ListDoubleUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleUint64)
  SharedDtor();
}

void ListDoubleUint64::SharedDtor() {
}

void ListDoubleUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleUint64& ListDoubleUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleUint64.base);
  return *internal_default_instance();
}


void ListDoubleUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleUint64)
  return false;
#undef DO_
}

void ListDoubleUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleUint64)
}

::google::protobuf::uint8* ListDoubleUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleUint64)
  return target;
}

size_t ListDoubleUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleUint64)
    MergeFrom(*source);
  }
}

void ListDoubleUint64::MergeFrom(const ListDoubleUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleUint64::CopyFrom(const ListDoubleUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleUint64::IsInitialized() const {
  return true;
}

void ListDoubleUint64::Swap(ListDoubleUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleUint64::InternalSwap(ListDoubleUint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleSint32::kKFieldNumber;
const int ListDoubleSint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleSint32::ListDoubleSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleSint32)
}
ListDoubleSint32::ListDoubleSint32(const ListDoubleSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleSint32)
}

void ListDoubleSint32::SharedCtor() {
}

ListDoubleSint32::~ListDoubleSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleSint32)
  SharedDtor();
}

void ListDoubleSint32::SharedDtor() {
}

void ListDoubleSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleSint32& ListDoubleSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleSint32.base);
  return *internal_default_instance();
}


void ListDoubleSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleSint32)
  return false;
#undef DO_
}

void ListDoubleSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleSint32)
}

::google::protobuf::uint8* ListDoubleSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleSint32)
  return target;
}

size_t ListDoubleSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleSint32)
    MergeFrom(*source);
  }
}

void ListDoubleSint32::MergeFrom(const ListDoubleSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleSint32::CopyFrom(const ListDoubleSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleSint32::IsInitialized() const {
  return true;
}

void ListDoubleSint32::Swap(ListDoubleSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleSint32::InternalSwap(ListDoubleSint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleSint64::kKFieldNumber;
const int ListDoubleSint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleSint64::ListDoubleSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleSint64)
}
ListDoubleSint64::ListDoubleSint64(const ListDoubleSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleSint64)
}

void ListDoubleSint64::SharedCtor() {
}

ListDoubleSint64::~ListDoubleSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleSint64)
  SharedDtor();
}

void ListDoubleSint64::SharedDtor() {
}

void ListDoubleSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleSint64& ListDoubleSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleSint64.base);
  return *internal_default_instance();
}


void ListDoubleSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleSint64)
  return false;
#undef DO_
}

void ListDoubleSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleSint64)
}

::google::protobuf::uint8* ListDoubleSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleSint64)
  return target;
}

size_t ListDoubleSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleSint64)
    MergeFrom(*source);
  }
}

void ListDoubleSint64::MergeFrom(const ListDoubleSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleSint64::CopyFrom(const ListDoubleSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleSint64::IsInitialized() const {
  return true;
}

void ListDoubleSint64::Swap(ListDoubleSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleSint64::InternalSwap(ListDoubleSint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleFixed32::kKFieldNumber;
const int ListDoubleFixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleFixed32::ListDoubleFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleFixed32)
}
ListDoubleFixed32::ListDoubleFixed32(const ListDoubleFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleFixed32)
}

void ListDoubleFixed32::SharedCtor() {
}

ListDoubleFixed32::~ListDoubleFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleFixed32)
  SharedDtor();
}

void ListDoubleFixed32::SharedDtor() {
}

void ListDoubleFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleFixed32& ListDoubleFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleFixed32.base);
  return *internal_default_instance();
}


void ListDoubleFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleFixed32)
  return false;
#undef DO_
}

void ListDoubleFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleFixed32)
}

::google::protobuf::uint8* ListDoubleFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleFixed32)
  return target;
}

size_t ListDoubleFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleFixed32)
    MergeFrom(*source);
  }
}

void ListDoubleFixed32::MergeFrom(const ListDoubleFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleFixed32::CopyFrom(const ListDoubleFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleFixed32::IsInitialized() const {
  return true;
}

void ListDoubleFixed32::Swap(ListDoubleFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleFixed32::InternalSwap(ListDoubleFixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleFixed64::kKFieldNumber;
const int ListDoubleFixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleFixed64::ListDoubleFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleFixed64)
}
ListDoubleFixed64::ListDoubleFixed64(const ListDoubleFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleFixed64)
}

void ListDoubleFixed64::SharedCtor() {
}

ListDoubleFixed64::~ListDoubleFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleFixed64)
  SharedDtor();
}

void ListDoubleFixed64::SharedDtor() {
}

void ListDoubleFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleFixed64& ListDoubleFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleFixed64.base);
  return *internal_default_instance();
}


void ListDoubleFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleFixed64)
  return false;
#undef DO_
}

void ListDoubleFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleFixed64)
}

::google::protobuf::uint8* ListDoubleFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleFixed64)
  return target;
}

size_t ListDoubleFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleFixed64)
    MergeFrom(*source);
  }
}

void ListDoubleFixed64::MergeFrom(const ListDoubleFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleFixed64::CopyFrom(const ListDoubleFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleFixed64::IsInitialized() const {
  return true;
}

void ListDoubleFixed64::Swap(ListDoubleFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleFixed64::InternalSwap(ListDoubleFixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleSfixed32::kKFieldNumber;
const int ListDoubleSfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleSfixed32::ListDoubleSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleSfixed32)
}
ListDoubleSfixed32::ListDoubleSfixed32(const ListDoubleSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleSfixed32)
}

void ListDoubleSfixed32::SharedCtor() {
}

ListDoubleSfixed32::~ListDoubleSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleSfixed32)
  SharedDtor();
}

void ListDoubleSfixed32::SharedDtor() {
}

void ListDoubleSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleSfixed32& ListDoubleSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleSfixed32.base);
  return *internal_default_instance();
}


void ListDoubleSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleSfixed32)
  return false;
#undef DO_
}

void ListDoubleSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleSfixed32)
}

::google::protobuf::uint8* ListDoubleSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleSfixed32)
  return target;
}

size_t ListDoubleSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleSfixed32)
    MergeFrom(*source);
  }
}

void ListDoubleSfixed32::MergeFrom(const ListDoubleSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleSfixed32::CopyFrom(const ListDoubleSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleSfixed32::IsInitialized() const {
  return true;
}

void ListDoubleSfixed32::Swap(ListDoubleSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleSfixed32::InternalSwap(ListDoubleSfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleSfixed64::kKFieldNumber;
const int ListDoubleSfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleSfixed64::ListDoubleSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleSfixed64)
}
ListDoubleSfixed64::ListDoubleSfixed64(const ListDoubleSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleSfixed64)
}

void ListDoubleSfixed64::SharedCtor() {
}

ListDoubleSfixed64::~ListDoubleSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleSfixed64)
  SharedDtor();
}

void ListDoubleSfixed64::SharedDtor() {
}

void ListDoubleSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleSfixed64& ListDoubleSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleSfixed64.base);
  return *internal_default_instance();
}


void ListDoubleSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleSfixed64)
  return false;
#undef DO_
}

void ListDoubleSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleSfixed64)
}

::google::protobuf::uint8* ListDoubleSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleSfixed64)
  return target;
}

size_t ListDoubleSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleSfixed64)
    MergeFrom(*source);
  }
}

void ListDoubleSfixed64::MergeFrom(const ListDoubleSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleSfixed64::CopyFrom(const ListDoubleSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleSfixed64::IsInitialized() const {
  return true;
}

void ListDoubleSfixed64::Swap(ListDoubleSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleSfixed64::InternalSwap(ListDoubleSfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleBool::kKFieldNumber;
const int ListDoubleBool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleBool::ListDoubleBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleBool)
}
ListDoubleBool::ListDoubleBool(const ListDoubleBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleBool)
}

void ListDoubleBool::SharedCtor() {
}

ListDoubleBool::~ListDoubleBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleBool)
  SharedDtor();
}

void ListDoubleBool::SharedDtor() {
}

void ListDoubleBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleBool& ListDoubleBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleBool.base);
  return *internal_default_instance();
}


void ListDoubleBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleBool)
  return false;
#undef DO_
}

void ListDoubleBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleBool)
}

::google::protobuf::uint8* ListDoubleBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleBool)
  return target;
}

size_t ListDoubleBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleBool)
    MergeFrom(*source);
  }
}

void ListDoubleBool::MergeFrom(const ListDoubleBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleBool::CopyFrom(const ListDoubleBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleBool::IsInitialized() const {
  return true;
}

void ListDoubleBool::Swap(ListDoubleBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleBool::InternalSwap(ListDoubleBool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleString::kKFieldNumber;
const int ListDoubleString::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleString::ListDoubleString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleString)
}
ListDoubleString::ListDoubleString(const ListDoubleString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleString)
}

void ListDoubleString::SharedCtor() {
}

ListDoubleString::~ListDoubleString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleString)
  SharedDtor();
}

void ListDoubleString::SharedDtor() {
}

void ListDoubleString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleString& ListDoubleString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleString.base);
  return *internal_default_instance();
}


void ListDoubleString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListDoubleString.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleString)
  return false;
#undef DO_
}

void ListDoubleString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListDoubleString.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleString)
}

::google::protobuf::uint8* ListDoubleString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListDoubleString.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleString)
  return target;
}

size_t ListDoubleString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleString)
    MergeFrom(*source);
  }
}

void ListDoubleString::MergeFrom(const ListDoubleString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleString::CopyFrom(const ListDoubleString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleString::IsInitialized() const {
  return true;
}

void ListDoubleString::Swap(ListDoubleString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleString::InternalSwap(ListDoubleString* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListDoubleBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListDoubleBytes::kKFieldNumber;
const int ListDoubleBytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListDoubleBytes::ListDoubleBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListDoubleBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListDoubleBytes)
}
ListDoubleBytes::ListDoubleBytes(const ListDoubleBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListDoubleBytes)
}

void ListDoubleBytes::SharedCtor() {
}

ListDoubleBytes::~ListDoubleBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListDoubleBytes)
  SharedDtor();
}

void ListDoubleBytes::SharedDtor() {
}

void ListDoubleBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListDoubleBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListDoubleBytes& ListDoubleBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListDoubleBytes.base);
  return *internal_default_instance();
}


void ListDoubleBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListDoubleBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListDoubleBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListDoubleBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListDoubleBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListDoubleBytes)
  return false;
#undef DO_
}

void ListDoubleBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListDoubleBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListDoubleBytes)
}

::google::protobuf::uint8* ListDoubleBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListDoubleBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListDoubleBytes)
  return target;
}

size_t ListDoubleBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListDoubleBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDoubleBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListDoubleBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDoubleBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListDoubleBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListDoubleBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListDoubleBytes)
    MergeFrom(*source);
  }
}

void ListDoubleBytes::MergeFrom(const ListDoubleBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListDoubleBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListDoubleBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListDoubleBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDoubleBytes::CopyFrom(const ListDoubleBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListDoubleBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDoubleBytes::IsInitialized() const {
  return true;
}

void ListDoubleBytes::Swap(ListDoubleBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListDoubleBytes::InternalSwap(ListDoubleBytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListDoubleBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatDouble::kKFieldNumber;
const int ListFloatDouble::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatDouble::ListFloatDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatDouble)
}
ListFloatDouble::ListFloatDouble(const ListFloatDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatDouble)
}

void ListFloatDouble::SharedCtor() {
}

ListFloatDouble::~ListFloatDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatDouble)
  SharedDtor();
}

void ListFloatDouble::SharedDtor() {
}

void ListFloatDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatDouble& ListFloatDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatDouble.base);
  return *internal_default_instance();
}


void ListFloatDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatDouble)
  return false;
#undef DO_
}

void ListFloatDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatDouble)
}

::google::protobuf::uint8* ListFloatDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatDouble)
  return target;
}

size_t ListFloatDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatDouble)
    MergeFrom(*source);
  }
}

void ListFloatDouble::MergeFrom(const ListFloatDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatDouble::CopyFrom(const ListFloatDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatDouble::IsInitialized() const {
  return true;
}

void ListFloatDouble::Swap(ListFloatDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatDouble::InternalSwap(ListFloatDouble* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatFloat::kKFieldNumber;
const int ListFloatFloat::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatFloat::ListFloatFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatFloat)
}
ListFloatFloat::ListFloatFloat(const ListFloatFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatFloat)
}

void ListFloatFloat::SharedCtor() {
}

ListFloatFloat::~ListFloatFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatFloat)
  SharedDtor();
}

void ListFloatFloat::SharedDtor() {
}

void ListFloatFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatFloat& ListFloatFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatFloat.base);
  return *internal_default_instance();
}


void ListFloatFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatFloat)
  return false;
#undef DO_
}

void ListFloatFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatFloat)
}

::google::protobuf::uint8* ListFloatFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatFloat)
  return target;
}

size_t ListFloatFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatFloat)
    MergeFrom(*source);
  }
}

void ListFloatFloat::MergeFrom(const ListFloatFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatFloat::CopyFrom(const ListFloatFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatFloat::IsInitialized() const {
  return true;
}

void ListFloatFloat::Swap(ListFloatFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatFloat::InternalSwap(ListFloatFloat* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatInt32::kKFieldNumber;
const int ListFloatInt32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatInt32::ListFloatInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatInt32)
}
ListFloatInt32::ListFloatInt32(const ListFloatInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatInt32)
}

void ListFloatInt32::SharedCtor() {
}

ListFloatInt32::~ListFloatInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatInt32)
  SharedDtor();
}

void ListFloatInt32::SharedDtor() {
}

void ListFloatInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatInt32& ListFloatInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatInt32.base);
  return *internal_default_instance();
}


void ListFloatInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatInt32)
  return false;
#undef DO_
}

void ListFloatInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatInt32)
}

::google::protobuf::uint8* ListFloatInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatInt32)
  return target;
}

size_t ListFloatInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatInt32)
    MergeFrom(*source);
  }
}

void ListFloatInt32::MergeFrom(const ListFloatInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatInt32::CopyFrom(const ListFloatInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatInt32::IsInitialized() const {
  return true;
}

void ListFloatInt32::Swap(ListFloatInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatInt32::InternalSwap(ListFloatInt32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatInt64::kKFieldNumber;
const int ListFloatInt64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatInt64::ListFloatInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatInt64)
}
ListFloatInt64::ListFloatInt64(const ListFloatInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatInt64)
}

void ListFloatInt64::SharedCtor() {
}

ListFloatInt64::~ListFloatInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatInt64)
  SharedDtor();
}

void ListFloatInt64::SharedDtor() {
}

void ListFloatInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatInt64& ListFloatInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatInt64.base);
  return *internal_default_instance();
}


void ListFloatInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatInt64)
  return false;
#undef DO_
}

void ListFloatInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatInt64)
}

::google::protobuf::uint8* ListFloatInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatInt64)
  return target;
}

size_t ListFloatInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatInt64)
    MergeFrom(*source);
  }
}

void ListFloatInt64::MergeFrom(const ListFloatInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatInt64::CopyFrom(const ListFloatInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatInt64::IsInitialized() const {
  return true;
}

void ListFloatInt64::Swap(ListFloatInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatInt64::InternalSwap(ListFloatInt64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatUint32::kKFieldNumber;
const int ListFloatUint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatUint32::ListFloatUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatUint32)
}
ListFloatUint32::ListFloatUint32(const ListFloatUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatUint32)
}

void ListFloatUint32::SharedCtor() {
}

ListFloatUint32::~ListFloatUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatUint32)
  SharedDtor();
}

void ListFloatUint32::SharedDtor() {
}

void ListFloatUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatUint32& ListFloatUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatUint32.base);
  return *internal_default_instance();
}


void ListFloatUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatUint32)
  return false;
#undef DO_
}

void ListFloatUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatUint32)
}

::google::protobuf::uint8* ListFloatUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatUint32)
  return target;
}

size_t ListFloatUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatUint32)
    MergeFrom(*source);
  }
}

void ListFloatUint32::MergeFrom(const ListFloatUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatUint32::CopyFrom(const ListFloatUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatUint32::IsInitialized() const {
  return true;
}

void ListFloatUint32::Swap(ListFloatUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatUint32::InternalSwap(ListFloatUint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatUint64::kKFieldNumber;
const int ListFloatUint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatUint64::ListFloatUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatUint64)
}
ListFloatUint64::ListFloatUint64(const ListFloatUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatUint64)
}

void ListFloatUint64::SharedCtor() {
}

ListFloatUint64::~ListFloatUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatUint64)
  SharedDtor();
}

void ListFloatUint64::SharedDtor() {
}

void ListFloatUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatUint64& ListFloatUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatUint64.base);
  return *internal_default_instance();
}


void ListFloatUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatUint64)
  return false;
#undef DO_
}

void ListFloatUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatUint64)
}

::google::protobuf::uint8* ListFloatUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatUint64)
  return target;
}

size_t ListFloatUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatUint64)
    MergeFrom(*source);
  }
}

void ListFloatUint64::MergeFrom(const ListFloatUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatUint64::CopyFrom(const ListFloatUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatUint64::IsInitialized() const {
  return true;
}

void ListFloatUint64::Swap(ListFloatUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatUint64::InternalSwap(ListFloatUint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatSint32::kKFieldNumber;
const int ListFloatSint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatSint32::ListFloatSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatSint32)
}
ListFloatSint32::ListFloatSint32(const ListFloatSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatSint32)
}

void ListFloatSint32::SharedCtor() {
}

ListFloatSint32::~ListFloatSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatSint32)
  SharedDtor();
}

void ListFloatSint32::SharedDtor() {
}

void ListFloatSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatSint32& ListFloatSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatSint32.base);
  return *internal_default_instance();
}


void ListFloatSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatSint32)
  return false;
#undef DO_
}

void ListFloatSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatSint32)
}

::google::protobuf::uint8* ListFloatSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatSint32)
  return target;
}

size_t ListFloatSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatSint32)
    MergeFrom(*source);
  }
}

void ListFloatSint32::MergeFrom(const ListFloatSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatSint32::CopyFrom(const ListFloatSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatSint32::IsInitialized() const {
  return true;
}

void ListFloatSint32::Swap(ListFloatSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatSint32::InternalSwap(ListFloatSint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatSint64::kKFieldNumber;
const int ListFloatSint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatSint64::ListFloatSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatSint64)
}
ListFloatSint64::ListFloatSint64(const ListFloatSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatSint64)
}

void ListFloatSint64::SharedCtor() {
}

ListFloatSint64::~ListFloatSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatSint64)
  SharedDtor();
}

void ListFloatSint64::SharedDtor() {
}

void ListFloatSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatSint64& ListFloatSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatSint64.base);
  return *internal_default_instance();
}


void ListFloatSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatSint64)
  return false;
#undef DO_
}

void ListFloatSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatSint64)
}

::google::protobuf::uint8* ListFloatSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatSint64)
  return target;
}

size_t ListFloatSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatSint64)
    MergeFrom(*source);
  }
}

void ListFloatSint64::MergeFrom(const ListFloatSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatSint64::CopyFrom(const ListFloatSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatSint64::IsInitialized() const {
  return true;
}

void ListFloatSint64::Swap(ListFloatSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatSint64::InternalSwap(ListFloatSint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatFixed32::kKFieldNumber;
const int ListFloatFixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatFixed32::ListFloatFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatFixed32)
}
ListFloatFixed32::ListFloatFixed32(const ListFloatFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatFixed32)
}

void ListFloatFixed32::SharedCtor() {
}

ListFloatFixed32::~ListFloatFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatFixed32)
  SharedDtor();
}

void ListFloatFixed32::SharedDtor() {
}

void ListFloatFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatFixed32& ListFloatFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatFixed32.base);
  return *internal_default_instance();
}


void ListFloatFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatFixed32)
  return false;
#undef DO_
}

void ListFloatFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatFixed32)
}

::google::protobuf::uint8* ListFloatFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatFixed32)
  return target;
}

size_t ListFloatFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatFixed32)
    MergeFrom(*source);
  }
}

void ListFloatFixed32::MergeFrom(const ListFloatFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatFixed32::CopyFrom(const ListFloatFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatFixed32::IsInitialized() const {
  return true;
}

void ListFloatFixed32::Swap(ListFloatFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatFixed32::InternalSwap(ListFloatFixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatFixed64::kKFieldNumber;
const int ListFloatFixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatFixed64::ListFloatFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatFixed64)
}
ListFloatFixed64::ListFloatFixed64(const ListFloatFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatFixed64)
}

void ListFloatFixed64::SharedCtor() {
}

ListFloatFixed64::~ListFloatFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatFixed64)
  SharedDtor();
}

void ListFloatFixed64::SharedDtor() {
}

void ListFloatFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatFixed64& ListFloatFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatFixed64.base);
  return *internal_default_instance();
}


void ListFloatFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatFixed64)
  return false;
#undef DO_
}

void ListFloatFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatFixed64)
}

::google::protobuf::uint8* ListFloatFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatFixed64)
  return target;
}

size_t ListFloatFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatFixed64)
    MergeFrom(*source);
  }
}

void ListFloatFixed64::MergeFrom(const ListFloatFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatFixed64::CopyFrom(const ListFloatFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatFixed64::IsInitialized() const {
  return true;
}

void ListFloatFixed64::Swap(ListFloatFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatFixed64::InternalSwap(ListFloatFixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatSfixed32::kKFieldNumber;
const int ListFloatSfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatSfixed32::ListFloatSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatSfixed32)
}
ListFloatSfixed32::ListFloatSfixed32(const ListFloatSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatSfixed32)
}

void ListFloatSfixed32::SharedCtor() {
}

ListFloatSfixed32::~ListFloatSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatSfixed32)
  SharedDtor();
}

void ListFloatSfixed32::SharedDtor() {
}

void ListFloatSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatSfixed32& ListFloatSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatSfixed32.base);
  return *internal_default_instance();
}


void ListFloatSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatSfixed32)
  return false;
#undef DO_
}

void ListFloatSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatSfixed32)
}

::google::protobuf::uint8* ListFloatSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatSfixed32)
  return target;
}

size_t ListFloatSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatSfixed32)
    MergeFrom(*source);
  }
}

void ListFloatSfixed32::MergeFrom(const ListFloatSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatSfixed32::CopyFrom(const ListFloatSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatSfixed32::IsInitialized() const {
  return true;
}

void ListFloatSfixed32::Swap(ListFloatSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatSfixed32::InternalSwap(ListFloatSfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatSfixed64::kKFieldNumber;
const int ListFloatSfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatSfixed64::ListFloatSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatSfixed64)
}
ListFloatSfixed64::ListFloatSfixed64(const ListFloatSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatSfixed64)
}

void ListFloatSfixed64::SharedCtor() {
}

ListFloatSfixed64::~ListFloatSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatSfixed64)
  SharedDtor();
}

void ListFloatSfixed64::SharedDtor() {
}

void ListFloatSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatSfixed64& ListFloatSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatSfixed64.base);
  return *internal_default_instance();
}


void ListFloatSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatSfixed64)
  return false;
#undef DO_
}

void ListFloatSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatSfixed64)
}

::google::protobuf::uint8* ListFloatSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatSfixed64)
  return target;
}

size_t ListFloatSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatSfixed64)
    MergeFrom(*source);
  }
}

void ListFloatSfixed64::MergeFrom(const ListFloatSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatSfixed64::CopyFrom(const ListFloatSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatSfixed64::IsInitialized() const {
  return true;
}

void ListFloatSfixed64::Swap(ListFloatSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatSfixed64::InternalSwap(ListFloatSfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatBool::kKFieldNumber;
const int ListFloatBool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatBool::ListFloatBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatBool)
}
ListFloatBool::ListFloatBool(const ListFloatBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatBool)
}

void ListFloatBool::SharedCtor() {
}

ListFloatBool::~ListFloatBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatBool)
  SharedDtor();
}

void ListFloatBool::SharedDtor() {
}

void ListFloatBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatBool& ListFloatBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatBool.base);
  return *internal_default_instance();
}


void ListFloatBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatBool)
  return false;
#undef DO_
}

void ListFloatBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatBool)
}

::google::protobuf::uint8* ListFloatBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatBool)
  return target;
}

size_t ListFloatBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatBool)
    MergeFrom(*source);
  }
}

void ListFloatBool::MergeFrom(const ListFloatBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatBool::CopyFrom(const ListFloatBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatBool::IsInitialized() const {
  return true;
}

void ListFloatBool::Swap(ListFloatBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatBool::InternalSwap(ListFloatBool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatString::kKFieldNumber;
const int ListFloatString::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatString::ListFloatString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatString)
}
ListFloatString::ListFloatString(const ListFloatString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatString)
}

void ListFloatString::SharedCtor() {
}

ListFloatString::~ListFloatString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatString)
  SharedDtor();
}

void ListFloatString::SharedDtor() {
}

void ListFloatString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatString& ListFloatString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatString.base);
  return *internal_default_instance();
}


void ListFloatString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListFloatString.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatString)
  return false;
#undef DO_
}

void ListFloatString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFloatString.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatString)
}

::google::protobuf::uint8* ListFloatString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListFloatString.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatString)
  return target;
}

size_t ListFloatString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatString)
    MergeFrom(*source);
  }
}

void ListFloatString::MergeFrom(const ListFloatString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatString::CopyFrom(const ListFloatString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatString::IsInitialized() const {
  return true;
}

void ListFloatString::Swap(ListFloatString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatString::InternalSwap(ListFloatString* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFloatBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFloatBytes::kKFieldNumber;
const int ListFloatBytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFloatBytes::ListFloatBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListFloatBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListFloatBytes)
}
ListFloatBytes::ListFloatBytes(const ListFloatBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListFloatBytes)
}

void ListFloatBytes::SharedCtor() {
}

ListFloatBytes::~ListFloatBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListFloatBytes)
  SharedDtor();
}

void ListFloatBytes::SharedDtor() {
}

void ListFloatBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFloatBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFloatBytes& ListFloatBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListFloatBytes.base);
  return *internal_default_instance();
}


void ListFloatBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListFloatBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListFloatBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListFloatBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListFloatBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListFloatBytes)
  return false;
#undef DO_
}

void ListFloatBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListFloatBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListFloatBytes)
}

::google::protobuf::uint8* ListFloatBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListFloatBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListFloatBytes)
  return target;
}

size_t ListFloatBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListFloatBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFloatBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListFloatBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFloatBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFloatBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListFloatBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListFloatBytes)
    MergeFrom(*source);
  }
}

void ListFloatBytes::MergeFrom(const ListFloatBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListFloatBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListFloatBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListFloatBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFloatBytes::CopyFrom(const ListFloatBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListFloatBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFloatBytes::IsInitialized() const {
  return true;
}

void ListFloatBytes::Swap(ListFloatBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFloatBytes::InternalSwap(ListFloatBytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFloatBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolDouble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolDouble::kKFieldNumber;
const int ListBoolDouble::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolDouble::ListBoolDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolDouble.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolDouble)
}
ListBoolDouble::ListBoolDouble(const ListBoolDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolDouble)
}

void ListBoolDouble::SharedCtor() {
}

ListBoolDouble::~ListBoolDouble() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolDouble)
  SharedDtor();
}

void ListBoolDouble::SharedDtor() {
}

void ListBoolDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolDouble::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolDouble& ListBoolDouble::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolDouble.base);
  return *internal_default_instance();
}


void ListBoolDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolDouble)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolDouble)
  return false;
#undef DO_
}

void ListBoolDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolDouble)
}

::google::protobuf::uint8* ListBoolDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated double w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolDouble)
  return target;
}

size_t ListBoolDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolDouble)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolDouble)
    MergeFrom(*source);
  }
}

void ListBoolDouble::MergeFrom(const ListBoolDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolDouble::CopyFrom(const ListBoolDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolDouble::IsInitialized() const {
  return true;
}

void ListBoolDouble::Swap(ListBoolDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolDouble::InternalSwap(ListBoolDouble* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolDouble::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolFloat::kKFieldNumber;
const int ListBoolFloat::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolFloat::ListBoolFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolFloat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolFloat)
}
ListBoolFloat::ListBoolFloat(const ListBoolFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolFloat)
}

void ListBoolFloat::SharedCtor() {
}

ListBoolFloat::~ListBoolFloat() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolFloat)
  SharedDtor();
}

void ListBoolFloat::SharedDtor() {
}

void ListBoolFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolFloat::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolFloat& ListBoolFloat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolFloat.base);
  return *internal_default_instance();
}


void ListBoolFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolFloat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolFloat)
  return false;
#undef DO_
}

void ListBoolFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolFloat)
}

::google::protobuf::uint8* ListBoolFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated float w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolFloat)
  return target;
}

size_t ListBoolFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolFloat)
    MergeFrom(*source);
  }
}

void ListBoolFloat::MergeFrom(const ListBoolFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolFloat::CopyFrom(const ListBoolFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolFloat::IsInitialized() const {
  return true;
}

void ListBoolFloat::Swap(ListBoolFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolFloat::InternalSwap(ListBoolFloat* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolFloat::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolInt32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolInt32::kKFieldNumber;
const int ListBoolInt32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolInt32::ListBoolInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolInt32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolInt32)
}
ListBoolInt32::ListBoolInt32(const ListBoolInt32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolInt32)
}

void ListBoolInt32::SharedCtor() {
}

ListBoolInt32::~ListBoolInt32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolInt32)
  SharedDtor();
}

void ListBoolInt32::SharedDtor() {
}

void ListBoolInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolInt32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolInt32& ListBoolInt32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolInt32.base);
  return *internal_default_instance();
}


void ListBoolInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolInt32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolInt32)
  return false;
#undef DO_
}

void ListBoolInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolInt32)
}

::google::protobuf::uint8* ListBoolInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolInt32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated int32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolInt32)
  return target;
}

size_t ListBoolInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolInt32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolInt32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolInt32)
    MergeFrom(*source);
  }
}

void ListBoolInt32::MergeFrom(const ListBoolInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolInt32::CopyFrom(const ListBoolInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolInt32::IsInitialized() const {
  return true;
}

void ListBoolInt32::Swap(ListBoolInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolInt32::InternalSwap(ListBoolInt32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolInt32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolInt64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolInt64::kKFieldNumber;
const int ListBoolInt64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolInt64::ListBoolInt64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolInt64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolInt64)
}
ListBoolInt64::ListBoolInt64(const ListBoolInt64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolInt64)
}

void ListBoolInt64::SharedCtor() {
}

ListBoolInt64::~ListBoolInt64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolInt64)
  SharedDtor();
}

void ListBoolInt64::SharedDtor() {
}

void ListBoolInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolInt64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolInt64& ListBoolInt64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolInt64.base);
  return *internal_default_instance();
}


void ListBoolInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolInt64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolInt64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolInt64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolInt64)
  return false;
#undef DO_
}

void ListBoolInt64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolInt64)
}

::google::protobuf::uint8* ListBoolInt64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolInt64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated int64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolInt64)
  return target;
}

size_t ListBoolInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolInt64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolInt64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolInt64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolInt64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolInt64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolInt64)
    MergeFrom(*source);
  }
}

void ListBoolInt64::MergeFrom(const ListBoolInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolInt64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolInt64::CopyFrom(const ListBoolInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolInt64::IsInitialized() const {
  return true;
}

void ListBoolInt64::Swap(ListBoolInt64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolInt64::InternalSwap(ListBoolInt64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolInt64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolUint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolUint32::kKFieldNumber;
const int ListBoolUint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolUint32::ListBoolUint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolUint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolUint32)
}
ListBoolUint32::ListBoolUint32(const ListBoolUint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolUint32)
}

void ListBoolUint32::SharedCtor() {
}

ListBoolUint32::~ListBoolUint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolUint32)
  SharedDtor();
}

void ListBoolUint32::SharedDtor() {
}

void ListBoolUint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolUint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolUint32& ListBoolUint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolUint32.base);
  return *internal_default_instance();
}


void ListBoolUint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolUint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolUint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolUint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolUint32)
  return false;
#undef DO_
}

void ListBoolUint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolUint32)
}

::google::protobuf::uint8* ListBoolUint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolUint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated uint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolUint32)
  return target;
}

size_t ListBoolUint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolUint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolUint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolUint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolUint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolUint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolUint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolUint32)
    MergeFrom(*source);
  }
}

void ListBoolUint32::MergeFrom(const ListBoolUint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolUint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolUint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolUint32::CopyFrom(const ListBoolUint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolUint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolUint32::IsInitialized() const {
  return true;
}

void ListBoolUint32::Swap(ListBoolUint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolUint32::InternalSwap(ListBoolUint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolUint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolUint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolUint64::kKFieldNumber;
const int ListBoolUint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolUint64::ListBoolUint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolUint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolUint64)
}
ListBoolUint64::ListBoolUint64(const ListBoolUint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolUint64)
}

void ListBoolUint64::SharedCtor() {
}

ListBoolUint64::~ListBoolUint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolUint64)
  SharedDtor();
}

void ListBoolUint64::SharedDtor() {
}

void ListBoolUint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolUint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolUint64& ListBoolUint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolUint64.base);
  return *internal_default_instance();
}


void ListBoolUint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolUint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolUint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolUint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolUint64)
  return false;
#undef DO_
}

void ListBoolUint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolUint64)
}

::google::protobuf::uint8* ListBoolUint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolUint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated uint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolUint64)
  return target;
}

size_t ListBoolUint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolUint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolUint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolUint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolUint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolUint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolUint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolUint64)
    MergeFrom(*source);
  }
}

void ListBoolUint64::MergeFrom(const ListBoolUint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolUint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolUint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolUint64::CopyFrom(const ListBoolUint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolUint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolUint64::IsInitialized() const {
  return true;
}

void ListBoolUint64::Swap(ListBoolUint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolUint64::InternalSwap(ListBoolUint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolUint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolSint32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolSint32::kKFieldNumber;
const int ListBoolSint32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolSint32::ListBoolSint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolSint32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolSint32)
}
ListBoolSint32::ListBoolSint32(const ListBoolSint32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolSint32)
}

void ListBoolSint32::SharedCtor() {
}

ListBoolSint32::~ListBoolSint32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolSint32)
  SharedDtor();
}

void ListBoolSint32::SharedDtor() {
}

void ListBoolSint32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolSint32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolSint32& ListBoolSint32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolSint32.base);
  return *internal_default_instance();
}


void ListBoolSint32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolSint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolSint32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolSint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolSint32)
  return false;
#undef DO_
}

void ListBoolSint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolSint32)
}

::google::protobuf::uint8* ListBoolSint32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolSint32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated sint32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolSint32)
  return target;
}

size_t ListBoolSint32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolSint32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolSint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolSint32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolSint32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolSint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolSint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolSint32)
    MergeFrom(*source);
  }
}

void ListBoolSint32::MergeFrom(const ListBoolSint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolSint32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolSint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolSint32::CopyFrom(const ListBoolSint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolSint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolSint32::IsInitialized() const {
  return true;
}

void ListBoolSint32::Swap(ListBoolSint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolSint32::InternalSwap(ListBoolSint32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolSint32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolSint64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolSint64::kKFieldNumber;
const int ListBoolSint64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolSint64::ListBoolSint64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolSint64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolSint64)
}
ListBoolSint64::ListBoolSint64(const ListBoolSint64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolSint64)
}

void ListBoolSint64::SharedCtor() {
}

ListBoolSint64::~ListBoolSint64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolSint64)
  SharedDtor();
}

void ListBoolSint64::SharedDtor() {
}

void ListBoolSint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolSint64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolSint64& ListBoolSint64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolSint64.base);
  return *internal_default_instance();
}


void ListBoolSint64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolSint64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolSint64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolSint64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolSint64)
  return false;
#undef DO_
}

void ListBoolSint64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
  }
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolSint64)
}

::google::protobuf::uint8* ListBoolSint64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolSint64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated sint64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolSint64)
  return target;
}

size_t ListBoolSint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolSint64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 w = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->w_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolSint64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolSint64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolSint64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolSint64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolSint64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolSint64)
    MergeFrom(*source);
  }
}

void ListBoolSint64::MergeFrom(const ListBoolSint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolSint64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolSint64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolSint64::CopyFrom(const ListBoolSint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolSint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolSint64::IsInitialized() const {
  return true;
}

void ListBoolSint64::Swap(ListBoolSint64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolSint64::InternalSwap(ListBoolSint64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolSint64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolFixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolFixed32::kKFieldNumber;
const int ListBoolFixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolFixed32::ListBoolFixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolFixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolFixed32)
}
ListBoolFixed32::ListBoolFixed32(const ListBoolFixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolFixed32)
}

void ListBoolFixed32::SharedCtor() {
}

ListBoolFixed32::~ListBoolFixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolFixed32)
  SharedDtor();
}

void ListBoolFixed32::SharedDtor() {
}

void ListBoolFixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolFixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolFixed32& ListBoolFixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolFixed32.base);
  return *internal_default_instance();
}


void ListBoolFixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolFixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolFixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolFixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolFixed32)
  return false;
#undef DO_
}

void ListBoolFixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolFixed32)
}

::google::protobuf::uint8* ListBoolFixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolFixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated fixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolFixed32)
  return target;
}

size_t ListBoolFixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolFixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolFixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolFixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolFixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolFixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolFixed32)
    MergeFrom(*source);
  }
}

void ListBoolFixed32::MergeFrom(const ListBoolFixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolFixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolFixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolFixed32::CopyFrom(const ListBoolFixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolFixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolFixed32::IsInitialized() const {
  return true;
}

void ListBoolFixed32::Swap(ListBoolFixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolFixed32::InternalSwap(ListBoolFixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolFixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolFixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolFixed64::kKFieldNumber;
const int ListBoolFixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolFixed64::ListBoolFixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolFixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolFixed64)
}
ListBoolFixed64::ListBoolFixed64(const ListBoolFixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolFixed64)
}

void ListBoolFixed64::SharedCtor() {
}

ListBoolFixed64::~ListBoolFixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolFixed64)
  SharedDtor();
}

void ListBoolFixed64::SharedDtor() {
}

void ListBoolFixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolFixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolFixed64& ListBoolFixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolFixed64.base);
  return *internal_default_instance();
}


void ListBoolFixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolFixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolFixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolFixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolFixed64)
  return false;
#undef DO_
}

void ListBoolFixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolFixed64)
}

::google::protobuf::uint8* ListBoolFixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolFixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated fixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolFixed64)
  return target;
}

size_t ListBoolFixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolFixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolFixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolFixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolFixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolFixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolFixed64)
    MergeFrom(*source);
  }
}

void ListBoolFixed64::MergeFrom(const ListBoolFixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolFixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolFixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolFixed64::CopyFrom(const ListBoolFixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolFixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolFixed64::IsInitialized() const {
  return true;
}

void ListBoolFixed64::Swap(ListBoolFixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolFixed64::InternalSwap(ListBoolFixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolFixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolSfixed32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolSfixed32::kKFieldNumber;
const int ListBoolSfixed32::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolSfixed32::ListBoolSfixed32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolSfixed32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolSfixed32)
}
ListBoolSfixed32::ListBoolSfixed32(const ListBoolSfixed32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolSfixed32)
}

void ListBoolSfixed32::SharedCtor() {
}

ListBoolSfixed32::~ListBoolSfixed32() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolSfixed32)
  SharedDtor();
}

void ListBoolSfixed32::SharedDtor() {
}

void ListBoolSfixed32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolSfixed32::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolSfixed32& ListBoolSfixed32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolSfixed32.base);
  return *internal_default_instance();
}


void ListBoolSfixed32::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolSfixed32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolSfixed32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolSfixed32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolSfixed32)
  return false;
#undef DO_
}

void ListBoolSfixed32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolSfixed32)
}

::google::protobuf::uint8* ListBoolSfixed32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolSfixed32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated sfixed32 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolSfixed32)
  return target;
}

size_t ListBoolSfixed32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolSfixed32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolSfixed32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolSfixed32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolSfixed32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolSfixed32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolSfixed32)
    MergeFrom(*source);
  }
}

void ListBoolSfixed32::MergeFrom(const ListBoolSfixed32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolSfixed32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolSfixed32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolSfixed32::CopyFrom(const ListBoolSfixed32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolSfixed32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolSfixed32::IsInitialized() const {
  return true;
}

void ListBoolSfixed32::Swap(ListBoolSfixed32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolSfixed32::InternalSwap(ListBoolSfixed32* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolSfixed32::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolSfixed64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolSfixed64::kKFieldNumber;
const int ListBoolSfixed64::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolSfixed64::ListBoolSfixed64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolSfixed64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolSfixed64)
}
ListBoolSfixed64::ListBoolSfixed64(const ListBoolSfixed64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolSfixed64)
}

void ListBoolSfixed64::SharedCtor() {
}

ListBoolSfixed64::~ListBoolSfixed64() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolSfixed64)
  SharedDtor();
}

void ListBoolSfixed64::SharedDtor() {
}

void ListBoolSfixed64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolSfixed64::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolSfixed64& ListBoolSfixed64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolSfixed64.base);
  return *internal_default_instance();
}


void ListBoolSfixed64::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolSfixed64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolSfixed64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolSfixed64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolSfixed64)
  return false;
#undef DO_
}

void ListBoolSfixed64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolSfixed64)
}

::google::protobuf::uint8* ListBoolSfixed64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolSfixed64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated sfixed64 w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolSfixed64)
  return target;
}

size_t ListBoolSfixed64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolSfixed64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolSfixed64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolSfixed64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolSfixed64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolSfixed64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolSfixed64)
    MergeFrom(*source);
  }
}

void ListBoolSfixed64::MergeFrom(const ListBoolSfixed64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolSfixed64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolSfixed64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolSfixed64::CopyFrom(const ListBoolSfixed64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolSfixed64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolSfixed64::IsInitialized() const {
  return true;
}

void ListBoolSfixed64::Swap(ListBoolSfixed64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolSfixed64::InternalSwap(ListBoolSfixed64* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolSfixed64::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolBool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolBool::kKFieldNumber;
const int ListBoolBool::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolBool::ListBoolBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolBool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolBool)
}
ListBoolBool::ListBoolBool(const ListBoolBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolBool)
}

void ListBoolBool::SharedCtor() {
}

ListBoolBool::~ListBoolBool() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolBool)
  SharedDtor();
}

void ListBoolBool::SharedDtor() {
}

void ListBoolBool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolBool::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolBool& ListBoolBool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolBool.base);
  return *internal_default_instance();
}


void ListBoolBool::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolBool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_w())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18u, input, this->mutable_w())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolBool)
  return false;
#undef DO_
}

void ListBoolBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _w_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->w().data(), this->w_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolBool)
}

::google::protobuf::uint8* ListBoolBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated bool w = 2;
  if (this->w_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _w_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->w_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolBool)
  return target;
}

size_t ListBoolBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolBool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool w = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->w_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _w_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolBool)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolBool)
    MergeFrom(*source);
  }
}

void ListBoolBool::MergeFrom(const ListBoolBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolBool::CopyFrom(const ListBoolBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolBool::IsInitialized() const {
  return true;
}

void ListBoolBool::Swap(ListBoolBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolBool::InternalSwap(ListBoolBool* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(&other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolBool::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolString::kKFieldNumber;
const int ListBoolString::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolString::ListBoolString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolString.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolString)
}
ListBoolString::ListBoolString(const ListBoolString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolString)
}

void ListBoolString::SharedCtor() {
}

ListBoolString::~ListBoolString() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolString)
  SharedDtor();
}

void ListBoolString::SharedDtor() {
}

void ListBoolString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolString::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolString& ListBoolString::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolString.base);
  return *internal_default_instance();
}


void ListBoolString::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_w()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->w(this->w_size() - 1).data(),
            static_cast<int>(this->w(this->w_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.ListBoolString.w"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolString)
  return false;
#undef DO_
}

void ListBoolString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListBoolString.w");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolString)
}

::google::protobuf::uint8* ListBoolString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated string w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->w(i).data(), static_cast<int>(this->w(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.ListBoolString.w");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolString)
  return target;
}

size_t ListBoolString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolString)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolString)
    MergeFrom(*source);
  }
}

void ListBoolString::MergeFrom(const ListBoolString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolString::CopyFrom(const ListBoolString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolString::IsInitialized() const {
  return true;
}

void ListBoolString::Swap(ListBoolString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolString::InternalSwap(ListBoolString* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolString::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBoolBytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBoolBytes::kKFieldNumber;
const int ListBoolBytes::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBoolBytes::ListBoolBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_ListBoolBytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.ListBoolBytes)
}
ListBoolBytes::ListBoolBytes(const ListBoolBytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_),
      w_(from.w_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.ListBoolBytes)
}

void ListBoolBytes::SharedCtor() {
}

ListBoolBytes::~ListBoolBytes() {
  // @@protoc_insertion_point(destructor:feature_proto.ListBoolBytes)
  SharedDtor();
}

void ListBoolBytes::SharedDtor() {
}

void ListBoolBytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListBoolBytes::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBoolBytes& ListBoolBytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_ListBoolBytes.base);
  return *internal_default_instance();
}


void ListBoolBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.ListBoolBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  w_.Clear();
  _internal_metadata_.Clear();
}

bool ListBoolBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.ListBoolBytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_k())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10u, input, this->mutable_k())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes w = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.ListBoolBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.ListBoolBytes)
  return false;
#undef DO_
}

void ListBoolBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.ListBoolBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _k_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->k().data(), this->k_size(), output);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->w(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.ListBoolBytes)
}

::google::protobuf::uint8* ListBoolBytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.ListBoolBytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool k = 1;
  if (this->k_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _k_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->k_, target);
  }

  // repeated bytes w = 2;
  for (int i = 0, n = this->w_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->w(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.ListBoolBytes)
  return target;
}

size_t ListBoolBytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.ListBoolBytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bool k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _k_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes w = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->w_size());
  for (int i = 0, n = this->w_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->w(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBoolBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.ListBoolBytes)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBoolBytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBoolBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.ListBoolBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.ListBoolBytes)
    MergeFrom(*source);
  }
}

void ListBoolBytes::MergeFrom(const ListBoolBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.ListBoolBytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
  w_.MergeFrom(from.w_);
}

void ListBoolBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.ListBoolBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBoolBytes::CopyFrom(const ListBoolBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.ListBoolBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBoolBytes::IsInitialized() const {
  return true;
}

void ListBoolBytes::Swap(ListBoolBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBoolBytes::InternalSwap(ListBoolBytes* other) {
  using std::swap;
  k_.InternalSwap(&other->k_);
  w_.InternalSwap(CastToBase(&other->w_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListBoolBytes::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Feature::InitAsDefaultInstance() {
  ::feature_proto::_Feature_default_instance_.v_double_ = 0;
  ::feature_proto::_Feature_default_instance_.v_float_ = 0;
  ::feature_proto::_Feature_default_instance_.v_int32_ = 0;
  ::feature_proto::_Feature_default_instance_.v_int64_ = GOOGLE_LONGLONG(0);
  ::feature_proto::_Feature_default_instance_.v_uint32_ = 0u;
  ::feature_proto::_Feature_default_instance_.v_uint64_ = GOOGLE_ULONGLONG(0);
  ::feature_proto::_Feature_default_instance_.v_sint32_ = 0;
  ::feature_proto::_Feature_default_instance_.v_sint64_ = GOOGLE_LONGLONG(0);
  ::feature_proto::_Feature_default_instance_.v_fixed32_ = 0u;
  ::feature_proto::_Feature_default_instance_.v_fixed64_ = GOOGLE_ULONGLONG(0);
  ::feature_proto::_Feature_default_instance_.v_sfixed32_ = 0;
  ::feature_proto::_Feature_default_instance_.v_sfixed64_ = GOOGLE_LONGLONG(0);
  ::feature_proto::_Feature_default_instance_.v_bool_ = false;
  ::feature_proto::_Feature_default_instance_.v_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::feature_proto::_Feature_default_instance_.v_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::feature_proto::_Feature_default_instance_.v_list_double_ = const_cast< ::feature_proto::ListDouble*>(
      ::feature_proto::ListDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_ = const_cast< ::feature_proto::ListFloat*>(
      ::feature_proto::ListFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_ = const_cast< ::feature_proto::ListInt32*>(
      ::feature_proto::ListInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_ = const_cast< ::feature_proto::ListInt64*>(
      ::feature_proto::ListInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_ = const_cast< ::feature_proto::ListUint32*>(
      ::feature_proto::ListUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_ = const_cast< ::feature_proto::ListUint64*>(
      ::feature_proto::ListUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_ = const_cast< ::feature_proto::ListSint32*>(
      ::feature_proto::ListSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_ = const_cast< ::feature_proto::ListSint64*>(
      ::feature_proto::ListSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_ = const_cast< ::feature_proto::ListFixed32*>(
      ::feature_proto::ListFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_ = const_cast< ::feature_proto::ListFixed64*>(
      ::feature_proto::ListFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_ = const_cast< ::feature_proto::ListSfixed32*>(
      ::feature_proto::ListSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_ = const_cast< ::feature_proto::ListSfixed64*>(
      ::feature_proto::ListSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_ = const_cast< ::feature_proto::ListBool*>(
      ::feature_proto::ListBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_ = const_cast< ::feature_proto::ListString*>(
      ::feature_proto::ListString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_ = const_cast< ::feature_proto::ListBytes*>(
      ::feature_proto::ListBytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_double_ = const_cast< ::feature_proto::ListStringDouble*>(
      ::feature_proto::ListStringDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_float_ = const_cast< ::feature_proto::ListStringFloat*>(
      ::feature_proto::ListStringFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_int32_ = const_cast< ::feature_proto::ListStringInt32*>(
      ::feature_proto::ListStringInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_int64_ = const_cast< ::feature_proto::ListStringInt64*>(
      ::feature_proto::ListStringInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_uint32_ = const_cast< ::feature_proto::ListStringUint32*>(
      ::feature_proto::ListStringUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_uint64_ = const_cast< ::feature_proto::ListStringUint64*>(
      ::feature_proto::ListStringUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_sint32_ = const_cast< ::feature_proto::ListStringSint32*>(
      ::feature_proto::ListStringSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_sint64_ = const_cast< ::feature_proto::ListStringSint64*>(
      ::feature_proto::ListStringSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_fixed32_ = const_cast< ::feature_proto::ListStringFixed32*>(
      ::feature_proto::ListStringFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_fixed64_ = const_cast< ::feature_proto::ListStringFixed64*>(
      ::feature_proto::ListStringFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_sfixed32_ = const_cast< ::feature_proto::ListStringSfixed32*>(
      ::feature_proto::ListStringSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_sfixed64_ = const_cast< ::feature_proto::ListStringSfixed64*>(
      ::feature_proto::ListStringSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_bool_ = const_cast< ::feature_proto::ListStringBool*>(
      ::feature_proto::ListStringBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_string_ = const_cast< ::feature_proto::ListStringString*>(
      ::feature_proto::ListStringString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_string_bytes_ = const_cast< ::feature_proto::ListStringBytes*>(
      ::feature_proto::ListStringBytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_double_ = const_cast< ::feature_proto::ListBytesDouble*>(
      ::feature_proto::ListBytesDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_float_ = const_cast< ::feature_proto::ListBytesFloat*>(
      ::feature_proto::ListBytesFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_int32_ = const_cast< ::feature_proto::ListBytesInt32*>(
      ::feature_proto::ListBytesInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_int64_ = const_cast< ::feature_proto::ListBytesInt64*>(
      ::feature_proto::ListBytesInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_uint32_ = const_cast< ::feature_proto::ListBytesUint32*>(
      ::feature_proto::ListBytesUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_uint64_ = const_cast< ::feature_proto::ListBytesUint64*>(
      ::feature_proto::ListBytesUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_sint32_ = const_cast< ::feature_proto::ListBytesSint32*>(
      ::feature_proto::ListBytesSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_sint64_ = const_cast< ::feature_proto::ListBytesSint64*>(
      ::feature_proto::ListBytesSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_fixed32_ = const_cast< ::feature_proto::ListBytesFixed32*>(
      ::feature_proto::ListBytesFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_fixed64_ = const_cast< ::feature_proto::ListBytesFixed64*>(
      ::feature_proto::ListBytesFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_sfixed32_ = const_cast< ::feature_proto::ListBytesSfixed32*>(
      ::feature_proto::ListBytesSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_sfixed64_ = const_cast< ::feature_proto::ListBytesSfixed64*>(
      ::feature_proto::ListBytesSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_bool_ = const_cast< ::feature_proto::ListBytesBool*>(
      ::feature_proto::ListBytesBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_string_ = const_cast< ::feature_proto::ListBytesString*>(
      ::feature_proto::ListBytesString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bytes_bytes_ = const_cast< ::feature_proto::ListBytesBytes*>(
      ::feature_proto::ListBytesBytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_double_ = const_cast< ::feature_proto::ListInt32Double*>(
      ::feature_proto::ListInt32Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_float_ = const_cast< ::feature_proto::ListInt32Float*>(
      ::feature_proto::ListInt32Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_int32_ = const_cast< ::feature_proto::ListInt32Int32*>(
      ::feature_proto::ListInt32Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_int64_ = const_cast< ::feature_proto::ListInt32Int64*>(
      ::feature_proto::ListInt32Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_uint32_ = const_cast< ::feature_proto::ListInt32Uint32*>(
      ::feature_proto::ListInt32Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_uint64_ = const_cast< ::feature_proto::ListInt32Uint64*>(
      ::feature_proto::ListInt32Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_sint32_ = const_cast< ::feature_proto::ListInt32Sint32*>(
      ::feature_proto::ListInt32Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_sint64_ = const_cast< ::feature_proto::ListInt32Sint64*>(
      ::feature_proto::ListInt32Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_fixed32_ = const_cast< ::feature_proto::ListInt32Fixed32*>(
      ::feature_proto::ListInt32Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_fixed64_ = const_cast< ::feature_proto::ListInt32Fixed64*>(
      ::feature_proto::ListInt32Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_sfixed32_ = const_cast< ::feature_proto::ListInt32Sfixed32*>(
      ::feature_proto::ListInt32Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_sfixed64_ = const_cast< ::feature_proto::ListInt32Sfixed64*>(
      ::feature_proto::ListInt32Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_bool_ = const_cast< ::feature_proto::ListInt32Bool*>(
      ::feature_proto::ListInt32Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_string_ = const_cast< ::feature_proto::ListInt32String*>(
      ::feature_proto::ListInt32String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int32_bytes_ = const_cast< ::feature_proto::ListInt32Bytes*>(
      ::feature_proto::ListInt32Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_double_ = const_cast< ::feature_proto::ListInt64Double*>(
      ::feature_proto::ListInt64Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_float_ = const_cast< ::feature_proto::ListInt64Float*>(
      ::feature_proto::ListInt64Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_int32_ = const_cast< ::feature_proto::ListInt64Int32*>(
      ::feature_proto::ListInt64Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_int64_ = const_cast< ::feature_proto::ListInt64Int64*>(
      ::feature_proto::ListInt64Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_uint32_ = const_cast< ::feature_proto::ListInt64Uint32*>(
      ::feature_proto::ListInt64Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_uint64_ = const_cast< ::feature_proto::ListInt64Uint64*>(
      ::feature_proto::ListInt64Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_sint32_ = const_cast< ::feature_proto::ListInt64Sint32*>(
      ::feature_proto::ListInt64Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_sint64_ = const_cast< ::feature_proto::ListInt64Sint64*>(
      ::feature_proto::ListInt64Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_fixed32_ = const_cast< ::feature_proto::ListInt64Fixed32*>(
      ::feature_proto::ListInt64Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_fixed64_ = const_cast< ::feature_proto::ListInt64Fixed64*>(
      ::feature_proto::ListInt64Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_sfixed32_ = const_cast< ::feature_proto::ListInt64Sfixed32*>(
      ::feature_proto::ListInt64Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_sfixed64_ = const_cast< ::feature_proto::ListInt64Sfixed64*>(
      ::feature_proto::ListInt64Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_bool_ = const_cast< ::feature_proto::ListInt64Bool*>(
      ::feature_proto::ListInt64Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_string_ = const_cast< ::feature_proto::ListInt64String*>(
      ::feature_proto::ListInt64String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_int64_bytes_ = const_cast< ::feature_proto::ListInt64Bytes*>(
      ::feature_proto::ListInt64Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_double_ = const_cast< ::feature_proto::ListUint32Double*>(
      ::feature_proto::ListUint32Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_float_ = const_cast< ::feature_proto::ListUint32Float*>(
      ::feature_proto::ListUint32Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_int32_ = const_cast< ::feature_proto::ListUint32Int32*>(
      ::feature_proto::ListUint32Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_int64_ = const_cast< ::feature_proto::ListUint32Int64*>(
      ::feature_proto::ListUint32Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_uint32_ = const_cast< ::feature_proto::ListUint32Uint32*>(
      ::feature_proto::ListUint32Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_uint64_ = const_cast< ::feature_proto::ListUint32Uint64*>(
      ::feature_proto::ListUint32Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_sint32_ = const_cast< ::feature_proto::ListUint32Sint32*>(
      ::feature_proto::ListUint32Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_sint64_ = const_cast< ::feature_proto::ListUint32Sint64*>(
      ::feature_proto::ListUint32Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_fixed32_ = const_cast< ::feature_proto::ListUint32Fixed32*>(
      ::feature_proto::ListUint32Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_fixed64_ = const_cast< ::feature_proto::ListUint32Fixed64*>(
      ::feature_proto::ListUint32Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_sfixed32_ = const_cast< ::feature_proto::ListUint32Sfixed32*>(
      ::feature_proto::ListUint32Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_sfixed64_ = const_cast< ::feature_proto::ListUint32Sfixed64*>(
      ::feature_proto::ListUint32Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_bool_ = const_cast< ::feature_proto::ListUint32Bool*>(
      ::feature_proto::ListUint32Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_string_ = const_cast< ::feature_proto::ListUint32String*>(
      ::feature_proto::ListUint32String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint32_bytes_ = const_cast< ::feature_proto::ListUint32Bytes*>(
      ::feature_proto::ListUint32Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_double_ = const_cast< ::feature_proto::ListUint64Double*>(
      ::feature_proto::ListUint64Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_float_ = const_cast< ::feature_proto::ListUint64Float*>(
      ::feature_proto::ListUint64Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_int32_ = const_cast< ::feature_proto::ListUint64Int32*>(
      ::feature_proto::ListUint64Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_int64_ = const_cast< ::feature_proto::ListUint64Int64*>(
      ::feature_proto::ListUint64Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_uint32_ = const_cast< ::feature_proto::ListUint64Uint32*>(
      ::feature_proto::ListUint64Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_uint64_ = const_cast< ::feature_proto::ListUint64Uint64*>(
      ::feature_proto::ListUint64Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_sint32_ = const_cast< ::feature_proto::ListUint64Sint32*>(
      ::feature_proto::ListUint64Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_sint64_ = const_cast< ::feature_proto::ListUint64Sint64*>(
      ::feature_proto::ListUint64Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_fixed32_ = const_cast< ::feature_proto::ListUint64Fixed32*>(
      ::feature_proto::ListUint64Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_fixed64_ = const_cast< ::feature_proto::ListUint64Fixed64*>(
      ::feature_proto::ListUint64Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_sfixed32_ = const_cast< ::feature_proto::ListUint64Sfixed32*>(
      ::feature_proto::ListUint64Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_sfixed64_ = const_cast< ::feature_proto::ListUint64Sfixed64*>(
      ::feature_proto::ListUint64Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_bool_ = const_cast< ::feature_proto::ListUint64Bool*>(
      ::feature_proto::ListUint64Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_string_ = const_cast< ::feature_proto::ListUint64String*>(
      ::feature_proto::ListUint64String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_uint64_bytes_ = const_cast< ::feature_proto::ListUint64Bytes*>(
      ::feature_proto::ListUint64Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_double_ = const_cast< ::feature_proto::ListSint32Double*>(
      ::feature_proto::ListSint32Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_float_ = const_cast< ::feature_proto::ListSint32Float*>(
      ::feature_proto::ListSint32Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_int32_ = const_cast< ::feature_proto::ListSint32Int32*>(
      ::feature_proto::ListSint32Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_int64_ = const_cast< ::feature_proto::ListSint32Int64*>(
      ::feature_proto::ListSint32Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_uint32_ = const_cast< ::feature_proto::ListSint32Uint32*>(
      ::feature_proto::ListSint32Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_uint64_ = const_cast< ::feature_proto::ListSint32Uint64*>(
      ::feature_proto::ListSint32Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_sint32_ = const_cast< ::feature_proto::ListSint32Sint32*>(
      ::feature_proto::ListSint32Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_sint64_ = const_cast< ::feature_proto::ListSint32Sint64*>(
      ::feature_proto::ListSint32Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_fixed32_ = const_cast< ::feature_proto::ListSint32Fixed32*>(
      ::feature_proto::ListSint32Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_fixed64_ = const_cast< ::feature_proto::ListSint32Fixed64*>(
      ::feature_proto::ListSint32Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_sfixed32_ = const_cast< ::feature_proto::ListSint32Sfixed32*>(
      ::feature_proto::ListSint32Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_sfixed64_ = const_cast< ::feature_proto::ListSint32Sfixed64*>(
      ::feature_proto::ListSint32Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_bool_ = const_cast< ::feature_proto::ListSint32Bool*>(
      ::feature_proto::ListSint32Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_string_ = const_cast< ::feature_proto::ListSint32String*>(
      ::feature_proto::ListSint32String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint32_bytes_ = const_cast< ::feature_proto::ListSint32Bytes*>(
      ::feature_proto::ListSint32Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_double_ = const_cast< ::feature_proto::ListSint64Double*>(
      ::feature_proto::ListSint64Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_float_ = const_cast< ::feature_proto::ListSint64Float*>(
      ::feature_proto::ListSint64Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_int32_ = const_cast< ::feature_proto::ListSint64Int32*>(
      ::feature_proto::ListSint64Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_int64_ = const_cast< ::feature_proto::ListSint64Int64*>(
      ::feature_proto::ListSint64Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_uint32_ = const_cast< ::feature_proto::ListSint64Uint32*>(
      ::feature_proto::ListSint64Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_uint64_ = const_cast< ::feature_proto::ListSint64Uint64*>(
      ::feature_proto::ListSint64Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_sint32_ = const_cast< ::feature_proto::ListSint64Sint32*>(
      ::feature_proto::ListSint64Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_sint64_ = const_cast< ::feature_proto::ListSint64Sint64*>(
      ::feature_proto::ListSint64Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_fixed32_ = const_cast< ::feature_proto::ListSint64Fixed32*>(
      ::feature_proto::ListSint64Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_fixed64_ = const_cast< ::feature_proto::ListSint64Fixed64*>(
      ::feature_proto::ListSint64Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_sfixed32_ = const_cast< ::feature_proto::ListSint64Sfixed32*>(
      ::feature_proto::ListSint64Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_sfixed64_ = const_cast< ::feature_proto::ListSint64Sfixed64*>(
      ::feature_proto::ListSint64Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_bool_ = const_cast< ::feature_proto::ListSint64Bool*>(
      ::feature_proto::ListSint64Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_string_ = const_cast< ::feature_proto::ListSint64String*>(
      ::feature_proto::ListSint64String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sint64_bytes_ = const_cast< ::feature_proto::ListSint64Bytes*>(
      ::feature_proto::ListSint64Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_double_ = const_cast< ::feature_proto::ListFixed32Double*>(
      ::feature_proto::ListFixed32Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_float_ = const_cast< ::feature_proto::ListFixed32Float*>(
      ::feature_proto::ListFixed32Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_int32_ = const_cast< ::feature_proto::ListFixed32Int32*>(
      ::feature_proto::ListFixed32Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_int64_ = const_cast< ::feature_proto::ListFixed32Int64*>(
      ::feature_proto::ListFixed32Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_uint32_ = const_cast< ::feature_proto::ListFixed32Uint32*>(
      ::feature_proto::ListFixed32Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_uint64_ = const_cast< ::feature_proto::ListFixed32Uint64*>(
      ::feature_proto::ListFixed32Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_sint32_ = const_cast< ::feature_proto::ListFixed32Sint32*>(
      ::feature_proto::ListFixed32Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_sint64_ = const_cast< ::feature_proto::ListFixed32Sint64*>(
      ::feature_proto::ListFixed32Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_fixed32_ = const_cast< ::feature_proto::ListFixed32Fixed32*>(
      ::feature_proto::ListFixed32Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_fixed64_ = const_cast< ::feature_proto::ListFixed32Fixed64*>(
      ::feature_proto::ListFixed32Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_sfixed32_ = const_cast< ::feature_proto::ListFixed32Sfixed32*>(
      ::feature_proto::ListFixed32Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_sfixed64_ = const_cast< ::feature_proto::ListFixed32Sfixed64*>(
      ::feature_proto::ListFixed32Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_bool_ = const_cast< ::feature_proto::ListFixed32Bool*>(
      ::feature_proto::ListFixed32Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_string_ = const_cast< ::feature_proto::ListFixed32String*>(
      ::feature_proto::ListFixed32String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed32_bytes_ = const_cast< ::feature_proto::ListFixed32Bytes*>(
      ::feature_proto::ListFixed32Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_double_ = const_cast< ::feature_proto::ListFixed64Double*>(
      ::feature_proto::ListFixed64Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_float_ = const_cast< ::feature_proto::ListFixed64Float*>(
      ::feature_proto::ListFixed64Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_int32_ = const_cast< ::feature_proto::ListFixed64Int32*>(
      ::feature_proto::ListFixed64Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_int64_ = const_cast< ::feature_proto::ListFixed64Int64*>(
      ::feature_proto::ListFixed64Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_uint32_ = const_cast< ::feature_proto::ListFixed64Uint32*>(
      ::feature_proto::ListFixed64Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_uint64_ = const_cast< ::feature_proto::ListFixed64Uint64*>(
      ::feature_proto::ListFixed64Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_sint32_ = const_cast< ::feature_proto::ListFixed64Sint32*>(
      ::feature_proto::ListFixed64Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_sint64_ = const_cast< ::feature_proto::ListFixed64Sint64*>(
      ::feature_proto::ListFixed64Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_fixed32_ = const_cast< ::feature_proto::ListFixed64Fixed32*>(
      ::feature_proto::ListFixed64Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_fixed64_ = const_cast< ::feature_proto::ListFixed64Fixed64*>(
      ::feature_proto::ListFixed64Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_sfixed32_ = const_cast< ::feature_proto::ListFixed64Sfixed32*>(
      ::feature_proto::ListFixed64Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_sfixed64_ = const_cast< ::feature_proto::ListFixed64Sfixed64*>(
      ::feature_proto::ListFixed64Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_bool_ = const_cast< ::feature_proto::ListFixed64Bool*>(
      ::feature_proto::ListFixed64Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_string_ = const_cast< ::feature_proto::ListFixed64String*>(
      ::feature_proto::ListFixed64String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_fixed64_bytes_ = const_cast< ::feature_proto::ListFixed64Bytes*>(
      ::feature_proto::ListFixed64Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_double_ = const_cast< ::feature_proto::ListSfixed32Double*>(
      ::feature_proto::ListSfixed32Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_float_ = const_cast< ::feature_proto::ListSfixed32Float*>(
      ::feature_proto::ListSfixed32Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_int32_ = const_cast< ::feature_proto::ListSfixed32Int32*>(
      ::feature_proto::ListSfixed32Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_int64_ = const_cast< ::feature_proto::ListSfixed32Int64*>(
      ::feature_proto::ListSfixed32Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_uint32_ = const_cast< ::feature_proto::ListSfixed32Uint32*>(
      ::feature_proto::ListSfixed32Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_uint64_ = const_cast< ::feature_proto::ListSfixed32Uint64*>(
      ::feature_proto::ListSfixed32Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_sint32_ = const_cast< ::feature_proto::ListSfixed32Sint32*>(
      ::feature_proto::ListSfixed32Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_sint64_ = const_cast< ::feature_proto::ListSfixed32Sint64*>(
      ::feature_proto::ListSfixed32Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_fixed32_ = const_cast< ::feature_proto::ListSfixed32Fixed32*>(
      ::feature_proto::ListSfixed32Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_fixed64_ = const_cast< ::feature_proto::ListSfixed32Fixed64*>(
      ::feature_proto::ListSfixed32Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_sfixed32_ = const_cast< ::feature_proto::ListSfixed32Sfixed32*>(
      ::feature_proto::ListSfixed32Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_sfixed64_ = const_cast< ::feature_proto::ListSfixed32Sfixed64*>(
      ::feature_proto::ListSfixed32Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_bool_ = const_cast< ::feature_proto::ListSfixed32Bool*>(
      ::feature_proto::ListSfixed32Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_string_ = const_cast< ::feature_proto::ListSfixed32String*>(
      ::feature_proto::ListSfixed32String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed32_bytes_ = const_cast< ::feature_proto::ListSfixed32Bytes*>(
      ::feature_proto::ListSfixed32Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_double_ = const_cast< ::feature_proto::ListSfixed64Double*>(
      ::feature_proto::ListSfixed64Double::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_float_ = const_cast< ::feature_proto::ListSfixed64Float*>(
      ::feature_proto::ListSfixed64Float::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_int32_ = const_cast< ::feature_proto::ListSfixed64Int32*>(
      ::feature_proto::ListSfixed64Int32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_int64_ = const_cast< ::feature_proto::ListSfixed64Int64*>(
      ::feature_proto::ListSfixed64Int64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_uint32_ = const_cast< ::feature_proto::ListSfixed64Uint32*>(
      ::feature_proto::ListSfixed64Uint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_uint64_ = const_cast< ::feature_proto::ListSfixed64Uint64*>(
      ::feature_proto::ListSfixed64Uint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_sint32_ = const_cast< ::feature_proto::ListSfixed64Sint32*>(
      ::feature_proto::ListSfixed64Sint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_sint64_ = const_cast< ::feature_proto::ListSfixed64Sint64*>(
      ::feature_proto::ListSfixed64Sint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_fixed32_ = const_cast< ::feature_proto::ListSfixed64Fixed32*>(
      ::feature_proto::ListSfixed64Fixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_fixed64_ = const_cast< ::feature_proto::ListSfixed64Fixed64*>(
      ::feature_proto::ListSfixed64Fixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_sfixed32_ = const_cast< ::feature_proto::ListSfixed64Sfixed32*>(
      ::feature_proto::ListSfixed64Sfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_sfixed64_ = const_cast< ::feature_proto::ListSfixed64Sfixed64*>(
      ::feature_proto::ListSfixed64Sfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_bool_ = const_cast< ::feature_proto::ListSfixed64Bool*>(
      ::feature_proto::ListSfixed64Bool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_string_ = const_cast< ::feature_proto::ListSfixed64String*>(
      ::feature_proto::ListSfixed64String::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_sfixed64_bytes_ = const_cast< ::feature_proto::ListSfixed64Bytes*>(
      ::feature_proto::ListSfixed64Bytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_double_ = const_cast< ::feature_proto::ListDoubleDouble*>(
      ::feature_proto::ListDoubleDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_float_ = const_cast< ::feature_proto::ListDoubleFloat*>(
      ::feature_proto::ListDoubleFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_int32_ = const_cast< ::feature_proto::ListDoubleInt32*>(
      ::feature_proto::ListDoubleInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_int64_ = const_cast< ::feature_proto::ListDoubleInt64*>(
      ::feature_proto::ListDoubleInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_uint32_ = const_cast< ::feature_proto::ListDoubleUint32*>(
      ::feature_proto::ListDoubleUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_uint64_ = const_cast< ::feature_proto::ListDoubleUint64*>(
      ::feature_proto::ListDoubleUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_sint32_ = const_cast< ::feature_proto::ListDoubleSint32*>(
      ::feature_proto::ListDoubleSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_sint64_ = const_cast< ::feature_proto::ListDoubleSint64*>(
      ::feature_proto::ListDoubleSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_fixed32_ = const_cast< ::feature_proto::ListDoubleFixed32*>(
      ::feature_proto::ListDoubleFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_fixed64_ = const_cast< ::feature_proto::ListDoubleFixed64*>(
      ::feature_proto::ListDoubleFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_sfixed32_ = const_cast< ::feature_proto::ListDoubleSfixed32*>(
      ::feature_proto::ListDoubleSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_sfixed64_ = const_cast< ::feature_proto::ListDoubleSfixed64*>(
      ::feature_proto::ListDoubleSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_bool_ = const_cast< ::feature_proto::ListDoubleBool*>(
      ::feature_proto::ListDoubleBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_string_ = const_cast< ::feature_proto::ListDoubleString*>(
      ::feature_proto::ListDoubleString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_double_bytes_ = const_cast< ::feature_proto::ListDoubleBytes*>(
      ::feature_proto::ListDoubleBytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_double_ = const_cast< ::feature_proto::ListFloatDouble*>(
      ::feature_proto::ListFloatDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_float_ = const_cast< ::feature_proto::ListFloatFloat*>(
      ::feature_proto::ListFloatFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_int32_ = const_cast< ::feature_proto::ListFloatInt32*>(
      ::feature_proto::ListFloatInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_int64_ = const_cast< ::feature_proto::ListFloatInt64*>(
      ::feature_proto::ListFloatInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_uint32_ = const_cast< ::feature_proto::ListFloatUint32*>(
      ::feature_proto::ListFloatUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_uint64_ = const_cast< ::feature_proto::ListFloatUint64*>(
      ::feature_proto::ListFloatUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_sint32_ = const_cast< ::feature_proto::ListFloatSint32*>(
      ::feature_proto::ListFloatSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_sint64_ = const_cast< ::feature_proto::ListFloatSint64*>(
      ::feature_proto::ListFloatSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_fixed32_ = const_cast< ::feature_proto::ListFloatFixed32*>(
      ::feature_proto::ListFloatFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_fixed64_ = const_cast< ::feature_proto::ListFloatFixed64*>(
      ::feature_proto::ListFloatFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_sfixed32_ = const_cast< ::feature_proto::ListFloatSfixed32*>(
      ::feature_proto::ListFloatSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_sfixed64_ = const_cast< ::feature_proto::ListFloatSfixed64*>(
      ::feature_proto::ListFloatSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_bool_ = const_cast< ::feature_proto::ListFloatBool*>(
      ::feature_proto::ListFloatBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_string_ = const_cast< ::feature_proto::ListFloatString*>(
      ::feature_proto::ListFloatString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_float_bytes_ = const_cast< ::feature_proto::ListFloatBytes*>(
      ::feature_proto::ListFloatBytes::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_double_ = const_cast< ::feature_proto::ListBoolDouble*>(
      ::feature_proto::ListBoolDouble::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_float_ = const_cast< ::feature_proto::ListBoolFloat*>(
      ::feature_proto::ListBoolFloat::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_int32_ = const_cast< ::feature_proto::ListBoolInt32*>(
      ::feature_proto::ListBoolInt32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_int64_ = const_cast< ::feature_proto::ListBoolInt64*>(
      ::feature_proto::ListBoolInt64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_uint32_ = const_cast< ::feature_proto::ListBoolUint32*>(
      ::feature_proto::ListBoolUint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_uint64_ = const_cast< ::feature_proto::ListBoolUint64*>(
      ::feature_proto::ListBoolUint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_sint32_ = const_cast< ::feature_proto::ListBoolSint32*>(
      ::feature_proto::ListBoolSint32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_sint64_ = const_cast< ::feature_proto::ListBoolSint64*>(
      ::feature_proto::ListBoolSint64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_fixed32_ = const_cast< ::feature_proto::ListBoolFixed32*>(
      ::feature_proto::ListBoolFixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_fixed64_ = const_cast< ::feature_proto::ListBoolFixed64*>(
      ::feature_proto::ListBoolFixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_sfixed32_ = const_cast< ::feature_proto::ListBoolSfixed32*>(
      ::feature_proto::ListBoolSfixed32::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_sfixed64_ = const_cast< ::feature_proto::ListBoolSfixed64*>(
      ::feature_proto::ListBoolSfixed64::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_bool_ = const_cast< ::feature_proto::ListBoolBool*>(
      ::feature_proto::ListBoolBool::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_string_ = const_cast< ::feature_proto::ListBoolString*>(
      ::feature_proto::ListBoolString::internal_default_instance());
  ::feature_proto::_Feature_default_instance_.v_list_bool_bytes_ = const_cast< ::feature_proto::ListBoolBytes*>(
      ::feature_proto::ListBoolBytes::internal_default_instance());
}
void Feature::set_allocated_v_list_double(::feature_proto::ListDouble* v_list_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double, submessage_arena);
    }
    set_has_v_list_double();
    kind_.v_list_double_ = v_list_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double)
}
void Feature::set_allocated_v_list_float(::feature_proto::ListFloat* v_list_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float, submessage_arena);
    }
    set_has_v_list_float();
    kind_.v_list_float_ = v_list_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float)
}
void Feature::set_allocated_v_list_int32(::feature_proto::ListInt32* v_list_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32, submessage_arena);
    }
    set_has_v_list_int32();
    kind_.v_list_int32_ = v_list_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32)
}
void Feature::set_allocated_v_list_int64(::feature_proto::ListInt64* v_list_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64, submessage_arena);
    }
    set_has_v_list_int64();
    kind_.v_list_int64_ = v_list_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64)
}
void Feature::set_allocated_v_list_uint32(::feature_proto::ListUint32* v_list_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32, submessage_arena);
    }
    set_has_v_list_uint32();
    kind_.v_list_uint32_ = v_list_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32)
}
void Feature::set_allocated_v_list_uint64(::feature_proto::ListUint64* v_list_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64, submessage_arena);
    }
    set_has_v_list_uint64();
    kind_.v_list_uint64_ = v_list_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64)
}
void Feature::set_allocated_v_list_sint32(::feature_proto::ListSint32* v_list_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32, submessage_arena);
    }
    set_has_v_list_sint32();
    kind_.v_list_sint32_ = v_list_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32)
}
void Feature::set_allocated_v_list_sint64(::feature_proto::ListSint64* v_list_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64, submessage_arena);
    }
    set_has_v_list_sint64();
    kind_.v_list_sint64_ = v_list_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64)
}
void Feature::set_allocated_v_list_fixed32(::feature_proto::ListFixed32* v_list_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32, submessage_arena);
    }
    set_has_v_list_fixed32();
    kind_.v_list_fixed32_ = v_list_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32)
}
void Feature::set_allocated_v_list_fixed64(::feature_proto::ListFixed64* v_list_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64, submessage_arena);
    }
    set_has_v_list_fixed64();
    kind_.v_list_fixed64_ = v_list_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64)
}
void Feature::set_allocated_v_list_sfixed32(::feature_proto::ListSfixed32* v_list_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32, submessage_arena);
    }
    set_has_v_list_sfixed32();
    kind_.v_list_sfixed32_ = v_list_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32)
}
void Feature::set_allocated_v_list_sfixed64(::feature_proto::ListSfixed64* v_list_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64, submessage_arena);
    }
    set_has_v_list_sfixed64();
    kind_.v_list_sfixed64_ = v_list_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64)
}
void Feature::set_allocated_v_list_bool(::feature_proto::ListBool* v_list_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool, submessage_arena);
    }
    set_has_v_list_bool();
    kind_.v_list_bool_ = v_list_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool)
}
void Feature::set_allocated_v_list_string(::feature_proto::ListString* v_list_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string, submessage_arena);
    }
    set_has_v_list_string();
    kind_.v_list_string_ = v_list_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string)
}
void Feature::set_allocated_v_list_bytes(::feature_proto::ListBytes* v_list_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes, submessage_arena);
    }
    set_has_v_list_bytes();
    kind_.v_list_bytes_ = v_list_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes)
}
void Feature::set_allocated_v_list_string_double(::feature_proto::ListStringDouble* v_list_string_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_double, submessage_arena);
    }
    set_has_v_list_string_double();
    kind_.v_list_string_double_ = v_list_string_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_double)
}
void Feature::set_allocated_v_list_string_float(::feature_proto::ListStringFloat* v_list_string_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_float, submessage_arena);
    }
    set_has_v_list_string_float();
    kind_.v_list_string_float_ = v_list_string_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_float)
}
void Feature::set_allocated_v_list_string_int32(::feature_proto::ListStringInt32* v_list_string_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_int32, submessage_arena);
    }
    set_has_v_list_string_int32();
    kind_.v_list_string_int32_ = v_list_string_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_int32)
}
void Feature::set_allocated_v_list_string_int64(::feature_proto::ListStringInt64* v_list_string_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_int64, submessage_arena);
    }
    set_has_v_list_string_int64();
    kind_.v_list_string_int64_ = v_list_string_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_int64)
}
void Feature::set_allocated_v_list_string_uint32(::feature_proto::ListStringUint32* v_list_string_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_uint32, submessage_arena);
    }
    set_has_v_list_string_uint32();
    kind_.v_list_string_uint32_ = v_list_string_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_uint32)
}
void Feature::set_allocated_v_list_string_uint64(::feature_proto::ListStringUint64* v_list_string_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_uint64, submessage_arena);
    }
    set_has_v_list_string_uint64();
    kind_.v_list_string_uint64_ = v_list_string_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_uint64)
}
void Feature::set_allocated_v_list_string_sint32(::feature_proto::ListStringSint32* v_list_string_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_sint32, submessage_arena);
    }
    set_has_v_list_string_sint32();
    kind_.v_list_string_sint32_ = v_list_string_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_sint32)
}
void Feature::set_allocated_v_list_string_sint64(::feature_proto::ListStringSint64* v_list_string_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_sint64, submessage_arena);
    }
    set_has_v_list_string_sint64();
    kind_.v_list_string_sint64_ = v_list_string_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_sint64)
}
void Feature::set_allocated_v_list_string_fixed32(::feature_proto::ListStringFixed32* v_list_string_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_fixed32, submessage_arena);
    }
    set_has_v_list_string_fixed32();
    kind_.v_list_string_fixed32_ = v_list_string_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_fixed32)
}
void Feature::set_allocated_v_list_string_fixed64(::feature_proto::ListStringFixed64* v_list_string_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_fixed64, submessage_arena);
    }
    set_has_v_list_string_fixed64();
    kind_.v_list_string_fixed64_ = v_list_string_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_fixed64)
}
void Feature::set_allocated_v_list_string_sfixed32(::feature_proto::ListStringSfixed32* v_list_string_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_sfixed32, submessage_arena);
    }
    set_has_v_list_string_sfixed32();
    kind_.v_list_string_sfixed32_ = v_list_string_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_sfixed32)
}
void Feature::set_allocated_v_list_string_sfixed64(::feature_proto::ListStringSfixed64* v_list_string_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_sfixed64, submessage_arena);
    }
    set_has_v_list_string_sfixed64();
    kind_.v_list_string_sfixed64_ = v_list_string_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_sfixed64)
}
void Feature::set_allocated_v_list_string_bool(::feature_proto::ListStringBool* v_list_string_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_bool, submessage_arena);
    }
    set_has_v_list_string_bool();
    kind_.v_list_string_bool_ = v_list_string_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_bool)
}
void Feature::set_allocated_v_list_string_string(::feature_proto::ListStringString* v_list_string_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_string, submessage_arena);
    }
    set_has_v_list_string_string();
    kind_.v_list_string_string_ = v_list_string_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_string)
}
void Feature::set_allocated_v_list_string_bytes(::feature_proto::ListStringBytes* v_list_string_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_string_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_string_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_string_bytes, submessage_arena);
    }
    set_has_v_list_string_bytes();
    kind_.v_list_string_bytes_ = v_list_string_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_string_bytes)
}
void Feature::set_allocated_v_list_bytes_double(::feature_proto::ListBytesDouble* v_list_bytes_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_double, submessage_arena);
    }
    set_has_v_list_bytes_double();
    kind_.v_list_bytes_double_ = v_list_bytes_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_double)
}
void Feature::set_allocated_v_list_bytes_float(::feature_proto::ListBytesFloat* v_list_bytes_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_float, submessage_arena);
    }
    set_has_v_list_bytes_float();
    kind_.v_list_bytes_float_ = v_list_bytes_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_float)
}
void Feature::set_allocated_v_list_bytes_int32(::feature_proto::ListBytesInt32* v_list_bytes_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_int32, submessage_arena);
    }
    set_has_v_list_bytes_int32();
    kind_.v_list_bytes_int32_ = v_list_bytes_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_int32)
}
void Feature::set_allocated_v_list_bytes_int64(::feature_proto::ListBytesInt64* v_list_bytes_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_int64, submessage_arena);
    }
    set_has_v_list_bytes_int64();
    kind_.v_list_bytes_int64_ = v_list_bytes_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_int64)
}
void Feature::set_allocated_v_list_bytes_uint32(::feature_proto::ListBytesUint32* v_list_bytes_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_uint32, submessage_arena);
    }
    set_has_v_list_bytes_uint32();
    kind_.v_list_bytes_uint32_ = v_list_bytes_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_uint32)
}
void Feature::set_allocated_v_list_bytes_uint64(::feature_proto::ListBytesUint64* v_list_bytes_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_uint64, submessage_arena);
    }
    set_has_v_list_bytes_uint64();
    kind_.v_list_bytes_uint64_ = v_list_bytes_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_uint64)
}
void Feature::set_allocated_v_list_bytes_sint32(::feature_proto::ListBytesSint32* v_list_bytes_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_sint32, submessage_arena);
    }
    set_has_v_list_bytes_sint32();
    kind_.v_list_bytes_sint32_ = v_list_bytes_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_sint32)
}
void Feature::set_allocated_v_list_bytes_sint64(::feature_proto::ListBytesSint64* v_list_bytes_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_sint64, submessage_arena);
    }
    set_has_v_list_bytes_sint64();
    kind_.v_list_bytes_sint64_ = v_list_bytes_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_sint64)
}
void Feature::set_allocated_v_list_bytes_fixed32(::feature_proto::ListBytesFixed32* v_list_bytes_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_fixed32, submessage_arena);
    }
    set_has_v_list_bytes_fixed32();
    kind_.v_list_bytes_fixed32_ = v_list_bytes_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_fixed32)
}
void Feature::set_allocated_v_list_bytes_fixed64(::feature_proto::ListBytesFixed64* v_list_bytes_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_fixed64, submessage_arena);
    }
    set_has_v_list_bytes_fixed64();
    kind_.v_list_bytes_fixed64_ = v_list_bytes_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_fixed64)
}
void Feature::set_allocated_v_list_bytes_sfixed32(::feature_proto::ListBytesSfixed32* v_list_bytes_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_sfixed32, submessage_arena);
    }
    set_has_v_list_bytes_sfixed32();
    kind_.v_list_bytes_sfixed32_ = v_list_bytes_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_sfixed32)
}
void Feature::set_allocated_v_list_bytes_sfixed64(::feature_proto::ListBytesSfixed64* v_list_bytes_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_sfixed64, submessage_arena);
    }
    set_has_v_list_bytes_sfixed64();
    kind_.v_list_bytes_sfixed64_ = v_list_bytes_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_sfixed64)
}
void Feature::set_allocated_v_list_bytes_bool(::feature_proto::ListBytesBool* v_list_bytes_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_bool, submessage_arena);
    }
    set_has_v_list_bytes_bool();
    kind_.v_list_bytes_bool_ = v_list_bytes_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_bool)
}
void Feature::set_allocated_v_list_bytes_string(::feature_proto::ListBytesString* v_list_bytes_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_string, submessage_arena);
    }
    set_has_v_list_bytes_string();
    kind_.v_list_bytes_string_ = v_list_bytes_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_string)
}
void Feature::set_allocated_v_list_bytes_bytes(::feature_proto::ListBytesBytes* v_list_bytes_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bytes_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bytes_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bytes_bytes, submessage_arena);
    }
    set_has_v_list_bytes_bytes();
    kind_.v_list_bytes_bytes_ = v_list_bytes_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bytes_bytes)
}
void Feature::set_allocated_v_list_int32_double(::feature_proto::ListInt32Double* v_list_int32_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_double, submessage_arena);
    }
    set_has_v_list_int32_double();
    kind_.v_list_int32_double_ = v_list_int32_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_double)
}
void Feature::set_allocated_v_list_int32_float(::feature_proto::ListInt32Float* v_list_int32_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_float, submessage_arena);
    }
    set_has_v_list_int32_float();
    kind_.v_list_int32_float_ = v_list_int32_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_float)
}
void Feature::set_allocated_v_list_int32_int32(::feature_proto::ListInt32Int32* v_list_int32_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_int32, submessage_arena);
    }
    set_has_v_list_int32_int32();
    kind_.v_list_int32_int32_ = v_list_int32_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_int32)
}
void Feature::set_allocated_v_list_int32_int64(::feature_proto::ListInt32Int64* v_list_int32_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_int64, submessage_arena);
    }
    set_has_v_list_int32_int64();
    kind_.v_list_int32_int64_ = v_list_int32_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_int64)
}
void Feature::set_allocated_v_list_int32_uint32(::feature_proto::ListInt32Uint32* v_list_int32_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_uint32, submessage_arena);
    }
    set_has_v_list_int32_uint32();
    kind_.v_list_int32_uint32_ = v_list_int32_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_uint32)
}
void Feature::set_allocated_v_list_int32_uint64(::feature_proto::ListInt32Uint64* v_list_int32_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_uint64, submessage_arena);
    }
    set_has_v_list_int32_uint64();
    kind_.v_list_int32_uint64_ = v_list_int32_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_uint64)
}
void Feature::set_allocated_v_list_int32_sint32(::feature_proto::ListInt32Sint32* v_list_int32_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_sint32, submessage_arena);
    }
    set_has_v_list_int32_sint32();
    kind_.v_list_int32_sint32_ = v_list_int32_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_sint32)
}
void Feature::set_allocated_v_list_int32_sint64(::feature_proto::ListInt32Sint64* v_list_int32_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_sint64, submessage_arena);
    }
    set_has_v_list_int32_sint64();
    kind_.v_list_int32_sint64_ = v_list_int32_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_sint64)
}
void Feature::set_allocated_v_list_int32_fixed32(::feature_proto::ListInt32Fixed32* v_list_int32_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_fixed32, submessage_arena);
    }
    set_has_v_list_int32_fixed32();
    kind_.v_list_int32_fixed32_ = v_list_int32_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_fixed32)
}
void Feature::set_allocated_v_list_int32_fixed64(::feature_proto::ListInt32Fixed64* v_list_int32_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_fixed64, submessage_arena);
    }
    set_has_v_list_int32_fixed64();
    kind_.v_list_int32_fixed64_ = v_list_int32_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_fixed64)
}
void Feature::set_allocated_v_list_int32_sfixed32(::feature_proto::ListInt32Sfixed32* v_list_int32_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_sfixed32, submessage_arena);
    }
    set_has_v_list_int32_sfixed32();
    kind_.v_list_int32_sfixed32_ = v_list_int32_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_sfixed32)
}
void Feature::set_allocated_v_list_int32_sfixed64(::feature_proto::ListInt32Sfixed64* v_list_int32_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_sfixed64, submessage_arena);
    }
    set_has_v_list_int32_sfixed64();
    kind_.v_list_int32_sfixed64_ = v_list_int32_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_sfixed64)
}
void Feature::set_allocated_v_list_int32_bool(::feature_proto::ListInt32Bool* v_list_int32_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_bool, submessage_arena);
    }
    set_has_v_list_int32_bool();
    kind_.v_list_int32_bool_ = v_list_int32_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_bool)
}
void Feature::set_allocated_v_list_int32_string(::feature_proto::ListInt32String* v_list_int32_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_string, submessage_arena);
    }
    set_has_v_list_int32_string();
    kind_.v_list_int32_string_ = v_list_int32_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_string)
}
void Feature::set_allocated_v_list_int32_bytes(::feature_proto::ListInt32Bytes* v_list_int32_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int32_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int32_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int32_bytes, submessage_arena);
    }
    set_has_v_list_int32_bytes();
    kind_.v_list_int32_bytes_ = v_list_int32_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int32_bytes)
}
void Feature::set_allocated_v_list_int64_double(::feature_proto::ListInt64Double* v_list_int64_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_double, submessage_arena);
    }
    set_has_v_list_int64_double();
    kind_.v_list_int64_double_ = v_list_int64_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_double)
}
void Feature::set_allocated_v_list_int64_float(::feature_proto::ListInt64Float* v_list_int64_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_float, submessage_arena);
    }
    set_has_v_list_int64_float();
    kind_.v_list_int64_float_ = v_list_int64_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_float)
}
void Feature::set_allocated_v_list_int64_int32(::feature_proto::ListInt64Int32* v_list_int64_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_int32, submessage_arena);
    }
    set_has_v_list_int64_int32();
    kind_.v_list_int64_int32_ = v_list_int64_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_int32)
}
void Feature::set_allocated_v_list_int64_int64(::feature_proto::ListInt64Int64* v_list_int64_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_int64, submessage_arena);
    }
    set_has_v_list_int64_int64();
    kind_.v_list_int64_int64_ = v_list_int64_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_int64)
}
void Feature::set_allocated_v_list_int64_uint32(::feature_proto::ListInt64Uint32* v_list_int64_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_uint32, submessage_arena);
    }
    set_has_v_list_int64_uint32();
    kind_.v_list_int64_uint32_ = v_list_int64_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_uint32)
}
void Feature::set_allocated_v_list_int64_uint64(::feature_proto::ListInt64Uint64* v_list_int64_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_uint64, submessage_arena);
    }
    set_has_v_list_int64_uint64();
    kind_.v_list_int64_uint64_ = v_list_int64_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_uint64)
}
void Feature::set_allocated_v_list_int64_sint32(::feature_proto::ListInt64Sint32* v_list_int64_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_sint32, submessage_arena);
    }
    set_has_v_list_int64_sint32();
    kind_.v_list_int64_sint32_ = v_list_int64_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_sint32)
}
void Feature::set_allocated_v_list_int64_sint64(::feature_proto::ListInt64Sint64* v_list_int64_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_sint64, submessage_arena);
    }
    set_has_v_list_int64_sint64();
    kind_.v_list_int64_sint64_ = v_list_int64_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_sint64)
}
void Feature::set_allocated_v_list_int64_fixed32(::feature_proto::ListInt64Fixed32* v_list_int64_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_fixed32, submessage_arena);
    }
    set_has_v_list_int64_fixed32();
    kind_.v_list_int64_fixed32_ = v_list_int64_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_fixed32)
}
void Feature::set_allocated_v_list_int64_fixed64(::feature_proto::ListInt64Fixed64* v_list_int64_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_fixed64, submessage_arena);
    }
    set_has_v_list_int64_fixed64();
    kind_.v_list_int64_fixed64_ = v_list_int64_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_fixed64)
}
void Feature::set_allocated_v_list_int64_sfixed32(::feature_proto::ListInt64Sfixed32* v_list_int64_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_sfixed32, submessage_arena);
    }
    set_has_v_list_int64_sfixed32();
    kind_.v_list_int64_sfixed32_ = v_list_int64_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_sfixed32)
}
void Feature::set_allocated_v_list_int64_sfixed64(::feature_proto::ListInt64Sfixed64* v_list_int64_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_sfixed64, submessage_arena);
    }
    set_has_v_list_int64_sfixed64();
    kind_.v_list_int64_sfixed64_ = v_list_int64_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_sfixed64)
}
void Feature::set_allocated_v_list_int64_bool(::feature_proto::ListInt64Bool* v_list_int64_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_bool, submessage_arena);
    }
    set_has_v_list_int64_bool();
    kind_.v_list_int64_bool_ = v_list_int64_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_bool)
}
void Feature::set_allocated_v_list_int64_string(::feature_proto::ListInt64String* v_list_int64_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_string, submessage_arena);
    }
    set_has_v_list_int64_string();
    kind_.v_list_int64_string_ = v_list_int64_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_string)
}
void Feature::set_allocated_v_list_int64_bytes(::feature_proto::ListInt64Bytes* v_list_int64_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_int64_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_int64_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_int64_bytes, submessage_arena);
    }
    set_has_v_list_int64_bytes();
    kind_.v_list_int64_bytes_ = v_list_int64_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_int64_bytes)
}
void Feature::set_allocated_v_list_uint32_double(::feature_proto::ListUint32Double* v_list_uint32_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_double, submessage_arena);
    }
    set_has_v_list_uint32_double();
    kind_.v_list_uint32_double_ = v_list_uint32_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_double)
}
void Feature::set_allocated_v_list_uint32_float(::feature_proto::ListUint32Float* v_list_uint32_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_float, submessage_arena);
    }
    set_has_v_list_uint32_float();
    kind_.v_list_uint32_float_ = v_list_uint32_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_float)
}
void Feature::set_allocated_v_list_uint32_int32(::feature_proto::ListUint32Int32* v_list_uint32_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_int32, submessage_arena);
    }
    set_has_v_list_uint32_int32();
    kind_.v_list_uint32_int32_ = v_list_uint32_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_int32)
}
void Feature::set_allocated_v_list_uint32_int64(::feature_proto::ListUint32Int64* v_list_uint32_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_int64, submessage_arena);
    }
    set_has_v_list_uint32_int64();
    kind_.v_list_uint32_int64_ = v_list_uint32_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_int64)
}
void Feature::set_allocated_v_list_uint32_uint32(::feature_proto::ListUint32Uint32* v_list_uint32_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_uint32, submessage_arena);
    }
    set_has_v_list_uint32_uint32();
    kind_.v_list_uint32_uint32_ = v_list_uint32_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_uint32)
}
void Feature::set_allocated_v_list_uint32_uint64(::feature_proto::ListUint32Uint64* v_list_uint32_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_uint64, submessage_arena);
    }
    set_has_v_list_uint32_uint64();
    kind_.v_list_uint32_uint64_ = v_list_uint32_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_uint64)
}
void Feature::set_allocated_v_list_uint32_sint32(::feature_proto::ListUint32Sint32* v_list_uint32_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_sint32, submessage_arena);
    }
    set_has_v_list_uint32_sint32();
    kind_.v_list_uint32_sint32_ = v_list_uint32_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_sint32)
}
void Feature::set_allocated_v_list_uint32_sint64(::feature_proto::ListUint32Sint64* v_list_uint32_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_sint64, submessage_arena);
    }
    set_has_v_list_uint32_sint64();
    kind_.v_list_uint32_sint64_ = v_list_uint32_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_sint64)
}
void Feature::set_allocated_v_list_uint32_fixed32(::feature_proto::ListUint32Fixed32* v_list_uint32_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_fixed32, submessage_arena);
    }
    set_has_v_list_uint32_fixed32();
    kind_.v_list_uint32_fixed32_ = v_list_uint32_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_fixed32)
}
void Feature::set_allocated_v_list_uint32_fixed64(::feature_proto::ListUint32Fixed64* v_list_uint32_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_fixed64, submessage_arena);
    }
    set_has_v_list_uint32_fixed64();
    kind_.v_list_uint32_fixed64_ = v_list_uint32_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_fixed64)
}
void Feature::set_allocated_v_list_uint32_sfixed32(::feature_proto::ListUint32Sfixed32* v_list_uint32_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_sfixed32, submessage_arena);
    }
    set_has_v_list_uint32_sfixed32();
    kind_.v_list_uint32_sfixed32_ = v_list_uint32_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_sfixed32)
}
void Feature::set_allocated_v_list_uint32_sfixed64(::feature_proto::ListUint32Sfixed64* v_list_uint32_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_sfixed64, submessage_arena);
    }
    set_has_v_list_uint32_sfixed64();
    kind_.v_list_uint32_sfixed64_ = v_list_uint32_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_sfixed64)
}
void Feature::set_allocated_v_list_uint32_bool(::feature_proto::ListUint32Bool* v_list_uint32_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_bool, submessage_arena);
    }
    set_has_v_list_uint32_bool();
    kind_.v_list_uint32_bool_ = v_list_uint32_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_bool)
}
void Feature::set_allocated_v_list_uint32_string(::feature_proto::ListUint32String* v_list_uint32_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_string, submessage_arena);
    }
    set_has_v_list_uint32_string();
    kind_.v_list_uint32_string_ = v_list_uint32_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_string)
}
void Feature::set_allocated_v_list_uint32_bytes(::feature_proto::ListUint32Bytes* v_list_uint32_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint32_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint32_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint32_bytes, submessage_arena);
    }
    set_has_v_list_uint32_bytes();
    kind_.v_list_uint32_bytes_ = v_list_uint32_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint32_bytes)
}
void Feature::set_allocated_v_list_uint64_double(::feature_proto::ListUint64Double* v_list_uint64_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_double, submessage_arena);
    }
    set_has_v_list_uint64_double();
    kind_.v_list_uint64_double_ = v_list_uint64_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_double)
}
void Feature::set_allocated_v_list_uint64_float(::feature_proto::ListUint64Float* v_list_uint64_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_float, submessage_arena);
    }
    set_has_v_list_uint64_float();
    kind_.v_list_uint64_float_ = v_list_uint64_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_float)
}
void Feature::set_allocated_v_list_uint64_int32(::feature_proto::ListUint64Int32* v_list_uint64_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_int32, submessage_arena);
    }
    set_has_v_list_uint64_int32();
    kind_.v_list_uint64_int32_ = v_list_uint64_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_int32)
}
void Feature::set_allocated_v_list_uint64_int64(::feature_proto::ListUint64Int64* v_list_uint64_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_int64, submessage_arena);
    }
    set_has_v_list_uint64_int64();
    kind_.v_list_uint64_int64_ = v_list_uint64_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_int64)
}
void Feature::set_allocated_v_list_uint64_uint32(::feature_proto::ListUint64Uint32* v_list_uint64_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_uint32, submessage_arena);
    }
    set_has_v_list_uint64_uint32();
    kind_.v_list_uint64_uint32_ = v_list_uint64_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_uint32)
}
void Feature::set_allocated_v_list_uint64_uint64(::feature_proto::ListUint64Uint64* v_list_uint64_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_uint64, submessage_arena);
    }
    set_has_v_list_uint64_uint64();
    kind_.v_list_uint64_uint64_ = v_list_uint64_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_uint64)
}
void Feature::set_allocated_v_list_uint64_sint32(::feature_proto::ListUint64Sint32* v_list_uint64_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_sint32, submessage_arena);
    }
    set_has_v_list_uint64_sint32();
    kind_.v_list_uint64_sint32_ = v_list_uint64_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_sint32)
}
void Feature::set_allocated_v_list_uint64_sint64(::feature_proto::ListUint64Sint64* v_list_uint64_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_sint64, submessage_arena);
    }
    set_has_v_list_uint64_sint64();
    kind_.v_list_uint64_sint64_ = v_list_uint64_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_sint64)
}
void Feature::set_allocated_v_list_uint64_fixed32(::feature_proto::ListUint64Fixed32* v_list_uint64_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_fixed32, submessage_arena);
    }
    set_has_v_list_uint64_fixed32();
    kind_.v_list_uint64_fixed32_ = v_list_uint64_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_fixed32)
}
void Feature::set_allocated_v_list_uint64_fixed64(::feature_proto::ListUint64Fixed64* v_list_uint64_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_fixed64, submessage_arena);
    }
    set_has_v_list_uint64_fixed64();
    kind_.v_list_uint64_fixed64_ = v_list_uint64_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_fixed64)
}
void Feature::set_allocated_v_list_uint64_sfixed32(::feature_proto::ListUint64Sfixed32* v_list_uint64_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_sfixed32, submessage_arena);
    }
    set_has_v_list_uint64_sfixed32();
    kind_.v_list_uint64_sfixed32_ = v_list_uint64_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_sfixed32)
}
void Feature::set_allocated_v_list_uint64_sfixed64(::feature_proto::ListUint64Sfixed64* v_list_uint64_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_sfixed64, submessage_arena);
    }
    set_has_v_list_uint64_sfixed64();
    kind_.v_list_uint64_sfixed64_ = v_list_uint64_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_sfixed64)
}
void Feature::set_allocated_v_list_uint64_bool(::feature_proto::ListUint64Bool* v_list_uint64_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_bool, submessage_arena);
    }
    set_has_v_list_uint64_bool();
    kind_.v_list_uint64_bool_ = v_list_uint64_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_bool)
}
void Feature::set_allocated_v_list_uint64_string(::feature_proto::ListUint64String* v_list_uint64_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_string, submessage_arena);
    }
    set_has_v_list_uint64_string();
    kind_.v_list_uint64_string_ = v_list_uint64_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_string)
}
void Feature::set_allocated_v_list_uint64_bytes(::feature_proto::ListUint64Bytes* v_list_uint64_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_uint64_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_uint64_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_uint64_bytes, submessage_arena);
    }
    set_has_v_list_uint64_bytes();
    kind_.v_list_uint64_bytes_ = v_list_uint64_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_uint64_bytes)
}
void Feature::set_allocated_v_list_sint32_double(::feature_proto::ListSint32Double* v_list_sint32_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_double, submessage_arena);
    }
    set_has_v_list_sint32_double();
    kind_.v_list_sint32_double_ = v_list_sint32_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_double)
}
void Feature::set_allocated_v_list_sint32_float(::feature_proto::ListSint32Float* v_list_sint32_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_float, submessage_arena);
    }
    set_has_v_list_sint32_float();
    kind_.v_list_sint32_float_ = v_list_sint32_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_float)
}
void Feature::set_allocated_v_list_sint32_int32(::feature_proto::ListSint32Int32* v_list_sint32_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_int32, submessage_arena);
    }
    set_has_v_list_sint32_int32();
    kind_.v_list_sint32_int32_ = v_list_sint32_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_int32)
}
void Feature::set_allocated_v_list_sint32_int64(::feature_proto::ListSint32Int64* v_list_sint32_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_int64, submessage_arena);
    }
    set_has_v_list_sint32_int64();
    kind_.v_list_sint32_int64_ = v_list_sint32_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_int64)
}
void Feature::set_allocated_v_list_sint32_uint32(::feature_proto::ListSint32Uint32* v_list_sint32_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_uint32, submessage_arena);
    }
    set_has_v_list_sint32_uint32();
    kind_.v_list_sint32_uint32_ = v_list_sint32_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_uint32)
}
void Feature::set_allocated_v_list_sint32_uint64(::feature_proto::ListSint32Uint64* v_list_sint32_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_uint64, submessage_arena);
    }
    set_has_v_list_sint32_uint64();
    kind_.v_list_sint32_uint64_ = v_list_sint32_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_uint64)
}
void Feature::set_allocated_v_list_sint32_sint32(::feature_proto::ListSint32Sint32* v_list_sint32_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_sint32, submessage_arena);
    }
    set_has_v_list_sint32_sint32();
    kind_.v_list_sint32_sint32_ = v_list_sint32_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_sint32)
}
void Feature::set_allocated_v_list_sint32_sint64(::feature_proto::ListSint32Sint64* v_list_sint32_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_sint64, submessage_arena);
    }
    set_has_v_list_sint32_sint64();
    kind_.v_list_sint32_sint64_ = v_list_sint32_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_sint64)
}
void Feature::set_allocated_v_list_sint32_fixed32(::feature_proto::ListSint32Fixed32* v_list_sint32_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_fixed32, submessage_arena);
    }
    set_has_v_list_sint32_fixed32();
    kind_.v_list_sint32_fixed32_ = v_list_sint32_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_fixed32)
}
void Feature::set_allocated_v_list_sint32_fixed64(::feature_proto::ListSint32Fixed64* v_list_sint32_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_fixed64, submessage_arena);
    }
    set_has_v_list_sint32_fixed64();
    kind_.v_list_sint32_fixed64_ = v_list_sint32_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_fixed64)
}
void Feature::set_allocated_v_list_sint32_sfixed32(::feature_proto::ListSint32Sfixed32* v_list_sint32_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_sfixed32, submessage_arena);
    }
    set_has_v_list_sint32_sfixed32();
    kind_.v_list_sint32_sfixed32_ = v_list_sint32_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_sfixed32)
}
void Feature::set_allocated_v_list_sint32_sfixed64(::feature_proto::ListSint32Sfixed64* v_list_sint32_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_sfixed64, submessage_arena);
    }
    set_has_v_list_sint32_sfixed64();
    kind_.v_list_sint32_sfixed64_ = v_list_sint32_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_sfixed64)
}
void Feature::set_allocated_v_list_sint32_bool(::feature_proto::ListSint32Bool* v_list_sint32_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_bool, submessage_arena);
    }
    set_has_v_list_sint32_bool();
    kind_.v_list_sint32_bool_ = v_list_sint32_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_bool)
}
void Feature::set_allocated_v_list_sint32_string(::feature_proto::ListSint32String* v_list_sint32_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_string, submessage_arena);
    }
    set_has_v_list_sint32_string();
    kind_.v_list_sint32_string_ = v_list_sint32_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_string)
}
void Feature::set_allocated_v_list_sint32_bytes(::feature_proto::ListSint32Bytes* v_list_sint32_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint32_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint32_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint32_bytes, submessage_arena);
    }
    set_has_v_list_sint32_bytes();
    kind_.v_list_sint32_bytes_ = v_list_sint32_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint32_bytes)
}
void Feature::set_allocated_v_list_sint64_double(::feature_proto::ListSint64Double* v_list_sint64_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_double, submessage_arena);
    }
    set_has_v_list_sint64_double();
    kind_.v_list_sint64_double_ = v_list_sint64_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_double)
}
void Feature::set_allocated_v_list_sint64_float(::feature_proto::ListSint64Float* v_list_sint64_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_float, submessage_arena);
    }
    set_has_v_list_sint64_float();
    kind_.v_list_sint64_float_ = v_list_sint64_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_float)
}
void Feature::set_allocated_v_list_sint64_int32(::feature_proto::ListSint64Int32* v_list_sint64_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_int32, submessage_arena);
    }
    set_has_v_list_sint64_int32();
    kind_.v_list_sint64_int32_ = v_list_sint64_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_int32)
}
void Feature::set_allocated_v_list_sint64_int64(::feature_proto::ListSint64Int64* v_list_sint64_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_int64, submessage_arena);
    }
    set_has_v_list_sint64_int64();
    kind_.v_list_sint64_int64_ = v_list_sint64_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_int64)
}
void Feature::set_allocated_v_list_sint64_uint32(::feature_proto::ListSint64Uint32* v_list_sint64_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_uint32, submessage_arena);
    }
    set_has_v_list_sint64_uint32();
    kind_.v_list_sint64_uint32_ = v_list_sint64_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_uint32)
}
void Feature::set_allocated_v_list_sint64_uint64(::feature_proto::ListSint64Uint64* v_list_sint64_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_uint64, submessage_arena);
    }
    set_has_v_list_sint64_uint64();
    kind_.v_list_sint64_uint64_ = v_list_sint64_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_uint64)
}
void Feature::set_allocated_v_list_sint64_sint32(::feature_proto::ListSint64Sint32* v_list_sint64_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_sint32, submessage_arena);
    }
    set_has_v_list_sint64_sint32();
    kind_.v_list_sint64_sint32_ = v_list_sint64_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_sint32)
}
void Feature::set_allocated_v_list_sint64_sint64(::feature_proto::ListSint64Sint64* v_list_sint64_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_sint64, submessage_arena);
    }
    set_has_v_list_sint64_sint64();
    kind_.v_list_sint64_sint64_ = v_list_sint64_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_sint64)
}
void Feature::set_allocated_v_list_sint64_fixed32(::feature_proto::ListSint64Fixed32* v_list_sint64_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_fixed32, submessage_arena);
    }
    set_has_v_list_sint64_fixed32();
    kind_.v_list_sint64_fixed32_ = v_list_sint64_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_fixed32)
}
void Feature::set_allocated_v_list_sint64_fixed64(::feature_proto::ListSint64Fixed64* v_list_sint64_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_fixed64, submessage_arena);
    }
    set_has_v_list_sint64_fixed64();
    kind_.v_list_sint64_fixed64_ = v_list_sint64_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_fixed64)
}
void Feature::set_allocated_v_list_sint64_sfixed32(::feature_proto::ListSint64Sfixed32* v_list_sint64_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_sfixed32, submessage_arena);
    }
    set_has_v_list_sint64_sfixed32();
    kind_.v_list_sint64_sfixed32_ = v_list_sint64_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_sfixed32)
}
void Feature::set_allocated_v_list_sint64_sfixed64(::feature_proto::ListSint64Sfixed64* v_list_sint64_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_sfixed64, submessage_arena);
    }
    set_has_v_list_sint64_sfixed64();
    kind_.v_list_sint64_sfixed64_ = v_list_sint64_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_sfixed64)
}
void Feature::set_allocated_v_list_sint64_bool(::feature_proto::ListSint64Bool* v_list_sint64_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_bool, submessage_arena);
    }
    set_has_v_list_sint64_bool();
    kind_.v_list_sint64_bool_ = v_list_sint64_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_bool)
}
void Feature::set_allocated_v_list_sint64_string(::feature_proto::ListSint64String* v_list_sint64_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_string, submessage_arena);
    }
    set_has_v_list_sint64_string();
    kind_.v_list_sint64_string_ = v_list_sint64_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_string)
}
void Feature::set_allocated_v_list_sint64_bytes(::feature_proto::ListSint64Bytes* v_list_sint64_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sint64_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sint64_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sint64_bytes, submessage_arena);
    }
    set_has_v_list_sint64_bytes();
    kind_.v_list_sint64_bytes_ = v_list_sint64_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sint64_bytes)
}
void Feature::set_allocated_v_list_fixed32_double(::feature_proto::ListFixed32Double* v_list_fixed32_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_double, submessage_arena);
    }
    set_has_v_list_fixed32_double();
    kind_.v_list_fixed32_double_ = v_list_fixed32_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_double)
}
void Feature::set_allocated_v_list_fixed32_float(::feature_proto::ListFixed32Float* v_list_fixed32_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_float, submessage_arena);
    }
    set_has_v_list_fixed32_float();
    kind_.v_list_fixed32_float_ = v_list_fixed32_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_float)
}
void Feature::set_allocated_v_list_fixed32_int32(::feature_proto::ListFixed32Int32* v_list_fixed32_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_int32, submessage_arena);
    }
    set_has_v_list_fixed32_int32();
    kind_.v_list_fixed32_int32_ = v_list_fixed32_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_int32)
}
void Feature::set_allocated_v_list_fixed32_int64(::feature_proto::ListFixed32Int64* v_list_fixed32_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_int64, submessage_arena);
    }
    set_has_v_list_fixed32_int64();
    kind_.v_list_fixed32_int64_ = v_list_fixed32_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_int64)
}
void Feature::set_allocated_v_list_fixed32_uint32(::feature_proto::ListFixed32Uint32* v_list_fixed32_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_uint32, submessage_arena);
    }
    set_has_v_list_fixed32_uint32();
    kind_.v_list_fixed32_uint32_ = v_list_fixed32_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_uint32)
}
void Feature::set_allocated_v_list_fixed32_uint64(::feature_proto::ListFixed32Uint64* v_list_fixed32_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_uint64, submessage_arena);
    }
    set_has_v_list_fixed32_uint64();
    kind_.v_list_fixed32_uint64_ = v_list_fixed32_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_uint64)
}
void Feature::set_allocated_v_list_fixed32_sint32(::feature_proto::ListFixed32Sint32* v_list_fixed32_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_sint32, submessage_arena);
    }
    set_has_v_list_fixed32_sint32();
    kind_.v_list_fixed32_sint32_ = v_list_fixed32_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_sint32)
}
void Feature::set_allocated_v_list_fixed32_sint64(::feature_proto::ListFixed32Sint64* v_list_fixed32_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_sint64, submessage_arena);
    }
    set_has_v_list_fixed32_sint64();
    kind_.v_list_fixed32_sint64_ = v_list_fixed32_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_sint64)
}
void Feature::set_allocated_v_list_fixed32_fixed32(::feature_proto::ListFixed32Fixed32* v_list_fixed32_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_fixed32, submessage_arena);
    }
    set_has_v_list_fixed32_fixed32();
    kind_.v_list_fixed32_fixed32_ = v_list_fixed32_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_fixed32)
}
void Feature::set_allocated_v_list_fixed32_fixed64(::feature_proto::ListFixed32Fixed64* v_list_fixed32_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_fixed64, submessage_arena);
    }
    set_has_v_list_fixed32_fixed64();
    kind_.v_list_fixed32_fixed64_ = v_list_fixed32_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_fixed64)
}
void Feature::set_allocated_v_list_fixed32_sfixed32(::feature_proto::ListFixed32Sfixed32* v_list_fixed32_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_sfixed32, submessage_arena);
    }
    set_has_v_list_fixed32_sfixed32();
    kind_.v_list_fixed32_sfixed32_ = v_list_fixed32_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_sfixed32)
}
void Feature::set_allocated_v_list_fixed32_sfixed64(::feature_proto::ListFixed32Sfixed64* v_list_fixed32_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_sfixed64, submessage_arena);
    }
    set_has_v_list_fixed32_sfixed64();
    kind_.v_list_fixed32_sfixed64_ = v_list_fixed32_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_sfixed64)
}
void Feature::set_allocated_v_list_fixed32_bool(::feature_proto::ListFixed32Bool* v_list_fixed32_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_bool, submessage_arena);
    }
    set_has_v_list_fixed32_bool();
    kind_.v_list_fixed32_bool_ = v_list_fixed32_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_bool)
}
void Feature::set_allocated_v_list_fixed32_string(::feature_proto::ListFixed32String* v_list_fixed32_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_string, submessage_arena);
    }
    set_has_v_list_fixed32_string();
    kind_.v_list_fixed32_string_ = v_list_fixed32_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_string)
}
void Feature::set_allocated_v_list_fixed32_bytes(::feature_proto::ListFixed32Bytes* v_list_fixed32_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed32_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed32_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed32_bytes, submessage_arena);
    }
    set_has_v_list_fixed32_bytes();
    kind_.v_list_fixed32_bytes_ = v_list_fixed32_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed32_bytes)
}
void Feature::set_allocated_v_list_fixed64_double(::feature_proto::ListFixed64Double* v_list_fixed64_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_double, submessage_arena);
    }
    set_has_v_list_fixed64_double();
    kind_.v_list_fixed64_double_ = v_list_fixed64_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_double)
}
void Feature::set_allocated_v_list_fixed64_float(::feature_proto::ListFixed64Float* v_list_fixed64_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_float, submessage_arena);
    }
    set_has_v_list_fixed64_float();
    kind_.v_list_fixed64_float_ = v_list_fixed64_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_float)
}
void Feature::set_allocated_v_list_fixed64_int32(::feature_proto::ListFixed64Int32* v_list_fixed64_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_int32, submessage_arena);
    }
    set_has_v_list_fixed64_int32();
    kind_.v_list_fixed64_int32_ = v_list_fixed64_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_int32)
}
void Feature::set_allocated_v_list_fixed64_int64(::feature_proto::ListFixed64Int64* v_list_fixed64_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_int64, submessage_arena);
    }
    set_has_v_list_fixed64_int64();
    kind_.v_list_fixed64_int64_ = v_list_fixed64_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_int64)
}
void Feature::set_allocated_v_list_fixed64_uint32(::feature_proto::ListFixed64Uint32* v_list_fixed64_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_uint32, submessage_arena);
    }
    set_has_v_list_fixed64_uint32();
    kind_.v_list_fixed64_uint32_ = v_list_fixed64_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_uint32)
}
void Feature::set_allocated_v_list_fixed64_uint64(::feature_proto::ListFixed64Uint64* v_list_fixed64_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_uint64, submessage_arena);
    }
    set_has_v_list_fixed64_uint64();
    kind_.v_list_fixed64_uint64_ = v_list_fixed64_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_uint64)
}
void Feature::set_allocated_v_list_fixed64_sint32(::feature_proto::ListFixed64Sint32* v_list_fixed64_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_sint32, submessage_arena);
    }
    set_has_v_list_fixed64_sint32();
    kind_.v_list_fixed64_sint32_ = v_list_fixed64_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_sint32)
}
void Feature::set_allocated_v_list_fixed64_sint64(::feature_proto::ListFixed64Sint64* v_list_fixed64_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_sint64, submessage_arena);
    }
    set_has_v_list_fixed64_sint64();
    kind_.v_list_fixed64_sint64_ = v_list_fixed64_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_sint64)
}
void Feature::set_allocated_v_list_fixed64_fixed32(::feature_proto::ListFixed64Fixed32* v_list_fixed64_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_fixed32, submessage_arena);
    }
    set_has_v_list_fixed64_fixed32();
    kind_.v_list_fixed64_fixed32_ = v_list_fixed64_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_fixed32)
}
void Feature::set_allocated_v_list_fixed64_fixed64(::feature_proto::ListFixed64Fixed64* v_list_fixed64_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_fixed64, submessage_arena);
    }
    set_has_v_list_fixed64_fixed64();
    kind_.v_list_fixed64_fixed64_ = v_list_fixed64_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_fixed64)
}
void Feature::set_allocated_v_list_fixed64_sfixed32(::feature_proto::ListFixed64Sfixed32* v_list_fixed64_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_sfixed32, submessage_arena);
    }
    set_has_v_list_fixed64_sfixed32();
    kind_.v_list_fixed64_sfixed32_ = v_list_fixed64_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_sfixed32)
}
void Feature::set_allocated_v_list_fixed64_sfixed64(::feature_proto::ListFixed64Sfixed64* v_list_fixed64_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_sfixed64, submessage_arena);
    }
    set_has_v_list_fixed64_sfixed64();
    kind_.v_list_fixed64_sfixed64_ = v_list_fixed64_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_sfixed64)
}
void Feature::set_allocated_v_list_fixed64_bool(::feature_proto::ListFixed64Bool* v_list_fixed64_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_bool, submessage_arena);
    }
    set_has_v_list_fixed64_bool();
    kind_.v_list_fixed64_bool_ = v_list_fixed64_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_bool)
}
void Feature::set_allocated_v_list_fixed64_string(::feature_proto::ListFixed64String* v_list_fixed64_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_string, submessage_arena);
    }
    set_has_v_list_fixed64_string();
    kind_.v_list_fixed64_string_ = v_list_fixed64_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_string)
}
void Feature::set_allocated_v_list_fixed64_bytes(::feature_proto::ListFixed64Bytes* v_list_fixed64_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_fixed64_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_fixed64_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_fixed64_bytes, submessage_arena);
    }
    set_has_v_list_fixed64_bytes();
    kind_.v_list_fixed64_bytes_ = v_list_fixed64_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_fixed64_bytes)
}
void Feature::set_allocated_v_list_sfixed32_double(::feature_proto::ListSfixed32Double* v_list_sfixed32_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_double, submessage_arena);
    }
    set_has_v_list_sfixed32_double();
    kind_.v_list_sfixed32_double_ = v_list_sfixed32_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_double)
}
void Feature::set_allocated_v_list_sfixed32_float(::feature_proto::ListSfixed32Float* v_list_sfixed32_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_float, submessage_arena);
    }
    set_has_v_list_sfixed32_float();
    kind_.v_list_sfixed32_float_ = v_list_sfixed32_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_float)
}
void Feature::set_allocated_v_list_sfixed32_int32(::feature_proto::ListSfixed32Int32* v_list_sfixed32_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_int32, submessage_arena);
    }
    set_has_v_list_sfixed32_int32();
    kind_.v_list_sfixed32_int32_ = v_list_sfixed32_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_int32)
}
void Feature::set_allocated_v_list_sfixed32_int64(::feature_proto::ListSfixed32Int64* v_list_sfixed32_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_int64, submessage_arena);
    }
    set_has_v_list_sfixed32_int64();
    kind_.v_list_sfixed32_int64_ = v_list_sfixed32_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_int64)
}
void Feature::set_allocated_v_list_sfixed32_uint32(::feature_proto::ListSfixed32Uint32* v_list_sfixed32_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_uint32, submessage_arena);
    }
    set_has_v_list_sfixed32_uint32();
    kind_.v_list_sfixed32_uint32_ = v_list_sfixed32_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_uint32)
}
void Feature::set_allocated_v_list_sfixed32_uint64(::feature_proto::ListSfixed32Uint64* v_list_sfixed32_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_uint64, submessage_arena);
    }
    set_has_v_list_sfixed32_uint64();
    kind_.v_list_sfixed32_uint64_ = v_list_sfixed32_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_uint64)
}
void Feature::set_allocated_v_list_sfixed32_sint32(::feature_proto::ListSfixed32Sint32* v_list_sfixed32_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_sint32, submessage_arena);
    }
    set_has_v_list_sfixed32_sint32();
    kind_.v_list_sfixed32_sint32_ = v_list_sfixed32_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_sint32)
}
void Feature::set_allocated_v_list_sfixed32_sint64(::feature_proto::ListSfixed32Sint64* v_list_sfixed32_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_sint64, submessage_arena);
    }
    set_has_v_list_sfixed32_sint64();
    kind_.v_list_sfixed32_sint64_ = v_list_sfixed32_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_sint64)
}
void Feature::set_allocated_v_list_sfixed32_fixed32(::feature_proto::ListSfixed32Fixed32* v_list_sfixed32_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_fixed32, submessage_arena);
    }
    set_has_v_list_sfixed32_fixed32();
    kind_.v_list_sfixed32_fixed32_ = v_list_sfixed32_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_fixed32)
}
void Feature::set_allocated_v_list_sfixed32_fixed64(::feature_proto::ListSfixed32Fixed64* v_list_sfixed32_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_fixed64, submessage_arena);
    }
    set_has_v_list_sfixed32_fixed64();
    kind_.v_list_sfixed32_fixed64_ = v_list_sfixed32_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_fixed64)
}
void Feature::set_allocated_v_list_sfixed32_sfixed32(::feature_proto::ListSfixed32Sfixed32* v_list_sfixed32_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_sfixed32, submessage_arena);
    }
    set_has_v_list_sfixed32_sfixed32();
    kind_.v_list_sfixed32_sfixed32_ = v_list_sfixed32_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_sfixed32)
}
void Feature::set_allocated_v_list_sfixed32_sfixed64(::feature_proto::ListSfixed32Sfixed64* v_list_sfixed32_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_sfixed64, submessage_arena);
    }
    set_has_v_list_sfixed32_sfixed64();
    kind_.v_list_sfixed32_sfixed64_ = v_list_sfixed32_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_sfixed64)
}
void Feature::set_allocated_v_list_sfixed32_bool(::feature_proto::ListSfixed32Bool* v_list_sfixed32_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_bool, submessage_arena);
    }
    set_has_v_list_sfixed32_bool();
    kind_.v_list_sfixed32_bool_ = v_list_sfixed32_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_bool)
}
void Feature::set_allocated_v_list_sfixed32_string(::feature_proto::ListSfixed32String* v_list_sfixed32_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_string, submessage_arena);
    }
    set_has_v_list_sfixed32_string();
    kind_.v_list_sfixed32_string_ = v_list_sfixed32_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_string)
}
void Feature::set_allocated_v_list_sfixed32_bytes(::feature_proto::ListSfixed32Bytes* v_list_sfixed32_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed32_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed32_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed32_bytes, submessage_arena);
    }
    set_has_v_list_sfixed32_bytes();
    kind_.v_list_sfixed32_bytes_ = v_list_sfixed32_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed32_bytes)
}
void Feature::set_allocated_v_list_sfixed64_double(::feature_proto::ListSfixed64Double* v_list_sfixed64_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_double, submessage_arena);
    }
    set_has_v_list_sfixed64_double();
    kind_.v_list_sfixed64_double_ = v_list_sfixed64_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_double)
}
void Feature::set_allocated_v_list_sfixed64_float(::feature_proto::ListSfixed64Float* v_list_sfixed64_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_float, submessage_arena);
    }
    set_has_v_list_sfixed64_float();
    kind_.v_list_sfixed64_float_ = v_list_sfixed64_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_float)
}
void Feature::set_allocated_v_list_sfixed64_int32(::feature_proto::ListSfixed64Int32* v_list_sfixed64_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_int32, submessage_arena);
    }
    set_has_v_list_sfixed64_int32();
    kind_.v_list_sfixed64_int32_ = v_list_sfixed64_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_int32)
}
void Feature::set_allocated_v_list_sfixed64_int64(::feature_proto::ListSfixed64Int64* v_list_sfixed64_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_int64, submessage_arena);
    }
    set_has_v_list_sfixed64_int64();
    kind_.v_list_sfixed64_int64_ = v_list_sfixed64_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_int64)
}
void Feature::set_allocated_v_list_sfixed64_uint32(::feature_proto::ListSfixed64Uint32* v_list_sfixed64_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_uint32, submessage_arena);
    }
    set_has_v_list_sfixed64_uint32();
    kind_.v_list_sfixed64_uint32_ = v_list_sfixed64_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_uint32)
}
void Feature::set_allocated_v_list_sfixed64_uint64(::feature_proto::ListSfixed64Uint64* v_list_sfixed64_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_uint64, submessage_arena);
    }
    set_has_v_list_sfixed64_uint64();
    kind_.v_list_sfixed64_uint64_ = v_list_sfixed64_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_uint64)
}
void Feature::set_allocated_v_list_sfixed64_sint32(::feature_proto::ListSfixed64Sint32* v_list_sfixed64_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_sint32, submessage_arena);
    }
    set_has_v_list_sfixed64_sint32();
    kind_.v_list_sfixed64_sint32_ = v_list_sfixed64_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_sint32)
}
void Feature::set_allocated_v_list_sfixed64_sint64(::feature_proto::ListSfixed64Sint64* v_list_sfixed64_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_sint64, submessage_arena);
    }
    set_has_v_list_sfixed64_sint64();
    kind_.v_list_sfixed64_sint64_ = v_list_sfixed64_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_sint64)
}
void Feature::set_allocated_v_list_sfixed64_fixed32(::feature_proto::ListSfixed64Fixed32* v_list_sfixed64_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_fixed32, submessage_arena);
    }
    set_has_v_list_sfixed64_fixed32();
    kind_.v_list_sfixed64_fixed32_ = v_list_sfixed64_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_fixed32)
}
void Feature::set_allocated_v_list_sfixed64_fixed64(::feature_proto::ListSfixed64Fixed64* v_list_sfixed64_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_fixed64, submessage_arena);
    }
    set_has_v_list_sfixed64_fixed64();
    kind_.v_list_sfixed64_fixed64_ = v_list_sfixed64_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_fixed64)
}
void Feature::set_allocated_v_list_sfixed64_sfixed32(::feature_proto::ListSfixed64Sfixed32* v_list_sfixed64_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_sfixed32, submessage_arena);
    }
    set_has_v_list_sfixed64_sfixed32();
    kind_.v_list_sfixed64_sfixed32_ = v_list_sfixed64_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_sfixed32)
}
void Feature::set_allocated_v_list_sfixed64_sfixed64(::feature_proto::ListSfixed64Sfixed64* v_list_sfixed64_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_sfixed64, submessage_arena);
    }
    set_has_v_list_sfixed64_sfixed64();
    kind_.v_list_sfixed64_sfixed64_ = v_list_sfixed64_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_sfixed64)
}
void Feature::set_allocated_v_list_sfixed64_bool(::feature_proto::ListSfixed64Bool* v_list_sfixed64_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_bool, submessage_arena);
    }
    set_has_v_list_sfixed64_bool();
    kind_.v_list_sfixed64_bool_ = v_list_sfixed64_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_bool)
}
void Feature::set_allocated_v_list_sfixed64_string(::feature_proto::ListSfixed64String* v_list_sfixed64_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_string, submessage_arena);
    }
    set_has_v_list_sfixed64_string();
    kind_.v_list_sfixed64_string_ = v_list_sfixed64_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_string)
}
void Feature::set_allocated_v_list_sfixed64_bytes(::feature_proto::ListSfixed64Bytes* v_list_sfixed64_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_sfixed64_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_sfixed64_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_sfixed64_bytes, submessage_arena);
    }
    set_has_v_list_sfixed64_bytes();
    kind_.v_list_sfixed64_bytes_ = v_list_sfixed64_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_sfixed64_bytes)
}
void Feature::set_allocated_v_list_double_double(::feature_proto::ListDoubleDouble* v_list_double_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_double, submessage_arena);
    }
    set_has_v_list_double_double();
    kind_.v_list_double_double_ = v_list_double_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_double)
}
void Feature::set_allocated_v_list_double_float(::feature_proto::ListDoubleFloat* v_list_double_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_float, submessage_arena);
    }
    set_has_v_list_double_float();
    kind_.v_list_double_float_ = v_list_double_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_float)
}
void Feature::set_allocated_v_list_double_int32(::feature_proto::ListDoubleInt32* v_list_double_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_int32, submessage_arena);
    }
    set_has_v_list_double_int32();
    kind_.v_list_double_int32_ = v_list_double_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_int32)
}
void Feature::set_allocated_v_list_double_int64(::feature_proto::ListDoubleInt64* v_list_double_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_int64, submessage_arena);
    }
    set_has_v_list_double_int64();
    kind_.v_list_double_int64_ = v_list_double_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_int64)
}
void Feature::set_allocated_v_list_double_uint32(::feature_proto::ListDoubleUint32* v_list_double_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_uint32, submessage_arena);
    }
    set_has_v_list_double_uint32();
    kind_.v_list_double_uint32_ = v_list_double_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_uint32)
}
void Feature::set_allocated_v_list_double_uint64(::feature_proto::ListDoubleUint64* v_list_double_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_uint64, submessage_arena);
    }
    set_has_v_list_double_uint64();
    kind_.v_list_double_uint64_ = v_list_double_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_uint64)
}
void Feature::set_allocated_v_list_double_sint32(::feature_proto::ListDoubleSint32* v_list_double_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_sint32, submessage_arena);
    }
    set_has_v_list_double_sint32();
    kind_.v_list_double_sint32_ = v_list_double_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_sint32)
}
void Feature::set_allocated_v_list_double_sint64(::feature_proto::ListDoubleSint64* v_list_double_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_sint64, submessage_arena);
    }
    set_has_v_list_double_sint64();
    kind_.v_list_double_sint64_ = v_list_double_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_sint64)
}
void Feature::set_allocated_v_list_double_fixed32(::feature_proto::ListDoubleFixed32* v_list_double_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_fixed32, submessage_arena);
    }
    set_has_v_list_double_fixed32();
    kind_.v_list_double_fixed32_ = v_list_double_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_fixed32)
}
void Feature::set_allocated_v_list_double_fixed64(::feature_proto::ListDoubleFixed64* v_list_double_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_fixed64, submessage_arena);
    }
    set_has_v_list_double_fixed64();
    kind_.v_list_double_fixed64_ = v_list_double_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_fixed64)
}
void Feature::set_allocated_v_list_double_sfixed32(::feature_proto::ListDoubleSfixed32* v_list_double_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_sfixed32, submessage_arena);
    }
    set_has_v_list_double_sfixed32();
    kind_.v_list_double_sfixed32_ = v_list_double_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_sfixed32)
}
void Feature::set_allocated_v_list_double_sfixed64(::feature_proto::ListDoubleSfixed64* v_list_double_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_sfixed64, submessage_arena);
    }
    set_has_v_list_double_sfixed64();
    kind_.v_list_double_sfixed64_ = v_list_double_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_sfixed64)
}
void Feature::set_allocated_v_list_double_bool(::feature_proto::ListDoubleBool* v_list_double_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_bool, submessage_arena);
    }
    set_has_v_list_double_bool();
    kind_.v_list_double_bool_ = v_list_double_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_bool)
}
void Feature::set_allocated_v_list_double_string(::feature_proto::ListDoubleString* v_list_double_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_string, submessage_arena);
    }
    set_has_v_list_double_string();
    kind_.v_list_double_string_ = v_list_double_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_string)
}
void Feature::set_allocated_v_list_double_bytes(::feature_proto::ListDoubleBytes* v_list_double_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_double_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_double_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_double_bytes, submessage_arena);
    }
    set_has_v_list_double_bytes();
    kind_.v_list_double_bytes_ = v_list_double_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_double_bytes)
}
void Feature::set_allocated_v_list_float_double(::feature_proto::ListFloatDouble* v_list_float_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_double, submessage_arena);
    }
    set_has_v_list_float_double();
    kind_.v_list_float_double_ = v_list_float_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_double)
}
void Feature::set_allocated_v_list_float_float(::feature_proto::ListFloatFloat* v_list_float_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_float, submessage_arena);
    }
    set_has_v_list_float_float();
    kind_.v_list_float_float_ = v_list_float_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_float)
}
void Feature::set_allocated_v_list_float_int32(::feature_proto::ListFloatInt32* v_list_float_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_int32, submessage_arena);
    }
    set_has_v_list_float_int32();
    kind_.v_list_float_int32_ = v_list_float_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_int32)
}
void Feature::set_allocated_v_list_float_int64(::feature_proto::ListFloatInt64* v_list_float_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_int64, submessage_arena);
    }
    set_has_v_list_float_int64();
    kind_.v_list_float_int64_ = v_list_float_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_int64)
}
void Feature::set_allocated_v_list_float_uint32(::feature_proto::ListFloatUint32* v_list_float_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_uint32, submessage_arena);
    }
    set_has_v_list_float_uint32();
    kind_.v_list_float_uint32_ = v_list_float_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_uint32)
}
void Feature::set_allocated_v_list_float_uint64(::feature_proto::ListFloatUint64* v_list_float_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_uint64, submessage_arena);
    }
    set_has_v_list_float_uint64();
    kind_.v_list_float_uint64_ = v_list_float_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_uint64)
}
void Feature::set_allocated_v_list_float_sint32(::feature_proto::ListFloatSint32* v_list_float_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_sint32, submessage_arena);
    }
    set_has_v_list_float_sint32();
    kind_.v_list_float_sint32_ = v_list_float_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_sint32)
}
void Feature::set_allocated_v_list_float_sint64(::feature_proto::ListFloatSint64* v_list_float_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_sint64, submessage_arena);
    }
    set_has_v_list_float_sint64();
    kind_.v_list_float_sint64_ = v_list_float_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_sint64)
}
void Feature::set_allocated_v_list_float_fixed32(::feature_proto::ListFloatFixed32* v_list_float_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_fixed32, submessage_arena);
    }
    set_has_v_list_float_fixed32();
    kind_.v_list_float_fixed32_ = v_list_float_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_fixed32)
}
void Feature::set_allocated_v_list_float_fixed64(::feature_proto::ListFloatFixed64* v_list_float_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_fixed64, submessage_arena);
    }
    set_has_v_list_float_fixed64();
    kind_.v_list_float_fixed64_ = v_list_float_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_fixed64)
}
void Feature::set_allocated_v_list_float_sfixed32(::feature_proto::ListFloatSfixed32* v_list_float_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_sfixed32, submessage_arena);
    }
    set_has_v_list_float_sfixed32();
    kind_.v_list_float_sfixed32_ = v_list_float_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_sfixed32)
}
void Feature::set_allocated_v_list_float_sfixed64(::feature_proto::ListFloatSfixed64* v_list_float_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_sfixed64, submessage_arena);
    }
    set_has_v_list_float_sfixed64();
    kind_.v_list_float_sfixed64_ = v_list_float_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_sfixed64)
}
void Feature::set_allocated_v_list_float_bool(::feature_proto::ListFloatBool* v_list_float_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_bool, submessage_arena);
    }
    set_has_v_list_float_bool();
    kind_.v_list_float_bool_ = v_list_float_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_bool)
}
void Feature::set_allocated_v_list_float_string(::feature_proto::ListFloatString* v_list_float_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_string, submessage_arena);
    }
    set_has_v_list_float_string();
    kind_.v_list_float_string_ = v_list_float_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_string)
}
void Feature::set_allocated_v_list_float_bytes(::feature_proto::ListFloatBytes* v_list_float_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_float_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_float_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_float_bytes, submessage_arena);
    }
    set_has_v_list_float_bytes();
    kind_.v_list_float_bytes_ = v_list_float_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_float_bytes)
}
void Feature::set_allocated_v_list_bool_double(::feature_proto::ListBoolDouble* v_list_bool_double) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_double) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_double = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_double, submessage_arena);
    }
    set_has_v_list_bool_double();
    kind_.v_list_bool_double_ = v_list_bool_double;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_double)
}
void Feature::set_allocated_v_list_bool_float(::feature_proto::ListBoolFloat* v_list_bool_float) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_float) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_float = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_float, submessage_arena);
    }
    set_has_v_list_bool_float();
    kind_.v_list_bool_float_ = v_list_bool_float;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_float)
}
void Feature::set_allocated_v_list_bool_int32(::feature_proto::ListBoolInt32* v_list_bool_int32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_int32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_int32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_int32, submessage_arena);
    }
    set_has_v_list_bool_int32();
    kind_.v_list_bool_int32_ = v_list_bool_int32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_int32)
}
void Feature::set_allocated_v_list_bool_int64(::feature_proto::ListBoolInt64* v_list_bool_int64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_int64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_int64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_int64, submessage_arena);
    }
    set_has_v_list_bool_int64();
    kind_.v_list_bool_int64_ = v_list_bool_int64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_int64)
}
void Feature::set_allocated_v_list_bool_uint32(::feature_proto::ListBoolUint32* v_list_bool_uint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_uint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_uint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_uint32, submessage_arena);
    }
    set_has_v_list_bool_uint32();
    kind_.v_list_bool_uint32_ = v_list_bool_uint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_uint32)
}
void Feature::set_allocated_v_list_bool_uint64(::feature_proto::ListBoolUint64* v_list_bool_uint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_uint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_uint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_uint64, submessage_arena);
    }
    set_has_v_list_bool_uint64();
    kind_.v_list_bool_uint64_ = v_list_bool_uint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_uint64)
}
void Feature::set_allocated_v_list_bool_sint32(::feature_proto::ListBoolSint32* v_list_bool_sint32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_sint32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_sint32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_sint32, submessage_arena);
    }
    set_has_v_list_bool_sint32();
    kind_.v_list_bool_sint32_ = v_list_bool_sint32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_sint32)
}
void Feature::set_allocated_v_list_bool_sint64(::feature_proto::ListBoolSint64* v_list_bool_sint64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_sint64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_sint64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_sint64, submessage_arena);
    }
    set_has_v_list_bool_sint64();
    kind_.v_list_bool_sint64_ = v_list_bool_sint64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_sint64)
}
void Feature::set_allocated_v_list_bool_fixed32(::feature_proto::ListBoolFixed32* v_list_bool_fixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_fixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_fixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_fixed32, submessage_arena);
    }
    set_has_v_list_bool_fixed32();
    kind_.v_list_bool_fixed32_ = v_list_bool_fixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_fixed32)
}
void Feature::set_allocated_v_list_bool_fixed64(::feature_proto::ListBoolFixed64* v_list_bool_fixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_fixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_fixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_fixed64, submessage_arena);
    }
    set_has_v_list_bool_fixed64();
    kind_.v_list_bool_fixed64_ = v_list_bool_fixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_fixed64)
}
void Feature::set_allocated_v_list_bool_sfixed32(::feature_proto::ListBoolSfixed32* v_list_bool_sfixed32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_sfixed32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_sfixed32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_sfixed32, submessage_arena);
    }
    set_has_v_list_bool_sfixed32();
    kind_.v_list_bool_sfixed32_ = v_list_bool_sfixed32;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_sfixed32)
}
void Feature::set_allocated_v_list_bool_sfixed64(::feature_proto::ListBoolSfixed64* v_list_bool_sfixed64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_sfixed64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_sfixed64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_sfixed64, submessage_arena);
    }
    set_has_v_list_bool_sfixed64();
    kind_.v_list_bool_sfixed64_ = v_list_bool_sfixed64;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_sfixed64)
}
void Feature::set_allocated_v_list_bool_bool(::feature_proto::ListBoolBool* v_list_bool_bool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_bool) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_bool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_bool, submessage_arena);
    }
    set_has_v_list_bool_bool();
    kind_.v_list_bool_bool_ = v_list_bool_bool;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_bool)
}
void Feature::set_allocated_v_list_bool_string(::feature_proto::ListBoolString* v_list_bool_string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_string, submessage_arena);
    }
    set_has_v_list_bool_string();
    kind_.v_list_bool_string_ = v_list_bool_string;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_string)
}
void Feature::set_allocated_v_list_bool_bytes(::feature_proto::ListBoolBytes* v_list_bool_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (v_list_bool_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      v_list_bool_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_list_bool_bytes, submessage_arena);
    }
    set_has_v_list_bool_bytes();
    kind_.v_list_bool_bytes_ = v_list_bool_bytes;
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_list_bool_bytes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Feature::kVDoubleFieldNumber;
const int Feature::kVFloatFieldNumber;
const int Feature::kVInt32FieldNumber;
const int Feature::kVInt64FieldNumber;
const int Feature::kVUint32FieldNumber;
const int Feature::kVUint64FieldNumber;
const int Feature::kVSint32FieldNumber;
const int Feature::kVSint64FieldNumber;
const int Feature::kVFixed32FieldNumber;
const int Feature::kVFixed64FieldNumber;
const int Feature::kVSfixed32FieldNumber;
const int Feature::kVSfixed64FieldNumber;
const int Feature::kVBoolFieldNumber;
const int Feature::kVStringFieldNumber;
const int Feature::kVBytesFieldNumber;
const int Feature::kVListDoubleFieldNumber;
const int Feature::kVListFloatFieldNumber;
const int Feature::kVListInt32FieldNumber;
const int Feature::kVListInt64FieldNumber;
const int Feature::kVListUint32FieldNumber;
const int Feature::kVListUint64FieldNumber;
const int Feature::kVListSint32FieldNumber;
const int Feature::kVListSint64FieldNumber;
const int Feature::kVListFixed32FieldNumber;
const int Feature::kVListFixed64FieldNumber;
const int Feature::kVListSfixed32FieldNumber;
const int Feature::kVListSfixed64FieldNumber;
const int Feature::kVListBoolFieldNumber;
const int Feature::kVListStringFieldNumber;
const int Feature::kVListBytesFieldNumber;
const int Feature::kVListStringDoubleFieldNumber;
const int Feature::kVListStringFloatFieldNumber;
const int Feature::kVListStringInt32FieldNumber;
const int Feature::kVListStringInt64FieldNumber;
const int Feature::kVListStringUint32FieldNumber;
const int Feature::kVListStringUint64FieldNumber;
const int Feature::kVListStringSint32FieldNumber;
const int Feature::kVListStringSint64FieldNumber;
const int Feature::kVListStringFixed32FieldNumber;
const int Feature::kVListStringFixed64FieldNumber;
const int Feature::kVListStringSfixed32FieldNumber;
const int Feature::kVListStringSfixed64FieldNumber;
const int Feature::kVListStringBoolFieldNumber;
const int Feature::kVListStringStringFieldNumber;
const int Feature::kVListStringBytesFieldNumber;
const int Feature::kVListBytesDoubleFieldNumber;
const int Feature::kVListBytesFloatFieldNumber;
const int Feature::kVListBytesInt32FieldNumber;
const int Feature::kVListBytesInt64FieldNumber;
const int Feature::kVListBytesUint32FieldNumber;
const int Feature::kVListBytesUint64FieldNumber;
const int Feature::kVListBytesSint32FieldNumber;
const int Feature::kVListBytesSint64FieldNumber;
const int Feature::kVListBytesFixed32FieldNumber;
const int Feature::kVListBytesFixed64FieldNumber;
const int Feature::kVListBytesSfixed32FieldNumber;
const int Feature::kVListBytesSfixed64FieldNumber;
const int Feature::kVListBytesBoolFieldNumber;
const int Feature::kVListBytesStringFieldNumber;
const int Feature::kVListBytesBytesFieldNumber;
const int Feature::kVListInt32DoubleFieldNumber;
const int Feature::kVListInt32FloatFieldNumber;
const int Feature::kVListInt32Int32FieldNumber;
const int Feature::kVListInt32Int64FieldNumber;
const int Feature::kVListInt32Uint32FieldNumber;
const int Feature::kVListInt32Uint64FieldNumber;
const int Feature::kVListInt32Sint32FieldNumber;
const int Feature::kVListInt32Sint64FieldNumber;
const int Feature::kVListInt32Fixed32FieldNumber;
const int Feature::kVListInt32Fixed64FieldNumber;
const int Feature::kVListInt32Sfixed32FieldNumber;
const int Feature::kVListInt32Sfixed64FieldNumber;
const int Feature::kVListInt32BoolFieldNumber;
const int Feature::kVListInt32StringFieldNumber;
const int Feature::kVListInt32BytesFieldNumber;
const int Feature::kVListInt64DoubleFieldNumber;
const int Feature::kVListInt64FloatFieldNumber;
const int Feature::kVListInt64Int32FieldNumber;
const int Feature::kVListInt64Int64FieldNumber;
const int Feature::kVListInt64Uint32FieldNumber;
const int Feature::kVListInt64Uint64FieldNumber;
const int Feature::kVListInt64Sint32FieldNumber;
const int Feature::kVListInt64Sint64FieldNumber;
const int Feature::kVListInt64Fixed32FieldNumber;
const int Feature::kVListInt64Fixed64FieldNumber;
const int Feature::kVListInt64Sfixed32FieldNumber;
const int Feature::kVListInt64Sfixed64FieldNumber;
const int Feature::kVListInt64BoolFieldNumber;
const int Feature::kVListInt64StringFieldNumber;
const int Feature::kVListInt64BytesFieldNumber;
const int Feature::kVListUint32DoubleFieldNumber;
const int Feature::kVListUint32FloatFieldNumber;
const int Feature::kVListUint32Int32FieldNumber;
const int Feature::kVListUint32Int64FieldNumber;
const int Feature::kVListUint32Uint32FieldNumber;
const int Feature::kVListUint32Uint64FieldNumber;
const int Feature::kVListUint32Sint32FieldNumber;
const int Feature::kVListUint32Sint64FieldNumber;
const int Feature::kVListUint32Fixed32FieldNumber;
const int Feature::kVListUint32Fixed64FieldNumber;
const int Feature::kVListUint32Sfixed32FieldNumber;
const int Feature::kVListUint32Sfixed64FieldNumber;
const int Feature::kVListUint32BoolFieldNumber;
const int Feature::kVListUint32StringFieldNumber;
const int Feature::kVListUint32BytesFieldNumber;
const int Feature::kVListUint64DoubleFieldNumber;
const int Feature::kVListUint64FloatFieldNumber;
const int Feature::kVListUint64Int32FieldNumber;
const int Feature::kVListUint64Int64FieldNumber;
const int Feature::kVListUint64Uint32FieldNumber;
const int Feature::kVListUint64Uint64FieldNumber;
const int Feature::kVListUint64Sint32FieldNumber;
const int Feature::kVListUint64Sint64FieldNumber;
const int Feature::kVListUint64Fixed32FieldNumber;
const int Feature::kVListUint64Fixed64FieldNumber;
const int Feature::kVListUint64Sfixed32FieldNumber;
const int Feature::kVListUint64Sfixed64FieldNumber;
const int Feature::kVListUint64BoolFieldNumber;
const int Feature::kVListUint64StringFieldNumber;
const int Feature::kVListUint64BytesFieldNumber;
const int Feature::kVListSint32DoubleFieldNumber;
const int Feature::kVListSint32FloatFieldNumber;
const int Feature::kVListSint32Int32FieldNumber;
const int Feature::kVListSint32Int64FieldNumber;
const int Feature::kVListSint32Uint32FieldNumber;
const int Feature::kVListSint32Uint64FieldNumber;
const int Feature::kVListSint32Sint32FieldNumber;
const int Feature::kVListSint32Sint64FieldNumber;
const int Feature::kVListSint32Fixed32FieldNumber;
const int Feature::kVListSint32Fixed64FieldNumber;
const int Feature::kVListSint32Sfixed32FieldNumber;
const int Feature::kVListSint32Sfixed64FieldNumber;
const int Feature::kVListSint32BoolFieldNumber;
const int Feature::kVListSint32StringFieldNumber;
const int Feature::kVListSint32BytesFieldNumber;
const int Feature::kVListSint64DoubleFieldNumber;
const int Feature::kVListSint64FloatFieldNumber;
const int Feature::kVListSint64Int32FieldNumber;
const int Feature::kVListSint64Int64FieldNumber;
const int Feature::kVListSint64Uint32FieldNumber;
const int Feature::kVListSint64Uint64FieldNumber;
const int Feature::kVListSint64Sint32FieldNumber;
const int Feature::kVListSint64Sint64FieldNumber;
const int Feature::kVListSint64Fixed32FieldNumber;
const int Feature::kVListSint64Fixed64FieldNumber;
const int Feature::kVListSint64Sfixed32FieldNumber;
const int Feature::kVListSint64Sfixed64FieldNumber;
const int Feature::kVListSint64BoolFieldNumber;
const int Feature::kVListSint64StringFieldNumber;
const int Feature::kVListSint64BytesFieldNumber;
const int Feature::kVListFixed32DoubleFieldNumber;
const int Feature::kVListFixed32FloatFieldNumber;
const int Feature::kVListFixed32Int32FieldNumber;
const int Feature::kVListFixed32Int64FieldNumber;
const int Feature::kVListFixed32Uint32FieldNumber;
const int Feature::kVListFixed32Uint64FieldNumber;
const int Feature::kVListFixed32Sint32FieldNumber;
const int Feature::kVListFixed32Sint64FieldNumber;
const int Feature::kVListFixed32Fixed32FieldNumber;
const int Feature::kVListFixed32Fixed64FieldNumber;
const int Feature::kVListFixed32Sfixed32FieldNumber;
const int Feature::kVListFixed32Sfixed64FieldNumber;
const int Feature::kVListFixed32BoolFieldNumber;
const int Feature::kVListFixed32StringFieldNumber;
const int Feature::kVListFixed32BytesFieldNumber;
const int Feature::kVListFixed64DoubleFieldNumber;
const int Feature::kVListFixed64FloatFieldNumber;
const int Feature::kVListFixed64Int32FieldNumber;
const int Feature::kVListFixed64Int64FieldNumber;
const int Feature::kVListFixed64Uint32FieldNumber;
const int Feature::kVListFixed64Uint64FieldNumber;
const int Feature::kVListFixed64Sint32FieldNumber;
const int Feature::kVListFixed64Sint64FieldNumber;
const int Feature::kVListFixed64Fixed32FieldNumber;
const int Feature::kVListFixed64Fixed64FieldNumber;
const int Feature::kVListFixed64Sfixed32FieldNumber;
const int Feature::kVListFixed64Sfixed64FieldNumber;
const int Feature::kVListFixed64BoolFieldNumber;
const int Feature::kVListFixed64StringFieldNumber;
const int Feature::kVListFixed64BytesFieldNumber;
const int Feature::kVListSfixed32DoubleFieldNumber;
const int Feature::kVListSfixed32FloatFieldNumber;
const int Feature::kVListSfixed32Int32FieldNumber;
const int Feature::kVListSfixed32Int64FieldNumber;
const int Feature::kVListSfixed32Uint32FieldNumber;
const int Feature::kVListSfixed32Uint64FieldNumber;
const int Feature::kVListSfixed32Sint32FieldNumber;
const int Feature::kVListSfixed32Sint64FieldNumber;
const int Feature::kVListSfixed32Fixed32FieldNumber;
const int Feature::kVListSfixed32Fixed64FieldNumber;
const int Feature::kVListSfixed32Sfixed32FieldNumber;
const int Feature::kVListSfixed32Sfixed64FieldNumber;
const int Feature::kVListSfixed32BoolFieldNumber;
const int Feature::kVListSfixed32StringFieldNumber;
const int Feature::kVListSfixed32BytesFieldNumber;
const int Feature::kVListSfixed64DoubleFieldNumber;
const int Feature::kVListSfixed64FloatFieldNumber;
const int Feature::kVListSfixed64Int32FieldNumber;
const int Feature::kVListSfixed64Int64FieldNumber;
const int Feature::kVListSfixed64Uint32FieldNumber;
const int Feature::kVListSfixed64Uint64FieldNumber;
const int Feature::kVListSfixed64Sint32FieldNumber;
const int Feature::kVListSfixed64Sint64FieldNumber;
const int Feature::kVListSfixed64Fixed32FieldNumber;
const int Feature::kVListSfixed64Fixed64FieldNumber;
const int Feature::kVListSfixed64Sfixed32FieldNumber;
const int Feature::kVListSfixed64Sfixed64FieldNumber;
const int Feature::kVListSfixed64BoolFieldNumber;
const int Feature::kVListSfixed64StringFieldNumber;
const int Feature::kVListSfixed64BytesFieldNumber;
const int Feature::kVListDoubleDoubleFieldNumber;
const int Feature::kVListDoubleFloatFieldNumber;
const int Feature::kVListDoubleInt32FieldNumber;
const int Feature::kVListDoubleInt64FieldNumber;
const int Feature::kVListDoubleUint32FieldNumber;
const int Feature::kVListDoubleUint64FieldNumber;
const int Feature::kVListDoubleSint32FieldNumber;
const int Feature::kVListDoubleSint64FieldNumber;
const int Feature::kVListDoubleFixed32FieldNumber;
const int Feature::kVListDoubleFixed64FieldNumber;
const int Feature::kVListDoubleSfixed32FieldNumber;
const int Feature::kVListDoubleSfixed64FieldNumber;
const int Feature::kVListDoubleBoolFieldNumber;
const int Feature::kVListDoubleStringFieldNumber;
const int Feature::kVListDoubleBytesFieldNumber;
const int Feature::kVListFloatDoubleFieldNumber;
const int Feature::kVListFloatFloatFieldNumber;
const int Feature::kVListFloatInt32FieldNumber;
const int Feature::kVListFloatInt64FieldNumber;
const int Feature::kVListFloatUint32FieldNumber;
const int Feature::kVListFloatUint64FieldNumber;
const int Feature::kVListFloatSint32FieldNumber;
const int Feature::kVListFloatSint64FieldNumber;
const int Feature::kVListFloatFixed32FieldNumber;
const int Feature::kVListFloatFixed64FieldNumber;
const int Feature::kVListFloatSfixed32FieldNumber;
const int Feature::kVListFloatSfixed64FieldNumber;
const int Feature::kVListFloatBoolFieldNumber;
const int Feature::kVListFloatStringFieldNumber;
const int Feature::kVListFloatBytesFieldNumber;
const int Feature::kVListBoolDoubleFieldNumber;
const int Feature::kVListBoolFloatFieldNumber;
const int Feature::kVListBoolInt32FieldNumber;
const int Feature::kVListBoolInt64FieldNumber;
const int Feature::kVListBoolUint32FieldNumber;
const int Feature::kVListBoolUint64FieldNumber;
const int Feature::kVListBoolSint32FieldNumber;
const int Feature::kVListBoolSint64FieldNumber;
const int Feature::kVListBoolFixed32FieldNumber;
const int Feature::kVListBoolFixed64FieldNumber;
const int Feature::kVListBoolSfixed32FieldNumber;
const int Feature::kVListBoolSfixed64FieldNumber;
const int Feature::kVListBoolBoolFieldNumber;
const int Feature::kVListBoolStringFieldNumber;
const int Feature::kVListBoolBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Feature::Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_Feature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.Feature)
}
Feature::Feature(const Feature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kVDouble: {
      set_v_double(from.v_double());
      break;
    }
    case kVFloat: {
      set_v_float(from.v_float());
      break;
    }
    case kVInt32: {
      set_v_int32(from.v_int32());
      break;
    }
    case kVInt64: {
      set_v_int64(from.v_int64());
      break;
    }
    case kVUint32: {
      set_v_uint32(from.v_uint32());
      break;
    }
    case kVUint64: {
      set_v_uint64(from.v_uint64());
      break;
    }
    case kVSint32: {
      set_v_sint32(from.v_sint32());
      break;
    }
    case kVSint64: {
      set_v_sint64(from.v_sint64());
      break;
    }
    case kVFixed32: {
      set_v_fixed32(from.v_fixed32());
      break;
    }
    case kVFixed64: {
      set_v_fixed64(from.v_fixed64());
      break;
    }
    case kVSfixed32: {
      set_v_sfixed32(from.v_sfixed32());
      break;
    }
    case kVSfixed64: {
      set_v_sfixed64(from.v_sfixed64());
      break;
    }
    case kVBool: {
      set_v_bool(from.v_bool());
      break;
    }
    case kVString: {
      set_v_string(from.v_string());
      break;
    }
    case kVBytes: {
      set_v_bytes(from.v_bytes());
      break;
    }
    case kVListDouble: {
      mutable_v_list_double()->::feature_proto::ListDouble::MergeFrom(from.v_list_double());
      break;
    }
    case kVListFloat: {
      mutable_v_list_float()->::feature_proto::ListFloat::MergeFrom(from.v_list_float());
      break;
    }
    case kVListInt32: {
      mutable_v_list_int32()->::feature_proto::ListInt32::MergeFrom(from.v_list_int32());
      break;
    }
    case kVListInt64: {
      mutable_v_list_int64()->::feature_proto::ListInt64::MergeFrom(from.v_list_int64());
      break;
    }
    case kVListUint32: {
      mutable_v_list_uint32()->::feature_proto::ListUint32::MergeFrom(from.v_list_uint32());
      break;
    }
    case kVListUint64: {
      mutable_v_list_uint64()->::feature_proto::ListUint64::MergeFrom(from.v_list_uint64());
      break;
    }
    case kVListSint32: {
      mutable_v_list_sint32()->::feature_proto::ListSint32::MergeFrom(from.v_list_sint32());
      break;
    }
    case kVListSint64: {
      mutable_v_list_sint64()->::feature_proto::ListSint64::MergeFrom(from.v_list_sint64());
      break;
    }
    case kVListFixed32: {
      mutable_v_list_fixed32()->::feature_proto::ListFixed32::MergeFrom(from.v_list_fixed32());
      break;
    }
    case kVListFixed64: {
      mutable_v_list_fixed64()->::feature_proto::ListFixed64::MergeFrom(from.v_list_fixed64());
      break;
    }
    case kVListSfixed32: {
      mutable_v_list_sfixed32()->::feature_proto::ListSfixed32::MergeFrom(from.v_list_sfixed32());
      break;
    }
    case kVListSfixed64: {
      mutable_v_list_sfixed64()->::feature_proto::ListSfixed64::MergeFrom(from.v_list_sfixed64());
      break;
    }
    case kVListBool: {
      mutable_v_list_bool()->::feature_proto::ListBool::MergeFrom(from.v_list_bool());
      break;
    }
    case kVListString: {
      mutable_v_list_string()->::feature_proto::ListString::MergeFrom(from.v_list_string());
      break;
    }
    case kVListBytes: {
      mutable_v_list_bytes()->::feature_proto::ListBytes::MergeFrom(from.v_list_bytes());
      break;
    }
    case kVListStringDouble: {
      mutable_v_list_string_double()->::feature_proto::ListStringDouble::MergeFrom(from.v_list_string_double());
      break;
    }
    case kVListStringFloat: {
      mutable_v_list_string_float()->::feature_proto::ListStringFloat::MergeFrom(from.v_list_string_float());
      break;
    }
    case kVListStringInt32: {
      mutable_v_list_string_int32()->::feature_proto::ListStringInt32::MergeFrom(from.v_list_string_int32());
      break;
    }
    case kVListStringInt64: {
      mutable_v_list_string_int64()->::feature_proto::ListStringInt64::MergeFrom(from.v_list_string_int64());
      break;
    }
    case kVListStringUint32: {
      mutable_v_list_string_uint32()->::feature_proto::ListStringUint32::MergeFrom(from.v_list_string_uint32());
      break;
    }
    case kVListStringUint64: {
      mutable_v_list_string_uint64()->::feature_proto::ListStringUint64::MergeFrom(from.v_list_string_uint64());
      break;
    }
    case kVListStringSint32: {
      mutable_v_list_string_sint32()->::feature_proto::ListStringSint32::MergeFrom(from.v_list_string_sint32());
      break;
    }
    case kVListStringSint64: {
      mutable_v_list_string_sint64()->::feature_proto::ListStringSint64::MergeFrom(from.v_list_string_sint64());
      break;
    }
    case kVListStringFixed32: {
      mutable_v_list_string_fixed32()->::feature_proto::ListStringFixed32::MergeFrom(from.v_list_string_fixed32());
      break;
    }
    case kVListStringFixed64: {
      mutable_v_list_string_fixed64()->::feature_proto::ListStringFixed64::MergeFrom(from.v_list_string_fixed64());
      break;
    }
    case kVListStringSfixed32: {
      mutable_v_list_string_sfixed32()->::feature_proto::ListStringSfixed32::MergeFrom(from.v_list_string_sfixed32());
      break;
    }
    case kVListStringSfixed64: {
      mutable_v_list_string_sfixed64()->::feature_proto::ListStringSfixed64::MergeFrom(from.v_list_string_sfixed64());
      break;
    }
    case kVListStringBool: {
      mutable_v_list_string_bool()->::feature_proto::ListStringBool::MergeFrom(from.v_list_string_bool());
      break;
    }
    case kVListStringString: {
      mutable_v_list_string_string()->::feature_proto::ListStringString::MergeFrom(from.v_list_string_string());
      break;
    }
    case kVListStringBytes: {
      mutable_v_list_string_bytes()->::feature_proto::ListStringBytes::MergeFrom(from.v_list_string_bytes());
      break;
    }
    case kVListBytesDouble: {
      mutable_v_list_bytes_double()->::feature_proto::ListBytesDouble::MergeFrom(from.v_list_bytes_double());
      break;
    }
    case kVListBytesFloat: {
      mutable_v_list_bytes_float()->::feature_proto::ListBytesFloat::MergeFrom(from.v_list_bytes_float());
      break;
    }
    case kVListBytesInt32: {
      mutable_v_list_bytes_int32()->::feature_proto::ListBytesInt32::MergeFrom(from.v_list_bytes_int32());
      break;
    }
    case kVListBytesInt64: {
      mutable_v_list_bytes_int64()->::feature_proto::ListBytesInt64::MergeFrom(from.v_list_bytes_int64());
      break;
    }
    case kVListBytesUint32: {
      mutable_v_list_bytes_uint32()->::feature_proto::ListBytesUint32::MergeFrom(from.v_list_bytes_uint32());
      break;
    }
    case kVListBytesUint64: {
      mutable_v_list_bytes_uint64()->::feature_proto::ListBytesUint64::MergeFrom(from.v_list_bytes_uint64());
      break;
    }
    case kVListBytesSint32: {
      mutable_v_list_bytes_sint32()->::feature_proto::ListBytesSint32::MergeFrom(from.v_list_bytes_sint32());
      break;
    }
    case kVListBytesSint64: {
      mutable_v_list_bytes_sint64()->::feature_proto::ListBytesSint64::MergeFrom(from.v_list_bytes_sint64());
      break;
    }
    case kVListBytesFixed32: {
      mutable_v_list_bytes_fixed32()->::feature_proto::ListBytesFixed32::MergeFrom(from.v_list_bytes_fixed32());
      break;
    }
    case kVListBytesFixed64: {
      mutable_v_list_bytes_fixed64()->::feature_proto::ListBytesFixed64::MergeFrom(from.v_list_bytes_fixed64());
      break;
    }
    case kVListBytesSfixed32: {
      mutable_v_list_bytes_sfixed32()->::feature_proto::ListBytesSfixed32::MergeFrom(from.v_list_bytes_sfixed32());
      break;
    }
    case kVListBytesSfixed64: {
      mutable_v_list_bytes_sfixed64()->::feature_proto::ListBytesSfixed64::MergeFrom(from.v_list_bytes_sfixed64());
      break;
    }
    case kVListBytesBool: {
      mutable_v_list_bytes_bool()->::feature_proto::ListBytesBool::MergeFrom(from.v_list_bytes_bool());
      break;
    }
    case kVListBytesString: {
      mutable_v_list_bytes_string()->::feature_proto::ListBytesString::MergeFrom(from.v_list_bytes_string());
      break;
    }
    case kVListBytesBytes: {
      mutable_v_list_bytes_bytes()->::feature_proto::ListBytesBytes::MergeFrom(from.v_list_bytes_bytes());
      break;
    }
    case kVListInt32Double: {
      mutable_v_list_int32_double()->::feature_proto::ListInt32Double::MergeFrom(from.v_list_int32_double());
      break;
    }
    case kVListInt32Float: {
      mutable_v_list_int32_float()->::feature_proto::ListInt32Float::MergeFrom(from.v_list_int32_float());
      break;
    }
    case kVListInt32Int32: {
      mutable_v_list_int32_int32()->::feature_proto::ListInt32Int32::MergeFrom(from.v_list_int32_int32());
      break;
    }
    case kVListInt32Int64: {
      mutable_v_list_int32_int64()->::feature_proto::ListInt32Int64::MergeFrom(from.v_list_int32_int64());
      break;
    }
    case kVListInt32Uint32: {
      mutable_v_list_int32_uint32()->::feature_proto::ListInt32Uint32::MergeFrom(from.v_list_int32_uint32());
      break;
    }
    case kVListInt32Uint64: {
      mutable_v_list_int32_uint64()->::feature_proto::ListInt32Uint64::MergeFrom(from.v_list_int32_uint64());
      break;
    }
    case kVListInt32Sint32: {
      mutable_v_list_int32_sint32()->::feature_proto::ListInt32Sint32::MergeFrom(from.v_list_int32_sint32());
      break;
    }
    case kVListInt32Sint64: {
      mutable_v_list_int32_sint64()->::feature_proto::ListInt32Sint64::MergeFrom(from.v_list_int32_sint64());
      break;
    }
    case kVListInt32Fixed32: {
      mutable_v_list_int32_fixed32()->::feature_proto::ListInt32Fixed32::MergeFrom(from.v_list_int32_fixed32());
      break;
    }
    case kVListInt32Fixed64: {
      mutable_v_list_int32_fixed64()->::feature_proto::ListInt32Fixed64::MergeFrom(from.v_list_int32_fixed64());
      break;
    }
    case kVListInt32Sfixed32: {
      mutable_v_list_int32_sfixed32()->::feature_proto::ListInt32Sfixed32::MergeFrom(from.v_list_int32_sfixed32());
      break;
    }
    case kVListInt32Sfixed64: {
      mutable_v_list_int32_sfixed64()->::feature_proto::ListInt32Sfixed64::MergeFrom(from.v_list_int32_sfixed64());
      break;
    }
    case kVListInt32Bool: {
      mutable_v_list_int32_bool()->::feature_proto::ListInt32Bool::MergeFrom(from.v_list_int32_bool());
      break;
    }
    case kVListInt32String: {
      mutable_v_list_int32_string()->::feature_proto::ListInt32String::MergeFrom(from.v_list_int32_string());
      break;
    }
    case kVListInt32Bytes: {
      mutable_v_list_int32_bytes()->::feature_proto::ListInt32Bytes::MergeFrom(from.v_list_int32_bytes());
      break;
    }
    case kVListInt64Double: {
      mutable_v_list_int64_double()->::feature_proto::ListInt64Double::MergeFrom(from.v_list_int64_double());
      break;
    }
    case kVListInt64Float: {
      mutable_v_list_int64_float()->::feature_proto::ListInt64Float::MergeFrom(from.v_list_int64_float());
      break;
    }
    case kVListInt64Int32: {
      mutable_v_list_int64_int32()->::feature_proto::ListInt64Int32::MergeFrom(from.v_list_int64_int32());
      break;
    }
    case kVListInt64Int64: {
      mutable_v_list_int64_int64()->::feature_proto::ListInt64Int64::MergeFrom(from.v_list_int64_int64());
      break;
    }
    case kVListInt64Uint32: {
      mutable_v_list_int64_uint32()->::feature_proto::ListInt64Uint32::MergeFrom(from.v_list_int64_uint32());
      break;
    }
    case kVListInt64Uint64: {
      mutable_v_list_int64_uint64()->::feature_proto::ListInt64Uint64::MergeFrom(from.v_list_int64_uint64());
      break;
    }
    case kVListInt64Sint32: {
      mutable_v_list_int64_sint32()->::feature_proto::ListInt64Sint32::MergeFrom(from.v_list_int64_sint32());
      break;
    }
    case kVListInt64Sint64: {
      mutable_v_list_int64_sint64()->::feature_proto::ListInt64Sint64::MergeFrom(from.v_list_int64_sint64());
      break;
    }
    case kVListInt64Fixed32: {
      mutable_v_list_int64_fixed32()->::feature_proto::ListInt64Fixed32::MergeFrom(from.v_list_int64_fixed32());
      break;
    }
    case kVListInt64Fixed64: {
      mutable_v_list_int64_fixed64()->::feature_proto::ListInt64Fixed64::MergeFrom(from.v_list_int64_fixed64());
      break;
    }
    case kVListInt64Sfixed32: {
      mutable_v_list_int64_sfixed32()->::feature_proto::ListInt64Sfixed32::MergeFrom(from.v_list_int64_sfixed32());
      break;
    }
    case kVListInt64Sfixed64: {
      mutable_v_list_int64_sfixed64()->::feature_proto::ListInt64Sfixed64::MergeFrom(from.v_list_int64_sfixed64());
      break;
    }
    case kVListInt64Bool: {
      mutable_v_list_int64_bool()->::feature_proto::ListInt64Bool::MergeFrom(from.v_list_int64_bool());
      break;
    }
    case kVListInt64String: {
      mutable_v_list_int64_string()->::feature_proto::ListInt64String::MergeFrom(from.v_list_int64_string());
      break;
    }
    case kVListInt64Bytes: {
      mutable_v_list_int64_bytes()->::feature_proto::ListInt64Bytes::MergeFrom(from.v_list_int64_bytes());
      break;
    }
    case kVListUint32Double: {
      mutable_v_list_uint32_double()->::feature_proto::ListUint32Double::MergeFrom(from.v_list_uint32_double());
      break;
    }
    case kVListUint32Float: {
      mutable_v_list_uint32_float()->::feature_proto::ListUint32Float::MergeFrom(from.v_list_uint32_float());
      break;
    }
    case kVListUint32Int32: {
      mutable_v_list_uint32_int32()->::feature_proto::ListUint32Int32::MergeFrom(from.v_list_uint32_int32());
      break;
    }
    case kVListUint32Int64: {
      mutable_v_list_uint32_int64()->::feature_proto::ListUint32Int64::MergeFrom(from.v_list_uint32_int64());
      break;
    }
    case kVListUint32Uint32: {
      mutable_v_list_uint32_uint32()->::feature_proto::ListUint32Uint32::MergeFrom(from.v_list_uint32_uint32());
      break;
    }
    case kVListUint32Uint64: {
      mutable_v_list_uint32_uint64()->::feature_proto::ListUint32Uint64::MergeFrom(from.v_list_uint32_uint64());
      break;
    }
    case kVListUint32Sint32: {
      mutable_v_list_uint32_sint32()->::feature_proto::ListUint32Sint32::MergeFrom(from.v_list_uint32_sint32());
      break;
    }
    case kVListUint32Sint64: {
      mutable_v_list_uint32_sint64()->::feature_proto::ListUint32Sint64::MergeFrom(from.v_list_uint32_sint64());
      break;
    }
    case kVListUint32Fixed32: {
      mutable_v_list_uint32_fixed32()->::feature_proto::ListUint32Fixed32::MergeFrom(from.v_list_uint32_fixed32());
      break;
    }
    case kVListUint32Fixed64: {
      mutable_v_list_uint32_fixed64()->::feature_proto::ListUint32Fixed64::MergeFrom(from.v_list_uint32_fixed64());
      break;
    }
    case kVListUint32Sfixed32: {
      mutable_v_list_uint32_sfixed32()->::feature_proto::ListUint32Sfixed32::MergeFrom(from.v_list_uint32_sfixed32());
      break;
    }
    case kVListUint32Sfixed64: {
      mutable_v_list_uint32_sfixed64()->::feature_proto::ListUint32Sfixed64::MergeFrom(from.v_list_uint32_sfixed64());
      break;
    }
    case kVListUint32Bool: {
      mutable_v_list_uint32_bool()->::feature_proto::ListUint32Bool::MergeFrom(from.v_list_uint32_bool());
      break;
    }
    case kVListUint32String: {
      mutable_v_list_uint32_string()->::feature_proto::ListUint32String::MergeFrom(from.v_list_uint32_string());
      break;
    }
    case kVListUint32Bytes: {
      mutable_v_list_uint32_bytes()->::feature_proto::ListUint32Bytes::MergeFrom(from.v_list_uint32_bytes());
      break;
    }
    case kVListUint64Double: {
      mutable_v_list_uint64_double()->::feature_proto::ListUint64Double::MergeFrom(from.v_list_uint64_double());
      break;
    }
    case kVListUint64Float: {
      mutable_v_list_uint64_float()->::feature_proto::ListUint64Float::MergeFrom(from.v_list_uint64_float());
      break;
    }
    case kVListUint64Int32: {
      mutable_v_list_uint64_int32()->::feature_proto::ListUint64Int32::MergeFrom(from.v_list_uint64_int32());
      break;
    }
    case kVListUint64Int64: {
      mutable_v_list_uint64_int64()->::feature_proto::ListUint64Int64::MergeFrom(from.v_list_uint64_int64());
      break;
    }
    case kVListUint64Uint32: {
      mutable_v_list_uint64_uint32()->::feature_proto::ListUint64Uint32::MergeFrom(from.v_list_uint64_uint32());
      break;
    }
    case kVListUint64Uint64: {
      mutable_v_list_uint64_uint64()->::feature_proto::ListUint64Uint64::MergeFrom(from.v_list_uint64_uint64());
      break;
    }
    case kVListUint64Sint32: {
      mutable_v_list_uint64_sint32()->::feature_proto::ListUint64Sint32::MergeFrom(from.v_list_uint64_sint32());
      break;
    }
    case kVListUint64Sint64: {
      mutable_v_list_uint64_sint64()->::feature_proto::ListUint64Sint64::MergeFrom(from.v_list_uint64_sint64());
      break;
    }
    case kVListUint64Fixed32: {
      mutable_v_list_uint64_fixed32()->::feature_proto::ListUint64Fixed32::MergeFrom(from.v_list_uint64_fixed32());
      break;
    }
    case kVListUint64Fixed64: {
      mutable_v_list_uint64_fixed64()->::feature_proto::ListUint64Fixed64::MergeFrom(from.v_list_uint64_fixed64());
      break;
    }
    case kVListUint64Sfixed32: {
      mutable_v_list_uint64_sfixed32()->::feature_proto::ListUint64Sfixed32::MergeFrom(from.v_list_uint64_sfixed32());
      break;
    }
    case kVListUint64Sfixed64: {
      mutable_v_list_uint64_sfixed64()->::feature_proto::ListUint64Sfixed64::MergeFrom(from.v_list_uint64_sfixed64());
      break;
    }
    case kVListUint64Bool: {
      mutable_v_list_uint64_bool()->::feature_proto::ListUint64Bool::MergeFrom(from.v_list_uint64_bool());
      break;
    }
    case kVListUint64String: {
      mutable_v_list_uint64_string()->::feature_proto::ListUint64String::MergeFrom(from.v_list_uint64_string());
      break;
    }
    case kVListUint64Bytes: {
      mutable_v_list_uint64_bytes()->::feature_proto::ListUint64Bytes::MergeFrom(from.v_list_uint64_bytes());
      break;
    }
    case kVListSint32Double: {
      mutable_v_list_sint32_double()->::feature_proto::ListSint32Double::MergeFrom(from.v_list_sint32_double());
      break;
    }
    case kVListSint32Float: {
      mutable_v_list_sint32_float()->::feature_proto::ListSint32Float::MergeFrom(from.v_list_sint32_float());
      break;
    }
    case kVListSint32Int32: {
      mutable_v_list_sint32_int32()->::feature_proto::ListSint32Int32::MergeFrom(from.v_list_sint32_int32());
      break;
    }
    case kVListSint32Int64: {
      mutable_v_list_sint32_int64()->::feature_proto::ListSint32Int64::MergeFrom(from.v_list_sint32_int64());
      break;
    }
    case kVListSint32Uint32: {
      mutable_v_list_sint32_uint32()->::feature_proto::ListSint32Uint32::MergeFrom(from.v_list_sint32_uint32());
      break;
    }
    case kVListSint32Uint64: {
      mutable_v_list_sint32_uint64()->::feature_proto::ListSint32Uint64::MergeFrom(from.v_list_sint32_uint64());
      break;
    }
    case kVListSint32Sint32: {
      mutable_v_list_sint32_sint32()->::feature_proto::ListSint32Sint32::MergeFrom(from.v_list_sint32_sint32());
      break;
    }
    case kVListSint32Sint64: {
      mutable_v_list_sint32_sint64()->::feature_proto::ListSint32Sint64::MergeFrom(from.v_list_sint32_sint64());
      break;
    }
    case kVListSint32Fixed32: {
      mutable_v_list_sint32_fixed32()->::feature_proto::ListSint32Fixed32::MergeFrom(from.v_list_sint32_fixed32());
      break;
    }
    case kVListSint32Fixed64: {
      mutable_v_list_sint32_fixed64()->::feature_proto::ListSint32Fixed64::MergeFrom(from.v_list_sint32_fixed64());
      break;
    }
    case kVListSint32Sfixed32: {
      mutable_v_list_sint32_sfixed32()->::feature_proto::ListSint32Sfixed32::MergeFrom(from.v_list_sint32_sfixed32());
      break;
    }
    case kVListSint32Sfixed64: {
      mutable_v_list_sint32_sfixed64()->::feature_proto::ListSint32Sfixed64::MergeFrom(from.v_list_sint32_sfixed64());
      break;
    }
    case kVListSint32Bool: {
      mutable_v_list_sint32_bool()->::feature_proto::ListSint32Bool::MergeFrom(from.v_list_sint32_bool());
      break;
    }
    case kVListSint32String: {
      mutable_v_list_sint32_string()->::feature_proto::ListSint32String::MergeFrom(from.v_list_sint32_string());
      break;
    }
    case kVListSint32Bytes: {
      mutable_v_list_sint32_bytes()->::feature_proto::ListSint32Bytes::MergeFrom(from.v_list_sint32_bytes());
      break;
    }
    case kVListSint64Double: {
      mutable_v_list_sint64_double()->::feature_proto::ListSint64Double::MergeFrom(from.v_list_sint64_double());
      break;
    }
    case kVListSint64Float: {
      mutable_v_list_sint64_float()->::feature_proto::ListSint64Float::MergeFrom(from.v_list_sint64_float());
      break;
    }
    case kVListSint64Int32: {
      mutable_v_list_sint64_int32()->::feature_proto::ListSint64Int32::MergeFrom(from.v_list_sint64_int32());
      break;
    }
    case kVListSint64Int64: {
      mutable_v_list_sint64_int64()->::feature_proto::ListSint64Int64::MergeFrom(from.v_list_sint64_int64());
      break;
    }
    case kVListSint64Uint32: {
      mutable_v_list_sint64_uint32()->::feature_proto::ListSint64Uint32::MergeFrom(from.v_list_sint64_uint32());
      break;
    }
    case kVListSint64Uint64: {
      mutable_v_list_sint64_uint64()->::feature_proto::ListSint64Uint64::MergeFrom(from.v_list_sint64_uint64());
      break;
    }
    case kVListSint64Sint32: {
      mutable_v_list_sint64_sint32()->::feature_proto::ListSint64Sint32::MergeFrom(from.v_list_sint64_sint32());
      break;
    }
    case kVListSint64Sint64: {
      mutable_v_list_sint64_sint64()->::feature_proto::ListSint64Sint64::MergeFrom(from.v_list_sint64_sint64());
      break;
    }
    case kVListSint64Fixed32: {
      mutable_v_list_sint64_fixed32()->::feature_proto::ListSint64Fixed32::MergeFrom(from.v_list_sint64_fixed32());
      break;
    }
    case kVListSint64Fixed64: {
      mutable_v_list_sint64_fixed64()->::feature_proto::ListSint64Fixed64::MergeFrom(from.v_list_sint64_fixed64());
      break;
    }
    case kVListSint64Sfixed32: {
      mutable_v_list_sint64_sfixed32()->::feature_proto::ListSint64Sfixed32::MergeFrom(from.v_list_sint64_sfixed32());
      break;
    }
    case kVListSint64Sfixed64: {
      mutable_v_list_sint64_sfixed64()->::feature_proto::ListSint64Sfixed64::MergeFrom(from.v_list_sint64_sfixed64());
      break;
    }
    case kVListSint64Bool: {
      mutable_v_list_sint64_bool()->::feature_proto::ListSint64Bool::MergeFrom(from.v_list_sint64_bool());
      break;
    }
    case kVListSint64String: {
      mutable_v_list_sint64_string()->::feature_proto::ListSint64String::MergeFrom(from.v_list_sint64_string());
      break;
    }
    case kVListSint64Bytes: {
      mutable_v_list_sint64_bytes()->::feature_proto::ListSint64Bytes::MergeFrom(from.v_list_sint64_bytes());
      break;
    }
    case kVListFixed32Double: {
      mutable_v_list_fixed32_double()->::feature_proto::ListFixed32Double::MergeFrom(from.v_list_fixed32_double());
      break;
    }
    case kVListFixed32Float: {
      mutable_v_list_fixed32_float()->::feature_proto::ListFixed32Float::MergeFrom(from.v_list_fixed32_float());
      break;
    }
    case kVListFixed32Int32: {
      mutable_v_list_fixed32_int32()->::feature_proto::ListFixed32Int32::MergeFrom(from.v_list_fixed32_int32());
      break;
    }
    case kVListFixed32Int64: {
      mutable_v_list_fixed32_int64()->::feature_proto::ListFixed32Int64::MergeFrom(from.v_list_fixed32_int64());
      break;
    }
    case kVListFixed32Uint32: {
      mutable_v_list_fixed32_uint32()->::feature_proto::ListFixed32Uint32::MergeFrom(from.v_list_fixed32_uint32());
      break;
    }
    case kVListFixed32Uint64: {
      mutable_v_list_fixed32_uint64()->::feature_proto::ListFixed32Uint64::MergeFrom(from.v_list_fixed32_uint64());
      break;
    }
    case kVListFixed32Sint32: {
      mutable_v_list_fixed32_sint32()->::feature_proto::ListFixed32Sint32::MergeFrom(from.v_list_fixed32_sint32());
      break;
    }
    case kVListFixed32Sint64: {
      mutable_v_list_fixed32_sint64()->::feature_proto::ListFixed32Sint64::MergeFrom(from.v_list_fixed32_sint64());
      break;
    }
    case kVListFixed32Fixed32: {
      mutable_v_list_fixed32_fixed32()->::feature_proto::ListFixed32Fixed32::MergeFrom(from.v_list_fixed32_fixed32());
      break;
    }
    case kVListFixed32Fixed64: {
      mutable_v_list_fixed32_fixed64()->::feature_proto::ListFixed32Fixed64::MergeFrom(from.v_list_fixed32_fixed64());
      break;
    }
    case kVListFixed32Sfixed32: {
      mutable_v_list_fixed32_sfixed32()->::feature_proto::ListFixed32Sfixed32::MergeFrom(from.v_list_fixed32_sfixed32());
      break;
    }
    case kVListFixed32Sfixed64: {
      mutable_v_list_fixed32_sfixed64()->::feature_proto::ListFixed32Sfixed64::MergeFrom(from.v_list_fixed32_sfixed64());
      break;
    }
    case kVListFixed32Bool: {
      mutable_v_list_fixed32_bool()->::feature_proto::ListFixed32Bool::MergeFrom(from.v_list_fixed32_bool());
      break;
    }
    case kVListFixed32String: {
      mutable_v_list_fixed32_string()->::feature_proto::ListFixed32String::MergeFrom(from.v_list_fixed32_string());
      break;
    }
    case kVListFixed32Bytes: {
      mutable_v_list_fixed32_bytes()->::feature_proto::ListFixed32Bytes::MergeFrom(from.v_list_fixed32_bytes());
      break;
    }
    case kVListFixed64Double: {
      mutable_v_list_fixed64_double()->::feature_proto::ListFixed64Double::MergeFrom(from.v_list_fixed64_double());
      break;
    }
    case kVListFixed64Float: {
      mutable_v_list_fixed64_float()->::feature_proto::ListFixed64Float::MergeFrom(from.v_list_fixed64_float());
      break;
    }
    case kVListFixed64Int32: {
      mutable_v_list_fixed64_int32()->::feature_proto::ListFixed64Int32::MergeFrom(from.v_list_fixed64_int32());
      break;
    }
    case kVListFixed64Int64: {
      mutable_v_list_fixed64_int64()->::feature_proto::ListFixed64Int64::MergeFrom(from.v_list_fixed64_int64());
      break;
    }
    case kVListFixed64Uint32: {
      mutable_v_list_fixed64_uint32()->::feature_proto::ListFixed64Uint32::MergeFrom(from.v_list_fixed64_uint32());
      break;
    }
    case kVListFixed64Uint64: {
      mutable_v_list_fixed64_uint64()->::feature_proto::ListFixed64Uint64::MergeFrom(from.v_list_fixed64_uint64());
      break;
    }
    case kVListFixed64Sint32: {
      mutable_v_list_fixed64_sint32()->::feature_proto::ListFixed64Sint32::MergeFrom(from.v_list_fixed64_sint32());
      break;
    }
    case kVListFixed64Sint64: {
      mutable_v_list_fixed64_sint64()->::feature_proto::ListFixed64Sint64::MergeFrom(from.v_list_fixed64_sint64());
      break;
    }
    case kVListFixed64Fixed32: {
      mutable_v_list_fixed64_fixed32()->::feature_proto::ListFixed64Fixed32::MergeFrom(from.v_list_fixed64_fixed32());
      break;
    }
    case kVListFixed64Fixed64: {
      mutable_v_list_fixed64_fixed64()->::feature_proto::ListFixed64Fixed64::MergeFrom(from.v_list_fixed64_fixed64());
      break;
    }
    case kVListFixed64Sfixed32: {
      mutable_v_list_fixed64_sfixed32()->::feature_proto::ListFixed64Sfixed32::MergeFrom(from.v_list_fixed64_sfixed32());
      break;
    }
    case kVListFixed64Sfixed64: {
      mutable_v_list_fixed64_sfixed64()->::feature_proto::ListFixed64Sfixed64::MergeFrom(from.v_list_fixed64_sfixed64());
      break;
    }
    case kVListFixed64Bool: {
      mutable_v_list_fixed64_bool()->::feature_proto::ListFixed64Bool::MergeFrom(from.v_list_fixed64_bool());
      break;
    }
    case kVListFixed64String: {
      mutable_v_list_fixed64_string()->::feature_proto::ListFixed64String::MergeFrom(from.v_list_fixed64_string());
      break;
    }
    case kVListFixed64Bytes: {
      mutable_v_list_fixed64_bytes()->::feature_proto::ListFixed64Bytes::MergeFrom(from.v_list_fixed64_bytes());
      break;
    }
    case kVListSfixed32Double: {
      mutable_v_list_sfixed32_double()->::feature_proto::ListSfixed32Double::MergeFrom(from.v_list_sfixed32_double());
      break;
    }
    case kVListSfixed32Float: {
      mutable_v_list_sfixed32_float()->::feature_proto::ListSfixed32Float::MergeFrom(from.v_list_sfixed32_float());
      break;
    }
    case kVListSfixed32Int32: {
      mutable_v_list_sfixed32_int32()->::feature_proto::ListSfixed32Int32::MergeFrom(from.v_list_sfixed32_int32());
      break;
    }
    case kVListSfixed32Int64: {
      mutable_v_list_sfixed32_int64()->::feature_proto::ListSfixed32Int64::MergeFrom(from.v_list_sfixed32_int64());
      break;
    }
    case kVListSfixed32Uint32: {
      mutable_v_list_sfixed32_uint32()->::feature_proto::ListSfixed32Uint32::MergeFrom(from.v_list_sfixed32_uint32());
      break;
    }
    case kVListSfixed32Uint64: {
      mutable_v_list_sfixed32_uint64()->::feature_proto::ListSfixed32Uint64::MergeFrom(from.v_list_sfixed32_uint64());
      break;
    }
    case kVListSfixed32Sint32: {
      mutable_v_list_sfixed32_sint32()->::feature_proto::ListSfixed32Sint32::MergeFrom(from.v_list_sfixed32_sint32());
      break;
    }
    case kVListSfixed32Sint64: {
      mutable_v_list_sfixed32_sint64()->::feature_proto::ListSfixed32Sint64::MergeFrom(from.v_list_sfixed32_sint64());
      break;
    }
    case kVListSfixed32Fixed32: {
      mutable_v_list_sfixed32_fixed32()->::feature_proto::ListSfixed32Fixed32::MergeFrom(from.v_list_sfixed32_fixed32());
      break;
    }
    case kVListSfixed32Fixed64: {
      mutable_v_list_sfixed32_fixed64()->::feature_proto::ListSfixed32Fixed64::MergeFrom(from.v_list_sfixed32_fixed64());
      break;
    }
    case kVListSfixed32Sfixed32: {
      mutable_v_list_sfixed32_sfixed32()->::feature_proto::ListSfixed32Sfixed32::MergeFrom(from.v_list_sfixed32_sfixed32());
      break;
    }
    case kVListSfixed32Sfixed64: {
      mutable_v_list_sfixed32_sfixed64()->::feature_proto::ListSfixed32Sfixed64::MergeFrom(from.v_list_sfixed32_sfixed64());
      break;
    }
    case kVListSfixed32Bool: {
      mutable_v_list_sfixed32_bool()->::feature_proto::ListSfixed32Bool::MergeFrom(from.v_list_sfixed32_bool());
      break;
    }
    case kVListSfixed32String: {
      mutable_v_list_sfixed32_string()->::feature_proto::ListSfixed32String::MergeFrom(from.v_list_sfixed32_string());
      break;
    }
    case kVListSfixed32Bytes: {
      mutable_v_list_sfixed32_bytes()->::feature_proto::ListSfixed32Bytes::MergeFrom(from.v_list_sfixed32_bytes());
      break;
    }
    case kVListSfixed64Double: {
      mutable_v_list_sfixed64_double()->::feature_proto::ListSfixed64Double::MergeFrom(from.v_list_sfixed64_double());
      break;
    }
    case kVListSfixed64Float: {
      mutable_v_list_sfixed64_float()->::feature_proto::ListSfixed64Float::MergeFrom(from.v_list_sfixed64_float());
      break;
    }
    case kVListSfixed64Int32: {
      mutable_v_list_sfixed64_int32()->::feature_proto::ListSfixed64Int32::MergeFrom(from.v_list_sfixed64_int32());
      break;
    }
    case kVListSfixed64Int64: {
      mutable_v_list_sfixed64_int64()->::feature_proto::ListSfixed64Int64::MergeFrom(from.v_list_sfixed64_int64());
      break;
    }
    case kVListSfixed64Uint32: {
      mutable_v_list_sfixed64_uint32()->::feature_proto::ListSfixed64Uint32::MergeFrom(from.v_list_sfixed64_uint32());
      break;
    }
    case kVListSfixed64Uint64: {
      mutable_v_list_sfixed64_uint64()->::feature_proto::ListSfixed64Uint64::MergeFrom(from.v_list_sfixed64_uint64());
      break;
    }
    case kVListSfixed64Sint32: {
      mutable_v_list_sfixed64_sint32()->::feature_proto::ListSfixed64Sint32::MergeFrom(from.v_list_sfixed64_sint32());
      break;
    }
    case kVListSfixed64Sint64: {
      mutable_v_list_sfixed64_sint64()->::feature_proto::ListSfixed64Sint64::MergeFrom(from.v_list_sfixed64_sint64());
      break;
    }
    case kVListSfixed64Fixed32: {
      mutable_v_list_sfixed64_fixed32()->::feature_proto::ListSfixed64Fixed32::MergeFrom(from.v_list_sfixed64_fixed32());
      break;
    }
    case kVListSfixed64Fixed64: {
      mutable_v_list_sfixed64_fixed64()->::feature_proto::ListSfixed64Fixed64::MergeFrom(from.v_list_sfixed64_fixed64());
      break;
    }
    case kVListSfixed64Sfixed32: {
      mutable_v_list_sfixed64_sfixed32()->::feature_proto::ListSfixed64Sfixed32::MergeFrom(from.v_list_sfixed64_sfixed32());
      break;
    }
    case kVListSfixed64Sfixed64: {
      mutable_v_list_sfixed64_sfixed64()->::feature_proto::ListSfixed64Sfixed64::MergeFrom(from.v_list_sfixed64_sfixed64());
      break;
    }
    case kVListSfixed64Bool: {
      mutable_v_list_sfixed64_bool()->::feature_proto::ListSfixed64Bool::MergeFrom(from.v_list_sfixed64_bool());
      break;
    }
    case kVListSfixed64String: {
      mutable_v_list_sfixed64_string()->::feature_proto::ListSfixed64String::MergeFrom(from.v_list_sfixed64_string());
      break;
    }
    case kVListSfixed64Bytes: {
      mutable_v_list_sfixed64_bytes()->::feature_proto::ListSfixed64Bytes::MergeFrom(from.v_list_sfixed64_bytes());
      break;
    }
    case kVListDoubleDouble: {
      mutable_v_list_double_double()->::feature_proto::ListDoubleDouble::MergeFrom(from.v_list_double_double());
      break;
    }
    case kVListDoubleFloat: {
      mutable_v_list_double_float()->::feature_proto::ListDoubleFloat::MergeFrom(from.v_list_double_float());
      break;
    }
    case kVListDoubleInt32: {
      mutable_v_list_double_int32()->::feature_proto::ListDoubleInt32::MergeFrom(from.v_list_double_int32());
      break;
    }
    case kVListDoubleInt64: {
      mutable_v_list_double_int64()->::feature_proto::ListDoubleInt64::MergeFrom(from.v_list_double_int64());
      break;
    }
    case kVListDoubleUint32: {
      mutable_v_list_double_uint32()->::feature_proto::ListDoubleUint32::MergeFrom(from.v_list_double_uint32());
      break;
    }
    case kVListDoubleUint64: {
      mutable_v_list_double_uint64()->::feature_proto::ListDoubleUint64::MergeFrom(from.v_list_double_uint64());
      break;
    }
    case kVListDoubleSint32: {
      mutable_v_list_double_sint32()->::feature_proto::ListDoubleSint32::MergeFrom(from.v_list_double_sint32());
      break;
    }
    case kVListDoubleSint64: {
      mutable_v_list_double_sint64()->::feature_proto::ListDoubleSint64::MergeFrom(from.v_list_double_sint64());
      break;
    }
    case kVListDoubleFixed32: {
      mutable_v_list_double_fixed32()->::feature_proto::ListDoubleFixed32::MergeFrom(from.v_list_double_fixed32());
      break;
    }
    case kVListDoubleFixed64: {
      mutable_v_list_double_fixed64()->::feature_proto::ListDoubleFixed64::MergeFrom(from.v_list_double_fixed64());
      break;
    }
    case kVListDoubleSfixed32: {
      mutable_v_list_double_sfixed32()->::feature_proto::ListDoubleSfixed32::MergeFrom(from.v_list_double_sfixed32());
      break;
    }
    case kVListDoubleSfixed64: {
      mutable_v_list_double_sfixed64()->::feature_proto::ListDoubleSfixed64::MergeFrom(from.v_list_double_sfixed64());
      break;
    }
    case kVListDoubleBool: {
      mutable_v_list_double_bool()->::feature_proto::ListDoubleBool::MergeFrom(from.v_list_double_bool());
      break;
    }
    case kVListDoubleString: {
      mutable_v_list_double_string()->::feature_proto::ListDoubleString::MergeFrom(from.v_list_double_string());
      break;
    }
    case kVListDoubleBytes: {
      mutable_v_list_double_bytes()->::feature_proto::ListDoubleBytes::MergeFrom(from.v_list_double_bytes());
      break;
    }
    case kVListFloatDouble: {
      mutable_v_list_float_double()->::feature_proto::ListFloatDouble::MergeFrom(from.v_list_float_double());
      break;
    }
    case kVListFloatFloat: {
      mutable_v_list_float_float()->::feature_proto::ListFloatFloat::MergeFrom(from.v_list_float_float());
      break;
    }
    case kVListFloatInt32: {
      mutable_v_list_float_int32()->::feature_proto::ListFloatInt32::MergeFrom(from.v_list_float_int32());
      break;
    }
    case kVListFloatInt64: {
      mutable_v_list_float_int64()->::feature_proto::ListFloatInt64::MergeFrom(from.v_list_float_int64());
      break;
    }
    case kVListFloatUint32: {
      mutable_v_list_float_uint32()->::feature_proto::ListFloatUint32::MergeFrom(from.v_list_float_uint32());
      break;
    }
    case kVListFloatUint64: {
      mutable_v_list_float_uint64()->::feature_proto::ListFloatUint64::MergeFrom(from.v_list_float_uint64());
      break;
    }
    case kVListFloatSint32: {
      mutable_v_list_float_sint32()->::feature_proto::ListFloatSint32::MergeFrom(from.v_list_float_sint32());
      break;
    }
    case kVListFloatSint64: {
      mutable_v_list_float_sint64()->::feature_proto::ListFloatSint64::MergeFrom(from.v_list_float_sint64());
      break;
    }
    case kVListFloatFixed32: {
      mutable_v_list_float_fixed32()->::feature_proto::ListFloatFixed32::MergeFrom(from.v_list_float_fixed32());
      break;
    }
    case kVListFloatFixed64: {
      mutable_v_list_float_fixed64()->::feature_proto::ListFloatFixed64::MergeFrom(from.v_list_float_fixed64());
      break;
    }
    case kVListFloatSfixed32: {
      mutable_v_list_float_sfixed32()->::feature_proto::ListFloatSfixed32::MergeFrom(from.v_list_float_sfixed32());
      break;
    }
    case kVListFloatSfixed64: {
      mutable_v_list_float_sfixed64()->::feature_proto::ListFloatSfixed64::MergeFrom(from.v_list_float_sfixed64());
      break;
    }
    case kVListFloatBool: {
      mutable_v_list_float_bool()->::feature_proto::ListFloatBool::MergeFrom(from.v_list_float_bool());
      break;
    }
    case kVListFloatString: {
      mutable_v_list_float_string()->::feature_proto::ListFloatString::MergeFrom(from.v_list_float_string());
      break;
    }
    case kVListFloatBytes: {
      mutable_v_list_float_bytes()->::feature_proto::ListFloatBytes::MergeFrom(from.v_list_float_bytes());
      break;
    }
    case kVListBoolDouble: {
      mutable_v_list_bool_double()->::feature_proto::ListBoolDouble::MergeFrom(from.v_list_bool_double());
      break;
    }
    case kVListBoolFloat: {
      mutable_v_list_bool_float()->::feature_proto::ListBoolFloat::MergeFrom(from.v_list_bool_float());
      break;
    }
    case kVListBoolInt32: {
      mutable_v_list_bool_int32()->::feature_proto::ListBoolInt32::MergeFrom(from.v_list_bool_int32());
      break;
    }
    case kVListBoolInt64: {
      mutable_v_list_bool_int64()->::feature_proto::ListBoolInt64::MergeFrom(from.v_list_bool_int64());
      break;
    }
    case kVListBoolUint32: {
      mutable_v_list_bool_uint32()->::feature_proto::ListBoolUint32::MergeFrom(from.v_list_bool_uint32());
      break;
    }
    case kVListBoolUint64: {
      mutable_v_list_bool_uint64()->::feature_proto::ListBoolUint64::MergeFrom(from.v_list_bool_uint64());
      break;
    }
    case kVListBoolSint32: {
      mutable_v_list_bool_sint32()->::feature_proto::ListBoolSint32::MergeFrom(from.v_list_bool_sint32());
      break;
    }
    case kVListBoolSint64: {
      mutable_v_list_bool_sint64()->::feature_proto::ListBoolSint64::MergeFrom(from.v_list_bool_sint64());
      break;
    }
    case kVListBoolFixed32: {
      mutable_v_list_bool_fixed32()->::feature_proto::ListBoolFixed32::MergeFrom(from.v_list_bool_fixed32());
      break;
    }
    case kVListBoolFixed64: {
      mutable_v_list_bool_fixed64()->::feature_proto::ListBoolFixed64::MergeFrom(from.v_list_bool_fixed64());
      break;
    }
    case kVListBoolSfixed32: {
      mutable_v_list_bool_sfixed32()->::feature_proto::ListBoolSfixed32::MergeFrom(from.v_list_bool_sfixed32());
      break;
    }
    case kVListBoolSfixed64: {
      mutable_v_list_bool_sfixed64()->::feature_proto::ListBoolSfixed64::MergeFrom(from.v_list_bool_sfixed64());
      break;
    }
    case kVListBoolBool: {
      mutable_v_list_bool_bool()->::feature_proto::ListBoolBool::MergeFrom(from.v_list_bool_bool());
      break;
    }
    case kVListBoolString: {
      mutable_v_list_bool_string()->::feature_proto::ListBoolString::MergeFrom(from.v_list_bool_string());
      break;
    }
    case kVListBoolBytes: {
      mutable_v_list_bool_bytes()->::feature_proto::ListBoolBytes::MergeFrom(from.v_list_bool_bytes());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:feature_proto.Feature)
}

void Feature::SharedCtor() {
  clear_has_kind();
}

Feature::~Feature() {
  // @@protoc_insertion_point(destructor:feature_proto.Feature)
  SharedDtor();
}

void Feature::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void Feature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Feature::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Feature& Feature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_Feature.base);
  return *internal_default_instance();
}


void Feature::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:feature_proto.Feature)
  switch (kind_case()) {
    case kVDouble: {
      // No need to clear
      break;
    }
    case kVFloat: {
      // No need to clear
      break;
    }
    case kVInt32: {
      // No need to clear
      break;
    }
    case kVInt64: {
      // No need to clear
      break;
    }
    case kVUint32: {
      // No need to clear
      break;
    }
    case kVUint64: {
      // No need to clear
      break;
    }
    case kVSint32: {
      // No need to clear
      break;
    }
    case kVSint64: {
      // No need to clear
      break;
    }
    case kVFixed32: {
      // No need to clear
      break;
    }
    case kVFixed64: {
      // No need to clear
      break;
    }
    case kVSfixed32: {
      // No need to clear
      break;
    }
    case kVSfixed64: {
      // No need to clear
      break;
    }
    case kVBool: {
      // No need to clear
      break;
    }
    case kVString: {
      kind_.v_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVBytes: {
      kind_.v_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVListDouble: {
      delete kind_.v_list_double_;
      break;
    }
    case kVListFloat: {
      delete kind_.v_list_float_;
      break;
    }
    case kVListInt32: {
      delete kind_.v_list_int32_;
      break;
    }
    case kVListInt64: {
      delete kind_.v_list_int64_;
      break;
    }
    case kVListUint32: {
      delete kind_.v_list_uint32_;
      break;
    }
    case kVListUint64: {
      delete kind_.v_list_uint64_;
      break;
    }
    case kVListSint32: {
      delete kind_.v_list_sint32_;
      break;
    }
    case kVListSint64: {
      delete kind_.v_list_sint64_;
      break;
    }
    case kVListFixed32: {
      delete kind_.v_list_fixed32_;
      break;
    }
    case kVListFixed64: {
      delete kind_.v_list_fixed64_;
      break;
    }
    case kVListSfixed32: {
      delete kind_.v_list_sfixed32_;
      break;
    }
    case kVListSfixed64: {
      delete kind_.v_list_sfixed64_;
      break;
    }
    case kVListBool: {
      delete kind_.v_list_bool_;
      break;
    }
    case kVListString: {
      delete kind_.v_list_string_;
      break;
    }
    case kVListBytes: {
      delete kind_.v_list_bytes_;
      break;
    }
    case kVListStringDouble: {
      delete kind_.v_list_string_double_;
      break;
    }
    case kVListStringFloat: {
      delete kind_.v_list_string_float_;
      break;
    }
    case kVListStringInt32: {
      delete kind_.v_list_string_int32_;
      break;
    }
    case kVListStringInt64: {
      delete kind_.v_list_string_int64_;
      break;
    }
    case kVListStringUint32: {
      delete kind_.v_list_string_uint32_;
      break;
    }
    case kVListStringUint64: {
      delete kind_.v_list_string_uint64_;
      break;
    }
    case kVListStringSint32: {
      delete kind_.v_list_string_sint32_;
      break;
    }
    case kVListStringSint64: {
      delete kind_.v_list_string_sint64_;
      break;
    }
    case kVListStringFixed32: {
      delete kind_.v_list_string_fixed32_;
      break;
    }
    case kVListStringFixed64: {
      delete kind_.v_list_string_fixed64_;
      break;
    }
    case kVListStringSfixed32: {
      delete kind_.v_list_string_sfixed32_;
      break;
    }
    case kVListStringSfixed64: {
      delete kind_.v_list_string_sfixed64_;
      break;
    }
    case kVListStringBool: {
      delete kind_.v_list_string_bool_;
      break;
    }
    case kVListStringString: {
      delete kind_.v_list_string_string_;
      break;
    }
    case kVListStringBytes: {
      delete kind_.v_list_string_bytes_;
      break;
    }
    case kVListBytesDouble: {
      delete kind_.v_list_bytes_double_;
      break;
    }
    case kVListBytesFloat: {
      delete kind_.v_list_bytes_float_;
      break;
    }
    case kVListBytesInt32: {
      delete kind_.v_list_bytes_int32_;
      break;
    }
    case kVListBytesInt64: {
      delete kind_.v_list_bytes_int64_;
      break;
    }
    case kVListBytesUint32: {
      delete kind_.v_list_bytes_uint32_;
      break;
    }
    case kVListBytesUint64: {
      delete kind_.v_list_bytes_uint64_;
      break;
    }
    case kVListBytesSint32: {
      delete kind_.v_list_bytes_sint32_;
      break;
    }
    case kVListBytesSint64: {
      delete kind_.v_list_bytes_sint64_;
      break;
    }
    case kVListBytesFixed32: {
      delete kind_.v_list_bytes_fixed32_;
      break;
    }
    case kVListBytesFixed64: {
      delete kind_.v_list_bytes_fixed64_;
      break;
    }
    case kVListBytesSfixed32: {
      delete kind_.v_list_bytes_sfixed32_;
      break;
    }
    case kVListBytesSfixed64: {
      delete kind_.v_list_bytes_sfixed64_;
      break;
    }
    case kVListBytesBool: {
      delete kind_.v_list_bytes_bool_;
      break;
    }
    case kVListBytesString: {
      delete kind_.v_list_bytes_string_;
      break;
    }
    case kVListBytesBytes: {
      delete kind_.v_list_bytes_bytes_;
      break;
    }
    case kVListInt32Double: {
      delete kind_.v_list_int32_double_;
      break;
    }
    case kVListInt32Float: {
      delete kind_.v_list_int32_float_;
      break;
    }
    case kVListInt32Int32: {
      delete kind_.v_list_int32_int32_;
      break;
    }
    case kVListInt32Int64: {
      delete kind_.v_list_int32_int64_;
      break;
    }
    case kVListInt32Uint32: {
      delete kind_.v_list_int32_uint32_;
      break;
    }
    case kVListInt32Uint64: {
      delete kind_.v_list_int32_uint64_;
      break;
    }
    case kVListInt32Sint32: {
      delete kind_.v_list_int32_sint32_;
      break;
    }
    case kVListInt32Sint64: {
      delete kind_.v_list_int32_sint64_;
      break;
    }
    case kVListInt32Fixed32: {
      delete kind_.v_list_int32_fixed32_;
      break;
    }
    case kVListInt32Fixed64: {
      delete kind_.v_list_int32_fixed64_;
      break;
    }
    case kVListInt32Sfixed32: {
      delete kind_.v_list_int32_sfixed32_;
      break;
    }
    case kVListInt32Sfixed64: {
      delete kind_.v_list_int32_sfixed64_;
      break;
    }
    case kVListInt32Bool: {
      delete kind_.v_list_int32_bool_;
      break;
    }
    case kVListInt32String: {
      delete kind_.v_list_int32_string_;
      break;
    }
    case kVListInt32Bytes: {
      delete kind_.v_list_int32_bytes_;
      break;
    }
    case kVListInt64Double: {
      delete kind_.v_list_int64_double_;
      break;
    }
    case kVListInt64Float: {
      delete kind_.v_list_int64_float_;
      break;
    }
    case kVListInt64Int32: {
      delete kind_.v_list_int64_int32_;
      break;
    }
    case kVListInt64Int64: {
      delete kind_.v_list_int64_int64_;
      break;
    }
    case kVListInt64Uint32: {
      delete kind_.v_list_int64_uint32_;
      break;
    }
    case kVListInt64Uint64: {
      delete kind_.v_list_int64_uint64_;
      break;
    }
    case kVListInt64Sint32: {
      delete kind_.v_list_int64_sint32_;
      break;
    }
    case kVListInt64Sint64: {
      delete kind_.v_list_int64_sint64_;
      break;
    }
    case kVListInt64Fixed32: {
      delete kind_.v_list_int64_fixed32_;
      break;
    }
    case kVListInt64Fixed64: {
      delete kind_.v_list_int64_fixed64_;
      break;
    }
    case kVListInt64Sfixed32: {
      delete kind_.v_list_int64_sfixed32_;
      break;
    }
    case kVListInt64Sfixed64: {
      delete kind_.v_list_int64_sfixed64_;
      break;
    }
    case kVListInt64Bool: {
      delete kind_.v_list_int64_bool_;
      break;
    }
    case kVListInt64String: {
      delete kind_.v_list_int64_string_;
      break;
    }
    case kVListInt64Bytes: {
      delete kind_.v_list_int64_bytes_;
      break;
    }
    case kVListUint32Double: {
      delete kind_.v_list_uint32_double_;
      break;
    }
    case kVListUint32Float: {
      delete kind_.v_list_uint32_float_;
      break;
    }
    case kVListUint32Int32: {
      delete kind_.v_list_uint32_int32_;
      break;
    }
    case kVListUint32Int64: {
      delete kind_.v_list_uint32_int64_;
      break;
    }
    case kVListUint32Uint32: {
      delete kind_.v_list_uint32_uint32_;
      break;
    }
    case kVListUint32Uint64: {
      delete kind_.v_list_uint32_uint64_;
      break;
    }
    case kVListUint32Sint32: {
      delete kind_.v_list_uint32_sint32_;
      break;
    }
    case kVListUint32Sint64: {
      delete kind_.v_list_uint32_sint64_;
      break;
    }
    case kVListUint32Fixed32: {
      delete kind_.v_list_uint32_fixed32_;
      break;
    }
    case kVListUint32Fixed64: {
      delete kind_.v_list_uint32_fixed64_;
      break;
    }
    case kVListUint32Sfixed32: {
      delete kind_.v_list_uint32_sfixed32_;
      break;
    }
    case kVListUint32Sfixed64: {
      delete kind_.v_list_uint32_sfixed64_;
      break;
    }
    case kVListUint32Bool: {
      delete kind_.v_list_uint32_bool_;
      break;
    }
    case kVListUint32String: {
      delete kind_.v_list_uint32_string_;
      break;
    }
    case kVListUint32Bytes: {
      delete kind_.v_list_uint32_bytes_;
      break;
    }
    case kVListUint64Double: {
      delete kind_.v_list_uint64_double_;
      break;
    }
    case kVListUint64Float: {
      delete kind_.v_list_uint64_float_;
      break;
    }
    case kVListUint64Int32: {
      delete kind_.v_list_uint64_int32_;
      break;
    }
    case kVListUint64Int64: {
      delete kind_.v_list_uint64_int64_;
      break;
    }
    case kVListUint64Uint32: {
      delete kind_.v_list_uint64_uint32_;
      break;
    }
    case kVListUint64Uint64: {
      delete kind_.v_list_uint64_uint64_;
      break;
    }
    case kVListUint64Sint32: {
      delete kind_.v_list_uint64_sint32_;
      break;
    }
    case kVListUint64Sint64: {
      delete kind_.v_list_uint64_sint64_;
      break;
    }
    case kVListUint64Fixed32: {
      delete kind_.v_list_uint64_fixed32_;
      break;
    }
    case kVListUint64Fixed64: {
      delete kind_.v_list_uint64_fixed64_;
      break;
    }
    case kVListUint64Sfixed32: {
      delete kind_.v_list_uint64_sfixed32_;
      break;
    }
    case kVListUint64Sfixed64: {
      delete kind_.v_list_uint64_sfixed64_;
      break;
    }
    case kVListUint64Bool: {
      delete kind_.v_list_uint64_bool_;
      break;
    }
    case kVListUint64String: {
      delete kind_.v_list_uint64_string_;
      break;
    }
    case kVListUint64Bytes: {
      delete kind_.v_list_uint64_bytes_;
      break;
    }
    case kVListSint32Double: {
      delete kind_.v_list_sint32_double_;
      break;
    }
    case kVListSint32Float: {
      delete kind_.v_list_sint32_float_;
      break;
    }
    case kVListSint32Int32: {
      delete kind_.v_list_sint32_int32_;
      break;
    }
    case kVListSint32Int64: {
      delete kind_.v_list_sint32_int64_;
      break;
    }
    case kVListSint32Uint32: {
      delete kind_.v_list_sint32_uint32_;
      break;
    }
    case kVListSint32Uint64: {
      delete kind_.v_list_sint32_uint64_;
      break;
    }
    case kVListSint32Sint32: {
      delete kind_.v_list_sint32_sint32_;
      break;
    }
    case kVListSint32Sint64: {
      delete kind_.v_list_sint32_sint64_;
      break;
    }
    case kVListSint32Fixed32: {
      delete kind_.v_list_sint32_fixed32_;
      break;
    }
    case kVListSint32Fixed64: {
      delete kind_.v_list_sint32_fixed64_;
      break;
    }
    case kVListSint32Sfixed32: {
      delete kind_.v_list_sint32_sfixed32_;
      break;
    }
    case kVListSint32Sfixed64: {
      delete kind_.v_list_sint32_sfixed64_;
      break;
    }
    case kVListSint32Bool: {
      delete kind_.v_list_sint32_bool_;
      break;
    }
    case kVListSint32String: {
      delete kind_.v_list_sint32_string_;
      break;
    }
    case kVListSint32Bytes: {
      delete kind_.v_list_sint32_bytes_;
      break;
    }
    case kVListSint64Double: {
      delete kind_.v_list_sint64_double_;
      break;
    }
    case kVListSint64Float: {
      delete kind_.v_list_sint64_float_;
      break;
    }
    case kVListSint64Int32: {
      delete kind_.v_list_sint64_int32_;
      break;
    }
    case kVListSint64Int64: {
      delete kind_.v_list_sint64_int64_;
      break;
    }
    case kVListSint64Uint32: {
      delete kind_.v_list_sint64_uint32_;
      break;
    }
    case kVListSint64Uint64: {
      delete kind_.v_list_sint64_uint64_;
      break;
    }
    case kVListSint64Sint32: {
      delete kind_.v_list_sint64_sint32_;
      break;
    }
    case kVListSint64Sint64: {
      delete kind_.v_list_sint64_sint64_;
      break;
    }
    case kVListSint64Fixed32: {
      delete kind_.v_list_sint64_fixed32_;
      break;
    }
    case kVListSint64Fixed64: {
      delete kind_.v_list_sint64_fixed64_;
      break;
    }
    case kVListSint64Sfixed32: {
      delete kind_.v_list_sint64_sfixed32_;
      break;
    }
    case kVListSint64Sfixed64: {
      delete kind_.v_list_sint64_sfixed64_;
      break;
    }
    case kVListSint64Bool: {
      delete kind_.v_list_sint64_bool_;
      break;
    }
    case kVListSint64String: {
      delete kind_.v_list_sint64_string_;
      break;
    }
    case kVListSint64Bytes: {
      delete kind_.v_list_sint64_bytes_;
      break;
    }
    case kVListFixed32Double: {
      delete kind_.v_list_fixed32_double_;
      break;
    }
    case kVListFixed32Float: {
      delete kind_.v_list_fixed32_float_;
      break;
    }
    case kVListFixed32Int32: {
      delete kind_.v_list_fixed32_int32_;
      break;
    }
    case kVListFixed32Int64: {
      delete kind_.v_list_fixed32_int64_;
      break;
    }
    case kVListFixed32Uint32: {
      delete kind_.v_list_fixed32_uint32_;
      break;
    }
    case kVListFixed32Uint64: {
      delete kind_.v_list_fixed32_uint64_;
      break;
    }
    case kVListFixed32Sint32: {
      delete kind_.v_list_fixed32_sint32_;
      break;
    }
    case kVListFixed32Sint64: {
      delete kind_.v_list_fixed32_sint64_;
      break;
    }
    case kVListFixed32Fixed32: {
      delete kind_.v_list_fixed32_fixed32_;
      break;
    }
    case kVListFixed32Fixed64: {
      delete kind_.v_list_fixed32_fixed64_;
      break;
    }
    case kVListFixed32Sfixed32: {
      delete kind_.v_list_fixed32_sfixed32_;
      break;
    }
    case kVListFixed32Sfixed64: {
      delete kind_.v_list_fixed32_sfixed64_;
      break;
    }
    case kVListFixed32Bool: {
      delete kind_.v_list_fixed32_bool_;
      break;
    }
    case kVListFixed32String: {
      delete kind_.v_list_fixed32_string_;
      break;
    }
    case kVListFixed32Bytes: {
      delete kind_.v_list_fixed32_bytes_;
      break;
    }
    case kVListFixed64Double: {
      delete kind_.v_list_fixed64_double_;
      break;
    }
    case kVListFixed64Float: {
      delete kind_.v_list_fixed64_float_;
      break;
    }
    case kVListFixed64Int32: {
      delete kind_.v_list_fixed64_int32_;
      break;
    }
    case kVListFixed64Int64: {
      delete kind_.v_list_fixed64_int64_;
      break;
    }
    case kVListFixed64Uint32: {
      delete kind_.v_list_fixed64_uint32_;
      break;
    }
    case kVListFixed64Uint64: {
      delete kind_.v_list_fixed64_uint64_;
      break;
    }
    case kVListFixed64Sint32: {
      delete kind_.v_list_fixed64_sint32_;
      break;
    }
    case kVListFixed64Sint64: {
      delete kind_.v_list_fixed64_sint64_;
      break;
    }
    case kVListFixed64Fixed32: {
      delete kind_.v_list_fixed64_fixed32_;
      break;
    }
    case kVListFixed64Fixed64: {
      delete kind_.v_list_fixed64_fixed64_;
      break;
    }
    case kVListFixed64Sfixed32: {
      delete kind_.v_list_fixed64_sfixed32_;
      break;
    }
    case kVListFixed64Sfixed64: {
      delete kind_.v_list_fixed64_sfixed64_;
      break;
    }
    case kVListFixed64Bool: {
      delete kind_.v_list_fixed64_bool_;
      break;
    }
    case kVListFixed64String: {
      delete kind_.v_list_fixed64_string_;
      break;
    }
    case kVListFixed64Bytes: {
      delete kind_.v_list_fixed64_bytes_;
      break;
    }
    case kVListSfixed32Double: {
      delete kind_.v_list_sfixed32_double_;
      break;
    }
    case kVListSfixed32Float: {
      delete kind_.v_list_sfixed32_float_;
      break;
    }
    case kVListSfixed32Int32: {
      delete kind_.v_list_sfixed32_int32_;
      break;
    }
    case kVListSfixed32Int64: {
      delete kind_.v_list_sfixed32_int64_;
      break;
    }
    case kVListSfixed32Uint32: {
      delete kind_.v_list_sfixed32_uint32_;
      break;
    }
    case kVListSfixed32Uint64: {
      delete kind_.v_list_sfixed32_uint64_;
      break;
    }
    case kVListSfixed32Sint32: {
      delete kind_.v_list_sfixed32_sint32_;
      break;
    }
    case kVListSfixed32Sint64: {
      delete kind_.v_list_sfixed32_sint64_;
      break;
    }
    case kVListSfixed32Fixed32: {
      delete kind_.v_list_sfixed32_fixed32_;
      break;
    }
    case kVListSfixed32Fixed64: {
      delete kind_.v_list_sfixed32_fixed64_;
      break;
    }
    case kVListSfixed32Sfixed32: {
      delete kind_.v_list_sfixed32_sfixed32_;
      break;
    }
    case kVListSfixed32Sfixed64: {
      delete kind_.v_list_sfixed32_sfixed64_;
      break;
    }
    case kVListSfixed32Bool: {
      delete kind_.v_list_sfixed32_bool_;
      break;
    }
    case kVListSfixed32String: {
      delete kind_.v_list_sfixed32_string_;
      break;
    }
    case kVListSfixed32Bytes: {
      delete kind_.v_list_sfixed32_bytes_;
      break;
    }
    case kVListSfixed64Double: {
      delete kind_.v_list_sfixed64_double_;
      break;
    }
    case kVListSfixed64Float: {
      delete kind_.v_list_sfixed64_float_;
      break;
    }
    case kVListSfixed64Int32: {
      delete kind_.v_list_sfixed64_int32_;
      break;
    }
    case kVListSfixed64Int64: {
      delete kind_.v_list_sfixed64_int64_;
      break;
    }
    case kVListSfixed64Uint32: {
      delete kind_.v_list_sfixed64_uint32_;
      break;
    }
    case kVListSfixed64Uint64: {
      delete kind_.v_list_sfixed64_uint64_;
      break;
    }
    case kVListSfixed64Sint32: {
      delete kind_.v_list_sfixed64_sint32_;
      break;
    }
    case kVListSfixed64Sint64: {
      delete kind_.v_list_sfixed64_sint64_;
      break;
    }
    case kVListSfixed64Fixed32: {
      delete kind_.v_list_sfixed64_fixed32_;
      break;
    }
    case kVListSfixed64Fixed64: {
      delete kind_.v_list_sfixed64_fixed64_;
      break;
    }
    case kVListSfixed64Sfixed32: {
      delete kind_.v_list_sfixed64_sfixed32_;
      break;
    }
    case kVListSfixed64Sfixed64: {
      delete kind_.v_list_sfixed64_sfixed64_;
      break;
    }
    case kVListSfixed64Bool: {
      delete kind_.v_list_sfixed64_bool_;
      break;
    }
    case kVListSfixed64String: {
      delete kind_.v_list_sfixed64_string_;
      break;
    }
    case kVListSfixed64Bytes: {
      delete kind_.v_list_sfixed64_bytes_;
      break;
    }
    case kVListDoubleDouble: {
      delete kind_.v_list_double_double_;
      break;
    }
    case kVListDoubleFloat: {
      delete kind_.v_list_double_float_;
      break;
    }
    case kVListDoubleInt32: {
      delete kind_.v_list_double_int32_;
      break;
    }
    case kVListDoubleInt64: {
      delete kind_.v_list_double_int64_;
      break;
    }
    case kVListDoubleUint32: {
      delete kind_.v_list_double_uint32_;
      break;
    }
    case kVListDoubleUint64: {
      delete kind_.v_list_double_uint64_;
      break;
    }
    case kVListDoubleSint32: {
      delete kind_.v_list_double_sint32_;
      break;
    }
    case kVListDoubleSint64: {
      delete kind_.v_list_double_sint64_;
      break;
    }
    case kVListDoubleFixed32: {
      delete kind_.v_list_double_fixed32_;
      break;
    }
    case kVListDoubleFixed64: {
      delete kind_.v_list_double_fixed64_;
      break;
    }
    case kVListDoubleSfixed32: {
      delete kind_.v_list_double_sfixed32_;
      break;
    }
    case kVListDoubleSfixed64: {
      delete kind_.v_list_double_sfixed64_;
      break;
    }
    case kVListDoubleBool: {
      delete kind_.v_list_double_bool_;
      break;
    }
    case kVListDoubleString: {
      delete kind_.v_list_double_string_;
      break;
    }
    case kVListDoubleBytes: {
      delete kind_.v_list_double_bytes_;
      break;
    }
    case kVListFloatDouble: {
      delete kind_.v_list_float_double_;
      break;
    }
    case kVListFloatFloat: {
      delete kind_.v_list_float_float_;
      break;
    }
    case kVListFloatInt32: {
      delete kind_.v_list_float_int32_;
      break;
    }
    case kVListFloatInt64: {
      delete kind_.v_list_float_int64_;
      break;
    }
    case kVListFloatUint32: {
      delete kind_.v_list_float_uint32_;
      break;
    }
    case kVListFloatUint64: {
      delete kind_.v_list_float_uint64_;
      break;
    }
    case kVListFloatSint32: {
      delete kind_.v_list_float_sint32_;
      break;
    }
    case kVListFloatSint64: {
      delete kind_.v_list_float_sint64_;
      break;
    }
    case kVListFloatFixed32: {
      delete kind_.v_list_float_fixed32_;
      break;
    }
    case kVListFloatFixed64: {
      delete kind_.v_list_float_fixed64_;
      break;
    }
    case kVListFloatSfixed32: {
      delete kind_.v_list_float_sfixed32_;
      break;
    }
    case kVListFloatSfixed64: {
      delete kind_.v_list_float_sfixed64_;
      break;
    }
    case kVListFloatBool: {
      delete kind_.v_list_float_bool_;
      break;
    }
    case kVListFloatString: {
      delete kind_.v_list_float_string_;
      break;
    }
    case kVListFloatBytes: {
      delete kind_.v_list_float_bytes_;
      break;
    }
    case kVListBoolDouble: {
      delete kind_.v_list_bool_double_;
      break;
    }
    case kVListBoolFloat: {
      delete kind_.v_list_bool_float_;
      break;
    }
    case kVListBoolInt32: {
      delete kind_.v_list_bool_int32_;
      break;
    }
    case kVListBoolInt64: {
      delete kind_.v_list_bool_int64_;
      break;
    }
    case kVListBoolUint32: {
      delete kind_.v_list_bool_uint32_;
      break;
    }
    case kVListBoolUint64: {
      delete kind_.v_list_bool_uint64_;
      break;
    }
    case kVListBoolSint32: {
      delete kind_.v_list_bool_sint32_;
      break;
    }
    case kVListBoolSint64: {
      delete kind_.v_list_bool_sint64_;
      break;
    }
    case kVListBoolFixed32: {
      delete kind_.v_list_bool_fixed32_;
      break;
    }
    case kVListBoolFixed64: {
      delete kind_.v_list_bool_fixed64_;
      break;
    }
    case kVListBoolSfixed32: {
      delete kind_.v_list_bool_sfixed32_;
      break;
    }
    case kVListBoolSfixed64: {
      delete kind_.v_list_bool_sfixed64_;
      break;
    }
    case kVListBoolBool: {
      delete kind_.v_list_bool_bool_;
      break;
    }
    case kVListBoolString: {
      delete kind_.v_list_bool_string_;
      break;
    }
    case kVListBoolBytes: {
      delete kind_.v_list_bool_bytes_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear();
}

bool Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.Feature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double v_double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kind_.v_double_)));
          set_has_v_double();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float v_float = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kind_.v_float_)));
          set_has_v_float();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 v_int32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_.v_int32_)));
          set_has_v_int32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 v_int64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &kind_.v_int64_)));
          set_has_v_int64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 v_uint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_.v_uint32_)));
          set_has_v_uint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 v_uint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &kind_.v_uint64_)));
          set_has_v_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 v_sint32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &kind_.v_sint32_)));
          set_has_v_sint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 v_sint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &kind_.v_sint64_)));
          set_has_v_sint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 v_fixed32 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &kind_.v_fixed32_)));
          set_has_v_fixed32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 v_fixed64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &kind_.v_fixed64_)));
          set_has_v_fixed64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 v_sfixed32 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &kind_.v_sfixed32_)));
          set_has_v_sfixed32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 v_sfixed64 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &kind_.v_sfixed64_)));
          set_has_v_sfixed64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool v_bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &kind_.v_bool_)));
          set_has_v_bool();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string v_string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_v_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->v_string().data(), static_cast<int>(this->v_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "feature_proto.Feature.v_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes v_bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDouble v_list_double = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloat v_list_float = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32 v_list_int32 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64 v_list_int64 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32 v_list_uint32 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64 v_list_uint64 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32 v_list_sint32 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64 v_list_sint64 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32 v_list_fixed32 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64 v_list_fixed64 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBool v_list_bool = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListString v_list_string = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytes v_list_bytes = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringDouble v_list_string_double = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringFloat v_list_string_float = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringInt32 v_list_string_int32 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringInt64 v_list_string_int64 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringBool v_list_string_bool = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringString v_list_string_string = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListStringBytes v_list_string_bytes = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_string_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesDouble v_list_bytes_double = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesFloat v_list_bytes_float = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesBool v_list_bytes_bool = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesString v_list_bytes_string = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bytes_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Double v_list_int32_double = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Float v_list_int32_float = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Bool v_list_int32_bool = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32String v_list_int32_string = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int32_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Double v_list_int64_double = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Float v_list_int64_float = 77;
      case 77: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
      case 78: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
      case 79: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
      case 84: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
      case 85: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
      case 86: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
      case 87: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Bool v_list_int64_bool = 88;
      case 88: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64String v_list_int64_string = 89;
      case 89: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_int64_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Double v_list_uint32_double = 91;
      case 91: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Float v_list_uint32_float = 92;
      case 92: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
      case 93: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
      case 94: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
      case 95: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
      case 96: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
      case 97: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
      case 98: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32String v_list_uint32_string = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint32_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Double v_list_uint64_double = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Float v_list_uint64_float = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
      case 108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
      case 109: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
      case 112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
      case 113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
      case 114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
      case 115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
      case 116: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
      case 117: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
      case 118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64String v_list_uint64_string = 119;
      case 119: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
      case 120: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_uint64_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Double v_list_sint32_double = 121;
      case 121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Float v_list_sint32_float = 122;
      case 122: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
      case 123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
      case 124: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
      case 125: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
      case 126: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
      case 127: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
      case 128: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 1026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
      case 129: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
      case 130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
      case 131: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
      case 132: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
      case 133: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1066 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32String v_list_sint32_string = 134;
      case 134: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
      case 135: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint32_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Double v_list_sint64_double = 136;
      case 136: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Float v_list_sint64_float = 137;
      case 137: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
      case 138: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
      case 139: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
      case 140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
      case 141: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
      case 142: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
      case 143: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
      case 144: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
      case 145: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
      case 146: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
      case 147: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
      case 148: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64String v_list_sint64_string = 149;
      case 149: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
      case 150: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sint64_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
      case 151: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
      case 152: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
      case 153: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
      case 154: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
      case 155: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
      case 156: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
      case 157: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
      case 158: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
      case 159: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
      case 160: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 1282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
      case 161: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
      case 162: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
      case 163: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32String v_list_fixed32_string = 164;
      case 164: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
      case 165: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed32_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
      case 166: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
      case 167: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
      case 168: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
      case 169: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
      case 170: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
      case 171: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
      case 172: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
      case 173: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
      case 174: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
      case 175: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
      case 176: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
      case 177: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
      case 178: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64String v_list_fixed64_string = 179;
      case 179: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
      case 180: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_fixed64_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
      case 181: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
      case 182: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
      case 183: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
      case 184: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
      case 185: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
      case 186: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
      case 187: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
      case 188: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
      case 189: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
      case 190: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
      case 191: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
      case 192: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 1538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
      case 193: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
      case 194: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
      case 195: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed32_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
      case 196: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
      case 197: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
      case 198: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
      case 199: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
      case 200: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
      case 201: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
      case 202: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
      case 203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
      case 204: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
      case 205: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
      case 206: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
      case 207: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
      case 208: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
      case 209: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
      case 210: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_sfixed64_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleDouble v_list_double_double = 211;
      case 211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleFloat v_list_double_float = 212;
      case 212: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
      case 213: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
      case 214: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
      case 215: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
      case 216: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
      case 217: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
      case 218: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
      case 219: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
      case 220: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
      case 221: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
      case 222: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleBool v_list_double_bool = 223;
      case 223: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleString v_list_double_string = 224;
      case 224: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 1794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
      case 225: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_double_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatDouble v_list_float_double = 226;
      case 226: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatFloat v_list_float_float = 227;
      case 227: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
      case 228: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
      case 229: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
      case 230: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
      case 231: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
      case 232: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
      case 233: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
      case 234: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
      case 235: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
      case 236: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
      case 237: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatBool v_list_float_bool = 238;
      case 238: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatString v_list_float_string = 239;
      case 239: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListFloatBytes v_list_float_bytes = 240;
      case 240: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_float_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolDouble v_list_bool_double = 241;
      case 241: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_double()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolFloat v_list_bool_float = 242;
      case 242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_float()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
      case 243: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
      case 244: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
      case 245: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
      case 246: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
      case 247: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_sint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
      case 248: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_sint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
      case 249: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_fixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
      case 250: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 2002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_fixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
      case 251: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_sfixed32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
      case 252: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_sfixed64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolBool v_list_bool_bool = 253;
      case 253: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_bool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolString v_list_bool_string = 254;
      case 254: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 2034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_v_list_bool_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.Feature)
  return false;
#undef DO_
}

void Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double v_double = 1;
  if (has_v_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->v_double(), output);
  }

  // float v_float = 2;
  if (has_v_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->v_float(), output);
  }

  // int32 v_int32 = 3;
  if (has_v_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->v_int32(), output);
  }

  // int64 v_int64 = 4;
  if (has_v_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->v_int64(), output);
  }

  // uint32 v_uint32 = 5;
  if (has_v_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->v_uint32(), output);
  }

  // uint64 v_uint64 = 6;
  if (has_v_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->v_uint64(), output);
  }

  // sint32 v_sint32 = 7;
  if (has_v_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->v_sint32(), output);
  }

  // sint64 v_sint64 = 8;
  if (has_v_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->v_sint64(), output);
  }

  // fixed32 v_fixed32 = 9;
  if (has_v_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->v_fixed32(), output);
  }

  // fixed64 v_fixed64 = 10;
  if (has_v_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->v_fixed64(), output);
  }

  // sfixed32 v_sfixed32 = 11;
  if (has_v_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(11, this->v_sfixed32(), output);
  }

  // sfixed64 v_sfixed64 = 12;
  if (has_v_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->v_sfixed64(), output);
  }

  // bool v_bool = 13;
  if (has_v_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->v_bool(), output);
  }

  // string v_string = 14;
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v_string().data(), static_cast<int>(this->v_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.Feature.v_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->v_string(), output);
  }

  // bytes v_bytes = 15;
  if (has_v_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->v_bytes(), output);
  }

  // .feature_proto.ListDouble v_list_double = 16;
  if (has_v_list_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_v_list_double(), output);
  }

  // .feature_proto.ListFloat v_list_float = 17;
  if (has_v_list_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_v_list_float(), output);
  }

  // .feature_proto.ListInt32 v_list_int32 = 18;
  if (has_v_list_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_v_list_int32(), output);
  }

  // .feature_proto.ListInt64 v_list_int64 = 19;
  if (has_v_list_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_v_list_int64(), output);
  }

  // .feature_proto.ListUint32 v_list_uint32 = 20;
  if (has_v_list_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_v_list_uint32(), output);
  }

  // .feature_proto.ListUint64 v_list_uint64 = 21;
  if (has_v_list_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_v_list_uint64(), output);
  }

  // .feature_proto.ListSint32 v_list_sint32 = 22;
  if (has_v_list_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_v_list_sint32(), output);
  }

  // .feature_proto.ListSint64 v_list_sint64 = 23;
  if (has_v_list_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_v_list_sint64(), output);
  }

  // .feature_proto.ListFixed32 v_list_fixed32 = 24;
  if (has_v_list_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_v_list_fixed32(), output);
  }

  // .feature_proto.ListFixed64 v_list_fixed64 = 25;
  if (has_v_list_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_v_list_fixed64(), output);
  }

  // .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
  if (has_v_list_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_v_list_sfixed32(), output);
  }

  // .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
  if (has_v_list_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_v_list_sfixed64(), output);
  }

  // .feature_proto.ListBool v_list_bool = 28;
  if (has_v_list_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_v_list_bool(), output);
  }

  // .feature_proto.ListString v_list_string = 29;
  if (has_v_list_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_v_list_string(), output);
  }

  // .feature_proto.ListBytes v_list_bytes = 30;
  if (has_v_list_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_v_list_bytes(), output);
  }

  // .feature_proto.ListStringDouble v_list_string_double = 31;
  if (has_v_list_string_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_v_list_string_double(), output);
  }

  // .feature_proto.ListStringFloat v_list_string_float = 32;
  if (has_v_list_string_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_v_list_string_float(), output);
  }

  // .feature_proto.ListStringInt32 v_list_string_int32 = 33;
  if (has_v_list_string_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_v_list_string_int32(), output);
  }

  // .feature_proto.ListStringInt64 v_list_string_int64 = 34;
  if (has_v_list_string_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_v_list_string_int64(), output);
  }

  // .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
  if (has_v_list_string_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->_internal_v_list_string_uint32(), output);
  }

  // .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
  if (has_v_list_string_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->_internal_v_list_string_uint64(), output);
  }

  // .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
  if (has_v_list_string_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_v_list_string_sint32(), output);
  }

  // .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
  if (has_v_list_string_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->_internal_v_list_string_sint64(), output);
  }

  // .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
  if (has_v_list_string_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->_internal_v_list_string_fixed32(), output);
  }

  // .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
  if (has_v_list_string_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->_internal_v_list_string_fixed64(), output);
  }

  // .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
  if (has_v_list_string_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->_internal_v_list_string_sfixed32(), output);
  }

  // .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
  if (has_v_list_string_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->_internal_v_list_string_sfixed64(), output);
  }

  // .feature_proto.ListStringBool v_list_string_bool = 43;
  if (has_v_list_string_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->_internal_v_list_string_bool(), output);
  }

  // .feature_proto.ListStringString v_list_string_string = 44;
  if (has_v_list_string_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->_internal_v_list_string_string(), output);
  }

  // .feature_proto.ListStringBytes v_list_string_bytes = 45;
  if (has_v_list_string_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->_internal_v_list_string_bytes(), output);
  }

  // .feature_proto.ListBytesDouble v_list_bytes_double = 46;
  if (has_v_list_bytes_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->_internal_v_list_bytes_double(), output);
  }

  // .feature_proto.ListBytesFloat v_list_bytes_float = 47;
  if (has_v_list_bytes_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->_internal_v_list_bytes_float(), output);
  }

  // .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
  if (has_v_list_bytes_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->_internal_v_list_bytes_int32(), output);
  }

  // .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
  if (has_v_list_bytes_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->_internal_v_list_bytes_int64(), output);
  }

  // .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
  if (has_v_list_bytes_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->_internal_v_list_bytes_uint32(), output);
  }

  // .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
  if (has_v_list_bytes_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_v_list_bytes_uint64(), output);
  }

  // .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
  if (has_v_list_bytes_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_v_list_bytes_sint32(), output);
  }

  // .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
  if (has_v_list_bytes_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->_internal_v_list_bytes_sint64(), output);
  }

  // .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
  if (has_v_list_bytes_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->_internal_v_list_bytes_fixed32(), output);
  }

  // .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
  if (has_v_list_bytes_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->_internal_v_list_bytes_fixed64(), output);
  }

  // .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
  if (has_v_list_bytes_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, this->_internal_v_list_bytes_sfixed32(), output);
  }

  // .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
  if (has_v_list_bytes_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->_internal_v_list_bytes_sfixed64(), output);
  }

  // .feature_proto.ListBytesBool v_list_bytes_bool = 58;
  if (has_v_list_bytes_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, this->_internal_v_list_bytes_bool(), output);
  }

  // .feature_proto.ListBytesString v_list_bytes_string = 59;
  if (has_v_list_bytes_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->_internal_v_list_bytes_string(), output);
  }

  // .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
  if (has_v_list_bytes_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->_internal_v_list_bytes_bytes(), output);
  }

  // .feature_proto.ListInt32Double v_list_int32_double = 61;
  if (has_v_list_int32_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->_internal_v_list_int32_double(), output);
  }

  // .feature_proto.ListInt32Float v_list_int32_float = 62;
  if (has_v_list_int32_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->_internal_v_list_int32_float(), output);
  }

  // .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
  if (has_v_list_int32_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63, this->_internal_v_list_int32_int32(), output);
  }

  // .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
  if (has_v_list_int32_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64, this->_internal_v_list_int32_int64(), output);
  }

  // .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
  if (has_v_list_int32_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65, this->_internal_v_list_int32_uint32(), output);
  }

  // .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
  if (has_v_list_int32_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66, this->_internal_v_list_int32_uint64(), output);
  }

  // .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
  if (has_v_list_int32_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      67, this->_internal_v_list_int32_sint32(), output);
  }

  // .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
  if (has_v_list_int32_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68, this->_internal_v_list_int32_sint64(), output);
  }

  // .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
  if (has_v_list_int32_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69, this->_internal_v_list_int32_fixed32(), output);
  }

  // .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
  if (has_v_list_int32_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, this->_internal_v_list_int32_fixed64(), output);
  }

  // .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
  if (has_v_list_int32_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71, this->_internal_v_list_int32_sfixed32(), output);
  }

  // .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
  if (has_v_list_int32_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, this->_internal_v_list_int32_sfixed64(), output);
  }

  // .feature_proto.ListInt32Bool v_list_int32_bool = 73;
  if (has_v_list_int32_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73, this->_internal_v_list_int32_bool(), output);
  }

  // .feature_proto.ListInt32String v_list_int32_string = 74;
  if (has_v_list_int32_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, this->_internal_v_list_int32_string(), output);
  }

  // .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
  if (has_v_list_int32_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      75, this->_internal_v_list_int32_bytes(), output);
  }

  // .feature_proto.ListInt64Double v_list_int64_double = 76;
  if (has_v_list_int64_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      76, this->_internal_v_list_int64_double(), output);
  }

  // .feature_proto.ListInt64Float v_list_int64_float = 77;
  if (has_v_list_int64_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      77, this->_internal_v_list_int64_float(), output);
  }

  // .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
  if (has_v_list_int64_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78, this->_internal_v_list_int64_int32(), output);
  }

  // .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
  if (has_v_list_int64_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      79, this->_internal_v_list_int64_int64(), output);
  }

  // .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
  if (has_v_list_int64_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80, this->_internal_v_list_int64_uint32(), output);
  }

  // .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
  if (has_v_list_int64_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      81, this->_internal_v_list_int64_uint64(), output);
  }

  // .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
  if (has_v_list_int64_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      82, this->_internal_v_list_int64_sint32(), output);
  }

  // .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
  if (has_v_list_int64_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      83, this->_internal_v_list_int64_sint64(), output);
  }

  // .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
  if (has_v_list_int64_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      84, this->_internal_v_list_int64_fixed32(), output);
  }

  // .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
  if (has_v_list_int64_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85, this->_internal_v_list_int64_fixed64(), output);
  }

  // .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
  if (has_v_list_int64_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      86, this->_internal_v_list_int64_sfixed32(), output);
  }

  // .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
  if (has_v_list_int64_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      87, this->_internal_v_list_int64_sfixed64(), output);
  }

  // .feature_proto.ListInt64Bool v_list_int64_bool = 88;
  if (has_v_list_int64_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      88, this->_internal_v_list_int64_bool(), output);
  }

  // .feature_proto.ListInt64String v_list_int64_string = 89;
  if (has_v_list_int64_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      89, this->_internal_v_list_int64_string(), output);
  }

  // .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
  if (has_v_list_int64_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90, this->_internal_v_list_int64_bytes(), output);
  }

  // .feature_proto.ListUint32Double v_list_uint32_double = 91;
  if (has_v_list_uint32_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91, this->_internal_v_list_uint32_double(), output);
  }

  // .feature_proto.ListUint32Float v_list_uint32_float = 92;
  if (has_v_list_uint32_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92, this->_internal_v_list_uint32_float(), output);
  }

  // .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
  if (has_v_list_uint32_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      93, this->_internal_v_list_uint32_int32(), output);
  }

  // .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
  if (has_v_list_uint32_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      94, this->_internal_v_list_uint32_int64(), output);
  }

  // .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
  if (has_v_list_uint32_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      95, this->_internal_v_list_uint32_uint32(), output);
  }

  // .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
  if (has_v_list_uint32_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      96, this->_internal_v_list_uint32_uint64(), output);
  }

  // .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
  if (has_v_list_uint32_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      97, this->_internal_v_list_uint32_sint32(), output);
  }

  // .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
  if (has_v_list_uint32_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98, this->_internal_v_list_uint32_sint64(), output);
  }

  // .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
  if (has_v_list_uint32_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      99, this->_internal_v_list_uint32_fixed32(), output);
  }

  // .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
  if (has_v_list_uint32_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->_internal_v_list_uint32_fixed64(), output);
  }

  // .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
  if (has_v_list_uint32_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->_internal_v_list_uint32_sfixed32(), output);
  }

  // .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
  if (has_v_list_uint32_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, this->_internal_v_list_uint32_sfixed64(), output);
  }

  // .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
  if (has_v_list_uint32_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, this->_internal_v_list_uint32_bool(), output);
  }

  // .feature_proto.ListUint32String v_list_uint32_string = 104;
  if (has_v_list_uint32_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, this->_internal_v_list_uint32_string(), output);
  }

  // .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
  if (has_v_list_uint32_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, this->_internal_v_list_uint32_bytes(), output);
  }

  // .feature_proto.ListUint64Double v_list_uint64_double = 106;
  if (has_v_list_uint64_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106, this->_internal_v_list_uint64_double(), output);
  }

  // .feature_proto.ListUint64Float v_list_uint64_float = 107;
  if (has_v_list_uint64_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, this->_internal_v_list_uint64_float(), output);
  }

  // .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
  if (has_v_list_uint64_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      108, this->_internal_v_list_uint64_int32(), output);
  }

  // .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
  if (has_v_list_uint64_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109, this->_internal_v_list_uint64_int64(), output);
  }

  // .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
  if (has_v_list_uint64_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110, this->_internal_v_list_uint64_uint32(), output);
  }

  // .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
  if (has_v_list_uint64_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111, this->_internal_v_list_uint64_uint64(), output);
  }

  // .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
  if (has_v_list_uint64_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112, this->_internal_v_list_uint64_sint32(), output);
  }

  // .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
  if (has_v_list_uint64_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113, this->_internal_v_list_uint64_sint64(), output);
  }

  // .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
  if (has_v_list_uint64_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      114, this->_internal_v_list_uint64_fixed32(), output);
  }

  // .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
  if (has_v_list_uint64_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115, this->_internal_v_list_uint64_fixed64(), output);
  }

  // .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
  if (has_v_list_uint64_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      116, this->_internal_v_list_uint64_sfixed32(), output);
  }

  // .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
  if (has_v_list_uint64_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117, this->_internal_v_list_uint64_sfixed64(), output);
  }

  // .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
  if (has_v_list_uint64_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118, this->_internal_v_list_uint64_bool(), output);
  }

  // .feature_proto.ListUint64String v_list_uint64_string = 119;
  if (has_v_list_uint64_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      119, this->_internal_v_list_uint64_string(), output);
  }

  // .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
  if (has_v_list_uint64_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      120, this->_internal_v_list_uint64_bytes(), output);
  }

  // .feature_proto.ListSint32Double v_list_sint32_double = 121;
  if (has_v_list_sint32_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121, this->_internal_v_list_sint32_double(), output);
  }

  // .feature_proto.ListSint32Float v_list_sint32_float = 122;
  if (has_v_list_sint32_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122, this->_internal_v_list_sint32_float(), output);
  }

  // .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
  if (has_v_list_sint32_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123, this->_internal_v_list_sint32_int32(), output);
  }

  // .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
  if (has_v_list_sint32_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124, this->_internal_v_list_sint32_int64(), output);
  }

  // .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
  if (has_v_list_sint32_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      125, this->_internal_v_list_sint32_uint32(), output);
  }

  // .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
  if (has_v_list_sint32_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      126, this->_internal_v_list_sint32_uint64(), output);
  }

  // .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
  if (has_v_list_sint32_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      127, this->_internal_v_list_sint32_sint32(), output);
  }

  // .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
  if (has_v_list_sint32_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128, this->_internal_v_list_sint32_sint64(), output);
  }

  // .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
  if (has_v_list_sint32_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      129, this->_internal_v_list_sint32_fixed32(), output);
  }

  // .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
  if (has_v_list_sint32_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      130, this->_internal_v_list_sint32_fixed64(), output);
  }

  // .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
  if (has_v_list_sint32_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      131, this->_internal_v_list_sint32_sfixed32(), output);
  }

  // .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
  if (has_v_list_sint32_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      132, this->_internal_v_list_sint32_sfixed64(), output);
  }

  // .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
  if (has_v_list_sint32_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      133, this->_internal_v_list_sint32_bool(), output);
  }

  // .feature_proto.ListSint32String v_list_sint32_string = 134;
  if (has_v_list_sint32_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      134, this->_internal_v_list_sint32_string(), output);
  }

  // .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
  if (has_v_list_sint32_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      135, this->_internal_v_list_sint32_bytes(), output);
  }

  // .feature_proto.ListSint64Double v_list_sint64_double = 136;
  if (has_v_list_sint64_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      136, this->_internal_v_list_sint64_double(), output);
  }

  // .feature_proto.ListSint64Float v_list_sint64_float = 137;
  if (has_v_list_sint64_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      137, this->_internal_v_list_sint64_float(), output);
  }

  // .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
  if (has_v_list_sint64_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      138, this->_internal_v_list_sint64_int32(), output);
  }

  // .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
  if (has_v_list_sint64_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      139, this->_internal_v_list_sint64_int64(), output);
  }

  // .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
  if (has_v_list_sint64_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140, this->_internal_v_list_sint64_uint32(), output);
  }

  // .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
  if (has_v_list_sint64_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      141, this->_internal_v_list_sint64_uint64(), output);
  }

  // .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
  if (has_v_list_sint64_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      142, this->_internal_v_list_sint64_sint32(), output);
  }

  // .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
  if (has_v_list_sint64_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      143, this->_internal_v_list_sint64_sint64(), output);
  }

  // .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
  if (has_v_list_sint64_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      144, this->_internal_v_list_sint64_fixed32(), output);
  }

  // .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
  if (has_v_list_sint64_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145, this->_internal_v_list_sint64_fixed64(), output);
  }

  // .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
  if (has_v_list_sint64_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      146, this->_internal_v_list_sint64_sfixed32(), output);
  }

  // .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
  if (has_v_list_sint64_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      147, this->_internal_v_list_sint64_sfixed64(), output);
  }

  // .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
  if (has_v_list_sint64_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      148, this->_internal_v_list_sint64_bool(), output);
  }

  // .feature_proto.ListSint64String v_list_sint64_string = 149;
  if (has_v_list_sint64_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      149, this->_internal_v_list_sint64_string(), output);
  }

  // .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
  if (has_v_list_sint64_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150, this->_internal_v_list_sint64_bytes(), output);
  }

  // .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
  if (has_v_list_fixed32_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      151, this->_internal_v_list_fixed32_double(), output);
  }

  // .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
  if (has_v_list_fixed32_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      152, this->_internal_v_list_fixed32_float(), output);
  }

  // .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
  if (has_v_list_fixed32_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      153, this->_internal_v_list_fixed32_int32(), output);
  }

  // .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
  if (has_v_list_fixed32_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      154, this->_internal_v_list_fixed32_int64(), output);
  }

  // .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
  if (has_v_list_fixed32_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      155, this->_internal_v_list_fixed32_uint32(), output);
  }

  // .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
  if (has_v_list_fixed32_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      156, this->_internal_v_list_fixed32_uint64(), output);
  }

  // .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
  if (has_v_list_fixed32_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      157, this->_internal_v_list_fixed32_sint32(), output);
  }

  // .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
  if (has_v_list_fixed32_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      158, this->_internal_v_list_fixed32_sint64(), output);
  }

  // .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
  if (has_v_list_fixed32_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159, this->_internal_v_list_fixed32_fixed32(), output);
  }

  // .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
  if (has_v_list_fixed32_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160, this->_internal_v_list_fixed32_fixed64(), output);
  }

  // .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
  if (has_v_list_fixed32_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      161, this->_internal_v_list_fixed32_sfixed32(), output);
  }

  // .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
  if (has_v_list_fixed32_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      162, this->_internal_v_list_fixed32_sfixed64(), output);
  }

  // .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
  if (has_v_list_fixed32_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      163, this->_internal_v_list_fixed32_bool(), output);
  }

  // .feature_proto.ListFixed32String v_list_fixed32_string = 164;
  if (has_v_list_fixed32_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      164, this->_internal_v_list_fixed32_string(), output);
  }

  // .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
  if (has_v_list_fixed32_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      165, this->_internal_v_list_fixed32_bytes(), output);
  }

  // .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
  if (has_v_list_fixed64_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      166, this->_internal_v_list_fixed64_double(), output);
  }

  // .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
  if (has_v_list_fixed64_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      167, this->_internal_v_list_fixed64_float(), output);
  }

  // .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
  if (has_v_list_fixed64_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      168, this->_internal_v_list_fixed64_int32(), output);
  }

  // .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
  if (has_v_list_fixed64_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      169, this->_internal_v_list_fixed64_int64(), output);
  }

  // .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
  if (has_v_list_fixed64_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170, this->_internal_v_list_fixed64_uint32(), output);
  }

  // .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
  if (has_v_list_fixed64_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      171, this->_internal_v_list_fixed64_uint64(), output);
  }

  // .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
  if (has_v_list_fixed64_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      172, this->_internal_v_list_fixed64_sint32(), output);
  }

  // .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
  if (has_v_list_fixed64_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      173, this->_internal_v_list_fixed64_sint64(), output);
  }

  // .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
  if (has_v_list_fixed64_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      174, this->_internal_v_list_fixed64_fixed32(), output);
  }

  // .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
  if (has_v_list_fixed64_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      175, this->_internal_v_list_fixed64_fixed64(), output);
  }

  // .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
  if (has_v_list_fixed64_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      176, this->_internal_v_list_fixed64_sfixed32(), output);
  }

  // .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
  if (has_v_list_fixed64_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      177, this->_internal_v_list_fixed64_sfixed64(), output);
  }

  // .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
  if (has_v_list_fixed64_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      178, this->_internal_v_list_fixed64_bool(), output);
  }

  // .feature_proto.ListFixed64String v_list_fixed64_string = 179;
  if (has_v_list_fixed64_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      179, this->_internal_v_list_fixed64_string(), output);
  }

  // .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
  if (has_v_list_fixed64_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180, this->_internal_v_list_fixed64_bytes(), output);
  }

  // .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
  if (has_v_list_sfixed32_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      181, this->_internal_v_list_sfixed32_double(), output);
  }

  // .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
  if (has_v_list_sfixed32_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      182, this->_internal_v_list_sfixed32_float(), output);
  }

  // .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
  if (has_v_list_sfixed32_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      183, this->_internal_v_list_sfixed32_int32(), output);
  }

  // .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
  if (has_v_list_sfixed32_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      184, this->_internal_v_list_sfixed32_int64(), output);
  }

  // .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
  if (has_v_list_sfixed32_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      185, this->_internal_v_list_sfixed32_uint32(), output);
  }

  // .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
  if (has_v_list_sfixed32_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      186, this->_internal_v_list_sfixed32_uint64(), output);
  }

  // .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
  if (has_v_list_sfixed32_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      187, this->_internal_v_list_sfixed32_sint32(), output);
  }

  // .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
  if (has_v_list_sfixed32_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      188, this->_internal_v_list_sfixed32_sint64(), output);
  }

  // .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
  if (has_v_list_sfixed32_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      189, this->_internal_v_list_sfixed32_fixed32(), output);
  }

  // .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
  if (has_v_list_sfixed32_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190, this->_internal_v_list_sfixed32_fixed64(), output);
  }

  // .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
  if (has_v_list_sfixed32_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      191, this->_internal_v_list_sfixed32_sfixed32(), output);
  }

  // .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
  if (has_v_list_sfixed32_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      192, this->_internal_v_list_sfixed32_sfixed64(), output);
  }

  // .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
  if (has_v_list_sfixed32_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      193, this->_internal_v_list_sfixed32_bool(), output);
  }

  // .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
  if (has_v_list_sfixed32_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      194, this->_internal_v_list_sfixed32_string(), output);
  }

  // .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
  if (has_v_list_sfixed32_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195, this->_internal_v_list_sfixed32_bytes(), output);
  }

  // .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
  if (has_v_list_sfixed64_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      196, this->_internal_v_list_sfixed64_double(), output);
  }

  // .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
  if (has_v_list_sfixed64_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      197, this->_internal_v_list_sfixed64_float(), output);
  }

  // .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
  if (has_v_list_sfixed64_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      198, this->_internal_v_list_sfixed64_int32(), output);
  }

  // .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
  if (has_v_list_sfixed64_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      199, this->_internal_v_list_sfixed64_int64(), output);
  }

  // .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
  if (has_v_list_sfixed64_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, this->_internal_v_list_sfixed64_uint32(), output);
  }

  // .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
  if (has_v_list_sfixed64_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      201, this->_internal_v_list_sfixed64_uint64(), output);
  }

  // .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
  if (has_v_list_sfixed64_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      202, this->_internal_v_list_sfixed64_sint32(), output);
  }

  // .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
  if (has_v_list_sfixed64_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      203, this->_internal_v_list_sfixed64_sint64(), output);
  }

  // .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
  if (has_v_list_sfixed64_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      204, this->_internal_v_list_sfixed64_fixed32(), output);
  }

  // .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
  if (has_v_list_sfixed64_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205, this->_internal_v_list_sfixed64_fixed64(), output);
  }

  // .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
  if (has_v_list_sfixed64_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206, this->_internal_v_list_sfixed64_sfixed32(), output);
  }

  // .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
  if (has_v_list_sfixed64_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      207, this->_internal_v_list_sfixed64_sfixed64(), output);
  }

  // .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
  if (has_v_list_sfixed64_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      208, this->_internal_v_list_sfixed64_bool(), output);
  }

  // .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
  if (has_v_list_sfixed64_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      209, this->_internal_v_list_sfixed64_string(), output);
  }

  // .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
  if (has_v_list_sfixed64_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      210, this->_internal_v_list_sfixed64_bytes(), output);
  }

  // .feature_proto.ListDoubleDouble v_list_double_double = 211;
  if (has_v_list_double_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      211, this->_internal_v_list_double_double(), output);
  }

  // .feature_proto.ListDoubleFloat v_list_double_float = 212;
  if (has_v_list_double_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212, this->_internal_v_list_double_float(), output);
  }

  // .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
  if (has_v_list_double_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      213, this->_internal_v_list_double_int32(), output);
  }

  // .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
  if (has_v_list_double_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      214, this->_internal_v_list_double_int64(), output);
  }

  // .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
  if (has_v_list_double_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      215, this->_internal_v_list_double_uint32(), output);
  }

  // .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
  if (has_v_list_double_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      216, this->_internal_v_list_double_uint64(), output);
  }

  // .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
  if (has_v_list_double_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      217, this->_internal_v_list_double_sint32(), output);
  }

  // .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
  if (has_v_list_double_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      218, this->_internal_v_list_double_sint64(), output);
  }

  // .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
  if (has_v_list_double_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      219, this->_internal_v_list_double_fixed32(), output);
  }

  // .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
  if (has_v_list_double_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220, this->_internal_v_list_double_fixed64(), output);
  }

  // .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
  if (has_v_list_double_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221, this->_internal_v_list_double_sfixed32(), output);
  }

  // .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
  if (has_v_list_double_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      222, this->_internal_v_list_double_sfixed64(), output);
  }

  // .feature_proto.ListDoubleBool v_list_double_bool = 223;
  if (has_v_list_double_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223, this->_internal_v_list_double_bool(), output);
  }

  // .feature_proto.ListDoubleString v_list_double_string = 224;
  if (has_v_list_double_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      224, this->_internal_v_list_double_string(), output);
  }

  // .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
  if (has_v_list_double_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      225, this->_internal_v_list_double_bytes(), output);
  }

  // .feature_proto.ListFloatDouble v_list_float_double = 226;
  if (has_v_list_float_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      226, this->_internal_v_list_float_double(), output);
  }

  // .feature_proto.ListFloatFloat v_list_float_float = 227;
  if (has_v_list_float_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      227, this->_internal_v_list_float_float(), output);
  }

  // .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
  if (has_v_list_float_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      228, this->_internal_v_list_float_int32(), output);
  }

  // .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
  if (has_v_list_float_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229, this->_internal_v_list_float_int64(), output);
  }

  // .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
  if (has_v_list_float_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230, this->_internal_v_list_float_uint32(), output);
  }

  // .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
  if (has_v_list_float_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      231, this->_internal_v_list_float_uint64(), output);
  }

  // .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
  if (has_v_list_float_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      232, this->_internal_v_list_float_sint32(), output);
  }

  // .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
  if (has_v_list_float_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      233, this->_internal_v_list_float_sint64(), output);
  }

  // .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
  if (has_v_list_float_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      234, this->_internal_v_list_float_fixed32(), output);
  }

  // .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
  if (has_v_list_float_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      235, this->_internal_v_list_float_fixed64(), output);
  }

  // .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
  if (has_v_list_float_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      236, this->_internal_v_list_float_sfixed32(), output);
  }

  // .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
  if (has_v_list_float_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237, this->_internal_v_list_float_sfixed64(), output);
  }

  // .feature_proto.ListFloatBool v_list_float_bool = 238;
  if (has_v_list_float_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      238, this->_internal_v_list_float_bool(), output);
  }

  // .feature_proto.ListFloatString v_list_float_string = 239;
  if (has_v_list_float_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      239, this->_internal_v_list_float_string(), output);
  }

  // .feature_proto.ListFloatBytes v_list_float_bytes = 240;
  if (has_v_list_float_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240, this->_internal_v_list_float_bytes(), output);
  }

  // .feature_proto.ListBoolDouble v_list_bool_double = 241;
  if (has_v_list_bool_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      241, this->_internal_v_list_bool_double(), output);
  }

  // .feature_proto.ListBoolFloat v_list_bool_float = 242;
  if (has_v_list_bool_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      242, this->_internal_v_list_bool_float(), output);
  }

  // .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
  if (has_v_list_bool_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      243, this->_internal_v_list_bool_int32(), output);
  }

  // .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
  if (has_v_list_bool_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244, this->_internal_v_list_bool_int64(), output);
  }

  // .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
  if (has_v_list_bool_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      245, this->_internal_v_list_bool_uint32(), output);
  }

  // .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
  if (has_v_list_bool_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      246, this->_internal_v_list_bool_uint64(), output);
  }

  // .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
  if (has_v_list_bool_sint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      247, this->_internal_v_list_bool_sint32(), output);
  }

  // .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
  if (has_v_list_bool_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      248, this->_internal_v_list_bool_sint64(), output);
  }

  // .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
  if (has_v_list_bool_fixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      249, this->_internal_v_list_bool_fixed32(), output);
  }

  // .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
  if (has_v_list_bool_fixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250, this->_internal_v_list_bool_fixed64(), output);
  }

  // .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
  if (has_v_list_bool_sfixed32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      251, this->_internal_v_list_bool_sfixed32(), output);
  }

  // .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
  if (has_v_list_bool_sfixed64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252, this->_internal_v_list_bool_sfixed64(), output);
  }

  // .feature_proto.ListBoolBool v_list_bool_bool = 253;
  if (has_v_list_bool_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      253, this->_internal_v_list_bool_bool(), output);
  }

  // .feature_proto.ListBoolString v_list_bool_string = 254;
  if (has_v_list_bool_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      254, this->_internal_v_list_bool_string(), output);
  }

  // .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
  if (has_v_list_bool_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255, this->_internal_v_list_bool_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.Feature)
}

::google::protobuf::uint8* Feature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double v_double = 1;
  if (has_v_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->v_double(), target);
  }

  // float v_float = 2;
  if (has_v_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->v_float(), target);
  }

  // int32 v_int32 = 3;
  if (has_v_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->v_int32(), target);
  }

  // int64 v_int64 = 4;
  if (has_v_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->v_int64(), target);
  }

  // uint32 v_uint32 = 5;
  if (has_v_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->v_uint32(), target);
  }

  // uint64 v_uint64 = 6;
  if (has_v_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->v_uint64(), target);
  }

  // sint32 v_sint32 = 7;
  if (has_v_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->v_sint32(), target);
  }

  // sint64 v_sint64 = 8;
  if (has_v_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->v_sint64(), target);
  }

  // fixed32 v_fixed32 = 9;
  if (has_v_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->v_fixed32(), target);
  }

  // fixed64 v_fixed64 = 10;
  if (has_v_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->v_fixed64(), target);
  }

  // sfixed32 v_sfixed32 = 11;
  if (has_v_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(11, this->v_sfixed32(), target);
  }

  // sfixed64 v_sfixed64 = 12;
  if (has_v_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->v_sfixed64(), target);
  }

  // bool v_bool = 13;
  if (has_v_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->v_bool(), target);
  }

  // string v_string = 14;
  if (has_v_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->v_string().data(), static_cast<int>(this->v_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "feature_proto.Feature.v_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->v_string(), target);
  }

  // bytes v_bytes = 15;
  if (has_v_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->v_bytes(), target);
  }

  // .feature_proto.ListDouble v_list_double = 16;
  if (has_v_list_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_v_list_double(), deterministic, target);
  }

  // .feature_proto.ListFloat v_list_float = 17;
  if (has_v_list_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_v_list_float(), deterministic, target);
  }

  // .feature_proto.ListInt32 v_list_int32 = 18;
  if (has_v_list_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_v_list_int32(), deterministic, target);
  }

  // .feature_proto.ListInt64 v_list_int64 = 19;
  if (has_v_list_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_v_list_int64(), deterministic, target);
  }

  // .feature_proto.ListUint32 v_list_uint32 = 20;
  if (has_v_list_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_v_list_uint32(), deterministic, target);
  }

  // .feature_proto.ListUint64 v_list_uint64 = 21;
  if (has_v_list_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_v_list_uint64(), deterministic, target);
  }

  // .feature_proto.ListSint32 v_list_sint32 = 22;
  if (has_v_list_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_v_list_sint32(), deterministic, target);
  }

  // .feature_proto.ListSint64 v_list_sint64 = 23;
  if (has_v_list_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_v_list_sint64(), deterministic, target);
  }

  // .feature_proto.ListFixed32 v_list_fixed32 = 24;
  if (has_v_list_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_v_list_fixed32(), deterministic, target);
  }

  // .feature_proto.ListFixed64 v_list_fixed64 = 25;
  if (has_v_list_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_v_list_fixed64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
  if (has_v_list_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_v_list_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
  if (has_v_list_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_v_list_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListBool v_list_bool = 28;
  if (has_v_list_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_v_list_bool(), deterministic, target);
  }

  // .feature_proto.ListString v_list_string = 29;
  if (has_v_list_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_v_list_string(), deterministic, target);
  }

  // .feature_proto.ListBytes v_list_bytes = 30;
  if (has_v_list_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_v_list_bytes(), deterministic, target);
  }

  // .feature_proto.ListStringDouble v_list_string_double = 31;
  if (has_v_list_string_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_v_list_string_double(), deterministic, target);
  }

  // .feature_proto.ListStringFloat v_list_string_float = 32;
  if (has_v_list_string_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_v_list_string_float(), deterministic, target);
  }

  // .feature_proto.ListStringInt32 v_list_string_int32 = 33;
  if (has_v_list_string_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_v_list_string_int32(), deterministic, target);
  }

  // .feature_proto.ListStringInt64 v_list_string_int64 = 34;
  if (has_v_list_string_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_v_list_string_int64(), deterministic, target);
  }

  // .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
  if (has_v_list_string_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->_internal_v_list_string_uint32(), deterministic, target);
  }

  // .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
  if (has_v_list_string_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->_internal_v_list_string_uint64(), deterministic, target);
  }

  // .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
  if (has_v_list_string_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_v_list_string_sint32(), deterministic, target);
  }

  // .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
  if (has_v_list_string_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->_internal_v_list_string_sint64(), deterministic, target);
  }

  // .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
  if (has_v_list_string_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, this->_internal_v_list_string_fixed32(), deterministic, target);
  }

  // .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
  if (has_v_list_string_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->_internal_v_list_string_fixed64(), deterministic, target);
  }

  // .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
  if (has_v_list_string_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->_internal_v_list_string_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
  if (has_v_list_string_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->_internal_v_list_string_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListStringBool v_list_string_bool = 43;
  if (has_v_list_string_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, this->_internal_v_list_string_bool(), deterministic, target);
  }

  // .feature_proto.ListStringString v_list_string_string = 44;
  if (has_v_list_string_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->_internal_v_list_string_string(), deterministic, target);
  }

  // .feature_proto.ListStringBytes v_list_string_bytes = 45;
  if (has_v_list_string_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, this->_internal_v_list_string_bytes(), deterministic, target);
  }

  // .feature_proto.ListBytesDouble v_list_bytes_double = 46;
  if (has_v_list_bytes_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, this->_internal_v_list_bytes_double(), deterministic, target);
  }

  // .feature_proto.ListBytesFloat v_list_bytes_float = 47;
  if (has_v_list_bytes_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, this->_internal_v_list_bytes_float(), deterministic, target);
  }

  // .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
  if (has_v_list_bytes_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->_internal_v_list_bytes_int32(), deterministic, target);
  }

  // .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
  if (has_v_list_bytes_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->_internal_v_list_bytes_int64(), deterministic, target);
  }

  // .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
  if (has_v_list_bytes_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->_internal_v_list_bytes_uint32(), deterministic, target);
  }

  // .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
  if (has_v_list_bytes_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_v_list_bytes_uint64(), deterministic, target);
  }

  // .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
  if (has_v_list_bytes_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_v_list_bytes_sint32(), deterministic, target);
  }

  // .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
  if (has_v_list_bytes_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->_internal_v_list_bytes_sint64(), deterministic, target);
  }

  // .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
  if (has_v_list_bytes_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->_internal_v_list_bytes_fixed32(), deterministic, target);
  }

  // .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
  if (has_v_list_bytes_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->_internal_v_list_bytes_fixed64(), deterministic, target);
  }

  // .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
  if (has_v_list_bytes_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        56, this->_internal_v_list_bytes_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
  if (has_v_list_bytes_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57, this->_internal_v_list_bytes_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListBytesBool v_list_bytes_bool = 58;
  if (has_v_list_bytes_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        58, this->_internal_v_list_bytes_bool(), deterministic, target);
  }

  // .feature_proto.ListBytesString v_list_bytes_string = 59;
  if (has_v_list_bytes_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        59, this->_internal_v_list_bytes_string(), deterministic, target);
  }

  // .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
  if (has_v_list_bytes_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->_internal_v_list_bytes_bytes(), deterministic, target);
  }

  // .feature_proto.ListInt32Double v_list_int32_double = 61;
  if (has_v_list_int32_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        61, this->_internal_v_list_int32_double(), deterministic, target);
  }

  // .feature_proto.ListInt32Float v_list_int32_float = 62;
  if (has_v_list_int32_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62, this->_internal_v_list_int32_float(), deterministic, target);
  }

  // .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
  if (has_v_list_int32_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63, this->_internal_v_list_int32_int32(), deterministic, target);
  }

  // .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
  if (has_v_list_int32_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->_internal_v_list_int32_int64(), deterministic, target);
  }

  // .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
  if (has_v_list_int32_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65, this->_internal_v_list_int32_uint32(), deterministic, target);
  }

  // .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
  if (has_v_list_int32_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        66, this->_internal_v_list_int32_uint64(), deterministic, target);
  }

  // .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
  if (has_v_list_int32_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        67, this->_internal_v_list_int32_sint32(), deterministic, target);
  }

  // .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
  if (has_v_list_int32_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68, this->_internal_v_list_int32_sint64(), deterministic, target);
  }

  // .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
  if (has_v_list_int32_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        69, this->_internal_v_list_int32_fixed32(), deterministic, target);
  }

  // .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
  if (has_v_list_int32_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->_internal_v_list_int32_fixed64(), deterministic, target);
  }

  // .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
  if (has_v_list_int32_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71, this->_internal_v_list_int32_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
  if (has_v_list_int32_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72, this->_internal_v_list_int32_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListInt32Bool v_list_int32_bool = 73;
  if (has_v_list_int32_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73, this->_internal_v_list_int32_bool(), deterministic, target);
  }

  // .feature_proto.ListInt32String v_list_int32_string = 74;
  if (has_v_list_int32_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74, this->_internal_v_list_int32_string(), deterministic, target);
  }

  // .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
  if (has_v_list_int32_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        75, this->_internal_v_list_int32_bytes(), deterministic, target);
  }

  // .feature_proto.ListInt64Double v_list_int64_double = 76;
  if (has_v_list_int64_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        76, this->_internal_v_list_int64_double(), deterministic, target);
  }

  // .feature_proto.ListInt64Float v_list_int64_float = 77;
  if (has_v_list_int64_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        77, this->_internal_v_list_int64_float(), deterministic, target);
  }

  // .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
  if (has_v_list_int64_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78, this->_internal_v_list_int64_int32(), deterministic, target);
  }

  // .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
  if (has_v_list_int64_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        79, this->_internal_v_list_int64_int64(), deterministic, target);
  }

  // .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
  if (has_v_list_int64_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80, this->_internal_v_list_int64_uint32(), deterministic, target);
  }

  // .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
  if (has_v_list_int64_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        81, this->_internal_v_list_int64_uint64(), deterministic, target);
  }

  // .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
  if (has_v_list_int64_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        82, this->_internal_v_list_int64_sint32(), deterministic, target);
  }

  // .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
  if (has_v_list_int64_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        83, this->_internal_v_list_int64_sint64(), deterministic, target);
  }

  // .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
  if (has_v_list_int64_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        84, this->_internal_v_list_int64_fixed32(), deterministic, target);
  }

  // .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
  if (has_v_list_int64_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        85, this->_internal_v_list_int64_fixed64(), deterministic, target);
  }

  // .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
  if (has_v_list_int64_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        86, this->_internal_v_list_int64_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
  if (has_v_list_int64_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        87, this->_internal_v_list_int64_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListInt64Bool v_list_int64_bool = 88;
  if (has_v_list_int64_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        88, this->_internal_v_list_int64_bool(), deterministic, target);
  }

  // .feature_proto.ListInt64String v_list_int64_string = 89;
  if (has_v_list_int64_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        89, this->_internal_v_list_int64_string(), deterministic, target);
  }

  // .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
  if (has_v_list_int64_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        90, this->_internal_v_list_int64_bytes(), deterministic, target);
  }

  // .feature_proto.ListUint32Double v_list_uint32_double = 91;
  if (has_v_list_uint32_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        91, this->_internal_v_list_uint32_double(), deterministic, target);
  }

  // .feature_proto.ListUint32Float v_list_uint32_float = 92;
  if (has_v_list_uint32_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        92, this->_internal_v_list_uint32_float(), deterministic, target);
  }

  // .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
  if (has_v_list_uint32_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        93, this->_internal_v_list_uint32_int32(), deterministic, target);
  }

  // .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
  if (has_v_list_uint32_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        94, this->_internal_v_list_uint32_int64(), deterministic, target);
  }

  // .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
  if (has_v_list_uint32_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        95, this->_internal_v_list_uint32_uint32(), deterministic, target);
  }

  // .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
  if (has_v_list_uint32_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        96, this->_internal_v_list_uint32_uint64(), deterministic, target);
  }

  // .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
  if (has_v_list_uint32_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        97, this->_internal_v_list_uint32_sint32(), deterministic, target);
  }

  // .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
  if (has_v_list_uint32_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        98, this->_internal_v_list_uint32_sint64(), deterministic, target);
  }

  // .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
  if (has_v_list_uint32_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        99, this->_internal_v_list_uint32_fixed32(), deterministic, target);
  }

  // .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
  if (has_v_list_uint32_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->_internal_v_list_uint32_fixed64(), deterministic, target);
  }

  // .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
  if (has_v_list_uint32_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->_internal_v_list_uint32_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
  if (has_v_list_uint32_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, this->_internal_v_list_uint32_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
  if (has_v_list_uint32_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103, this->_internal_v_list_uint32_bool(), deterministic, target);
  }

  // .feature_proto.ListUint32String v_list_uint32_string = 104;
  if (has_v_list_uint32_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        104, this->_internal_v_list_uint32_string(), deterministic, target);
  }

  // .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
  if (has_v_list_uint32_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        105, this->_internal_v_list_uint32_bytes(), deterministic, target);
  }

  // .feature_proto.ListUint64Double v_list_uint64_double = 106;
  if (has_v_list_uint64_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        106, this->_internal_v_list_uint64_double(), deterministic, target);
  }

  // .feature_proto.ListUint64Float v_list_uint64_float = 107;
  if (has_v_list_uint64_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107, this->_internal_v_list_uint64_float(), deterministic, target);
  }

  // .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
  if (has_v_list_uint64_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        108, this->_internal_v_list_uint64_int32(), deterministic, target);
  }

  // .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
  if (has_v_list_uint64_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        109, this->_internal_v_list_uint64_int64(), deterministic, target);
  }

  // .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
  if (has_v_list_uint64_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110, this->_internal_v_list_uint64_uint32(), deterministic, target);
  }

  // .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
  if (has_v_list_uint64_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111, this->_internal_v_list_uint64_uint64(), deterministic, target);
  }

  // .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
  if (has_v_list_uint64_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112, this->_internal_v_list_uint64_sint32(), deterministic, target);
  }

  // .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
  if (has_v_list_uint64_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        113, this->_internal_v_list_uint64_sint64(), deterministic, target);
  }

  // .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
  if (has_v_list_uint64_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        114, this->_internal_v_list_uint64_fixed32(), deterministic, target);
  }

  // .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
  if (has_v_list_uint64_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115, this->_internal_v_list_uint64_fixed64(), deterministic, target);
  }

  // .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
  if (has_v_list_uint64_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        116, this->_internal_v_list_uint64_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
  if (has_v_list_uint64_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        117, this->_internal_v_list_uint64_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
  if (has_v_list_uint64_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118, this->_internal_v_list_uint64_bool(), deterministic, target);
  }

  // .feature_proto.ListUint64String v_list_uint64_string = 119;
  if (has_v_list_uint64_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        119, this->_internal_v_list_uint64_string(), deterministic, target);
  }

  // .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
  if (has_v_list_uint64_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        120, this->_internal_v_list_uint64_bytes(), deterministic, target);
  }

  // .feature_proto.ListSint32Double v_list_sint32_double = 121;
  if (has_v_list_sint32_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        121, this->_internal_v_list_sint32_double(), deterministic, target);
  }

  // .feature_proto.ListSint32Float v_list_sint32_float = 122;
  if (has_v_list_sint32_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        122, this->_internal_v_list_sint32_float(), deterministic, target);
  }

  // .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
  if (has_v_list_sint32_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123, this->_internal_v_list_sint32_int32(), deterministic, target);
  }

  // .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
  if (has_v_list_sint32_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        124, this->_internal_v_list_sint32_int64(), deterministic, target);
  }

  // .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
  if (has_v_list_sint32_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        125, this->_internal_v_list_sint32_uint32(), deterministic, target);
  }

  // .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
  if (has_v_list_sint32_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        126, this->_internal_v_list_sint32_uint64(), deterministic, target);
  }

  // .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
  if (has_v_list_sint32_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        127, this->_internal_v_list_sint32_sint32(), deterministic, target);
  }

  // .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
  if (has_v_list_sint32_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        128, this->_internal_v_list_sint32_sint64(), deterministic, target);
  }

  // .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
  if (has_v_list_sint32_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        129, this->_internal_v_list_sint32_fixed32(), deterministic, target);
  }

  // .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
  if (has_v_list_sint32_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        130, this->_internal_v_list_sint32_fixed64(), deterministic, target);
  }

  // .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
  if (has_v_list_sint32_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        131, this->_internal_v_list_sint32_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
  if (has_v_list_sint32_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        132, this->_internal_v_list_sint32_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
  if (has_v_list_sint32_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        133, this->_internal_v_list_sint32_bool(), deterministic, target);
  }

  // .feature_proto.ListSint32String v_list_sint32_string = 134;
  if (has_v_list_sint32_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        134, this->_internal_v_list_sint32_string(), deterministic, target);
  }

  // .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
  if (has_v_list_sint32_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        135, this->_internal_v_list_sint32_bytes(), deterministic, target);
  }

  // .feature_proto.ListSint64Double v_list_sint64_double = 136;
  if (has_v_list_sint64_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        136, this->_internal_v_list_sint64_double(), deterministic, target);
  }

  // .feature_proto.ListSint64Float v_list_sint64_float = 137;
  if (has_v_list_sint64_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        137, this->_internal_v_list_sint64_float(), deterministic, target);
  }

  // .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
  if (has_v_list_sint64_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        138, this->_internal_v_list_sint64_int32(), deterministic, target);
  }

  // .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
  if (has_v_list_sint64_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        139, this->_internal_v_list_sint64_int64(), deterministic, target);
  }

  // .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
  if (has_v_list_sint64_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140, this->_internal_v_list_sint64_uint32(), deterministic, target);
  }

  // .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
  if (has_v_list_sint64_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        141, this->_internal_v_list_sint64_uint64(), deterministic, target);
  }

  // .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
  if (has_v_list_sint64_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        142, this->_internal_v_list_sint64_sint32(), deterministic, target);
  }

  // .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
  if (has_v_list_sint64_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        143, this->_internal_v_list_sint64_sint64(), deterministic, target);
  }

  // .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
  if (has_v_list_sint64_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        144, this->_internal_v_list_sint64_fixed32(), deterministic, target);
  }

  // .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
  if (has_v_list_sint64_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145, this->_internal_v_list_sint64_fixed64(), deterministic, target);
  }

  // .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
  if (has_v_list_sint64_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        146, this->_internal_v_list_sint64_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
  if (has_v_list_sint64_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        147, this->_internal_v_list_sint64_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
  if (has_v_list_sint64_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        148, this->_internal_v_list_sint64_bool(), deterministic, target);
  }

  // .feature_proto.ListSint64String v_list_sint64_string = 149;
  if (has_v_list_sint64_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        149, this->_internal_v_list_sint64_string(), deterministic, target);
  }

  // .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
  if (has_v_list_sint64_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        150, this->_internal_v_list_sint64_bytes(), deterministic, target);
  }

  // .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
  if (has_v_list_fixed32_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        151, this->_internal_v_list_fixed32_double(), deterministic, target);
  }

  // .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
  if (has_v_list_fixed32_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        152, this->_internal_v_list_fixed32_float(), deterministic, target);
  }

  // .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
  if (has_v_list_fixed32_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        153, this->_internal_v_list_fixed32_int32(), deterministic, target);
  }

  // .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
  if (has_v_list_fixed32_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        154, this->_internal_v_list_fixed32_int64(), deterministic, target);
  }

  // .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
  if (has_v_list_fixed32_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        155, this->_internal_v_list_fixed32_uint32(), deterministic, target);
  }

  // .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
  if (has_v_list_fixed32_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        156, this->_internal_v_list_fixed32_uint64(), deterministic, target);
  }

  // .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
  if (has_v_list_fixed32_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        157, this->_internal_v_list_fixed32_sint32(), deterministic, target);
  }

  // .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
  if (has_v_list_fixed32_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        158, this->_internal_v_list_fixed32_sint64(), deterministic, target);
  }

  // .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
  if (has_v_list_fixed32_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159, this->_internal_v_list_fixed32_fixed32(), deterministic, target);
  }

  // .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
  if (has_v_list_fixed32_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        160, this->_internal_v_list_fixed32_fixed64(), deterministic, target);
  }

  // .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
  if (has_v_list_fixed32_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        161, this->_internal_v_list_fixed32_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
  if (has_v_list_fixed32_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        162, this->_internal_v_list_fixed32_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
  if (has_v_list_fixed32_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        163, this->_internal_v_list_fixed32_bool(), deterministic, target);
  }

  // .feature_proto.ListFixed32String v_list_fixed32_string = 164;
  if (has_v_list_fixed32_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        164, this->_internal_v_list_fixed32_string(), deterministic, target);
  }

  // .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
  if (has_v_list_fixed32_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        165, this->_internal_v_list_fixed32_bytes(), deterministic, target);
  }

  // .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
  if (has_v_list_fixed64_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        166, this->_internal_v_list_fixed64_double(), deterministic, target);
  }

  // .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
  if (has_v_list_fixed64_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        167, this->_internal_v_list_fixed64_float(), deterministic, target);
  }

  // .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
  if (has_v_list_fixed64_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        168, this->_internal_v_list_fixed64_int32(), deterministic, target);
  }

  // .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
  if (has_v_list_fixed64_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        169, this->_internal_v_list_fixed64_int64(), deterministic, target);
  }

  // .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
  if (has_v_list_fixed64_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        170, this->_internal_v_list_fixed64_uint32(), deterministic, target);
  }

  // .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
  if (has_v_list_fixed64_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        171, this->_internal_v_list_fixed64_uint64(), deterministic, target);
  }

  // .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
  if (has_v_list_fixed64_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        172, this->_internal_v_list_fixed64_sint32(), deterministic, target);
  }

  // .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
  if (has_v_list_fixed64_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        173, this->_internal_v_list_fixed64_sint64(), deterministic, target);
  }

  // .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
  if (has_v_list_fixed64_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        174, this->_internal_v_list_fixed64_fixed32(), deterministic, target);
  }

  // .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
  if (has_v_list_fixed64_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        175, this->_internal_v_list_fixed64_fixed64(), deterministic, target);
  }

  // .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
  if (has_v_list_fixed64_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        176, this->_internal_v_list_fixed64_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
  if (has_v_list_fixed64_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        177, this->_internal_v_list_fixed64_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
  if (has_v_list_fixed64_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        178, this->_internal_v_list_fixed64_bool(), deterministic, target);
  }

  // .feature_proto.ListFixed64String v_list_fixed64_string = 179;
  if (has_v_list_fixed64_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        179, this->_internal_v_list_fixed64_string(), deterministic, target);
  }

  // .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
  if (has_v_list_fixed64_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        180, this->_internal_v_list_fixed64_bytes(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
  if (has_v_list_sfixed32_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        181, this->_internal_v_list_sfixed32_double(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
  if (has_v_list_sfixed32_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        182, this->_internal_v_list_sfixed32_float(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
  if (has_v_list_sfixed32_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        183, this->_internal_v_list_sfixed32_int32(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
  if (has_v_list_sfixed32_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        184, this->_internal_v_list_sfixed32_int64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
  if (has_v_list_sfixed32_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        185, this->_internal_v_list_sfixed32_uint32(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
  if (has_v_list_sfixed32_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        186, this->_internal_v_list_sfixed32_uint64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
  if (has_v_list_sfixed32_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        187, this->_internal_v_list_sfixed32_sint32(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
  if (has_v_list_sfixed32_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        188, this->_internal_v_list_sfixed32_sint64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
  if (has_v_list_sfixed32_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        189, this->_internal_v_list_sfixed32_fixed32(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
  if (has_v_list_sfixed32_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        190, this->_internal_v_list_sfixed32_fixed64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
  if (has_v_list_sfixed32_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        191, this->_internal_v_list_sfixed32_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
  if (has_v_list_sfixed32_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        192, this->_internal_v_list_sfixed32_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
  if (has_v_list_sfixed32_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        193, this->_internal_v_list_sfixed32_bool(), deterministic, target);
  }

  // .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
  if (has_v_list_sfixed32_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        194, this->_internal_v_list_sfixed32_string(), deterministic, target);
  }

  // .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
  if (has_v_list_sfixed32_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        195, this->_internal_v_list_sfixed32_bytes(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
  if (has_v_list_sfixed64_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        196, this->_internal_v_list_sfixed64_double(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
  if (has_v_list_sfixed64_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        197, this->_internal_v_list_sfixed64_float(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
  if (has_v_list_sfixed64_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        198, this->_internal_v_list_sfixed64_int32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
  if (has_v_list_sfixed64_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        199, this->_internal_v_list_sfixed64_int64(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
  if (has_v_list_sfixed64_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        200, this->_internal_v_list_sfixed64_uint32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
  if (has_v_list_sfixed64_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        201, this->_internal_v_list_sfixed64_uint64(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
  if (has_v_list_sfixed64_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        202, this->_internal_v_list_sfixed64_sint32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
  if (has_v_list_sfixed64_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        203, this->_internal_v_list_sfixed64_sint64(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
  if (has_v_list_sfixed64_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        204, this->_internal_v_list_sfixed64_fixed32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
  if (has_v_list_sfixed64_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205, this->_internal_v_list_sfixed64_fixed64(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
  if (has_v_list_sfixed64_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        206, this->_internal_v_list_sfixed64_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
  if (has_v_list_sfixed64_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        207, this->_internal_v_list_sfixed64_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
  if (has_v_list_sfixed64_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        208, this->_internal_v_list_sfixed64_bool(), deterministic, target);
  }

  // .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
  if (has_v_list_sfixed64_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        209, this->_internal_v_list_sfixed64_string(), deterministic, target);
  }

  // .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
  if (has_v_list_sfixed64_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        210, this->_internal_v_list_sfixed64_bytes(), deterministic, target);
  }

  // .feature_proto.ListDoubleDouble v_list_double_double = 211;
  if (has_v_list_double_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        211, this->_internal_v_list_double_double(), deterministic, target);
  }

  // .feature_proto.ListDoubleFloat v_list_double_float = 212;
  if (has_v_list_double_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        212, this->_internal_v_list_double_float(), deterministic, target);
  }

  // .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
  if (has_v_list_double_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        213, this->_internal_v_list_double_int32(), deterministic, target);
  }

  // .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
  if (has_v_list_double_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        214, this->_internal_v_list_double_int64(), deterministic, target);
  }

  // .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
  if (has_v_list_double_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        215, this->_internal_v_list_double_uint32(), deterministic, target);
  }

  // .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
  if (has_v_list_double_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        216, this->_internal_v_list_double_uint64(), deterministic, target);
  }

  // .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
  if (has_v_list_double_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        217, this->_internal_v_list_double_sint32(), deterministic, target);
  }

  // .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
  if (has_v_list_double_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        218, this->_internal_v_list_double_sint64(), deterministic, target);
  }

  // .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
  if (has_v_list_double_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        219, this->_internal_v_list_double_fixed32(), deterministic, target);
  }

  // .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
  if (has_v_list_double_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        220, this->_internal_v_list_double_fixed64(), deterministic, target);
  }

  // .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
  if (has_v_list_double_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        221, this->_internal_v_list_double_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
  if (has_v_list_double_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        222, this->_internal_v_list_double_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListDoubleBool v_list_double_bool = 223;
  if (has_v_list_double_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        223, this->_internal_v_list_double_bool(), deterministic, target);
  }

  // .feature_proto.ListDoubleString v_list_double_string = 224;
  if (has_v_list_double_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        224, this->_internal_v_list_double_string(), deterministic, target);
  }

  // .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
  if (has_v_list_double_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        225, this->_internal_v_list_double_bytes(), deterministic, target);
  }

  // .feature_proto.ListFloatDouble v_list_float_double = 226;
  if (has_v_list_float_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        226, this->_internal_v_list_float_double(), deterministic, target);
  }

  // .feature_proto.ListFloatFloat v_list_float_float = 227;
  if (has_v_list_float_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        227, this->_internal_v_list_float_float(), deterministic, target);
  }

  // .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
  if (has_v_list_float_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        228, this->_internal_v_list_float_int32(), deterministic, target);
  }

  // .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
  if (has_v_list_float_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        229, this->_internal_v_list_float_int64(), deterministic, target);
  }

  // .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
  if (has_v_list_float_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        230, this->_internal_v_list_float_uint32(), deterministic, target);
  }

  // .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
  if (has_v_list_float_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        231, this->_internal_v_list_float_uint64(), deterministic, target);
  }

  // .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
  if (has_v_list_float_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        232, this->_internal_v_list_float_sint32(), deterministic, target);
  }

  // .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
  if (has_v_list_float_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        233, this->_internal_v_list_float_sint64(), deterministic, target);
  }

  // .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
  if (has_v_list_float_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        234, this->_internal_v_list_float_fixed32(), deterministic, target);
  }

  // .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
  if (has_v_list_float_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        235, this->_internal_v_list_float_fixed64(), deterministic, target);
  }

  // .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
  if (has_v_list_float_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        236, this->_internal_v_list_float_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
  if (has_v_list_float_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        237, this->_internal_v_list_float_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListFloatBool v_list_float_bool = 238;
  if (has_v_list_float_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        238, this->_internal_v_list_float_bool(), deterministic, target);
  }

  // .feature_proto.ListFloatString v_list_float_string = 239;
  if (has_v_list_float_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        239, this->_internal_v_list_float_string(), deterministic, target);
  }

  // .feature_proto.ListFloatBytes v_list_float_bytes = 240;
  if (has_v_list_float_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        240, this->_internal_v_list_float_bytes(), deterministic, target);
  }

  // .feature_proto.ListBoolDouble v_list_bool_double = 241;
  if (has_v_list_bool_double()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        241, this->_internal_v_list_bool_double(), deterministic, target);
  }

  // .feature_proto.ListBoolFloat v_list_bool_float = 242;
  if (has_v_list_bool_float()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        242, this->_internal_v_list_bool_float(), deterministic, target);
  }

  // .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
  if (has_v_list_bool_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        243, this->_internal_v_list_bool_int32(), deterministic, target);
  }

  // .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
  if (has_v_list_bool_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244, this->_internal_v_list_bool_int64(), deterministic, target);
  }

  // .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
  if (has_v_list_bool_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        245, this->_internal_v_list_bool_uint32(), deterministic, target);
  }

  // .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
  if (has_v_list_bool_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        246, this->_internal_v_list_bool_uint64(), deterministic, target);
  }

  // .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
  if (has_v_list_bool_sint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        247, this->_internal_v_list_bool_sint32(), deterministic, target);
  }

  // .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
  if (has_v_list_bool_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        248, this->_internal_v_list_bool_sint64(), deterministic, target);
  }

  // .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
  if (has_v_list_bool_fixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        249, this->_internal_v_list_bool_fixed32(), deterministic, target);
  }

  // .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
  if (has_v_list_bool_fixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        250, this->_internal_v_list_bool_fixed64(), deterministic, target);
  }

  // .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
  if (has_v_list_bool_sfixed32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        251, this->_internal_v_list_bool_sfixed32(), deterministic, target);
  }

  // .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
  if (has_v_list_bool_sfixed64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252, this->_internal_v_list_bool_sfixed64(), deterministic, target);
  }

  // .feature_proto.ListBoolBool v_list_bool_bool = 253;
  if (has_v_list_bool_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        253, this->_internal_v_list_bool_bool(), deterministic, target);
  }

  // .feature_proto.ListBoolString v_list_bool_string = 254;
  if (has_v_list_bool_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        254, this->_internal_v_list_bool_string(), deterministic, target);
  }

  // .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
  if (has_v_list_bool_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        255, this->_internal_v_list_bool_bytes(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.Feature)
  return target;
}

size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.Feature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (kind_case()) {
    // double v_double = 1;
    case kVDouble: {
      total_size += 1 + 8;
      break;
    }
    // float v_float = 2;
    case kVFloat: {
      total_size += 1 + 4;
      break;
    }
    // int32 v_int32 = 3;
    case kVInt32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->v_int32());
      break;
    }
    // int64 v_int64 = 4;
    case kVInt64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->v_int64());
      break;
    }
    // uint32 v_uint32 = 5;
    case kVUint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v_uint32());
      break;
    }
    // uint64 v_uint64 = 6;
    case kVUint64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->v_uint64());
      break;
    }
    // sint32 v_sint32 = 7;
    case kVSint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->v_sint32());
      break;
    }
    // sint64 v_sint64 = 8;
    case kVSint64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->v_sint64());
      break;
    }
    // fixed32 v_fixed32 = 9;
    case kVFixed32: {
      total_size += 1 + 4;
      break;
    }
    // fixed64 v_fixed64 = 10;
    case kVFixed64: {
      total_size += 1 + 8;
      break;
    }
    // sfixed32 v_sfixed32 = 11;
    case kVSfixed32: {
      total_size += 1 + 4;
      break;
    }
    // sfixed64 v_sfixed64 = 12;
    case kVSfixed64: {
      total_size += 1 + 8;
      break;
    }
    // bool v_bool = 13;
    case kVBool: {
      total_size += 1 + 1;
      break;
    }
    // string v_string = 14;
    case kVString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->v_string());
      break;
    }
    // bytes v_bytes = 15;
    case kVBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v_bytes());
      break;
    }
    // .feature_proto.ListDouble v_list_double = 16;
    case kVListDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_);
      break;
    }
    // .feature_proto.ListFloat v_list_float = 17;
    case kVListFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_);
      break;
    }
    // .feature_proto.ListInt32 v_list_int32 = 18;
    case kVListInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_);
      break;
    }
    // .feature_proto.ListInt64 v_list_int64 = 19;
    case kVListInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_);
      break;
    }
    // .feature_proto.ListUint32 v_list_uint32 = 20;
    case kVListUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_);
      break;
    }
    // .feature_proto.ListUint64 v_list_uint64 = 21;
    case kVListUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_);
      break;
    }
    // .feature_proto.ListSint32 v_list_sint32 = 22;
    case kVListSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_);
      break;
    }
    // .feature_proto.ListSint64 v_list_sint64 = 23;
    case kVListSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_);
      break;
    }
    // .feature_proto.ListFixed32 v_list_fixed32 = 24;
    case kVListFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_);
      break;
    }
    // .feature_proto.ListFixed64 v_list_fixed64 = 25;
    case kVListFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_);
      break;
    }
    // .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
    case kVListSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_);
      break;
    }
    // .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
    case kVListSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_);
      break;
    }
    // .feature_proto.ListBool v_list_bool = 28;
    case kVListBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_);
      break;
    }
    // .feature_proto.ListString v_list_string = 29;
    case kVListString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_);
      break;
    }
    // .feature_proto.ListBytes v_list_bytes = 30;
    case kVListBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_);
      break;
    }
    // .feature_proto.ListStringDouble v_list_string_double = 31;
    case kVListStringDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_double_);
      break;
    }
    // .feature_proto.ListStringFloat v_list_string_float = 32;
    case kVListStringFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_float_);
      break;
    }
    // .feature_proto.ListStringInt32 v_list_string_int32 = 33;
    case kVListStringInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_int32_);
      break;
    }
    // .feature_proto.ListStringInt64 v_list_string_int64 = 34;
    case kVListStringInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_int64_);
      break;
    }
    // .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
    case kVListStringUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_uint32_);
      break;
    }
    // .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
    case kVListStringUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_uint64_);
      break;
    }
    // .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
    case kVListStringSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_sint32_);
      break;
    }
    // .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
    case kVListStringSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_sint64_);
      break;
    }
    // .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
    case kVListStringFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_fixed32_);
      break;
    }
    // .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
    case kVListStringFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_fixed64_);
      break;
    }
    // .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
    case kVListStringSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_sfixed32_);
      break;
    }
    // .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
    case kVListStringSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_sfixed64_);
      break;
    }
    // .feature_proto.ListStringBool v_list_string_bool = 43;
    case kVListStringBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_bool_);
      break;
    }
    // .feature_proto.ListStringString v_list_string_string = 44;
    case kVListStringString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_string_);
      break;
    }
    // .feature_proto.ListStringBytes v_list_string_bytes = 45;
    case kVListStringBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_string_bytes_);
      break;
    }
    // .feature_proto.ListBytesDouble v_list_bytes_double = 46;
    case kVListBytesDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_double_);
      break;
    }
    // .feature_proto.ListBytesFloat v_list_bytes_float = 47;
    case kVListBytesFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_float_);
      break;
    }
    // .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
    case kVListBytesInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_int32_);
      break;
    }
    // .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
    case kVListBytesInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_int64_);
      break;
    }
    // .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
    case kVListBytesUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_uint32_);
      break;
    }
    // .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
    case kVListBytesUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_uint64_);
      break;
    }
    // .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
    case kVListBytesSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_sint32_);
      break;
    }
    // .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
    case kVListBytesSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_sint64_);
      break;
    }
    // .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
    case kVListBytesFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_fixed32_);
      break;
    }
    // .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
    case kVListBytesFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_fixed64_);
      break;
    }
    // .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
    case kVListBytesSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_sfixed32_);
      break;
    }
    // .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
    case kVListBytesSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_sfixed64_);
      break;
    }
    // .feature_proto.ListBytesBool v_list_bytes_bool = 58;
    case kVListBytesBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_bool_);
      break;
    }
    // .feature_proto.ListBytesString v_list_bytes_string = 59;
    case kVListBytesString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_string_);
      break;
    }
    // .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
    case kVListBytesBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bytes_bytes_);
      break;
    }
    // .feature_proto.ListInt32Double v_list_int32_double = 61;
    case kVListInt32Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_double_);
      break;
    }
    // .feature_proto.ListInt32Float v_list_int32_float = 62;
    case kVListInt32Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_float_);
      break;
    }
    // .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
    case kVListInt32Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_int32_);
      break;
    }
    // .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
    case kVListInt32Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_int64_);
      break;
    }
    // .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
    case kVListInt32Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_uint32_);
      break;
    }
    // .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
    case kVListInt32Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_uint64_);
      break;
    }
    // .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
    case kVListInt32Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_sint32_);
      break;
    }
    // .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
    case kVListInt32Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_sint64_);
      break;
    }
    // .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
    case kVListInt32Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_fixed32_);
      break;
    }
    // .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
    case kVListInt32Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_fixed64_);
      break;
    }
    // .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
    case kVListInt32Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_sfixed32_);
      break;
    }
    // .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
    case kVListInt32Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_sfixed64_);
      break;
    }
    // .feature_proto.ListInt32Bool v_list_int32_bool = 73;
    case kVListInt32Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_bool_);
      break;
    }
    // .feature_proto.ListInt32String v_list_int32_string = 74;
    case kVListInt32String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_string_);
      break;
    }
    // .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
    case kVListInt32Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int32_bytes_);
      break;
    }
    // .feature_proto.ListInt64Double v_list_int64_double = 76;
    case kVListInt64Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_double_);
      break;
    }
    // .feature_proto.ListInt64Float v_list_int64_float = 77;
    case kVListInt64Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_float_);
      break;
    }
    // .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
    case kVListInt64Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_int32_);
      break;
    }
    // .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
    case kVListInt64Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_int64_);
      break;
    }
    // .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
    case kVListInt64Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_uint32_);
      break;
    }
    // .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
    case kVListInt64Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_uint64_);
      break;
    }
    // .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
    case kVListInt64Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_sint32_);
      break;
    }
    // .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
    case kVListInt64Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_sint64_);
      break;
    }
    // .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
    case kVListInt64Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_fixed32_);
      break;
    }
    // .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
    case kVListInt64Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_fixed64_);
      break;
    }
    // .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
    case kVListInt64Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_sfixed32_);
      break;
    }
    // .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
    case kVListInt64Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_sfixed64_);
      break;
    }
    // .feature_proto.ListInt64Bool v_list_int64_bool = 88;
    case kVListInt64Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_bool_);
      break;
    }
    // .feature_proto.ListInt64String v_list_int64_string = 89;
    case kVListInt64String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_string_);
      break;
    }
    // .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
    case kVListInt64Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_int64_bytes_);
      break;
    }
    // .feature_proto.ListUint32Double v_list_uint32_double = 91;
    case kVListUint32Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_double_);
      break;
    }
    // .feature_proto.ListUint32Float v_list_uint32_float = 92;
    case kVListUint32Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_float_);
      break;
    }
    // .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
    case kVListUint32Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_int32_);
      break;
    }
    // .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
    case kVListUint32Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_int64_);
      break;
    }
    // .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
    case kVListUint32Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_uint32_);
      break;
    }
    // .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
    case kVListUint32Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_uint64_);
      break;
    }
    // .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
    case kVListUint32Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_sint32_);
      break;
    }
    // .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
    case kVListUint32Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_sint64_);
      break;
    }
    // .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
    case kVListUint32Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_fixed32_);
      break;
    }
    // .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
    case kVListUint32Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_fixed64_);
      break;
    }
    // .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
    case kVListUint32Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_sfixed32_);
      break;
    }
    // .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
    case kVListUint32Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_sfixed64_);
      break;
    }
    // .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
    case kVListUint32Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_bool_);
      break;
    }
    // .feature_proto.ListUint32String v_list_uint32_string = 104;
    case kVListUint32String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_string_);
      break;
    }
    // .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
    case kVListUint32Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint32_bytes_);
      break;
    }
    // .feature_proto.ListUint64Double v_list_uint64_double = 106;
    case kVListUint64Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_double_);
      break;
    }
    // .feature_proto.ListUint64Float v_list_uint64_float = 107;
    case kVListUint64Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_float_);
      break;
    }
    // .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
    case kVListUint64Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_int32_);
      break;
    }
    // .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
    case kVListUint64Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_int64_);
      break;
    }
    // .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
    case kVListUint64Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_uint32_);
      break;
    }
    // .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
    case kVListUint64Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_uint64_);
      break;
    }
    // .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
    case kVListUint64Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_sint32_);
      break;
    }
    // .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
    case kVListUint64Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_sint64_);
      break;
    }
    // .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
    case kVListUint64Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_fixed32_);
      break;
    }
    // .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
    case kVListUint64Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_fixed64_);
      break;
    }
    // .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
    case kVListUint64Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_sfixed32_);
      break;
    }
    // .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
    case kVListUint64Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_sfixed64_);
      break;
    }
    // .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
    case kVListUint64Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_bool_);
      break;
    }
    // .feature_proto.ListUint64String v_list_uint64_string = 119;
    case kVListUint64String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_string_);
      break;
    }
    // .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
    case kVListUint64Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_uint64_bytes_);
      break;
    }
    // .feature_proto.ListSint32Double v_list_sint32_double = 121;
    case kVListSint32Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_double_);
      break;
    }
    // .feature_proto.ListSint32Float v_list_sint32_float = 122;
    case kVListSint32Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_float_);
      break;
    }
    // .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
    case kVListSint32Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_int32_);
      break;
    }
    // .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
    case kVListSint32Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_int64_);
      break;
    }
    // .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
    case kVListSint32Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_uint32_);
      break;
    }
    // .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
    case kVListSint32Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_uint64_);
      break;
    }
    // .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
    case kVListSint32Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_sint32_);
      break;
    }
    // .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
    case kVListSint32Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_sint64_);
      break;
    }
    // .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
    case kVListSint32Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_fixed32_);
      break;
    }
    // .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
    case kVListSint32Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_fixed64_);
      break;
    }
    // .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
    case kVListSint32Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_sfixed32_);
      break;
    }
    // .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
    case kVListSint32Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_sfixed64_);
      break;
    }
    // .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
    case kVListSint32Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_bool_);
      break;
    }
    // .feature_proto.ListSint32String v_list_sint32_string = 134;
    case kVListSint32String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_string_);
      break;
    }
    // .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
    case kVListSint32Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint32_bytes_);
      break;
    }
    // .feature_proto.ListSint64Double v_list_sint64_double = 136;
    case kVListSint64Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_double_);
      break;
    }
    // .feature_proto.ListSint64Float v_list_sint64_float = 137;
    case kVListSint64Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_float_);
      break;
    }
    // .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
    case kVListSint64Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_int32_);
      break;
    }
    // .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
    case kVListSint64Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_int64_);
      break;
    }
    // .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
    case kVListSint64Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_uint32_);
      break;
    }
    // .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
    case kVListSint64Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_uint64_);
      break;
    }
    // .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
    case kVListSint64Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_sint32_);
      break;
    }
    // .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
    case kVListSint64Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_sint64_);
      break;
    }
    // .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
    case kVListSint64Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_fixed32_);
      break;
    }
    // .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
    case kVListSint64Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_fixed64_);
      break;
    }
    // .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
    case kVListSint64Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_sfixed32_);
      break;
    }
    // .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
    case kVListSint64Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_sfixed64_);
      break;
    }
    // .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
    case kVListSint64Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_bool_);
      break;
    }
    // .feature_proto.ListSint64String v_list_sint64_string = 149;
    case kVListSint64String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_string_);
      break;
    }
    // .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
    case kVListSint64Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sint64_bytes_);
      break;
    }
    // .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
    case kVListFixed32Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_double_);
      break;
    }
    // .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
    case kVListFixed32Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_float_);
      break;
    }
    // .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
    case kVListFixed32Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_int32_);
      break;
    }
    // .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
    case kVListFixed32Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_int64_);
      break;
    }
    // .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
    case kVListFixed32Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_uint32_);
      break;
    }
    // .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
    case kVListFixed32Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_uint64_);
      break;
    }
    // .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
    case kVListFixed32Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_sint32_);
      break;
    }
    // .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
    case kVListFixed32Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_sint64_);
      break;
    }
    // .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
    case kVListFixed32Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_fixed32_);
      break;
    }
    // .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
    case kVListFixed32Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_fixed64_);
      break;
    }
    // .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
    case kVListFixed32Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_sfixed32_);
      break;
    }
    // .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
    case kVListFixed32Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_sfixed64_);
      break;
    }
    // .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
    case kVListFixed32Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_bool_);
      break;
    }
    // .feature_proto.ListFixed32String v_list_fixed32_string = 164;
    case kVListFixed32String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_string_);
      break;
    }
    // .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
    case kVListFixed32Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed32_bytes_);
      break;
    }
    // .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
    case kVListFixed64Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_double_);
      break;
    }
    // .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
    case kVListFixed64Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_float_);
      break;
    }
    // .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
    case kVListFixed64Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_int32_);
      break;
    }
    // .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
    case kVListFixed64Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_int64_);
      break;
    }
    // .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
    case kVListFixed64Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_uint32_);
      break;
    }
    // .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
    case kVListFixed64Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_uint64_);
      break;
    }
    // .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
    case kVListFixed64Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_sint32_);
      break;
    }
    // .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
    case kVListFixed64Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_sint64_);
      break;
    }
    // .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
    case kVListFixed64Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_fixed32_);
      break;
    }
    // .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
    case kVListFixed64Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_fixed64_);
      break;
    }
    // .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
    case kVListFixed64Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_sfixed32_);
      break;
    }
    // .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
    case kVListFixed64Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_sfixed64_);
      break;
    }
    // .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
    case kVListFixed64Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_bool_);
      break;
    }
    // .feature_proto.ListFixed64String v_list_fixed64_string = 179;
    case kVListFixed64String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_string_);
      break;
    }
    // .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
    case kVListFixed64Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_fixed64_bytes_);
      break;
    }
    // .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
    case kVListSfixed32Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_double_);
      break;
    }
    // .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
    case kVListSfixed32Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_float_);
      break;
    }
    // .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
    case kVListSfixed32Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_int32_);
      break;
    }
    // .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
    case kVListSfixed32Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_int64_);
      break;
    }
    // .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
    case kVListSfixed32Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_uint32_);
      break;
    }
    // .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
    case kVListSfixed32Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_uint64_);
      break;
    }
    // .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
    case kVListSfixed32Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_sint32_);
      break;
    }
    // .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
    case kVListSfixed32Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_sint64_);
      break;
    }
    // .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
    case kVListSfixed32Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_fixed32_);
      break;
    }
    // .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
    case kVListSfixed32Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_fixed64_);
      break;
    }
    // .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
    case kVListSfixed32Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_sfixed32_);
      break;
    }
    // .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
    case kVListSfixed32Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_sfixed64_);
      break;
    }
    // .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
    case kVListSfixed32Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_bool_);
      break;
    }
    // .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
    case kVListSfixed32String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_string_);
      break;
    }
    // .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
    case kVListSfixed32Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed32_bytes_);
      break;
    }
    // .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
    case kVListSfixed64Double: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_double_);
      break;
    }
    // .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
    case kVListSfixed64Float: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_float_);
      break;
    }
    // .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
    case kVListSfixed64Int32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_int32_);
      break;
    }
    // .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
    case kVListSfixed64Int64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_int64_);
      break;
    }
    // .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
    case kVListSfixed64Uint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_uint32_);
      break;
    }
    // .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
    case kVListSfixed64Uint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_uint64_);
      break;
    }
    // .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
    case kVListSfixed64Sint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_sint32_);
      break;
    }
    // .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
    case kVListSfixed64Sint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_sint64_);
      break;
    }
    // .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
    case kVListSfixed64Fixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_fixed32_);
      break;
    }
    // .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
    case kVListSfixed64Fixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_fixed64_);
      break;
    }
    // .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
    case kVListSfixed64Sfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_sfixed32_);
      break;
    }
    // .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
    case kVListSfixed64Sfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_sfixed64_);
      break;
    }
    // .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
    case kVListSfixed64Bool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_bool_);
      break;
    }
    // .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
    case kVListSfixed64String: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_string_);
      break;
    }
    // .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
    case kVListSfixed64Bytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_sfixed64_bytes_);
      break;
    }
    // .feature_proto.ListDoubleDouble v_list_double_double = 211;
    case kVListDoubleDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_double_);
      break;
    }
    // .feature_proto.ListDoubleFloat v_list_double_float = 212;
    case kVListDoubleFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_float_);
      break;
    }
    // .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
    case kVListDoubleInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_int32_);
      break;
    }
    // .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
    case kVListDoubleInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_int64_);
      break;
    }
    // .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
    case kVListDoubleUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_uint32_);
      break;
    }
    // .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
    case kVListDoubleUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_uint64_);
      break;
    }
    // .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
    case kVListDoubleSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_sint32_);
      break;
    }
    // .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
    case kVListDoubleSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_sint64_);
      break;
    }
    // .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
    case kVListDoubleFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_fixed32_);
      break;
    }
    // .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
    case kVListDoubleFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_fixed64_);
      break;
    }
    // .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
    case kVListDoubleSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_sfixed32_);
      break;
    }
    // .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
    case kVListDoubleSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_sfixed64_);
      break;
    }
    // .feature_proto.ListDoubleBool v_list_double_bool = 223;
    case kVListDoubleBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_bool_);
      break;
    }
    // .feature_proto.ListDoubleString v_list_double_string = 224;
    case kVListDoubleString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_string_);
      break;
    }
    // .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
    case kVListDoubleBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_double_bytes_);
      break;
    }
    // .feature_proto.ListFloatDouble v_list_float_double = 226;
    case kVListFloatDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_double_);
      break;
    }
    // .feature_proto.ListFloatFloat v_list_float_float = 227;
    case kVListFloatFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_float_);
      break;
    }
    // .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
    case kVListFloatInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_int32_);
      break;
    }
    // .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
    case kVListFloatInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_int64_);
      break;
    }
    // .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
    case kVListFloatUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_uint32_);
      break;
    }
    // .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
    case kVListFloatUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_uint64_);
      break;
    }
    // .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
    case kVListFloatSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_sint32_);
      break;
    }
    // .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
    case kVListFloatSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_sint64_);
      break;
    }
    // .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
    case kVListFloatFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_fixed32_);
      break;
    }
    // .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
    case kVListFloatFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_fixed64_);
      break;
    }
    // .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
    case kVListFloatSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_sfixed32_);
      break;
    }
    // .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
    case kVListFloatSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_sfixed64_);
      break;
    }
    // .feature_proto.ListFloatBool v_list_float_bool = 238;
    case kVListFloatBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_bool_);
      break;
    }
    // .feature_proto.ListFloatString v_list_float_string = 239;
    case kVListFloatString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_string_);
      break;
    }
    // .feature_proto.ListFloatBytes v_list_float_bytes = 240;
    case kVListFloatBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_float_bytes_);
      break;
    }
    // .feature_proto.ListBoolDouble v_list_bool_double = 241;
    case kVListBoolDouble: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_double_);
      break;
    }
    // .feature_proto.ListBoolFloat v_list_bool_float = 242;
    case kVListBoolFloat: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_float_);
      break;
    }
    // .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
    case kVListBoolInt32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_int32_);
      break;
    }
    // .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
    case kVListBoolInt64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_int64_);
      break;
    }
    // .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
    case kVListBoolUint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_uint32_);
      break;
    }
    // .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
    case kVListBoolUint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_uint64_);
      break;
    }
    // .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
    case kVListBoolSint32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_sint32_);
      break;
    }
    // .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
    case kVListBoolSint64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_sint64_);
      break;
    }
    // .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
    case kVListBoolFixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_fixed32_);
      break;
    }
    // .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
    case kVListBoolFixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_fixed64_);
      break;
    }
    // .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
    case kVListBoolSfixed32: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_sfixed32_);
      break;
    }
    // .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
    case kVListBoolSfixed64: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_sfixed64_);
      break;
    }
    // .feature_proto.ListBoolBool v_list_bool_bool = 253;
    case kVListBoolBool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_bool_);
      break;
    }
    // .feature_proto.ListBoolString v_list_bool_string = 254;
    case kVListBoolString: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_string_);
      break;
    }
    // .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
    case kVListBoolBytes: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.v_list_bool_bytes_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  const Feature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.Feature)
    MergeFrom(*source);
  }
}

void Feature::MergeFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kVDouble: {
      set_v_double(from.v_double());
      break;
    }
    case kVFloat: {
      set_v_float(from.v_float());
      break;
    }
    case kVInt32: {
      set_v_int32(from.v_int32());
      break;
    }
    case kVInt64: {
      set_v_int64(from.v_int64());
      break;
    }
    case kVUint32: {
      set_v_uint32(from.v_uint32());
      break;
    }
    case kVUint64: {
      set_v_uint64(from.v_uint64());
      break;
    }
    case kVSint32: {
      set_v_sint32(from.v_sint32());
      break;
    }
    case kVSint64: {
      set_v_sint64(from.v_sint64());
      break;
    }
    case kVFixed32: {
      set_v_fixed32(from.v_fixed32());
      break;
    }
    case kVFixed64: {
      set_v_fixed64(from.v_fixed64());
      break;
    }
    case kVSfixed32: {
      set_v_sfixed32(from.v_sfixed32());
      break;
    }
    case kVSfixed64: {
      set_v_sfixed64(from.v_sfixed64());
      break;
    }
    case kVBool: {
      set_v_bool(from.v_bool());
      break;
    }
    case kVString: {
      set_v_string(from.v_string());
      break;
    }
    case kVBytes: {
      set_v_bytes(from.v_bytes());
      break;
    }
    case kVListDouble: {
      mutable_v_list_double()->::feature_proto::ListDouble::MergeFrom(from.v_list_double());
      break;
    }
    case kVListFloat: {
      mutable_v_list_float()->::feature_proto::ListFloat::MergeFrom(from.v_list_float());
      break;
    }
    case kVListInt32: {
      mutable_v_list_int32()->::feature_proto::ListInt32::MergeFrom(from.v_list_int32());
      break;
    }
    case kVListInt64: {
      mutable_v_list_int64()->::feature_proto::ListInt64::MergeFrom(from.v_list_int64());
      break;
    }
    case kVListUint32: {
      mutable_v_list_uint32()->::feature_proto::ListUint32::MergeFrom(from.v_list_uint32());
      break;
    }
    case kVListUint64: {
      mutable_v_list_uint64()->::feature_proto::ListUint64::MergeFrom(from.v_list_uint64());
      break;
    }
    case kVListSint32: {
      mutable_v_list_sint32()->::feature_proto::ListSint32::MergeFrom(from.v_list_sint32());
      break;
    }
    case kVListSint64: {
      mutable_v_list_sint64()->::feature_proto::ListSint64::MergeFrom(from.v_list_sint64());
      break;
    }
    case kVListFixed32: {
      mutable_v_list_fixed32()->::feature_proto::ListFixed32::MergeFrom(from.v_list_fixed32());
      break;
    }
    case kVListFixed64: {
      mutable_v_list_fixed64()->::feature_proto::ListFixed64::MergeFrom(from.v_list_fixed64());
      break;
    }
    case kVListSfixed32: {
      mutable_v_list_sfixed32()->::feature_proto::ListSfixed32::MergeFrom(from.v_list_sfixed32());
      break;
    }
    case kVListSfixed64: {
      mutable_v_list_sfixed64()->::feature_proto::ListSfixed64::MergeFrom(from.v_list_sfixed64());
      break;
    }
    case kVListBool: {
      mutable_v_list_bool()->::feature_proto::ListBool::MergeFrom(from.v_list_bool());
      break;
    }
    case kVListString: {
      mutable_v_list_string()->::feature_proto::ListString::MergeFrom(from.v_list_string());
      break;
    }
    case kVListBytes: {
      mutable_v_list_bytes()->::feature_proto::ListBytes::MergeFrom(from.v_list_bytes());
      break;
    }
    case kVListStringDouble: {
      mutable_v_list_string_double()->::feature_proto::ListStringDouble::MergeFrom(from.v_list_string_double());
      break;
    }
    case kVListStringFloat: {
      mutable_v_list_string_float()->::feature_proto::ListStringFloat::MergeFrom(from.v_list_string_float());
      break;
    }
    case kVListStringInt32: {
      mutable_v_list_string_int32()->::feature_proto::ListStringInt32::MergeFrom(from.v_list_string_int32());
      break;
    }
    case kVListStringInt64: {
      mutable_v_list_string_int64()->::feature_proto::ListStringInt64::MergeFrom(from.v_list_string_int64());
      break;
    }
    case kVListStringUint32: {
      mutable_v_list_string_uint32()->::feature_proto::ListStringUint32::MergeFrom(from.v_list_string_uint32());
      break;
    }
    case kVListStringUint64: {
      mutable_v_list_string_uint64()->::feature_proto::ListStringUint64::MergeFrom(from.v_list_string_uint64());
      break;
    }
    case kVListStringSint32: {
      mutable_v_list_string_sint32()->::feature_proto::ListStringSint32::MergeFrom(from.v_list_string_sint32());
      break;
    }
    case kVListStringSint64: {
      mutable_v_list_string_sint64()->::feature_proto::ListStringSint64::MergeFrom(from.v_list_string_sint64());
      break;
    }
    case kVListStringFixed32: {
      mutable_v_list_string_fixed32()->::feature_proto::ListStringFixed32::MergeFrom(from.v_list_string_fixed32());
      break;
    }
    case kVListStringFixed64: {
      mutable_v_list_string_fixed64()->::feature_proto::ListStringFixed64::MergeFrom(from.v_list_string_fixed64());
      break;
    }
    case kVListStringSfixed32: {
      mutable_v_list_string_sfixed32()->::feature_proto::ListStringSfixed32::MergeFrom(from.v_list_string_sfixed32());
      break;
    }
    case kVListStringSfixed64: {
      mutable_v_list_string_sfixed64()->::feature_proto::ListStringSfixed64::MergeFrom(from.v_list_string_sfixed64());
      break;
    }
    case kVListStringBool: {
      mutable_v_list_string_bool()->::feature_proto::ListStringBool::MergeFrom(from.v_list_string_bool());
      break;
    }
    case kVListStringString: {
      mutable_v_list_string_string()->::feature_proto::ListStringString::MergeFrom(from.v_list_string_string());
      break;
    }
    case kVListStringBytes: {
      mutable_v_list_string_bytes()->::feature_proto::ListStringBytes::MergeFrom(from.v_list_string_bytes());
      break;
    }
    case kVListBytesDouble: {
      mutable_v_list_bytes_double()->::feature_proto::ListBytesDouble::MergeFrom(from.v_list_bytes_double());
      break;
    }
    case kVListBytesFloat: {
      mutable_v_list_bytes_float()->::feature_proto::ListBytesFloat::MergeFrom(from.v_list_bytes_float());
      break;
    }
    case kVListBytesInt32: {
      mutable_v_list_bytes_int32()->::feature_proto::ListBytesInt32::MergeFrom(from.v_list_bytes_int32());
      break;
    }
    case kVListBytesInt64: {
      mutable_v_list_bytes_int64()->::feature_proto::ListBytesInt64::MergeFrom(from.v_list_bytes_int64());
      break;
    }
    case kVListBytesUint32: {
      mutable_v_list_bytes_uint32()->::feature_proto::ListBytesUint32::MergeFrom(from.v_list_bytes_uint32());
      break;
    }
    case kVListBytesUint64: {
      mutable_v_list_bytes_uint64()->::feature_proto::ListBytesUint64::MergeFrom(from.v_list_bytes_uint64());
      break;
    }
    case kVListBytesSint32: {
      mutable_v_list_bytes_sint32()->::feature_proto::ListBytesSint32::MergeFrom(from.v_list_bytes_sint32());
      break;
    }
    case kVListBytesSint64: {
      mutable_v_list_bytes_sint64()->::feature_proto::ListBytesSint64::MergeFrom(from.v_list_bytes_sint64());
      break;
    }
    case kVListBytesFixed32: {
      mutable_v_list_bytes_fixed32()->::feature_proto::ListBytesFixed32::MergeFrom(from.v_list_bytes_fixed32());
      break;
    }
    case kVListBytesFixed64: {
      mutable_v_list_bytes_fixed64()->::feature_proto::ListBytesFixed64::MergeFrom(from.v_list_bytes_fixed64());
      break;
    }
    case kVListBytesSfixed32: {
      mutable_v_list_bytes_sfixed32()->::feature_proto::ListBytesSfixed32::MergeFrom(from.v_list_bytes_sfixed32());
      break;
    }
    case kVListBytesSfixed64: {
      mutable_v_list_bytes_sfixed64()->::feature_proto::ListBytesSfixed64::MergeFrom(from.v_list_bytes_sfixed64());
      break;
    }
    case kVListBytesBool: {
      mutable_v_list_bytes_bool()->::feature_proto::ListBytesBool::MergeFrom(from.v_list_bytes_bool());
      break;
    }
    case kVListBytesString: {
      mutable_v_list_bytes_string()->::feature_proto::ListBytesString::MergeFrom(from.v_list_bytes_string());
      break;
    }
    case kVListBytesBytes: {
      mutable_v_list_bytes_bytes()->::feature_proto::ListBytesBytes::MergeFrom(from.v_list_bytes_bytes());
      break;
    }
    case kVListInt32Double: {
      mutable_v_list_int32_double()->::feature_proto::ListInt32Double::MergeFrom(from.v_list_int32_double());
      break;
    }
    case kVListInt32Float: {
      mutable_v_list_int32_float()->::feature_proto::ListInt32Float::MergeFrom(from.v_list_int32_float());
      break;
    }
    case kVListInt32Int32: {
      mutable_v_list_int32_int32()->::feature_proto::ListInt32Int32::MergeFrom(from.v_list_int32_int32());
      break;
    }
    case kVListInt32Int64: {
      mutable_v_list_int32_int64()->::feature_proto::ListInt32Int64::MergeFrom(from.v_list_int32_int64());
      break;
    }
    case kVListInt32Uint32: {
      mutable_v_list_int32_uint32()->::feature_proto::ListInt32Uint32::MergeFrom(from.v_list_int32_uint32());
      break;
    }
    case kVListInt32Uint64: {
      mutable_v_list_int32_uint64()->::feature_proto::ListInt32Uint64::MergeFrom(from.v_list_int32_uint64());
      break;
    }
    case kVListInt32Sint32: {
      mutable_v_list_int32_sint32()->::feature_proto::ListInt32Sint32::MergeFrom(from.v_list_int32_sint32());
      break;
    }
    case kVListInt32Sint64: {
      mutable_v_list_int32_sint64()->::feature_proto::ListInt32Sint64::MergeFrom(from.v_list_int32_sint64());
      break;
    }
    case kVListInt32Fixed32: {
      mutable_v_list_int32_fixed32()->::feature_proto::ListInt32Fixed32::MergeFrom(from.v_list_int32_fixed32());
      break;
    }
    case kVListInt32Fixed64: {
      mutable_v_list_int32_fixed64()->::feature_proto::ListInt32Fixed64::MergeFrom(from.v_list_int32_fixed64());
      break;
    }
    case kVListInt32Sfixed32: {
      mutable_v_list_int32_sfixed32()->::feature_proto::ListInt32Sfixed32::MergeFrom(from.v_list_int32_sfixed32());
      break;
    }
    case kVListInt32Sfixed64: {
      mutable_v_list_int32_sfixed64()->::feature_proto::ListInt32Sfixed64::MergeFrom(from.v_list_int32_sfixed64());
      break;
    }
    case kVListInt32Bool: {
      mutable_v_list_int32_bool()->::feature_proto::ListInt32Bool::MergeFrom(from.v_list_int32_bool());
      break;
    }
    case kVListInt32String: {
      mutable_v_list_int32_string()->::feature_proto::ListInt32String::MergeFrom(from.v_list_int32_string());
      break;
    }
    case kVListInt32Bytes: {
      mutable_v_list_int32_bytes()->::feature_proto::ListInt32Bytes::MergeFrom(from.v_list_int32_bytes());
      break;
    }
    case kVListInt64Double: {
      mutable_v_list_int64_double()->::feature_proto::ListInt64Double::MergeFrom(from.v_list_int64_double());
      break;
    }
    case kVListInt64Float: {
      mutable_v_list_int64_float()->::feature_proto::ListInt64Float::MergeFrom(from.v_list_int64_float());
      break;
    }
    case kVListInt64Int32: {
      mutable_v_list_int64_int32()->::feature_proto::ListInt64Int32::MergeFrom(from.v_list_int64_int32());
      break;
    }
    case kVListInt64Int64: {
      mutable_v_list_int64_int64()->::feature_proto::ListInt64Int64::MergeFrom(from.v_list_int64_int64());
      break;
    }
    case kVListInt64Uint32: {
      mutable_v_list_int64_uint32()->::feature_proto::ListInt64Uint32::MergeFrom(from.v_list_int64_uint32());
      break;
    }
    case kVListInt64Uint64: {
      mutable_v_list_int64_uint64()->::feature_proto::ListInt64Uint64::MergeFrom(from.v_list_int64_uint64());
      break;
    }
    case kVListInt64Sint32: {
      mutable_v_list_int64_sint32()->::feature_proto::ListInt64Sint32::MergeFrom(from.v_list_int64_sint32());
      break;
    }
    case kVListInt64Sint64: {
      mutable_v_list_int64_sint64()->::feature_proto::ListInt64Sint64::MergeFrom(from.v_list_int64_sint64());
      break;
    }
    case kVListInt64Fixed32: {
      mutable_v_list_int64_fixed32()->::feature_proto::ListInt64Fixed32::MergeFrom(from.v_list_int64_fixed32());
      break;
    }
    case kVListInt64Fixed64: {
      mutable_v_list_int64_fixed64()->::feature_proto::ListInt64Fixed64::MergeFrom(from.v_list_int64_fixed64());
      break;
    }
    case kVListInt64Sfixed32: {
      mutable_v_list_int64_sfixed32()->::feature_proto::ListInt64Sfixed32::MergeFrom(from.v_list_int64_sfixed32());
      break;
    }
    case kVListInt64Sfixed64: {
      mutable_v_list_int64_sfixed64()->::feature_proto::ListInt64Sfixed64::MergeFrom(from.v_list_int64_sfixed64());
      break;
    }
    case kVListInt64Bool: {
      mutable_v_list_int64_bool()->::feature_proto::ListInt64Bool::MergeFrom(from.v_list_int64_bool());
      break;
    }
    case kVListInt64String: {
      mutable_v_list_int64_string()->::feature_proto::ListInt64String::MergeFrom(from.v_list_int64_string());
      break;
    }
    case kVListInt64Bytes: {
      mutable_v_list_int64_bytes()->::feature_proto::ListInt64Bytes::MergeFrom(from.v_list_int64_bytes());
      break;
    }
    case kVListUint32Double: {
      mutable_v_list_uint32_double()->::feature_proto::ListUint32Double::MergeFrom(from.v_list_uint32_double());
      break;
    }
    case kVListUint32Float: {
      mutable_v_list_uint32_float()->::feature_proto::ListUint32Float::MergeFrom(from.v_list_uint32_float());
      break;
    }
    case kVListUint32Int32: {
      mutable_v_list_uint32_int32()->::feature_proto::ListUint32Int32::MergeFrom(from.v_list_uint32_int32());
      break;
    }
    case kVListUint32Int64: {
      mutable_v_list_uint32_int64()->::feature_proto::ListUint32Int64::MergeFrom(from.v_list_uint32_int64());
      break;
    }
    case kVListUint32Uint32: {
      mutable_v_list_uint32_uint32()->::feature_proto::ListUint32Uint32::MergeFrom(from.v_list_uint32_uint32());
      break;
    }
    case kVListUint32Uint64: {
      mutable_v_list_uint32_uint64()->::feature_proto::ListUint32Uint64::MergeFrom(from.v_list_uint32_uint64());
      break;
    }
    case kVListUint32Sint32: {
      mutable_v_list_uint32_sint32()->::feature_proto::ListUint32Sint32::MergeFrom(from.v_list_uint32_sint32());
      break;
    }
    case kVListUint32Sint64: {
      mutable_v_list_uint32_sint64()->::feature_proto::ListUint32Sint64::MergeFrom(from.v_list_uint32_sint64());
      break;
    }
    case kVListUint32Fixed32: {
      mutable_v_list_uint32_fixed32()->::feature_proto::ListUint32Fixed32::MergeFrom(from.v_list_uint32_fixed32());
      break;
    }
    case kVListUint32Fixed64: {
      mutable_v_list_uint32_fixed64()->::feature_proto::ListUint32Fixed64::MergeFrom(from.v_list_uint32_fixed64());
      break;
    }
    case kVListUint32Sfixed32: {
      mutable_v_list_uint32_sfixed32()->::feature_proto::ListUint32Sfixed32::MergeFrom(from.v_list_uint32_sfixed32());
      break;
    }
    case kVListUint32Sfixed64: {
      mutable_v_list_uint32_sfixed64()->::feature_proto::ListUint32Sfixed64::MergeFrom(from.v_list_uint32_sfixed64());
      break;
    }
    case kVListUint32Bool: {
      mutable_v_list_uint32_bool()->::feature_proto::ListUint32Bool::MergeFrom(from.v_list_uint32_bool());
      break;
    }
    case kVListUint32String: {
      mutable_v_list_uint32_string()->::feature_proto::ListUint32String::MergeFrom(from.v_list_uint32_string());
      break;
    }
    case kVListUint32Bytes: {
      mutable_v_list_uint32_bytes()->::feature_proto::ListUint32Bytes::MergeFrom(from.v_list_uint32_bytes());
      break;
    }
    case kVListUint64Double: {
      mutable_v_list_uint64_double()->::feature_proto::ListUint64Double::MergeFrom(from.v_list_uint64_double());
      break;
    }
    case kVListUint64Float: {
      mutable_v_list_uint64_float()->::feature_proto::ListUint64Float::MergeFrom(from.v_list_uint64_float());
      break;
    }
    case kVListUint64Int32: {
      mutable_v_list_uint64_int32()->::feature_proto::ListUint64Int32::MergeFrom(from.v_list_uint64_int32());
      break;
    }
    case kVListUint64Int64: {
      mutable_v_list_uint64_int64()->::feature_proto::ListUint64Int64::MergeFrom(from.v_list_uint64_int64());
      break;
    }
    case kVListUint64Uint32: {
      mutable_v_list_uint64_uint32()->::feature_proto::ListUint64Uint32::MergeFrom(from.v_list_uint64_uint32());
      break;
    }
    case kVListUint64Uint64: {
      mutable_v_list_uint64_uint64()->::feature_proto::ListUint64Uint64::MergeFrom(from.v_list_uint64_uint64());
      break;
    }
    case kVListUint64Sint32: {
      mutable_v_list_uint64_sint32()->::feature_proto::ListUint64Sint32::MergeFrom(from.v_list_uint64_sint32());
      break;
    }
    case kVListUint64Sint64: {
      mutable_v_list_uint64_sint64()->::feature_proto::ListUint64Sint64::MergeFrom(from.v_list_uint64_sint64());
      break;
    }
    case kVListUint64Fixed32: {
      mutable_v_list_uint64_fixed32()->::feature_proto::ListUint64Fixed32::MergeFrom(from.v_list_uint64_fixed32());
      break;
    }
    case kVListUint64Fixed64: {
      mutable_v_list_uint64_fixed64()->::feature_proto::ListUint64Fixed64::MergeFrom(from.v_list_uint64_fixed64());
      break;
    }
    case kVListUint64Sfixed32: {
      mutable_v_list_uint64_sfixed32()->::feature_proto::ListUint64Sfixed32::MergeFrom(from.v_list_uint64_sfixed32());
      break;
    }
    case kVListUint64Sfixed64: {
      mutable_v_list_uint64_sfixed64()->::feature_proto::ListUint64Sfixed64::MergeFrom(from.v_list_uint64_sfixed64());
      break;
    }
    case kVListUint64Bool: {
      mutable_v_list_uint64_bool()->::feature_proto::ListUint64Bool::MergeFrom(from.v_list_uint64_bool());
      break;
    }
    case kVListUint64String: {
      mutable_v_list_uint64_string()->::feature_proto::ListUint64String::MergeFrom(from.v_list_uint64_string());
      break;
    }
    case kVListUint64Bytes: {
      mutable_v_list_uint64_bytes()->::feature_proto::ListUint64Bytes::MergeFrom(from.v_list_uint64_bytes());
      break;
    }
    case kVListSint32Double: {
      mutable_v_list_sint32_double()->::feature_proto::ListSint32Double::MergeFrom(from.v_list_sint32_double());
      break;
    }
    case kVListSint32Float: {
      mutable_v_list_sint32_float()->::feature_proto::ListSint32Float::MergeFrom(from.v_list_sint32_float());
      break;
    }
    case kVListSint32Int32: {
      mutable_v_list_sint32_int32()->::feature_proto::ListSint32Int32::MergeFrom(from.v_list_sint32_int32());
      break;
    }
    case kVListSint32Int64: {
      mutable_v_list_sint32_int64()->::feature_proto::ListSint32Int64::MergeFrom(from.v_list_sint32_int64());
      break;
    }
    case kVListSint32Uint32: {
      mutable_v_list_sint32_uint32()->::feature_proto::ListSint32Uint32::MergeFrom(from.v_list_sint32_uint32());
      break;
    }
    case kVListSint32Uint64: {
      mutable_v_list_sint32_uint64()->::feature_proto::ListSint32Uint64::MergeFrom(from.v_list_sint32_uint64());
      break;
    }
    case kVListSint32Sint32: {
      mutable_v_list_sint32_sint32()->::feature_proto::ListSint32Sint32::MergeFrom(from.v_list_sint32_sint32());
      break;
    }
    case kVListSint32Sint64: {
      mutable_v_list_sint32_sint64()->::feature_proto::ListSint32Sint64::MergeFrom(from.v_list_sint32_sint64());
      break;
    }
    case kVListSint32Fixed32: {
      mutable_v_list_sint32_fixed32()->::feature_proto::ListSint32Fixed32::MergeFrom(from.v_list_sint32_fixed32());
      break;
    }
    case kVListSint32Fixed64: {
      mutable_v_list_sint32_fixed64()->::feature_proto::ListSint32Fixed64::MergeFrom(from.v_list_sint32_fixed64());
      break;
    }
    case kVListSint32Sfixed32: {
      mutable_v_list_sint32_sfixed32()->::feature_proto::ListSint32Sfixed32::MergeFrom(from.v_list_sint32_sfixed32());
      break;
    }
    case kVListSint32Sfixed64: {
      mutable_v_list_sint32_sfixed64()->::feature_proto::ListSint32Sfixed64::MergeFrom(from.v_list_sint32_sfixed64());
      break;
    }
    case kVListSint32Bool: {
      mutable_v_list_sint32_bool()->::feature_proto::ListSint32Bool::MergeFrom(from.v_list_sint32_bool());
      break;
    }
    case kVListSint32String: {
      mutable_v_list_sint32_string()->::feature_proto::ListSint32String::MergeFrom(from.v_list_sint32_string());
      break;
    }
    case kVListSint32Bytes: {
      mutable_v_list_sint32_bytes()->::feature_proto::ListSint32Bytes::MergeFrom(from.v_list_sint32_bytes());
      break;
    }
    case kVListSint64Double: {
      mutable_v_list_sint64_double()->::feature_proto::ListSint64Double::MergeFrom(from.v_list_sint64_double());
      break;
    }
    case kVListSint64Float: {
      mutable_v_list_sint64_float()->::feature_proto::ListSint64Float::MergeFrom(from.v_list_sint64_float());
      break;
    }
    case kVListSint64Int32: {
      mutable_v_list_sint64_int32()->::feature_proto::ListSint64Int32::MergeFrom(from.v_list_sint64_int32());
      break;
    }
    case kVListSint64Int64: {
      mutable_v_list_sint64_int64()->::feature_proto::ListSint64Int64::MergeFrom(from.v_list_sint64_int64());
      break;
    }
    case kVListSint64Uint32: {
      mutable_v_list_sint64_uint32()->::feature_proto::ListSint64Uint32::MergeFrom(from.v_list_sint64_uint32());
      break;
    }
    case kVListSint64Uint64: {
      mutable_v_list_sint64_uint64()->::feature_proto::ListSint64Uint64::MergeFrom(from.v_list_sint64_uint64());
      break;
    }
    case kVListSint64Sint32: {
      mutable_v_list_sint64_sint32()->::feature_proto::ListSint64Sint32::MergeFrom(from.v_list_sint64_sint32());
      break;
    }
    case kVListSint64Sint64: {
      mutable_v_list_sint64_sint64()->::feature_proto::ListSint64Sint64::MergeFrom(from.v_list_sint64_sint64());
      break;
    }
    case kVListSint64Fixed32: {
      mutable_v_list_sint64_fixed32()->::feature_proto::ListSint64Fixed32::MergeFrom(from.v_list_sint64_fixed32());
      break;
    }
    case kVListSint64Fixed64: {
      mutable_v_list_sint64_fixed64()->::feature_proto::ListSint64Fixed64::MergeFrom(from.v_list_sint64_fixed64());
      break;
    }
    case kVListSint64Sfixed32: {
      mutable_v_list_sint64_sfixed32()->::feature_proto::ListSint64Sfixed32::MergeFrom(from.v_list_sint64_sfixed32());
      break;
    }
    case kVListSint64Sfixed64: {
      mutable_v_list_sint64_sfixed64()->::feature_proto::ListSint64Sfixed64::MergeFrom(from.v_list_sint64_sfixed64());
      break;
    }
    case kVListSint64Bool: {
      mutable_v_list_sint64_bool()->::feature_proto::ListSint64Bool::MergeFrom(from.v_list_sint64_bool());
      break;
    }
    case kVListSint64String: {
      mutable_v_list_sint64_string()->::feature_proto::ListSint64String::MergeFrom(from.v_list_sint64_string());
      break;
    }
    case kVListSint64Bytes: {
      mutable_v_list_sint64_bytes()->::feature_proto::ListSint64Bytes::MergeFrom(from.v_list_sint64_bytes());
      break;
    }
    case kVListFixed32Double: {
      mutable_v_list_fixed32_double()->::feature_proto::ListFixed32Double::MergeFrom(from.v_list_fixed32_double());
      break;
    }
    case kVListFixed32Float: {
      mutable_v_list_fixed32_float()->::feature_proto::ListFixed32Float::MergeFrom(from.v_list_fixed32_float());
      break;
    }
    case kVListFixed32Int32: {
      mutable_v_list_fixed32_int32()->::feature_proto::ListFixed32Int32::MergeFrom(from.v_list_fixed32_int32());
      break;
    }
    case kVListFixed32Int64: {
      mutable_v_list_fixed32_int64()->::feature_proto::ListFixed32Int64::MergeFrom(from.v_list_fixed32_int64());
      break;
    }
    case kVListFixed32Uint32: {
      mutable_v_list_fixed32_uint32()->::feature_proto::ListFixed32Uint32::MergeFrom(from.v_list_fixed32_uint32());
      break;
    }
    case kVListFixed32Uint64: {
      mutable_v_list_fixed32_uint64()->::feature_proto::ListFixed32Uint64::MergeFrom(from.v_list_fixed32_uint64());
      break;
    }
    case kVListFixed32Sint32: {
      mutable_v_list_fixed32_sint32()->::feature_proto::ListFixed32Sint32::MergeFrom(from.v_list_fixed32_sint32());
      break;
    }
    case kVListFixed32Sint64: {
      mutable_v_list_fixed32_sint64()->::feature_proto::ListFixed32Sint64::MergeFrom(from.v_list_fixed32_sint64());
      break;
    }
    case kVListFixed32Fixed32: {
      mutable_v_list_fixed32_fixed32()->::feature_proto::ListFixed32Fixed32::MergeFrom(from.v_list_fixed32_fixed32());
      break;
    }
    case kVListFixed32Fixed64: {
      mutable_v_list_fixed32_fixed64()->::feature_proto::ListFixed32Fixed64::MergeFrom(from.v_list_fixed32_fixed64());
      break;
    }
    case kVListFixed32Sfixed32: {
      mutable_v_list_fixed32_sfixed32()->::feature_proto::ListFixed32Sfixed32::MergeFrom(from.v_list_fixed32_sfixed32());
      break;
    }
    case kVListFixed32Sfixed64: {
      mutable_v_list_fixed32_sfixed64()->::feature_proto::ListFixed32Sfixed64::MergeFrom(from.v_list_fixed32_sfixed64());
      break;
    }
    case kVListFixed32Bool: {
      mutable_v_list_fixed32_bool()->::feature_proto::ListFixed32Bool::MergeFrom(from.v_list_fixed32_bool());
      break;
    }
    case kVListFixed32String: {
      mutable_v_list_fixed32_string()->::feature_proto::ListFixed32String::MergeFrom(from.v_list_fixed32_string());
      break;
    }
    case kVListFixed32Bytes: {
      mutable_v_list_fixed32_bytes()->::feature_proto::ListFixed32Bytes::MergeFrom(from.v_list_fixed32_bytes());
      break;
    }
    case kVListFixed64Double: {
      mutable_v_list_fixed64_double()->::feature_proto::ListFixed64Double::MergeFrom(from.v_list_fixed64_double());
      break;
    }
    case kVListFixed64Float: {
      mutable_v_list_fixed64_float()->::feature_proto::ListFixed64Float::MergeFrom(from.v_list_fixed64_float());
      break;
    }
    case kVListFixed64Int32: {
      mutable_v_list_fixed64_int32()->::feature_proto::ListFixed64Int32::MergeFrom(from.v_list_fixed64_int32());
      break;
    }
    case kVListFixed64Int64: {
      mutable_v_list_fixed64_int64()->::feature_proto::ListFixed64Int64::MergeFrom(from.v_list_fixed64_int64());
      break;
    }
    case kVListFixed64Uint32: {
      mutable_v_list_fixed64_uint32()->::feature_proto::ListFixed64Uint32::MergeFrom(from.v_list_fixed64_uint32());
      break;
    }
    case kVListFixed64Uint64: {
      mutable_v_list_fixed64_uint64()->::feature_proto::ListFixed64Uint64::MergeFrom(from.v_list_fixed64_uint64());
      break;
    }
    case kVListFixed64Sint32: {
      mutable_v_list_fixed64_sint32()->::feature_proto::ListFixed64Sint32::MergeFrom(from.v_list_fixed64_sint32());
      break;
    }
    case kVListFixed64Sint64: {
      mutable_v_list_fixed64_sint64()->::feature_proto::ListFixed64Sint64::MergeFrom(from.v_list_fixed64_sint64());
      break;
    }
    case kVListFixed64Fixed32: {
      mutable_v_list_fixed64_fixed32()->::feature_proto::ListFixed64Fixed32::MergeFrom(from.v_list_fixed64_fixed32());
      break;
    }
    case kVListFixed64Fixed64: {
      mutable_v_list_fixed64_fixed64()->::feature_proto::ListFixed64Fixed64::MergeFrom(from.v_list_fixed64_fixed64());
      break;
    }
    case kVListFixed64Sfixed32: {
      mutable_v_list_fixed64_sfixed32()->::feature_proto::ListFixed64Sfixed32::MergeFrom(from.v_list_fixed64_sfixed32());
      break;
    }
    case kVListFixed64Sfixed64: {
      mutable_v_list_fixed64_sfixed64()->::feature_proto::ListFixed64Sfixed64::MergeFrom(from.v_list_fixed64_sfixed64());
      break;
    }
    case kVListFixed64Bool: {
      mutable_v_list_fixed64_bool()->::feature_proto::ListFixed64Bool::MergeFrom(from.v_list_fixed64_bool());
      break;
    }
    case kVListFixed64String: {
      mutable_v_list_fixed64_string()->::feature_proto::ListFixed64String::MergeFrom(from.v_list_fixed64_string());
      break;
    }
    case kVListFixed64Bytes: {
      mutable_v_list_fixed64_bytes()->::feature_proto::ListFixed64Bytes::MergeFrom(from.v_list_fixed64_bytes());
      break;
    }
    case kVListSfixed32Double: {
      mutable_v_list_sfixed32_double()->::feature_proto::ListSfixed32Double::MergeFrom(from.v_list_sfixed32_double());
      break;
    }
    case kVListSfixed32Float: {
      mutable_v_list_sfixed32_float()->::feature_proto::ListSfixed32Float::MergeFrom(from.v_list_sfixed32_float());
      break;
    }
    case kVListSfixed32Int32: {
      mutable_v_list_sfixed32_int32()->::feature_proto::ListSfixed32Int32::MergeFrom(from.v_list_sfixed32_int32());
      break;
    }
    case kVListSfixed32Int64: {
      mutable_v_list_sfixed32_int64()->::feature_proto::ListSfixed32Int64::MergeFrom(from.v_list_sfixed32_int64());
      break;
    }
    case kVListSfixed32Uint32: {
      mutable_v_list_sfixed32_uint32()->::feature_proto::ListSfixed32Uint32::MergeFrom(from.v_list_sfixed32_uint32());
      break;
    }
    case kVListSfixed32Uint64: {
      mutable_v_list_sfixed32_uint64()->::feature_proto::ListSfixed32Uint64::MergeFrom(from.v_list_sfixed32_uint64());
      break;
    }
    case kVListSfixed32Sint32: {
      mutable_v_list_sfixed32_sint32()->::feature_proto::ListSfixed32Sint32::MergeFrom(from.v_list_sfixed32_sint32());
      break;
    }
    case kVListSfixed32Sint64: {
      mutable_v_list_sfixed32_sint64()->::feature_proto::ListSfixed32Sint64::MergeFrom(from.v_list_sfixed32_sint64());
      break;
    }
    case kVListSfixed32Fixed32: {
      mutable_v_list_sfixed32_fixed32()->::feature_proto::ListSfixed32Fixed32::MergeFrom(from.v_list_sfixed32_fixed32());
      break;
    }
    case kVListSfixed32Fixed64: {
      mutable_v_list_sfixed32_fixed64()->::feature_proto::ListSfixed32Fixed64::MergeFrom(from.v_list_sfixed32_fixed64());
      break;
    }
    case kVListSfixed32Sfixed32: {
      mutable_v_list_sfixed32_sfixed32()->::feature_proto::ListSfixed32Sfixed32::MergeFrom(from.v_list_sfixed32_sfixed32());
      break;
    }
    case kVListSfixed32Sfixed64: {
      mutable_v_list_sfixed32_sfixed64()->::feature_proto::ListSfixed32Sfixed64::MergeFrom(from.v_list_sfixed32_sfixed64());
      break;
    }
    case kVListSfixed32Bool: {
      mutable_v_list_sfixed32_bool()->::feature_proto::ListSfixed32Bool::MergeFrom(from.v_list_sfixed32_bool());
      break;
    }
    case kVListSfixed32String: {
      mutable_v_list_sfixed32_string()->::feature_proto::ListSfixed32String::MergeFrom(from.v_list_sfixed32_string());
      break;
    }
    case kVListSfixed32Bytes: {
      mutable_v_list_sfixed32_bytes()->::feature_proto::ListSfixed32Bytes::MergeFrom(from.v_list_sfixed32_bytes());
      break;
    }
    case kVListSfixed64Double: {
      mutable_v_list_sfixed64_double()->::feature_proto::ListSfixed64Double::MergeFrom(from.v_list_sfixed64_double());
      break;
    }
    case kVListSfixed64Float: {
      mutable_v_list_sfixed64_float()->::feature_proto::ListSfixed64Float::MergeFrom(from.v_list_sfixed64_float());
      break;
    }
    case kVListSfixed64Int32: {
      mutable_v_list_sfixed64_int32()->::feature_proto::ListSfixed64Int32::MergeFrom(from.v_list_sfixed64_int32());
      break;
    }
    case kVListSfixed64Int64: {
      mutable_v_list_sfixed64_int64()->::feature_proto::ListSfixed64Int64::MergeFrom(from.v_list_sfixed64_int64());
      break;
    }
    case kVListSfixed64Uint32: {
      mutable_v_list_sfixed64_uint32()->::feature_proto::ListSfixed64Uint32::MergeFrom(from.v_list_sfixed64_uint32());
      break;
    }
    case kVListSfixed64Uint64: {
      mutable_v_list_sfixed64_uint64()->::feature_proto::ListSfixed64Uint64::MergeFrom(from.v_list_sfixed64_uint64());
      break;
    }
    case kVListSfixed64Sint32: {
      mutable_v_list_sfixed64_sint32()->::feature_proto::ListSfixed64Sint32::MergeFrom(from.v_list_sfixed64_sint32());
      break;
    }
    case kVListSfixed64Sint64: {
      mutable_v_list_sfixed64_sint64()->::feature_proto::ListSfixed64Sint64::MergeFrom(from.v_list_sfixed64_sint64());
      break;
    }
    case kVListSfixed64Fixed32: {
      mutable_v_list_sfixed64_fixed32()->::feature_proto::ListSfixed64Fixed32::MergeFrom(from.v_list_sfixed64_fixed32());
      break;
    }
    case kVListSfixed64Fixed64: {
      mutable_v_list_sfixed64_fixed64()->::feature_proto::ListSfixed64Fixed64::MergeFrom(from.v_list_sfixed64_fixed64());
      break;
    }
    case kVListSfixed64Sfixed32: {
      mutable_v_list_sfixed64_sfixed32()->::feature_proto::ListSfixed64Sfixed32::MergeFrom(from.v_list_sfixed64_sfixed32());
      break;
    }
    case kVListSfixed64Sfixed64: {
      mutable_v_list_sfixed64_sfixed64()->::feature_proto::ListSfixed64Sfixed64::MergeFrom(from.v_list_sfixed64_sfixed64());
      break;
    }
    case kVListSfixed64Bool: {
      mutable_v_list_sfixed64_bool()->::feature_proto::ListSfixed64Bool::MergeFrom(from.v_list_sfixed64_bool());
      break;
    }
    case kVListSfixed64String: {
      mutable_v_list_sfixed64_string()->::feature_proto::ListSfixed64String::MergeFrom(from.v_list_sfixed64_string());
      break;
    }
    case kVListSfixed64Bytes: {
      mutable_v_list_sfixed64_bytes()->::feature_proto::ListSfixed64Bytes::MergeFrom(from.v_list_sfixed64_bytes());
      break;
    }
    case kVListDoubleDouble: {
      mutable_v_list_double_double()->::feature_proto::ListDoubleDouble::MergeFrom(from.v_list_double_double());
      break;
    }
    case kVListDoubleFloat: {
      mutable_v_list_double_float()->::feature_proto::ListDoubleFloat::MergeFrom(from.v_list_double_float());
      break;
    }
    case kVListDoubleInt32: {
      mutable_v_list_double_int32()->::feature_proto::ListDoubleInt32::MergeFrom(from.v_list_double_int32());
      break;
    }
    case kVListDoubleInt64: {
      mutable_v_list_double_int64()->::feature_proto::ListDoubleInt64::MergeFrom(from.v_list_double_int64());
      break;
    }
    case kVListDoubleUint32: {
      mutable_v_list_double_uint32()->::feature_proto::ListDoubleUint32::MergeFrom(from.v_list_double_uint32());
      break;
    }
    case kVListDoubleUint64: {
      mutable_v_list_double_uint64()->::feature_proto::ListDoubleUint64::MergeFrom(from.v_list_double_uint64());
      break;
    }
    case kVListDoubleSint32: {
      mutable_v_list_double_sint32()->::feature_proto::ListDoubleSint32::MergeFrom(from.v_list_double_sint32());
      break;
    }
    case kVListDoubleSint64: {
      mutable_v_list_double_sint64()->::feature_proto::ListDoubleSint64::MergeFrom(from.v_list_double_sint64());
      break;
    }
    case kVListDoubleFixed32: {
      mutable_v_list_double_fixed32()->::feature_proto::ListDoubleFixed32::MergeFrom(from.v_list_double_fixed32());
      break;
    }
    case kVListDoubleFixed64: {
      mutable_v_list_double_fixed64()->::feature_proto::ListDoubleFixed64::MergeFrom(from.v_list_double_fixed64());
      break;
    }
    case kVListDoubleSfixed32: {
      mutable_v_list_double_sfixed32()->::feature_proto::ListDoubleSfixed32::MergeFrom(from.v_list_double_sfixed32());
      break;
    }
    case kVListDoubleSfixed64: {
      mutable_v_list_double_sfixed64()->::feature_proto::ListDoubleSfixed64::MergeFrom(from.v_list_double_sfixed64());
      break;
    }
    case kVListDoubleBool: {
      mutable_v_list_double_bool()->::feature_proto::ListDoubleBool::MergeFrom(from.v_list_double_bool());
      break;
    }
    case kVListDoubleString: {
      mutable_v_list_double_string()->::feature_proto::ListDoubleString::MergeFrom(from.v_list_double_string());
      break;
    }
    case kVListDoubleBytes: {
      mutable_v_list_double_bytes()->::feature_proto::ListDoubleBytes::MergeFrom(from.v_list_double_bytes());
      break;
    }
    case kVListFloatDouble: {
      mutable_v_list_float_double()->::feature_proto::ListFloatDouble::MergeFrom(from.v_list_float_double());
      break;
    }
    case kVListFloatFloat: {
      mutable_v_list_float_float()->::feature_proto::ListFloatFloat::MergeFrom(from.v_list_float_float());
      break;
    }
    case kVListFloatInt32: {
      mutable_v_list_float_int32()->::feature_proto::ListFloatInt32::MergeFrom(from.v_list_float_int32());
      break;
    }
    case kVListFloatInt64: {
      mutable_v_list_float_int64()->::feature_proto::ListFloatInt64::MergeFrom(from.v_list_float_int64());
      break;
    }
    case kVListFloatUint32: {
      mutable_v_list_float_uint32()->::feature_proto::ListFloatUint32::MergeFrom(from.v_list_float_uint32());
      break;
    }
    case kVListFloatUint64: {
      mutable_v_list_float_uint64()->::feature_proto::ListFloatUint64::MergeFrom(from.v_list_float_uint64());
      break;
    }
    case kVListFloatSint32: {
      mutable_v_list_float_sint32()->::feature_proto::ListFloatSint32::MergeFrom(from.v_list_float_sint32());
      break;
    }
    case kVListFloatSint64: {
      mutable_v_list_float_sint64()->::feature_proto::ListFloatSint64::MergeFrom(from.v_list_float_sint64());
      break;
    }
    case kVListFloatFixed32: {
      mutable_v_list_float_fixed32()->::feature_proto::ListFloatFixed32::MergeFrom(from.v_list_float_fixed32());
      break;
    }
    case kVListFloatFixed64: {
      mutable_v_list_float_fixed64()->::feature_proto::ListFloatFixed64::MergeFrom(from.v_list_float_fixed64());
      break;
    }
    case kVListFloatSfixed32: {
      mutable_v_list_float_sfixed32()->::feature_proto::ListFloatSfixed32::MergeFrom(from.v_list_float_sfixed32());
      break;
    }
    case kVListFloatSfixed64: {
      mutable_v_list_float_sfixed64()->::feature_proto::ListFloatSfixed64::MergeFrom(from.v_list_float_sfixed64());
      break;
    }
    case kVListFloatBool: {
      mutable_v_list_float_bool()->::feature_proto::ListFloatBool::MergeFrom(from.v_list_float_bool());
      break;
    }
    case kVListFloatString: {
      mutable_v_list_float_string()->::feature_proto::ListFloatString::MergeFrom(from.v_list_float_string());
      break;
    }
    case kVListFloatBytes: {
      mutable_v_list_float_bytes()->::feature_proto::ListFloatBytes::MergeFrom(from.v_list_float_bytes());
      break;
    }
    case kVListBoolDouble: {
      mutable_v_list_bool_double()->::feature_proto::ListBoolDouble::MergeFrom(from.v_list_bool_double());
      break;
    }
    case kVListBoolFloat: {
      mutable_v_list_bool_float()->::feature_proto::ListBoolFloat::MergeFrom(from.v_list_bool_float());
      break;
    }
    case kVListBoolInt32: {
      mutable_v_list_bool_int32()->::feature_proto::ListBoolInt32::MergeFrom(from.v_list_bool_int32());
      break;
    }
    case kVListBoolInt64: {
      mutable_v_list_bool_int64()->::feature_proto::ListBoolInt64::MergeFrom(from.v_list_bool_int64());
      break;
    }
    case kVListBoolUint32: {
      mutable_v_list_bool_uint32()->::feature_proto::ListBoolUint32::MergeFrom(from.v_list_bool_uint32());
      break;
    }
    case kVListBoolUint64: {
      mutable_v_list_bool_uint64()->::feature_proto::ListBoolUint64::MergeFrom(from.v_list_bool_uint64());
      break;
    }
    case kVListBoolSint32: {
      mutable_v_list_bool_sint32()->::feature_proto::ListBoolSint32::MergeFrom(from.v_list_bool_sint32());
      break;
    }
    case kVListBoolSint64: {
      mutable_v_list_bool_sint64()->::feature_proto::ListBoolSint64::MergeFrom(from.v_list_bool_sint64());
      break;
    }
    case kVListBoolFixed32: {
      mutable_v_list_bool_fixed32()->::feature_proto::ListBoolFixed32::MergeFrom(from.v_list_bool_fixed32());
      break;
    }
    case kVListBoolFixed64: {
      mutable_v_list_bool_fixed64()->::feature_proto::ListBoolFixed64::MergeFrom(from.v_list_bool_fixed64());
      break;
    }
    case kVListBoolSfixed32: {
      mutable_v_list_bool_sfixed32()->::feature_proto::ListBoolSfixed32::MergeFrom(from.v_list_bool_sfixed32());
      break;
    }
    case kVListBoolSfixed64: {
      mutable_v_list_bool_sfixed64()->::feature_proto::ListBoolSfixed64::MergeFrom(from.v_list_bool_sfixed64());
      break;
    }
    case kVListBoolBool: {
      mutable_v_list_bool_bool()->::feature_proto::ListBoolBool::MergeFrom(from.v_list_bool_bool());
      break;
    }
    case kVListBoolString: {
      mutable_v_list_bool_string()->::feature_proto::ListBoolString::MergeFrom(from.v_list_bool_string());
      break;
    }
    case kVListBoolBytes: {
      mutable_v_list_bool_bytes()->::feature_proto::ListBoolBytes::MergeFrom(from.v_list_bool_bytes());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Feature::IsInitialized() const {
  return true;
}

void Feature::Swap(Feature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Feature::InternalSwap(Feature* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Features::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Features::kFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Features::Features()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_Features.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.Features)
}
Features::Features(const Features& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f_(from.f_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.Features)
}

void Features::SharedCtor() {
}

Features::~Features() {
  // @@protoc_insertion_point(destructor:feature_proto.Features)
  SharedDtor();
}

void Features::SharedDtor() {
}

void Features::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Features::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Features& Features::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_Features.base);
  return *internal_default_instance();
}


void Features::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f_.Clear();
  _internal_metadata_.Clear();
}

bool Features::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.Features)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .feature_proto.Feature f = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_f()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.Features)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.Features)
  return false;
#undef DO_
}

void Features::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .feature_proto.Feature f = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->f_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->f(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.Features)
}

::google::protobuf::uint8* Features::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .feature_proto.Feature f = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->f_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->f(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.Features)
  return target;
}

size_t Features::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.Features)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .feature_proto.Feature f = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->f_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->f(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Features::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.Features)
  GOOGLE_DCHECK_NE(&from, this);
  const Features* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Features>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.Features)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.Features)
    MergeFrom(*source);
  }
}

void Features::MergeFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.Features)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f_.MergeFrom(from.f_);
}

void Features::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Features::CopyFrom(const Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Features::IsInitialized() const {
  return true;
}

void Features::Swap(Features* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Features::InternalSwap(Features* other) {
  using std::swap;
  CastToBase(&f_)->InternalSwap(CastToBase(&other->f_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Features::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

FeaturesMap_FEntry_DoNotUse::FeaturesMap_FEntry_DoNotUse() {}
FeaturesMap_FEntry_DoNotUse::FeaturesMap_FEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void FeaturesMap_FEntry_DoNotUse::MergeFrom(const FeaturesMap_FEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FeaturesMap_FEntry_DoNotUse::GetMetadata() const {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[242];
}
void FeaturesMap_FEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FeaturesMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeaturesMap::kFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeaturesMap::FeaturesMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_FeaturesMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.FeaturesMap)
}
FeaturesMap::FeaturesMap(const FeaturesMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f_.MergeFrom(from.f_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.FeaturesMap)
}

void FeaturesMap::SharedCtor() {
}

FeaturesMap::~FeaturesMap() {
  // @@protoc_insertion_point(destructor:feature_proto.FeaturesMap)
  SharedDtor();
}

void FeaturesMap::SharedDtor() {
}

void FeaturesMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeaturesMap::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeaturesMap& FeaturesMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_FeaturesMap.base);
  return *internal_default_instance();
}


void FeaturesMap::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.FeaturesMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f_.Clear();
  _internal_metadata_.Clear();
}

bool FeaturesMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.FeaturesMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .feature_proto.Feature> f = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          FeaturesMap_FEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FeaturesMap_FEntry_DoNotUse,
              ::google::protobuf::int32, ::feature_proto::Feature,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature > > parser(&f_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.FeaturesMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.FeaturesMap)
  return false;
#undef DO_
}

void FeaturesMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.FeaturesMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .feature_proto.Feature> f = 1;
  if (!this->f().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->f().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->f().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_iterator
          it = this->f().begin();
          it != this->f().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<FeaturesMap_FEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<FeaturesMap_FEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_iterator
          it = this->f().begin();
          it != this->f().end(); ++it) {
        entry.reset(f_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.FeaturesMap)
}

::google::protobuf::uint8* FeaturesMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.FeaturesMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .feature_proto.Feature> f = 1;
  if (!this->f().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->f().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->f().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_iterator
          it = this->f().begin();
          it != this->f().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<FeaturesMap_FEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<FeaturesMap_FEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_iterator
          it = this->f().begin();
          it != this->f().end(); ++it) {
        entry.reset(f_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.FeaturesMap)
  return target;
}

size_t FeaturesMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.FeaturesMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, .feature_proto.Feature> f = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->f_size());
  {
    ::std::unique_ptr<FeaturesMap_FEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >::const_iterator
        it = this->f().begin();
        it != this->f().end(); ++it) {
      entry.reset(f_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeaturesMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.FeaturesMap)
  GOOGLE_DCHECK_NE(&from, this);
  const FeaturesMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeaturesMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.FeaturesMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.FeaturesMap)
    MergeFrom(*source);
  }
}

void FeaturesMap::MergeFrom(const FeaturesMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.FeaturesMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f_.MergeFrom(from.f_);
}

void FeaturesMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.FeaturesMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeaturesMap::CopyFrom(const FeaturesMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.FeaturesMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeaturesMap::IsInitialized() const {
  return true;
}

void FeaturesMap::Swap(FeaturesMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeaturesMap::InternalSwap(FeaturesMap* other) {
  using std::swap;
  f_.Swap(&other->f_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeaturesMap::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeaturesList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeaturesList::kFeaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeaturesList::FeaturesList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_feature_2eproto::scc_info_FeaturesList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:feature_proto.FeaturesList)
}
FeaturesList::FeaturesList(const FeaturesList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:feature_proto.FeaturesList)
}

void FeaturesList::SharedCtor() {
}

FeaturesList::~FeaturesList() {
  // @@protoc_insertion_point(destructor:feature_proto.FeaturesList)
  SharedDtor();
}

void FeaturesList::SharedDtor() {
}

void FeaturesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeaturesList::descriptor() {
  ::protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeaturesList& FeaturesList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_feature_2eproto::scc_info_FeaturesList.base);
  return *internal_default_instance();
}


void FeaturesList::Clear() {
// @@protoc_insertion_point(message_clear_start:feature_proto.FeaturesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  _internal_metadata_.Clear();
}

bool FeaturesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:feature_proto.FeaturesList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .feature_proto.FeaturesMap features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:feature_proto.FeaturesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:feature_proto.FeaturesList)
  return false;
#undef DO_
}

void FeaturesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:feature_proto.FeaturesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .feature_proto.FeaturesMap features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->features(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:feature_proto.FeaturesList)
}

::google::protobuf::uint8* FeaturesList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:feature_proto.FeaturesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .feature_proto.FeaturesMap features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->features(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:feature_proto.FeaturesList)
  return target;
}

size_t FeaturesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:feature_proto.FeaturesList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .feature_proto.FeaturesMap features = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeaturesList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:feature_proto.FeaturesList)
  GOOGLE_DCHECK_NE(&from, this);
  const FeaturesList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeaturesList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:feature_proto.FeaturesList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:feature_proto.FeaturesList)
    MergeFrom(*source);
  }
}

void FeaturesList::MergeFrom(const FeaturesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:feature_proto.FeaturesList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
}

void FeaturesList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:feature_proto.FeaturesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeaturesList::CopyFrom(const FeaturesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:feature_proto.FeaturesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeaturesList::IsInitialized() const {
  return true;
}

void FeaturesList::Swap(FeaturesList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeaturesList::InternalSwap(FeaturesList* other) {
  using std::swap;
  CastToBase(&features_)->InternalSwap(CastToBase(&other->features_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeaturesList::GetMetadata() const {
  protobuf_feature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_feature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace feature_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDouble* Arena::CreateMaybeMessage< ::feature_proto::ListDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloat* Arena::CreateMaybeMessage< ::feature_proto::ListFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBool* Arena::CreateMaybeMessage< ::feature_proto::ListBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListString* Arena::CreateMaybeMessage< ::feature_proto::ListString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytes* Arena::CreateMaybeMessage< ::feature_proto::ListBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringDouble* Arena::CreateMaybeMessage< ::feature_proto::ListStringDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringFloat* Arena::CreateMaybeMessage< ::feature_proto::ListStringFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringInt32* Arena::CreateMaybeMessage< ::feature_proto::ListStringInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringInt64* Arena::CreateMaybeMessage< ::feature_proto::ListStringInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringUint32* Arena::CreateMaybeMessage< ::feature_proto::ListStringUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringUint64* Arena::CreateMaybeMessage< ::feature_proto::ListStringUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringSint32* Arena::CreateMaybeMessage< ::feature_proto::ListStringSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringSint64* Arena::CreateMaybeMessage< ::feature_proto::ListStringSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListStringFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListStringFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListStringSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListStringSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringBool* Arena::CreateMaybeMessage< ::feature_proto::ListStringBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringString* Arena::CreateMaybeMessage< ::feature_proto::ListStringString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListStringBytes* Arena::CreateMaybeMessage< ::feature_proto::ListStringBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListStringBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesDouble* Arena::CreateMaybeMessage< ::feature_proto::ListBytesDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesFloat* Arena::CreateMaybeMessage< ::feature_proto::ListBytesFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesInt32* Arena::CreateMaybeMessage< ::feature_proto::ListBytesInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesInt64* Arena::CreateMaybeMessage< ::feature_proto::ListBytesInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesUint32* Arena::CreateMaybeMessage< ::feature_proto::ListBytesUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesUint64* Arena::CreateMaybeMessage< ::feature_proto::ListBytesUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesSint32* Arena::CreateMaybeMessage< ::feature_proto::ListBytesSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesSint64* Arena::CreateMaybeMessage< ::feature_proto::ListBytesSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListBytesFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListBytesFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListBytesSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListBytesSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesBool* Arena::CreateMaybeMessage< ::feature_proto::ListBytesBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesString* Arena::CreateMaybeMessage< ::feature_proto::ListBytesString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBytesBytes* Arena::CreateMaybeMessage< ::feature_proto::ListBytesBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBytesBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Double* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Float* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Int32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Int64* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Bool* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32String* Arena::CreateMaybeMessage< ::feature_proto::ListInt32String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt32Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListInt32Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt32Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Double* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Float* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Int32* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Int64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Bool* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64String* Arena::CreateMaybeMessage< ::feature_proto::ListInt64String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListInt64Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListInt64Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListInt64Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Double* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Float* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Int32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Int64* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Bool* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32String* Arena::CreateMaybeMessage< ::feature_proto::ListUint32String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint32Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListUint32Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint32Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Double* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Float* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Int32* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Int64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Bool* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64String* Arena::CreateMaybeMessage< ::feature_proto::ListUint64String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListUint64Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListUint64Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListUint64Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Double* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Float* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Int32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Int64* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Bool* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32String* Arena::CreateMaybeMessage< ::feature_proto::ListSint32String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint32Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListSint32Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint32Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Double* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Float* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Int32* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Int64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Bool* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64String* Arena::CreateMaybeMessage< ::feature_proto::ListSint64String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSint64Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListSint64Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSint64Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Double* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Float* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Int32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Int64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Bool* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32String* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed32Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListFixed32Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed32Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Double* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Float* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Int32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Int64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Bool* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64String* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFixed64Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListFixed64Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFixed64Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Double* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Float* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Int32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Int64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Bool* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32String* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed32Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed32Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed32Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Double* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Double >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Double >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Float* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Float >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Float >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Int32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Int32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Int32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Int64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Uint32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Uint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Uint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Uint64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Uint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Uint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Sint32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Sint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Sint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Sint64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Sint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Sint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Fixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Fixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Fixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Fixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Fixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Fixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Sfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Sfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Sfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Sfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Sfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Sfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Bool* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Bool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Bool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64String* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64String >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListSfixed64Bytes* Arena::CreateMaybeMessage< ::feature_proto::ListSfixed64Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListSfixed64Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleDouble* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleFloat* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleInt32* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleInt64* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleUint32* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleUint64* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleSint32* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleSint64* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleBool* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleString* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListDoubleBytes* Arena::CreateMaybeMessage< ::feature_proto::ListDoubleBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListDoubleBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatDouble* Arena::CreateMaybeMessage< ::feature_proto::ListFloatDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatFloat* Arena::CreateMaybeMessage< ::feature_proto::ListFloatFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatInt32* Arena::CreateMaybeMessage< ::feature_proto::ListFloatInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatInt64* Arena::CreateMaybeMessage< ::feature_proto::ListFloatInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatUint32* Arena::CreateMaybeMessage< ::feature_proto::ListFloatUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatUint64* Arena::CreateMaybeMessage< ::feature_proto::ListFloatUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatSint32* Arena::CreateMaybeMessage< ::feature_proto::ListFloatSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatSint64* Arena::CreateMaybeMessage< ::feature_proto::ListFloatSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFloatFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFloatFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListFloatSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListFloatSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatBool* Arena::CreateMaybeMessage< ::feature_proto::ListFloatBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatString* Arena::CreateMaybeMessage< ::feature_proto::ListFloatString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListFloatBytes* Arena::CreateMaybeMessage< ::feature_proto::ListFloatBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListFloatBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolDouble* Arena::CreateMaybeMessage< ::feature_proto::ListBoolDouble >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolDouble >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolFloat* Arena::CreateMaybeMessage< ::feature_proto::ListBoolFloat >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolFloat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolInt32* Arena::CreateMaybeMessage< ::feature_proto::ListBoolInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolInt32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolInt64* Arena::CreateMaybeMessage< ::feature_proto::ListBoolInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolInt64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolUint32* Arena::CreateMaybeMessage< ::feature_proto::ListBoolUint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolUint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolUint64* Arena::CreateMaybeMessage< ::feature_proto::ListBoolUint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolUint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolSint32* Arena::CreateMaybeMessage< ::feature_proto::ListBoolSint32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolSint32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolSint64* Arena::CreateMaybeMessage< ::feature_proto::ListBoolSint64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolSint64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolFixed32* Arena::CreateMaybeMessage< ::feature_proto::ListBoolFixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolFixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolFixed64* Arena::CreateMaybeMessage< ::feature_proto::ListBoolFixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolFixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolSfixed32* Arena::CreateMaybeMessage< ::feature_proto::ListBoolSfixed32 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolSfixed32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolSfixed64* Arena::CreateMaybeMessage< ::feature_proto::ListBoolSfixed64 >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolSfixed64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolBool* Arena::CreateMaybeMessage< ::feature_proto::ListBoolBool >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolBool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolString* Arena::CreateMaybeMessage< ::feature_proto::ListBoolString >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolString >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::ListBoolBytes* Arena::CreateMaybeMessage< ::feature_proto::ListBoolBytes >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::ListBoolBytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::Feature* Arena::CreateMaybeMessage< ::feature_proto::Feature >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::Feature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::Features* Arena::CreateMaybeMessage< ::feature_proto::Features >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::Features >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::FeaturesMap_FEntry_DoNotUse* Arena::CreateMaybeMessage< ::feature_proto::FeaturesMap_FEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::FeaturesMap_FEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::FeaturesMap* Arena::CreateMaybeMessage< ::feature_proto::FeaturesMap >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::FeaturesMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::feature_proto::FeaturesList* Arena::CreateMaybeMessage< ::feature_proto::FeaturesList >(Arena* arena) {
  return Arena::CreateInternal< ::feature_proto::FeaturesList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
