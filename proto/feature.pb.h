// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feature.proto

#ifndef PROTOBUF_INCLUDED_feature_2eproto
#define PROTOBUF_INCLUDED_feature_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_feature_2eproto 

namespace protobuf_feature_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[245];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_feature_2eproto
namespace feature_proto {
class Feature;
class FeatureDefaultTypeInternal;
extern FeatureDefaultTypeInternal _Feature_default_instance_;
class Features;
class FeaturesDefaultTypeInternal;
extern FeaturesDefaultTypeInternal _Features_default_instance_;
class FeaturesList;
class FeaturesListDefaultTypeInternal;
extern FeaturesListDefaultTypeInternal _FeaturesList_default_instance_;
class FeaturesMap;
class FeaturesMapDefaultTypeInternal;
extern FeaturesMapDefaultTypeInternal _FeaturesMap_default_instance_;
class FeaturesMap_FEntry_DoNotUse;
class FeaturesMap_FEntry_DoNotUseDefaultTypeInternal;
extern FeaturesMap_FEntry_DoNotUseDefaultTypeInternal _FeaturesMap_FEntry_DoNotUse_default_instance_;
class ListBool;
class ListBoolDefaultTypeInternal;
extern ListBoolDefaultTypeInternal _ListBool_default_instance_;
class ListBoolBool;
class ListBoolBoolDefaultTypeInternal;
extern ListBoolBoolDefaultTypeInternal _ListBoolBool_default_instance_;
class ListBoolBytes;
class ListBoolBytesDefaultTypeInternal;
extern ListBoolBytesDefaultTypeInternal _ListBoolBytes_default_instance_;
class ListBoolDouble;
class ListBoolDoubleDefaultTypeInternal;
extern ListBoolDoubleDefaultTypeInternal _ListBoolDouble_default_instance_;
class ListBoolFixed32;
class ListBoolFixed32DefaultTypeInternal;
extern ListBoolFixed32DefaultTypeInternal _ListBoolFixed32_default_instance_;
class ListBoolFixed64;
class ListBoolFixed64DefaultTypeInternal;
extern ListBoolFixed64DefaultTypeInternal _ListBoolFixed64_default_instance_;
class ListBoolFloat;
class ListBoolFloatDefaultTypeInternal;
extern ListBoolFloatDefaultTypeInternal _ListBoolFloat_default_instance_;
class ListBoolInt32;
class ListBoolInt32DefaultTypeInternal;
extern ListBoolInt32DefaultTypeInternal _ListBoolInt32_default_instance_;
class ListBoolInt64;
class ListBoolInt64DefaultTypeInternal;
extern ListBoolInt64DefaultTypeInternal _ListBoolInt64_default_instance_;
class ListBoolSfixed32;
class ListBoolSfixed32DefaultTypeInternal;
extern ListBoolSfixed32DefaultTypeInternal _ListBoolSfixed32_default_instance_;
class ListBoolSfixed64;
class ListBoolSfixed64DefaultTypeInternal;
extern ListBoolSfixed64DefaultTypeInternal _ListBoolSfixed64_default_instance_;
class ListBoolSint32;
class ListBoolSint32DefaultTypeInternal;
extern ListBoolSint32DefaultTypeInternal _ListBoolSint32_default_instance_;
class ListBoolSint64;
class ListBoolSint64DefaultTypeInternal;
extern ListBoolSint64DefaultTypeInternal _ListBoolSint64_default_instance_;
class ListBoolString;
class ListBoolStringDefaultTypeInternal;
extern ListBoolStringDefaultTypeInternal _ListBoolString_default_instance_;
class ListBoolUint32;
class ListBoolUint32DefaultTypeInternal;
extern ListBoolUint32DefaultTypeInternal _ListBoolUint32_default_instance_;
class ListBoolUint64;
class ListBoolUint64DefaultTypeInternal;
extern ListBoolUint64DefaultTypeInternal _ListBoolUint64_default_instance_;
class ListBytes;
class ListBytesDefaultTypeInternal;
extern ListBytesDefaultTypeInternal _ListBytes_default_instance_;
class ListBytesBool;
class ListBytesBoolDefaultTypeInternal;
extern ListBytesBoolDefaultTypeInternal _ListBytesBool_default_instance_;
class ListBytesBytes;
class ListBytesBytesDefaultTypeInternal;
extern ListBytesBytesDefaultTypeInternal _ListBytesBytes_default_instance_;
class ListBytesDouble;
class ListBytesDoubleDefaultTypeInternal;
extern ListBytesDoubleDefaultTypeInternal _ListBytesDouble_default_instance_;
class ListBytesFixed32;
class ListBytesFixed32DefaultTypeInternal;
extern ListBytesFixed32DefaultTypeInternal _ListBytesFixed32_default_instance_;
class ListBytesFixed64;
class ListBytesFixed64DefaultTypeInternal;
extern ListBytesFixed64DefaultTypeInternal _ListBytesFixed64_default_instance_;
class ListBytesFloat;
class ListBytesFloatDefaultTypeInternal;
extern ListBytesFloatDefaultTypeInternal _ListBytesFloat_default_instance_;
class ListBytesInt32;
class ListBytesInt32DefaultTypeInternal;
extern ListBytesInt32DefaultTypeInternal _ListBytesInt32_default_instance_;
class ListBytesInt64;
class ListBytesInt64DefaultTypeInternal;
extern ListBytesInt64DefaultTypeInternal _ListBytesInt64_default_instance_;
class ListBytesSfixed32;
class ListBytesSfixed32DefaultTypeInternal;
extern ListBytesSfixed32DefaultTypeInternal _ListBytesSfixed32_default_instance_;
class ListBytesSfixed64;
class ListBytesSfixed64DefaultTypeInternal;
extern ListBytesSfixed64DefaultTypeInternal _ListBytesSfixed64_default_instance_;
class ListBytesSint32;
class ListBytesSint32DefaultTypeInternal;
extern ListBytesSint32DefaultTypeInternal _ListBytesSint32_default_instance_;
class ListBytesSint64;
class ListBytesSint64DefaultTypeInternal;
extern ListBytesSint64DefaultTypeInternal _ListBytesSint64_default_instance_;
class ListBytesString;
class ListBytesStringDefaultTypeInternal;
extern ListBytesStringDefaultTypeInternal _ListBytesString_default_instance_;
class ListBytesUint32;
class ListBytesUint32DefaultTypeInternal;
extern ListBytesUint32DefaultTypeInternal _ListBytesUint32_default_instance_;
class ListBytesUint64;
class ListBytesUint64DefaultTypeInternal;
extern ListBytesUint64DefaultTypeInternal _ListBytesUint64_default_instance_;
class ListDouble;
class ListDoubleDefaultTypeInternal;
extern ListDoubleDefaultTypeInternal _ListDouble_default_instance_;
class ListDoubleBool;
class ListDoubleBoolDefaultTypeInternal;
extern ListDoubleBoolDefaultTypeInternal _ListDoubleBool_default_instance_;
class ListDoubleBytes;
class ListDoubleBytesDefaultTypeInternal;
extern ListDoubleBytesDefaultTypeInternal _ListDoubleBytes_default_instance_;
class ListDoubleDouble;
class ListDoubleDoubleDefaultTypeInternal;
extern ListDoubleDoubleDefaultTypeInternal _ListDoubleDouble_default_instance_;
class ListDoubleFixed32;
class ListDoubleFixed32DefaultTypeInternal;
extern ListDoubleFixed32DefaultTypeInternal _ListDoubleFixed32_default_instance_;
class ListDoubleFixed64;
class ListDoubleFixed64DefaultTypeInternal;
extern ListDoubleFixed64DefaultTypeInternal _ListDoubleFixed64_default_instance_;
class ListDoubleFloat;
class ListDoubleFloatDefaultTypeInternal;
extern ListDoubleFloatDefaultTypeInternal _ListDoubleFloat_default_instance_;
class ListDoubleInt32;
class ListDoubleInt32DefaultTypeInternal;
extern ListDoubleInt32DefaultTypeInternal _ListDoubleInt32_default_instance_;
class ListDoubleInt64;
class ListDoubleInt64DefaultTypeInternal;
extern ListDoubleInt64DefaultTypeInternal _ListDoubleInt64_default_instance_;
class ListDoubleSfixed32;
class ListDoubleSfixed32DefaultTypeInternal;
extern ListDoubleSfixed32DefaultTypeInternal _ListDoubleSfixed32_default_instance_;
class ListDoubleSfixed64;
class ListDoubleSfixed64DefaultTypeInternal;
extern ListDoubleSfixed64DefaultTypeInternal _ListDoubleSfixed64_default_instance_;
class ListDoubleSint32;
class ListDoubleSint32DefaultTypeInternal;
extern ListDoubleSint32DefaultTypeInternal _ListDoubleSint32_default_instance_;
class ListDoubleSint64;
class ListDoubleSint64DefaultTypeInternal;
extern ListDoubleSint64DefaultTypeInternal _ListDoubleSint64_default_instance_;
class ListDoubleString;
class ListDoubleStringDefaultTypeInternal;
extern ListDoubleStringDefaultTypeInternal _ListDoubleString_default_instance_;
class ListDoubleUint32;
class ListDoubleUint32DefaultTypeInternal;
extern ListDoubleUint32DefaultTypeInternal _ListDoubleUint32_default_instance_;
class ListDoubleUint64;
class ListDoubleUint64DefaultTypeInternal;
extern ListDoubleUint64DefaultTypeInternal _ListDoubleUint64_default_instance_;
class ListFixed32;
class ListFixed32DefaultTypeInternal;
extern ListFixed32DefaultTypeInternal _ListFixed32_default_instance_;
class ListFixed32Bool;
class ListFixed32BoolDefaultTypeInternal;
extern ListFixed32BoolDefaultTypeInternal _ListFixed32Bool_default_instance_;
class ListFixed32Bytes;
class ListFixed32BytesDefaultTypeInternal;
extern ListFixed32BytesDefaultTypeInternal _ListFixed32Bytes_default_instance_;
class ListFixed32Double;
class ListFixed32DoubleDefaultTypeInternal;
extern ListFixed32DoubleDefaultTypeInternal _ListFixed32Double_default_instance_;
class ListFixed32Fixed32;
class ListFixed32Fixed32DefaultTypeInternal;
extern ListFixed32Fixed32DefaultTypeInternal _ListFixed32Fixed32_default_instance_;
class ListFixed32Fixed64;
class ListFixed32Fixed64DefaultTypeInternal;
extern ListFixed32Fixed64DefaultTypeInternal _ListFixed32Fixed64_default_instance_;
class ListFixed32Float;
class ListFixed32FloatDefaultTypeInternal;
extern ListFixed32FloatDefaultTypeInternal _ListFixed32Float_default_instance_;
class ListFixed32Int32;
class ListFixed32Int32DefaultTypeInternal;
extern ListFixed32Int32DefaultTypeInternal _ListFixed32Int32_default_instance_;
class ListFixed32Int64;
class ListFixed32Int64DefaultTypeInternal;
extern ListFixed32Int64DefaultTypeInternal _ListFixed32Int64_default_instance_;
class ListFixed32Sfixed32;
class ListFixed32Sfixed32DefaultTypeInternal;
extern ListFixed32Sfixed32DefaultTypeInternal _ListFixed32Sfixed32_default_instance_;
class ListFixed32Sfixed64;
class ListFixed32Sfixed64DefaultTypeInternal;
extern ListFixed32Sfixed64DefaultTypeInternal _ListFixed32Sfixed64_default_instance_;
class ListFixed32Sint32;
class ListFixed32Sint32DefaultTypeInternal;
extern ListFixed32Sint32DefaultTypeInternal _ListFixed32Sint32_default_instance_;
class ListFixed32Sint64;
class ListFixed32Sint64DefaultTypeInternal;
extern ListFixed32Sint64DefaultTypeInternal _ListFixed32Sint64_default_instance_;
class ListFixed32String;
class ListFixed32StringDefaultTypeInternal;
extern ListFixed32StringDefaultTypeInternal _ListFixed32String_default_instance_;
class ListFixed32Uint32;
class ListFixed32Uint32DefaultTypeInternal;
extern ListFixed32Uint32DefaultTypeInternal _ListFixed32Uint32_default_instance_;
class ListFixed32Uint64;
class ListFixed32Uint64DefaultTypeInternal;
extern ListFixed32Uint64DefaultTypeInternal _ListFixed32Uint64_default_instance_;
class ListFixed64;
class ListFixed64DefaultTypeInternal;
extern ListFixed64DefaultTypeInternal _ListFixed64_default_instance_;
class ListFixed64Bool;
class ListFixed64BoolDefaultTypeInternal;
extern ListFixed64BoolDefaultTypeInternal _ListFixed64Bool_default_instance_;
class ListFixed64Bytes;
class ListFixed64BytesDefaultTypeInternal;
extern ListFixed64BytesDefaultTypeInternal _ListFixed64Bytes_default_instance_;
class ListFixed64Double;
class ListFixed64DoubleDefaultTypeInternal;
extern ListFixed64DoubleDefaultTypeInternal _ListFixed64Double_default_instance_;
class ListFixed64Fixed32;
class ListFixed64Fixed32DefaultTypeInternal;
extern ListFixed64Fixed32DefaultTypeInternal _ListFixed64Fixed32_default_instance_;
class ListFixed64Fixed64;
class ListFixed64Fixed64DefaultTypeInternal;
extern ListFixed64Fixed64DefaultTypeInternal _ListFixed64Fixed64_default_instance_;
class ListFixed64Float;
class ListFixed64FloatDefaultTypeInternal;
extern ListFixed64FloatDefaultTypeInternal _ListFixed64Float_default_instance_;
class ListFixed64Int32;
class ListFixed64Int32DefaultTypeInternal;
extern ListFixed64Int32DefaultTypeInternal _ListFixed64Int32_default_instance_;
class ListFixed64Int64;
class ListFixed64Int64DefaultTypeInternal;
extern ListFixed64Int64DefaultTypeInternal _ListFixed64Int64_default_instance_;
class ListFixed64Sfixed32;
class ListFixed64Sfixed32DefaultTypeInternal;
extern ListFixed64Sfixed32DefaultTypeInternal _ListFixed64Sfixed32_default_instance_;
class ListFixed64Sfixed64;
class ListFixed64Sfixed64DefaultTypeInternal;
extern ListFixed64Sfixed64DefaultTypeInternal _ListFixed64Sfixed64_default_instance_;
class ListFixed64Sint32;
class ListFixed64Sint32DefaultTypeInternal;
extern ListFixed64Sint32DefaultTypeInternal _ListFixed64Sint32_default_instance_;
class ListFixed64Sint64;
class ListFixed64Sint64DefaultTypeInternal;
extern ListFixed64Sint64DefaultTypeInternal _ListFixed64Sint64_default_instance_;
class ListFixed64String;
class ListFixed64StringDefaultTypeInternal;
extern ListFixed64StringDefaultTypeInternal _ListFixed64String_default_instance_;
class ListFixed64Uint32;
class ListFixed64Uint32DefaultTypeInternal;
extern ListFixed64Uint32DefaultTypeInternal _ListFixed64Uint32_default_instance_;
class ListFixed64Uint64;
class ListFixed64Uint64DefaultTypeInternal;
extern ListFixed64Uint64DefaultTypeInternal _ListFixed64Uint64_default_instance_;
class ListFloat;
class ListFloatDefaultTypeInternal;
extern ListFloatDefaultTypeInternal _ListFloat_default_instance_;
class ListFloatBool;
class ListFloatBoolDefaultTypeInternal;
extern ListFloatBoolDefaultTypeInternal _ListFloatBool_default_instance_;
class ListFloatBytes;
class ListFloatBytesDefaultTypeInternal;
extern ListFloatBytesDefaultTypeInternal _ListFloatBytes_default_instance_;
class ListFloatDouble;
class ListFloatDoubleDefaultTypeInternal;
extern ListFloatDoubleDefaultTypeInternal _ListFloatDouble_default_instance_;
class ListFloatFixed32;
class ListFloatFixed32DefaultTypeInternal;
extern ListFloatFixed32DefaultTypeInternal _ListFloatFixed32_default_instance_;
class ListFloatFixed64;
class ListFloatFixed64DefaultTypeInternal;
extern ListFloatFixed64DefaultTypeInternal _ListFloatFixed64_default_instance_;
class ListFloatFloat;
class ListFloatFloatDefaultTypeInternal;
extern ListFloatFloatDefaultTypeInternal _ListFloatFloat_default_instance_;
class ListFloatInt32;
class ListFloatInt32DefaultTypeInternal;
extern ListFloatInt32DefaultTypeInternal _ListFloatInt32_default_instance_;
class ListFloatInt64;
class ListFloatInt64DefaultTypeInternal;
extern ListFloatInt64DefaultTypeInternal _ListFloatInt64_default_instance_;
class ListFloatSfixed32;
class ListFloatSfixed32DefaultTypeInternal;
extern ListFloatSfixed32DefaultTypeInternal _ListFloatSfixed32_default_instance_;
class ListFloatSfixed64;
class ListFloatSfixed64DefaultTypeInternal;
extern ListFloatSfixed64DefaultTypeInternal _ListFloatSfixed64_default_instance_;
class ListFloatSint32;
class ListFloatSint32DefaultTypeInternal;
extern ListFloatSint32DefaultTypeInternal _ListFloatSint32_default_instance_;
class ListFloatSint64;
class ListFloatSint64DefaultTypeInternal;
extern ListFloatSint64DefaultTypeInternal _ListFloatSint64_default_instance_;
class ListFloatString;
class ListFloatStringDefaultTypeInternal;
extern ListFloatStringDefaultTypeInternal _ListFloatString_default_instance_;
class ListFloatUint32;
class ListFloatUint32DefaultTypeInternal;
extern ListFloatUint32DefaultTypeInternal _ListFloatUint32_default_instance_;
class ListFloatUint64;
class ListFloatUint64DefaultTypeInternal;
extern ListFloatUint64DefaultTypeInternal _ListFloatUint64_default_instance_;
class ListInt32;
class ListInt32DefaultTypeInternal;
extern ListInt32DefaultTypeInternal _ListInt32_default_instance_;
class ListInt32Bool;
class ListInt32BoolDefaultTypeInternal;
extern ListInt32BoolDefaultTypeInternal _ListInt32Bool_default_instance_;
class ListInt32Bytes;
class ListInt32BytesDefaultTypeInternal;
extern ListInt32BytesDefaultTypeInternal _ListInt32Bytes_default_instance_;
class ListInt32Double;
class ListInt32DoubleDefaultTypeInternal;
extern ListInt32DoubleDefaultTypeInternal _ListInt32Double_default_instance_;
class ListInt32Fixed32;
class ListInt32Fixed32DefaultTypeInternal;
extern ListInt32Fixed32DefaultTypeInternal _ListInt32Fixed32_default_instance_;
class ListInt32Fixed64;
class ListInt32Fixed64DefaultTypeInternal;
extern ListInt32Fixed64DefaultTypeInternal _ListInt32Fixed64_default_instance_;
class ListInt32Float;
class ListInt32FloatDefaultTypeInternal;
extern ListInt32FloatDefaultTypeInternal _ListInt32Float_default_instance_;
class ListInt32Int32;
class ListInt32Int32DefaultTypeInternal;
extern ListInt32Int32DefaultTypeInternal _ListInt32Int32_default_instance_;
class ListInt32Int64;
class ListInt32Int64DefaultTypeInternal;
extern ListInt32Int64DefaultTypeInternal _ListInt32Int64_default_instance_;
class ListInt32Sfixed32;
class ListInt32Sfixed32DefaultTypeInternal;
extern ListInt32Sfixed32DefaultTypeInternal _ListInt32Sfixed32_default_instance_;
class ListInt32Sfixed64;
class ListInt32Sfixed64DefaultTypeInternal;
extern ListInt32Sfixed64DefaultTypeInternal _ListInt32Sfixed64_default_instance_;
class ListInt32Sint32;
class ListInt32Sint32DefaultTypeInternal;
extern ListInt32Sint32DefaultTypeInternal _ListInt32Sint32_default_instance_;
class ListInt32Sint64;
class ListInt32Sint64DefaultTypeInternal;
extern ListInt32Sint64DefaultTypeInternal _ListInt32Sint64_default_instance_;
class ListInt32String;
class ListInt32StringDefaultTypeInternal;
extern ListInt32StringDefaultTypeInternal _ListInt32String_default_instance_;
class ListInt32Uint32;
class ListInt32Uint32DefaultTypeInternal;
extern ListInt32Uint32DefaultTypeInternal _ListInt32Uint32_default_instance_;
class ListInt32Uint64;
class ListInt32Uint64DefaultTypeInternal;
extern ListInt32Uint64DefaultTypeInternal _ListInt32Uint64_default_instance_;
class ListInt64;
class ListInt64DefaultTypeInternal;
extern ListInt64DefaultTypeInternal _ListInt64_default_instance_;
class ListInt64Bool;
class ListInt64BoolDefaultTypeInternal;
extern ListInt64BoolDefaultTypeInternal _ListInt64Bool_default_instance_;
class ListInt64Bytes;
class ListInt64BytesDefaultTypeInternal;
extern ListInt64BytesDefaultTypeInternal _ListInt64Bytes_default_instance_;
class ListInt64Double;
class ListInt64DoubleDefaultTypeInternal;
extern ListInt64DoubleDefaultTypeInternal _ListInt64Double_default_instance_;
class ListInt64Fixed32;
class ListInt64Fixed32DefaultTypeInternal;
extern ListInt64Fixed32DefaultTypeInternal _ListInt64Fixed32_default_instance_;
class ListInt64Fixed64;
class ListInt64Fixed64DefaultTypeInternal;
extern ListInt64Fixed64DefaultTypeInternal _ListInt64Fixed64_default_instance_;
class ListInt64Float;
class ListInt64FloatDefaultTypeInternal;
extern ListInt64FloatDefaultTypeInternal _ListInt64Float_default_instance_;
class ListInt64Int32;
class ListInt64Int32DefaultTypeInternal;
extern ListInt64Int32DefaultTypeInternal _ListInt64Int32_default_instance_;
class ListInt64Int64;
class ListInt64Int64DefaultTypeInternal;
extern ListInt64Int64DefaultTypeInternal _ListInt64Int64_default_instance_;
class ListInt64Sfixed32;
class ListInt64Sfixed32DefaultTypeInternal;
extern ListInt64Sfixed32DefaultTypeInternal _ListInt64Sfixed32_default_instance_;
class ListInt64Sfixed64;
class ListInt64Sfixed64DefaultTypeInternal;
extern ListInt64Sfixed64DefaultTypeInternal _ListInt64Sfixed64_default_instance_;
class ListInt64Sint32;
class ListInt64Sint32DefaultTypeInternal;
extern ListInt64Sint32DefaultTypeInternal _ListInt64Sint32_default_instance_;
class ListInt64Sint64;
class ListInt64Sint64DefaultTypeInternal;
extern ListInt64Sint64DefaultTypeInternal _ListInt64Sint64_default_instance_;
class ListInt64String;
class ListInt64StringDefaultTypeInternal;
extern ListInt64StringDefaultTypeInternal _ListInt64String_default_instance_;
class ListInt64Uint32;
class ListInt64Uint32DefaultTypeInternal;
extern ListInt64Uint32DefaultTypeInternal _ListInt64Uint32_default_instance_;
class ListInt64Uint64;
class ListInt64Uint64DefaultTypeInternal;
extern ListInt64Uint64DefaultTypeInternal _ListInt64Uint64_default_instance_;
class ListSfixed32;
class ListSfixed32DefaultTypeInternal;
extern ListSfixed32DefaultTypeInternal _ListSfixed32_default_instance_;
class ListSfixed32Bool;
class ListSfixed32BoolDefaultTypeInternal;
extern ListSfixed32BoolDefaultTypeInternal _ListSfixed32Bool_default_instance_;
class ListSfixed32Bytes;
class ListSfixed32BytesDefaultTypeInternal;
extern ListSfixed32BytesDefaultTypeInternal _ListSfixed32Bytes_default_instance_;
class ListSfixed32Double;
class ListSfixed32DoubleDefaultTypeInternal;
extern ListSfixed32DoubleDefaultTypeInternal _ListSfixed32Double_default_instance_;
class ListSfixed32Fixed32;
class ListSfixed32Fixed32DefaultTypeInternal;
extern ListSfixed32Fixed32DefaultTypeInternal _ListSfixed32Fixed32_default_instance_;
class ListSfixed32Fixed64;
class ListSfixed32Fixed64DefaultTypeInternal;
extern ListSfixed32Fixed64DefaultTypeInternal _ListSfixed32Fixed64_default_instance_;
class ListSfixed32Float;
class ListSfixed32FloatDefaultTypeInternal;
extern ListSfixed32FloatDefaultTypeInternal _ListSfixed32Float_default_instance_;
class ListSfixed32Int32;
class ListSfixed32Int32DefaultTypeInternal;
extern ListSfixed32Int32DefaultTypeInternal _ListSfixed32Int32_default_instance_;
class ListSfixed32Int64;
class ListSfixed32Int64DefaultTypeInternal;
extern ListSfixed32Int64DefaultTypeInternal _ListSfixed32Int64_default_instance_;
class ListSfixed32Sfixed32;
class ListSfixed32Sfixed32DefaultTypeInternal;
extern ListSfixed32Sfixed32DefaultTypeInternal _ListSfixed32Sfixed32_default_instance_;
class ListSfixed32Sfixed64;
class ListSfixed32Sfixed64DefaultTypeInternal;
extern ListSfixed32Sfixed64DefaultTypeInternal _ListSfixed32Sfixed64_default_instance_;
class ListSfixed32Sint32;
class ListSfixed32Sint32DefaultTypeInternal;
extern ListSfixed32Sint32DefaultTypeInternal _ListSfixed32Sint32_default_instance_;
class ListSfixed32Sint64;
class ListSfixed32Sint64DefaultTypeInternal;
extern ListSfixed32Sint64DefaultTypeInternal _ListSfixed32Sint64_default_instance_;
class ListSfixed32String;
class ListSfixed32StringDefaultTypeInternal;
extern ListSfixed32StringDefaultTypeInternal _ListSfixed32String_default_instance_;
class ListSfixed32Uint32;
class ListSfixed32Uint32DefaultTypeInternal;
extern ListSfixed32Uint32DefaultTypeInternal _ListSfixed32Uint32_default_instance_;
class ListSfixed32Uint64;
class ListSfixed32Uint64DefaultTypeInternal;
extern ListSfixed32Uint64DefaultTypeInternal _ListSfixed32Uint64_default_instance_;
class ListSfixed64;
class ListSfixed64DefaultTypeInternal;
extern ListSfixed64DefaultTypeInternal _ListSfixed64_default_instance_;
class ListSfixed64Bool;
class ListSfixed64BoolDefaultTypeInternal;
extern ListSfixed64BoolDefaultTypeInternal _ListSfixed64Bool_default_instance_;
class ListSfixed64Bytes;
class ListSfixed64BytesDefaultTypeInternal;
extern ListSfixed64BytesDefaultTypeInternal _ListSfixed64Bytes_default_instance_;
class ListSfixed64Double;
class ListSfixed64DoubleDefaultTypeInternal;
extern ListSfixed64DoubleDefaultTypeInternal _ListSfixed64Double_default_instance_;
class ListSfixed64Fixed32;
class ListSfixed64Fixed32DefaultTypeInternal;
extern ListSfixed64Fixed32DefaultTypeInternal _ListSfixed64Fixed32_default_instance_;
class ListSfixed64Fixed64;
class ListSfixed64Fixed64DefaultTypeInternal;
extern ListSfixed64Fixed64DefaultTypeInternal _ListSfixed64Fixed64_default_instance_;
class ListSfixed64Float;
class ListSfixed64FloatDefaultTypeInternal;
extern ListSfixed64FloatDefaultTypeInternal _ListSfixed64Float_default_instance_;
class ListSfixed64Int32;
class ListSfixed64Int32DefaultTypeInternal;
extern ListSfixed64Int32DefaultTypeInternal _ListSfixed64Int32_default_instance_;
class ListSfixed64Int64;
class ListSfixed64Int64DefaultTypeInternal;
extern ListSfixed64Int64DefaultTypeInternal _ListSfixed64Int64_default_instance_;
class ListSfixed64Sfixed32;
class ListSfixed64Sfixed32DefaultTypeInternal;
extern ListSfixed64Sfixed32DefaultTypeInternal _ListSfixed64Sfixed32_default_instance_;
class ListSfixed64Sfixed64;
class ListSfixed64Sfixed64DefaultTypeInternal;
extern ListSfixed64Sfixed64DefaultTypeInternal _ListSfixed64Sfixed64_default_instance_;
class ListSfixed64Sint32;
class ListSfixed64Sint32DefaultTypeInternal;
extern ListSfixed64Sint32DefaultTypeInternal _ListSfixed64Sint32_default_instance_;
class ListSfixed64Sint64;
class ListSfixed64Sint64DefaultTypeInternal;
extern ListSfixed64Sint64DefaultTypeInternal _ListSfixed64Sint64_default_instance_;
class ListSfixed64String;
class ListSfixed64StringDefaultTypeInternal;
extern ListSfixed64StringDefaultTypeInternal _ListSfixed64String_default_instance_;
class ListSfixed64Uint32;
class ListSfixed64Uint32DefaultTypeInternal;
extern ListSfixed64Uint32DefaultTypeInternal _ListSfixed64Uint32_default_instance_;
class ListSfixed64Uint64;
class ListSfixed64Uint64DefaultTypeInternal;
extern ListSfixed64Uint64DefaultTypeInternal _ListSfixed64Uint64_default_instance_;
class ListSint32;
class ListSint32DefaultTypeInternal;
extern ListSint32DefaultTypeInternal _ListSint32_default_instance_;
class ListSint32Bool;
class ListSint32BoolDefaultTypeInternal;
extern ListSint32BoolDefaultTypeInternal _ListSint32Bool_default_instance_;
class ListSint32Bytes;
class ListSint32BytesDefaultTypeInternal;
extern ListSint32BytesDefaultTypeInternal _ListSint32Bytes_default_instance_;
class ListSint32Double;
class ListSint32DoubleDefaultTypeInternal;
extern ListSint32DoubleDefaultTypeInternal _ListSint32Double_default_instance_;
class ListSint32Fixed32;
class ListSint32Fixed32DefaultTypeInternal;
extern ListSint32Fixed32DefaultTypeInternal _ListSint32Fixed32_default_instance_;
class ListSint32Fixed64;
class ListSint32Fixed64DefaultTypeInternal;
extern ListSint32Fixed64DefaultTypeInternal _ListSint32Fixed64_default_instance_;
class ListSint32Float;
class ListSint32FloatDefaultTypeInternal;
extern ListSint32FloatDefaultTypeInternal _ListSint32Float_default_instance_;
class ListSint32Int32;
class ListSint32Int32DefaultTypeInternal;
extern ListSint32Int32DefaultTypeInternal _ListSint32Int32_default_instance_;
class ListSint32Int64;
class ListSint32Int64DefaultTypeInternal;
extern ListSint32Int64DefaultTypeInternal _ListSint32Int64_default_instance_;
class ListSint32Sfixed32;
class ListSint32Sfixed32DefaultTypeInternal;
extern ListSint32Sfixed32DefaultTypeInternal _ListSint32Sfixed32_default_instance_;
class ListSint32Sfixed64;
class ListSint32Sfixed64DefaultTypeInternal;
extern ListSint32Sfixed64DefaultTypeInternal _ListSint32Sfixed64_default_instance_;
class ListSint32Sint32;
class ListSint32Sint32DefaultTypeInternal;
extern ListSint32Sint32DefaultTypeInternal _ListSint32Sint32_default_instance_;
class ListSint32Sint64;
class ListSint32Sint64DefaultTypeInternal;
extern ListSint32Sint64DefaultTypeInternal _ListSint32Sint64_default_instance_;
class ListSint32String;
class ListSint32StringDefaultTypeInternal;
extern ListSint32StringDefaultTypeInternal _ListSint32String_default_instance_;
class ListSint32Uint32;
class ListSint32Uint32DefaultTypeInternal;
extern ListSint32Uint32DefaultTypeInternal _ListSint32Uint32_default_instance_;
class ListSint32Uint64;
class ListSint32Uint64DefaultTypeInternal;
extern ListSint32Uint64DefaultTypeInternal _ListSint32Uint64_default_instance_;
class ListSint64;
class ListSint64DefaultTypeInternal;
extern ListSint64DefaultTypeInternal _ListSint64_default_instance_;
class ListSint64Bool;
class ListSint64BoolDefaultTypeInternal;
extern ListSint64BoolDefaultTypeInternal _ListSint64Bool_default_instance_;
class ListSint64Bytes;
class ListSint64BytesDefaultTypeInternal;
extern ListSint64BytesDefaultTypeInternal _ListSint64Bytes_default_instance_;
class ListSint64Double;
class ListSint64DoubleDefaultTypeInternal;
extern ListSint64DoubleDefaultTypeInternal _ListSint64Double_default_instance_;
class ListSint64Fixed32;
class ListSint64Fixed32DefaultTypeInternal;
extern ListSint64Fixed32DefaultTypeInternal _ListSint64Fixed32_default_instance_;
class ListSint64Fixed64;
class ListSint64Fixed64DefaultTypeInternal;
extern ListSint64Fixed64DefaultTypeInternal _ListSint64Fixed64_default_instance_;
class ListSint64Float;
class ListSint64FloatDefaultTypeInternal;
extern ListSint64FloatDefaultTypeInternal _ListSint64Float_default_instance_;
class ListSint64Int32;
class ListSint64Int32DefaultTypeInternal;
extern ListSint64Int32DefaultTypeInternal _ListSint64Int32_default_instance_;
class ListSint64Int64;
class ListSint64Int64DefaultTypeInternal;
extern ListSint64Int64DefaultTypeInternal _ListSint64Int64_default_instance_;
class ListSint64Sfixed32;
class ListSint64Sfixed32DefaultTypeInternal;
extern ListSint64Sfixed32DefaultTypeInternal _ListSint64Sfixed32_default_instance_;
class ListSint64Sfixed64;
class ListSint64Sfixed64DefaultTypeInternal;
extern ListSint64Sfixed64DefaultTypeInternal _ListSint64Sfixed64_default_instance_;
class ListSint64Sint32;
class ListSint64Sint32DefaultTypeInternal;
extern ListSint64Sint32DefaultTypeInternal _ListSint64Sint32_default_instance_;
class ListSint64Sint64;
class ListSint64Sint64DefaultTypeInternal;
extern ListSint64Sint64DefaultTypeInternal _ListSint64Sint64_default_instance_;
class ListSint64String;
class ListSint64StringDefaultTypeInternal;
extern ListSint64StringDefaultTypeInternal _ListSint64String_default_instance_;
class ListSint64Uint32;
class ListSint64Uint32DefaultTypeInternal;
extern ListSint64Uint32DefaultTypeInternal _ListSint64Uint32_default_instance_;
class ListSint64Uint64;
class ListSint64Uint64DefaultTypeInternal;
extern ListSint64Uint64DefaultTypeInternal _ListSint64Uint64_default_instance_;
class ListString;
class ListStringDefaultTypeInternal;
extern ListStringDefaultTypeInternal _ListString_default_instance_;
class ListStringBool;
class ListStringBoolDefaultTypeInternal;
extern ListStringBoolDefaultTypeInternal _ListStringBool_default_instance_;
class ListStringBytes;
class ListStringBytesDefaultTypeInternal;
extern ListStringBytesDefaultTypeInternal _ListStringBytes_default_instance_;
class ListStringDouble;
class ListStringDoubleDefaultTypeInternal;
extern ListStringDoubleDefaultTypeInternal _ListStringDouble_default_instance_;
class ListStringFixed32;
class ListStringFixed32DefaultTypeInternal;
extern ListStringFixed32DefaultTypeInternal _ListStringFixed32_default_instance_;
class ListStringFixed64;
class ListStringFixed64DefaultTypeInternal;
extern ListStringFixed64DefaultTypeInternal _ListStringFixed64_default_instance_;
class ListStringFloat;
class ListStringFloatDefaultTypeInternal;
extern ListStringFloatDefaultTypeInternal _ListStringFloat_default_instance_;
class ListStringInt32;
class ListStringInt32DefaultTypeInternal;
extern ListStringInt32DefaultTypeInternal _ListStringInt32_default_instance_;
class ListStringInt64;
class ListStringInt64DefaultTypeInternal;
extern ListStringInt64DefaultTypeInternal _ListStringInt64_default_instance_;
class ListStringSfixed32;
class ListStringSfixed32DefaultTypeInternal;
extern ListStringSfixed32DefaultTypeInternal _ListStringSfixed32_default_instance_;
class ListStringSfixed64;
class ListStringSfixed64DefaultTypeInternal;
extern ListStringSfixed64DefaultTypeInternal _ListStringSfixed64_default_instance_;
class ListStringSint32;
class ListStringSint32DefaultTypeInternal;
extern ListStringSint32DefaultTypeInternal _ListStringSint32_default_instance_;
class ListStringSint64;
class ListStringSint64DefaultTypeInternal;
extern ListStringSint64DefaultTypeInternal _ListStringSint64_default_instance_;
class ListStringString;
class ListStringStringDefaultTypeInternal;
extern ListStringStringDefaultTypeInternal _ListStringString_default_instance_;
class ListStringUint32;
class ListStringUint32DefaultTypeInternal;
extern ListStringUint32DefaultTypeInternal _ListStringUint32_default_instance_;
class ListStringUint64;
class ListStringUint64DefaultTypeInternal;
extern ListStringUint64DefaultTypeInternal _ListStringUint64_default_instance_;
class ListUint32;
class ListUint32DefaultTypeInternal;
extern ListUint32DefaultTypeInternal _ListUint32_default_instance_;
class ListUint32Bool;
class ListUint32BoolDefaultTypeInternal;
extern ListUint32BoolDefaultTypeInternal _ListUint32Bool_default_instance_;
class ListUint32Bytes;
class ListUint32BytesDefaultTypeInternal;
extern ListUint32BytesDefaultTypeInternal _ListUint32Bytes_default_instance_;
class ListUint32Double;
class ListUint32DoubleDefaultTypeInternal;
extern ListUint32DoubleDefaultTypeInternal _ListUint32Double_default_instance_;
class ListUint32Fixed32;
class ListUint32Fixed32DefaultTypeInternal;
extern ListUint32Fixed32DefaultTypeInternal _ListUint32Fixed32_default_instance_;
class ListUint32Fixed64;
class ListUint32Fixed64DefaultTypeInternal;
extern ListUint32Fixed64DefaultTypeInternal _ListUint32Fixed64_default_instance_;
class ListUint32Float;
class ListUint32FloatDefaultTypeInternal;
extern ListUint32FloatDefaultTypeInternal _ListUint32Float_default_instance_;
class ListUint32Int32;
class ListUint32Int32DefaultTypeInternal;
extern ListUint32Int32DefaultTypeInternal _ListUint32Int32_default_instance_;
class ListUint32Int64;
class ListUint32Int64DefaultTypeInternal;
extern ListUint32Int64DefaultTypeInternal _ListUint32Int64_default_instance_;
class ListUint32Sfixed32;
class ListUint32Sfixed32DefaultTypeInternal;
extern ListUint32Sfixed32DefaultTypeInternal _ListUint32Sfixed32_default_instance_;
class ListUint32Sfixed64;
class ListUint32Sfixed64DefaultTypeInternal;
extern ListUint32Sfixed64DefaultTypeInternal _ListUint32Sfixed64_default_instance_;
class ListUint32Sint32;
class ListUint32Sint32DefaultTypeInternal;
extern ListUint32Sint32DefaultTypeInternal _ListUint32Sint32_default_instance_;
class ListUint32Sint64;
class ListUint32Sint64DefaultTypeInternal;
extern ListUint32Sint64DefaultTypeInternal _ListUint32Sint64_default_instance_;
class ListUint32String;
class ListUint32StringDefaultTypeInternal;
extern ListUint32StringDefaultTypeInternal _ListUint32String_default_instance_;
class ListUint32Uint32;
class ListUint32Uint32DefaultTypeInternal;
extern ListUint32Uint32DefaultTypeInternal _ListUint32Uint32_default_instance_;
class ListUint32Uint64;
class ListUint32Uint64DefaultTypeInternal;
extern ListUint32Uint64DefaultTypeInternal _ListUint32Uint64_default_instance_;
class ListUint64;
class ListUint64DefaultTypeInternal;
extern ListUint64DefaultTypeInternal _ListUint64_default_instance_;
class ListUint64Bool;
class ListUint64BoolDefaultTypeInternal;
extern ListUint64BoolDefaultTypeInternal _ListUint64Bool_default_instance_;
class ListUint64Bytes;
class ListUint64BytesDefaultTypeInternal;
extern ListUint64BytesDefaultTypeInternal _ListUint64Bytes_default_instance_;
class ListUint64Double;
class ListUint64DoubleDefaultTypeInternal;
extern ListUint64DoubleDefaultTypeInternal _ListUint64Double_default_instance_;
class ListUint64Fixed32;
class ListUint64Fixed32DefaultTypeInternal;
extern ListUint64Fixed32DefaultTypeInternal _ListUint64Fixed32_default_instance_;
class ListUint64Fixed64;
class ListUint64Fixed64DefaultTypeInternal;
extern ListUint64Fixed64DefaultTypeInternal _ListUint64Fixed64_default_instance_;
class ListUint64Float;
class ListUint64FloatDefaultTypeInternal;
extern ListUint64FloatDefaultTypeInternal _ListUint64Float_default_instance_;
class ListUint64Int32;
class ListUint64Int32DefaultTypeInternal;
extern ListUint64Int32DefaultTypeInternal _ListUint64Int32_default_instance_;
class ListUint64Int64;
class ListUint64Int64DefaultTypeInternal;
extern ListUint64Int64DefaultTypeInternal _ListUint64Int64_default_instance_;
class ListUint64Sfixed32;
class ListUint64Sfixed32DefaultTypeInternal;
extern ListUint64Sfixed32DefaultTypeInternal _ListUint64Sfixed32_default_instance_;
class ListUint64Sfixed64;
class ListUint64Sfixed64DefaultTypeInternal;
extern ListUint64Sfixed64DefaultTypeInternal _ListUint64Sfixed64_default_instance_;
class ListUint64Sint32;
class ListUint64Sint32DefaultTypeInternal;
extern ListUint64Sint32DefaultTypeInternal _ListUint64Sint32_default_instance_;
class ListUint64Sint64;
class ListUint64Sint64DefaultTypeInternal;
extern ListUint64Sint64DefaultTypeInternal _ListUint64Sint64_default_instance_;
class ListUint64String;
class ListUint64StringDefaultTypeInternal;
extern ListUint64StringDefaultTypeInternal _ListUint64String_default_instance_;
class ListUint64Uint32;
class ListUint64Uint32DefaultTypeInternal;
extern ListUint64Uint32DefaultTypeInternal _ListUint64Uint32_default_instance_;
class ListUint64Uint64;
class ListUint64Uint64DefaultTypeInternal;
extern ListUint64Uint64DefaultTypeInternal _ListUint64Uint64_default_instance_;
}  // namespace feature_proto
namespace google {
namespace protobuf {
template<> ::feature_proto::Feature* Arena::CreateMaybeMessage<::feature_proto::Feature>(Arena*);
template<> ::feature_proto::Features* Arena::CreateMaybeMessage<::feature_proto::Features>(Arena*);
template<> ::feature_proto::FeaturesList* Arena::CreateMaybeMessage<::feature_proto::FeaturesList>(Arena*);
template<> ::feature_proto::FeaturesMap* Arena::CreateMaybeMessage<::feature_proto::FeaturesMap>(Arena*);
template<> ::feature_proto::FeaturesMap_FEntry_DoNotUse* Arena::CreateMaybeMessage<::feature_proto::FeaturesMap_FEntry_DoNotUse>(Arena*);
template<> ::feature_proto::ListBool* Arena::CreateMaybeMessage<::feature_proto::ListBool>(Arena*);
template<> ::feature_proto::ListBoolBool* Arena::CreateMaybeMessage<::feature_proto::ListBoolBool>(Arena*);
template<> ::feature_proto::ListBoolBytes* Arena::CreateMaybeMessage<::feature_proto::ListBoolBytes>(Arena*);
template<> ::feature_proto::ListBoolDouble* Arena::CreateMaybeMessage<::feature_proto::ListBoolDouble>(Arena*);
template<> ::feature_proto::ListBoolFixed32* Arena::CreateMaybeMessage<::feature_proto::ListBoolFixed32>(Arena*);
template<> ::feature_proto::ListBoolFixed64* Arena::CreateMaybeMessage<::feature_proto::ListBoolFixed64>(Arena*);
template<> ::feature_proto::ListBoolFloat* Arena::CreateMaybeMessage<::feature_proto::ListBoolFloat>(Arena*);
template<> ::feature_proto::ListBoolInt32* Arena::CreateMaybeMessage<::feature_proto::ListBoolInt32>(Arena*);
template<> ::feature_proto::ListBoolInt64* Arena::CreateMaybeMessage<::feature_proto::ListBoolInt64>(Arena*);
template<> ::feature_proto::ListBoolSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListBoolSfixed32>(Arena*);
template<> ::feature_proto::ListBoolSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListBoolSfixed64>(Arena*);
template<> ::feature_proto::ListBoolSint32* Arena::CreateMaybeMessage<::feature_proto::ListBoolSint32>(Arena*);
template<> ::feature_proto::ListBoolSint64* Arena::CreateMaybeMessage<::feature_proto::ListBoolSint64>(Arena*);
template<> ::feature_proto::ListBoolString* Arena::CreateMaybeMessage<::feature_proto::ListBoolString>(Arena*);
template<> ::feature_proto::ListBoolUint32* Arena::CreateMaybeMessage<::feature_proto::ListBoolUint32>(Arena*);
template<> ::feature_proto::ListBoolUint64* Arena::CreateMaybeMessage<::feature_proto::ListBoolUint64>(Arena*);
template<> ::feature_proto::ListBytes* Arena::CreateMaybeMessage<::feature_proto::ListBytes>(Arena*);
template<> ::feature_proto::ListBytesBool* Arena::CreateMaybeMessage<::feature_proto::ListBytesBool>(Arena*);
template<> ::feature_proto::ListBytesBytes* Arena::CreateMaybeMessage<::feature_proto::ListBytesBytes>(Arena*);
template<> ::feature_proto::ListBytesDouble* Arena::CreateMaybeMessage<::feature_proto::ListBytesDouble>(Arena*);
template<> ::feature_proto::ListBytesFixed32* Arena::CreateMaybeMessage<::feature_proto::ListBytesFixed32>(Arena*);
template<> ::feature_proto::ListBytesFixed64* Arena::CreateMaybeMessage<::feature_proto::ListBytesFixed64>(Arena*);
template<> ::feature_proto::ListBytesFloat* Arena::CreateMaybeMessage<::feature_proto::ListBytesFloat>(Arena*);
template<> ::feature_proto::ListBytesInt32* Arena::CreateMaybeMessage<::feature_proto::ListBytesInt32>(Arena*);
template<> ::feature_proto::ListBytesInt64* Arena::CreateMaybeMessage<::feature_proto::ListBytesInt64>(Arena*);
template<> ::feature_proto::ListBytesSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListBytesSfixed32>(Arena*);
template<> ::feature_proto::ListBytesSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListBytesSfixed64>(Arena*);
template<> ::feature_proto::ListBytesSint32* Arena::CreateMaybeMessage<::feature_proto::ListBytesSint32>(Arena*);
template<> ::feature_proto::ListBytesSint64* Arena::CreateMaybeMessage<::feature_proto::ListBytesSint64>(Arena*);
template<> ::feature_proto::ListBytesString* Arena::CreateMaybeMessage<::feature_proto::ListBytesString>(Arena*);
template<> ::feature_proto::ListBytesUint32* Arena::CreateMaybeMessage<::feature_proto::ListBytesUint32>(Arena*);
template<> ::feature_proto::ListBytesUint64* Arena::CreateMaybeMessage<::feature_proto::ListBytesUint64>(Arena*);
template<> ::feature_proto::ListDouble* Arena::CreateMaybeMessage<::feature_proto::ListDouble>(Arena*);
template<> ::feature_proto::ListDoubleBool* Arena::CreateMaybeMessage<::feature_proto::ListDoubleBool>(Arena*);
template<> ::feature_proto::ListDoubleBytes* Arena::CreateMaybeMessage<::feature_proto::ListDoubleBytes>(Arena*);
template<> ::feature_proto::ListDoubleDouble* Arena::CreateMaybeMessage<::feature_proto::ListDoubleDouble>(Arena*);
template<> ::feature_proto::ListDoubleFixed32* Arena::CreateMaybeMessage<::feature_proto::ListDoubleFixed32>(Arena*);
template<> ::feature_proto::ListDoubleFixed64* Arena::CreateMaybeMessage<::feature_proto::ListDoubleFixed64>(Arena*);
template<> ::feature_proto::ListDoubleFloat* Arena::CreateMaybeMessage<::feature_proto::ListDoubleFloat>(Arena*);
template<> ::feature_proto::ListDoubleInt32* Arena::CreateMaybeMessage<::feature_proto::ListDoubleInt32>(Arena*);
template<> ::feature_proto::ListDoubleInt64* Arena::CreateMaybeMessage<::feature_proto::ListDoubleInt64>(Arena*);
template<> ::feature_proto::ListDoubleSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListDoubleSfixed32>(Arena*);
template<> ::feature_proto::ListDoubleSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListDoubleSfixed64>(Arena*);
template<> ::feature_proto::ListDoubleSint32* Arena::CreateMaybeMessage<::feature_proto::ListDoubleSint32>(Arena*);
template<> ::feature_proto::ListDoubleSint64* Arena::CreateMaybeMessage<::feature_proto::ListDoubleSint64>(Arena*);
template<> ::feature_proto::ListDoubleString* Arena::CreateMaybeMessage<::feature_proto::ListDoubleString>(Arena*);
template<> ::feature_proto::ListDoubleUint32* Arena::CreateMaybeMessage<::feature_proto::ListDoubleUint32>(Arena*);
template<> ::feature_proto::ListDoubleUint64* Arena::CreateMaybeMessage<::feature_proto::ListDoubleUint64>(Arena*);
template<> ::feature_proto::ListFixed32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32>(Arena*);
template<> ::feature_proto::ListFixed32Bool* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Bool>(Arena*);
template<> ::feature_proto::ListFixed32Bytes* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Bytes>(Arena*);
template<> ::feature_proto::ListFixed32Double* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Double>(Arena*);
template<> ::feature_proto::ListFixed32Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Fixed32>(Arena*);
template<> ::feature_proto::ListFixed32Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Fixed64>(Arena*);
template<> ::feature_proto::ListFixed32Float* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Float>(Arena*);
template<> ::feature_proto::ListFixed32Int32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Int32>(Arena*);
template<> ::feature_proto::ListFixed32Int64* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Int64>(Arena*);
template<> ::feature_proto::ListFixed32Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Sfixed32>(Arena*);
template<> ::feature_proto::ListFixed32Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Sfixed64>(Arena*);
template<> ::feature_proto::ListFixed32Sint32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Sint32>(Arena*);
template<> ::feature_proto::ListFixed32Sint64* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Sint64>(Arena*);
template<> ::feature_proto::ListFixed32String* Arena::CreateMaybeMessage<::feature_proto::ListFixed32String>(Arena*);
template<> ::feature_proto::ListFixed32Uint32* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Uint32>(Arena*);
template<> ::feature_proto::ListFixed32Uint64* Arena::CreateMaybeMessage<::feature_proto::ListFixed32Uint64>(Arena*);
template<> ::feature_proto::ListFixed64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64>(Arena*);
template<> ::feature_proto::ListFixed64Bool* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Bool>(Arena*);
template<> ::feature_proto::ListFixed64Bytes* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Bytes>(Arena*);
template<> ::feature_proto::ListFixed64Double* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Double>(Arena*);
template<> ::feature_proto::ListFixed64Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Fixed32>(Arena*);
template<> ::feature_proto::ListFixed64Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Fixed64>(Arena*);
template<> ::feature_proto::ListFixed64Float* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Float>(Arena*);
template<> ::feature_proto::ListFixed64Int32* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Int32>(Arena*);
template<> ::feature_proto::ListFixed64Int64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Int64>(Arena*);
template<> ::feature_proto::ListFixed64Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Sfixed32>(Arena*);
template<> ::feature_proto::ListFixed64Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Sfixed64>(Arena*);
template<> ::feature_proto::ListFixed64Sint32* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Sint32>(Arena*);
template<> ::feature_proto::ListFixed64Sint64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Sint64>(Arena*);
template<> ::feature_proto::ListFixed64String* Arena::CreateMaybeMessage<::feature_proto::ListFixed64String>(Arena*);
template<> ::feature_proto::ListFixed64Uint32* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Uint32>(Arena*);
template<> ::feature_proto::ListFixed64Uint64* Arena::CreateMaybeMessage<::feature_proto::ListFixed64Uint64>(Arena*);
template<> ::feature_proto::ListFloat* Arena::CreateMaybeMessage<::feature_proto::ListFloat>(Arena*);
template<> ::feature_proto::ListFloatBool* Arena::CreateMaybeMessage<::feature_proto::ListFloatBool>(Arena*);
template<> ::feature_proto::ListFloatBytes* Arena::CreateMaybeMessage<::feature_proto::ListFloatBytes>(Arena*);
template<> ::feature_proto::ListFloatDouble* Arena::CreateMaybeMessage<::feature_proto::ListFloatDouble>(Arena*);
template<> ::feature_proto::ListFloatFixed32* Arena::CreateMaybeMessage<::feature_proto::ListFloatFixed32>(Arena*);
template<> ::feature_proto::ListFloatFixed64* Arena::CreateMaybeMessage<::feature_proto::ListFloatFixed64>(Arena*);
template<> ::feature_proto::ListFloatFloat* Arena::CreateMaybeMessage<::feature_proto::ListFloatFloat>(Arena*);
template<> ::feature_proto::ListFloatInt32* Arena::CreateMaybeMessage<::feature_proto::ListFloatInt32>(Arena*);
template<> ::feature_proto::ListFloatInt64* Arena::CreateMaybeMessage<::feature_proto::ListFloatInt64>(Arena*);
template<> ::feature_proto::ListFloatSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListFloatSfixed32>(Arena*);
template<> ::feature_proto::ListFloatSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListFloatSfixed64>(Arena*);
template<> ::feature_proto::ListFloatSint32* Arena::CreateMaybeMessage<::feature_proto::ListFloatSint32>(Arena*);
template<> ::feature_proto::ListFloatSint64* Arena::CreateMaybeMessage<::feature_proto::ListFloatSint64>(Arena*);
template<> ::feature_proto::ListFloatString* Arena::CreateMaybeMessage<::feature_proto::ListFloatString>(Arena*);
template<> ::feature_proto::ListFloatUint32* Arena::CreateMaybeMessage<::feature_proto::ListFloatUint32>(Arena*);
template<> ::feature_proto::ListFloatUint64* Arena::CreateMaybeMessage<::feature_proto::ListFloatUint64>(Arena*);
template<> ::feature_proto::ListInt32* Arena::CreateMaybeMessage<::feature_proto::ListInt32>(Arena*);
template<> ::feature_proto::ListInt32Bool* Arena::CreateMaybeMessage<::feature_proto::ListInt32Bool>(Arena*);
template<> ::feature_proto::ListInt32Bytes* Arena::CreateMaybeMessage<::feature_proto::ListInt32Bytes>(Arena*);
template<> ::feature_proto::ListInt32Double* Arena::CreateMaybeMessage<::feature_proto::ListInt32Double>(Arena*);
template<> ::feature_proto::ListInt32Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListInt32Fixed32>(Arena*);
template<> ::feature_proto::ListInt32Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListInt32Fixed64>(Arena*);
template<> ::feature_proto::ListInt32Float* Arena::CreateMaybeMessage<::feature_proto::ListInt32Float>(Arena*);
template<> ::feature_proto::ListInt32Int32* Arena::CreateMaybeMessage<::feature_proto::ListInt32Int32>(Arena*);
template<> ::feature_proto::ListInt32Int64* Arena::CreateMaybeMessage<::feature_proto::ListInt32Int64>(Arena*);
template<> ::feature_proto::ListInt32Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListInt32Sfixed32>(Arena*);
template<> ::feature_proto::ListInt32Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListInt32Sfixed64>(Arena*);
template<> ::feature_proto::ListInt32Sint32* Arena::CreateMaybeMessage<::feature_proto::ListInt32Sint32>(Arena*);
template<> ::feature_proto::ListInt32Sint64* Arena::CreateMaybeMessage<::feature_proto::ListInt32Sint64>(Arena*);
template<> ::feature_proto::ListInt32String* Arena::CreateMaybeMessage<::feature_proto::ListInt32String>(Arena*);
template<> ::feature_proto::ListInt32Uint32* Arena::CreateMaybeMessage<::feature_proto::ListInt32Uint32>(Arena*);
template<> ::feature_proto::ListInt32Uint64* Arena::CreateMaybeMessage<::feature_proto::ListInt32Uint64>(Arena*);
template<> ::feature_proto::ListInt64* Arena::CreateMaybeMessage<::feature_proto::ListInt64>(Arena*);
template<> ::feature_proto::ListInt64Bool* Arena::CreateMaybeMessage<::feature_proto::ListInt64Bool>(Arena*);
template<> ::feature_proto::ListInt64Bytes* Arena::CreateMaybeMessage<::feature_proto::ListInt64Bytes>(Arena*);
template<> ::feature_proto::ListInt64Double* Arena::CreateMaybeMessage<::feature_proto::ListInt64Double>(Arena*);
template<> ::feature_proto::ListInt64Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListInt64Fixed32>(Arena*);
template<> ::feature_proto::ListInt64Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListInt64Fixed64>(Arena*);
template<> ::feature_proto::ListInt64Float* Arena::CreateMaybeMessage<::feature_proto::ListInt64Float>(Arena*);
template<> ::feature_proto::ListInt64Int32* Arena::CreateMaybeMessage<::feature_proto::ListInt64Int32>(Arena*);
template<> ::feature_proto::ListInt64Int64* Arena::CreateMaybeMessage<::feature_proto::ListInt64Int64>(Arena*);
template<> ::feature_proto::ListInt64Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListInt64Sfixed32>(Arena*);
template<> ::feature_proto::ListInt64Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListInt64Sfixed64>(Arena*);
template<> ::feature_proto::ListInt64Sint32* Arena::CreateMaybeMessage<::feature_proto::ListInt64Sint32>(Arena*);
template<> ::feature_proto::ListInt64Sint64* Arena::CreateMaybeMessage<::feature_proto::ListInt64Sint64>(Arena*);
template<> ::feature_proto::ListInt64String* Arena::CreateMaybeMessage<::feature_proto::ListInt64String>(Arena*);
template<> ::feature_proto::ListInt64Uint32* Arena::CreateMaybeMessage<::feature_proto::ListInt64Uint32>(Arena*);
template<> ::feature_proto::ListInt64Uint64* Arena::CreateMaybeMessage<::feature_proto::ListInt64Uint64>(Arena*);
template<> ::feature_proto::ListSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32>(Arena*);
template<> ::feature_proto::ListSfixed32Bool* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Bool>(Arena*);
template<> ::feature_proto::ListSfixed32Bytes* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Bytes>(Arena*);
template<> ::feature_proto::ListSfixed32Double* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Double>(Arena*);
template<> ::feature_proto::ListSfixed32Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Fixed32>(Arena*);
template<> ::feature_proto::ListSfixed32Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Fixed64>(Arena*);
template<> ::feature_proto::ListSfixed32Float* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Float>(Arena*);
template<> ::feature_proto::ListSfixed32Int32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Int32>(Arena*);
template<> ::feature_proto::ListSfixed32Int64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Int64>(Arena*);
template<> ::feature_proto::ListSfixed32Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Sfixed32>(Arena*);
template<> ::feature_proto::ListSfixed32Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Sfixed64>(Arena*);
template<> ::feature_proto::ListSfixed32Sint32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Sint32>(Arena*);
template<> ::feature_proto::ListSfixed32Sint64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Sint64>(Arena*);
template<> ::feature_proto::ListSfixed32String* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32String>(Arena*);
template<> ::feature_proto::ListSfixed32Uint32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Uint32>(Arena*);
template<> ::feature_proto::ListSfixed32Uint64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed32Uint64>(Arena*);
template<> ::feature_proto::ListSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64>(Arena*);
template<> ::feature_proto::ListSfixed64Bool* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Bool>(Arena*);
template<> ::feature_proto::ListSfixed64Bytes* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Bytes>(Arena*);
template<> ::feature_proto::ListSfixed64Double* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Double>(Arena*);
template<> ::feature_proto::ListSfixed64Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Fixed32>(Arena*);
template<> ::feature_proto::ListSfixed64Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Fixed64>(Arena*);
template<> ::feature_proto::ListSfixed64Float* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Float>(Arena*);
template<> ::feature_proto::ListSfixed64Int32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Int32>(Arena*);
template<> ::feature_proto::ListSfixed64Int64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Int64>(Arena*);
template<> ::feature_proto::ListSfixed64Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Sfixed32>(Arena*);
template<> ::feature_proto::ListSfixed64Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Sfixed64>(Arena*);
template<> ::feature_proto::ListSfixed64Sint32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Sint32>(Arena*);
template<> ::feature_proto::ListSfixed64Sint64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Sint64>(Arena*);
template<> ::feature_proto::ListSfixed64String* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64String>(Arena*);
template<> ::feature_proto::ListSfixed64Uint32* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Uint32>(Arena*);
template<> ::feature_proto::ListSfixed64Uint64* Arena::CreateMaybeMessage<::feature_proto::ListSfixed64Uint64>(Arena*);
template<> ::feature_proto::ListSint32* Arena::CreateMaybeMessage<::feature_proto::ListSint32>(Arena*);
template<> ::feature_proto::ListSint32Bool* Arena::CreateMaybeMessage<::feature_proto::ListSint32Bool>(Arena*);
template<> ::feature_proto::ListSint32Bytes* Arena::CreateMaybeMessage<::feature_proto::ListSint32Bytes>(Arena*);
template<> ::feature_proto::ListSint32Double* Arena::CreateMaybeMessage<::feature_proto::ListSint32Double>(Arena*);
template<> ::feature_proto::ListSint32Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListSint32Fixed32>(Arena*);
template<> ::feature_proto::ListSint32Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListSint32Fixed64>(Arena*);
template<> ::feature_proto::ListSint32Float* Arena::CreateMaybeMessage<::feature_proto::ListSint32Float>(Arena*);
template<> ::feature_proto::ListSint32Int32* Arena::CreateMaybeMessage<::feature_proto::ListSint32Int32>(Arena*);
template<> ::feature_proto::ListSint32Int64* Arena::CreateMaybeMessage<::feature_proto::ListSint32Int64>(Arena*);
template<> ::feature_proto::ListSint32Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListSint32Sfixed32>(Arena*);
template<> ::feature_proto::ListSint32Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListSint32Sfixed64>(Arena*);
template<> ::feature_proto::ListSint32Sint32* Arena::CreateMaybeMessage<::feature_proto::ListSint32Sint32>(Arena*);
template<> ::feature_proto::ListSint32Sint64* Arena::CreateMaybeMessage<::feature_proto::ListSint32Sint64>(Arena*);
template<> ::feature_proto::ListSint32String* Arena::CreateMaybeMessage<::feature_proto::ListSint32String>(Arena*);
template<> ::feature_proto::ListSint32Uint32* Arena::CreateMaybeMessage<::feature_proto::ListSint32Uint32>(Arena*);
template<> ::feature_proto::ListSint32Uint64* Arena::CreateMaybeMessage<::feature_proto::ListSint32Uint64>(Arena*);
template<> ::feature_proto::ListSint64* Arena::CreateMaybeMessage<::feature_proto::ListSint64>(Arena*);
template<> ::feature_proto::ListSint64Bool* Arena::CreateMaybeMessage<::feature_proto::ListSint64Bool>(Arena*);
template<> ::feature_proto::ListSint64Bytes* Arena::CreateMaybeMessage<::feature_proto::ListSint64Bytes>(Arena*);
template<> ::feature_proto::ListSint64Double* Arena::CreateMaybeMessage<::feature_proto::ListSint64Double>(Arena*);
template<> ::feature_proto::ListSint64Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListSint64Fixed32>(Arena*);
template<> ::feature_proto::ListSint64Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListSint64Fixed64>(Arena*);
template<> ::feature_proto::ListSint64Float* Arena::CreateMaybeMessage<::feature_proto::ListSint64Float>(Arena*);
template<> ::feature_proto::ListSint64Int32* Arena::CreateMaybeMessage<::feature_proto::ListSint64Int32>(Arena*);
template<> ::feature_proto::ListSint64Int64* Arena::CreateMaybeMessage<::feature_proto::ListSint64Int64>(Arena*);
template<> ::feature_proto::ListSint64Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListSint64Sfixed32>(Arena*);
template<> ::feature_proto::ListSint64Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListSint64Sfixed64>(Arena*);
template<> ::feature_proto::ListSint64Sint32* Arena::CreateMaybeMessage<::feature_proto::ListSint64Sint32>(Arena*);
template<> ::feature_proto::ListSint64Sint64* Arena::CreateMaybeMessage<::feature_proto::ListSint64Sint64>(Arena*);
template<> ::feature_proto::ListSint64String* Arena::CreateMaybeMessage<::feature_proto::ListSint64String>(Arena*);
template<> ::feature_proto::ListSint64Uint32* Arena::CreateMaybeMessage<::feature_proto::ListSint64Uint32>(Arena*);
template<> ::feature_proto::ListSint64Uint64* Arena::CreateMaybeMessage<::feature_proto::ListSint64Uint64>(Arena*);
template<> ::feature_proto::ListString* Arena::CreateMaybeMessage<::feature_proto::ListString>(Arena*);
template<> ::feature_proto::ListStringBool* Arena::CreateMaybeMessage<::feature_proto::ListStringBool>(Arena*);
template<> ::feature_proto::ListStringBytes* Arena::CreateMaybeMessage<::feature_proto::ListStringBytes>(Arena*);
template<> ::feature_proto::ListStringDouble* Arena::CreateMaybeMessage<::feature_proto::ListStringDouble>(Arena*);
template<> ::feature_proto::ListStringFixed32* Arena::CreateMaybeMessage<::feature_proto::ListStringFixed32>(Arena*);
template<> ::feature_proto::ListStringFixed64* Arena::CreateMaybeMessage<::feature_proto::ListStringFixed64>(Arena*);
template<> ::feature_proto::ListStringFloat* Arena::CreateMaybeMessage<::feature_proto::ListStringFloat>(Arena*);
template<> ::feature_proto::ListStringInt32* Arena::CreateMaybeMessage<::feature_proto::ListStringInt32>(Arena*);
template<> ::feature_proto::ListStringInt64* Arena::CreateMaybeMessage<::feature_proto::ListStringInt64>(Arena*);
template<> ::feature_proto::ListStringSfixed32* Arena::CreateMaybeMessage<::feature_proto::ListStringSfixed32>(Arena*);
template<> ::feature_proto::ListStringSfixed64* Arena::CreateMaybeMessage<::feature_proto::ListStringSfixed64>(Arena*);
template<> ::feature_proto::ListStringSint32* Arena::CreateMaybeMessage<::feature_proto::ListStringSint32>(Arena*);
template<> ::feature_proto::ListStringSint64* Arena::CreateMaybeMessage<::feature_proto::ListStringSint64>(Arena*);
template<> ::feature_proto::ListStringString* Arena::CreateMaybeMessage<::feature_proto::ListStringString>(Arena*);
template<> ::feature_proto::ListStringUint32* Arena::CreateMaybeMessage<::feature_proto::ListStringUint32>(Arena*);
template<> ::feature_proto::ListStringUint64* Arena::CreateMaybeMessage<::feature_proto::ListStringUint64>(Arena*);
template<> ::feature_proto::ListUint32* Arena::CreateMaybeMessage<::feature_proto::ListUint32>(Arena*);
template<> ::feature_proto::ListUint32Bool* Arena::CreateMaybeMessage<::feature_proto::ListUint32Bool>(Arena*);
template<> ::feature_proto::ListUint32Bytes* Arena::CreateMaybeMessage<::feature_proto::ListUint32Bytes>(Arena*);
template<> ::feature_proto::ListUint32Double* Arena::CreateMaybeMessage<::feature_proto::ListUint32Double>(Arena*);
template<> ::feature_proto::ListUint32Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListUint32Fixed32>(Arena*);
template<> ::feature_proto::ListUint32Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListUint32Fixed64>(Arena*);
template<> ::feature_proto::ListUint32Float* Arena::CreateMaybeMessage<::feature_proto::ListUint32Float>(Arena*);
template<> ::feature_proto::ListUint32Int32* Arena::CreateMaybeMessage<::feature_proto::ListUint32Int32>(Arena*);
template<> ::feature_proto::ListUint32Int64* Arena::CreateMaybeMessage<::feature_proto::ListUint32Int64>(Arena*);
template<> ::feature_proto::ListUint32Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListUint32Sfixed32>(Arena*);
template<> ::feature_proto::ListUint32Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListUint32Sfixed64>(Arena*);
template<> ::feature_proto::ListUint32Sint32* Arena::CreateMaybeMessage<::feature_proto::ListUint32Sint32>(Arena*);
template<> ::feature_proto::ListUint32Sint64* Arena::CreateMaybeMessage<::feature_proto::ListUint32Sint64>(Arena*);
template<> ::feature_proto::ListUint32String* Arena::CreateMaybeMessage<::feature_proto::ListUint32String>(Arena*);
template<> ::feature_proto::ListUint32Uint32* Arena::CreateMaybeMessage<::feature_proto::ListUint32Uint32>(Arena*);
template<> ::feature_proto::ListUint32Uint64* Arena::CreateMaybeMessage<::feature_proto::ListUint32Uint64>(Arena*);
template<> ::feature_proto::ListUint64* Arena::CreateMaybeMessage<::feature_proto::ListUint64>(Arena*);
template<> ::feature_proto::ListUint64Bool* Arena::CreateMaybeMessage<::feature_proto::ListUint64Bool>(Arena*);
template<> ::feature_proto::ListUint64Bytes* Arena::CreateMaybeMessage<::feature_proto::ListUint64Bytes>(Arena*);
template<> ::feature_proto::ListUint64Double* Arena::CreateMaybeMessage<::feature_proto::ListUint64Double>(Arena*);
template<> ::feature_proto::ListUint64Fixed32* Arena::CreateMaybeMessage<::feature_proto::ListUint64Fixed32>(Arena*);
template<> ::feature_proto::ListUint64Fixed64* Arena::CreateMaybeMessage<::feature_proto::ListUint64Fixed64>(Arena*);
template<> ::feature_proto::ListUint64Float* Arena::CreateMaybeMessage<::feature_proto::ListUint64Float>(Arena*);
template<> ::feature_proto::ListUint64Int32* Arena::CreateMaybeMessage<::feature_proto::ListUint64Int32>(Arena*);
template<> ::feature_proto::ListUint64Int64* Arena::CreateMaybeMessage<::feature_proto::ListUint64Int64>(Arena*);
template<> ::feature_proto::ListUint64Sfixed32* Arena::CreateMaybeMessage<::feature_proto::ListUint64Sfixed32>(Arena*);
template<> ::feature_proto::ListUint64Sfixed64* Arena::CreateMaybeMessage<::feature_proto::ListUint64Sfixed64>(Arena*);
template<> ::feature_proto::ListUint64Sint32* Arena::CreateMaybeMessage<::feature_proto::ListUint64Sint32>(Arena*);
template<> ::feature_proto::ListUint64Sint64* Arena::CreateMaybeMessage<::feature_proto::ListUint64Sint64>(Arena*);
template<> ::feature_proto::ListUint64String* Arena::CreateMaybeMessage<::feature_proto::ListUint64String>(Arena*);
template<> ::feature_proto::ListUint64Uint32* Arena::CreateMaybeMessage<::feature_proto::ListUint64Uint32>(Arena*);
template<> ::feature_proto::ListUint64Uint64* Arena::CreateMaybeMessage<::feature_proto::ListUint64Uint64>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace feature_proto {

// ===================================================================

class ListDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDouble) */ {
 public:
  ListDouble();
  virtual ~ListDouble();

  ListDouble(const ListDouble& from);

  inline ListDouble& operator=(const ListDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDouble(ListDouble&& from) noexcept
    : ListDouble() {
    *this = ::std::move(from);
  }

  inline ListDouble& operator=(ListDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDouble* internal_default_instance() {
    return reinterpret_cast<const ListDouble*>(
               &_ListDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ListDouble* other);
  friend void swap(ListDouble& a, ListDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDouble* New() const final {
    return CreateMaybeMessage<ListDouble>(NULL);
  }

  ListDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDouble& from);
  void MergeFrom(const ListDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloat) */ {
 public:
  ListFloat();
  virtual ~ListFloat();

  ListFloat(const ListFloat& from);

  inline ListFloat& operator=(const ListFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloat(ListFloat&& from) noexcept
    : ListFloat() {
    *this = ::std::move(from);
  }

  inline ListFloat& operator=(ListFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloat* internal_default_instance() {
    return reinterpret_cast<const ListFloat*>(
               &_ListFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ListFloat* other);
  friend void swap(ListFloat& a, ListFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloat* New() const final {
    return CreateMaybeMessage<ListFloat>(NULL);
  }

  ListFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloat& from);
  void MergeFrom(const ListFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32) */ {
 public:
  ListInt32();
  virtual ~ListInt32();

  ListInt32(const ListInt32& from);

  inline ListInt32& operator=(const ListInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32(ListInt32&& from) noexcept
    : ListInt32() {
    *this = ::std::move(from);
  }

  inline ListInt32& operator=(ListInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32* internal_default_instance() {
    return reinterpret_cast<const ListInt32*>(
               &_ListInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ListInt32* other);
  friend void swap(ListInt32& a, ListInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32* New() const final {
    return CreateMaybeMessage<ListInt32>(NULL);
  }

  ListInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32& from);
  void MergeFrom(const ListInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64) */ {
 public:
  ListInt64();
  virtual ~ListInt64();

  ListInt64(const ListInt64& from);

  inline ListInt64& operator=(const ListInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64(ListInt64&& from) noexcept
    : ListInt64() {
    *this = ::std::move(from);
  }

  inline ListInt64& operator=(ListInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64* internal_default_instance() {
    return reinterpret_cast<const ListInt64*>(
               &_ListInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListInt64* other);
  friend void swap(ListInt64& a, ListInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64* New() const final {
    return CreateMaybeMessage<ListInt64>(NULL);
  }

  ListInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64& from);
  void MergeFrom(const ListInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32) */ {
 public:
  ListUint32();
  virtual ~ListUint32();

  ListUint32(const ListUint32& from);

  inline ListUint32& operator=(const ListUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32(ListUint32&& from) noexcept
    : ListUint32() {
    *this = ::std::move(from);
  }

  inline ListUint32& operator=(ListUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32* internal_default_instance() {
    return reinterpret_cast<const ListUint32*>(
               &_ListUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ListUint32* other);
  friend void swap(ListUint32& a, ListUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32* New() const final {
    return CreateMaybeMessage<ListUint32>(NULL);
  }

  ListUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32& from);
  void MergeFrom(const ListUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64) */ {
 public:
  ListUint64();
  virtual ~ListUint64();

  ListUint64(const ListUint64& from);

  inline ListUint64& operator=(const ListUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64(ListUint64&& from) noexcept
    : ListUint64() {
    *this = ::std::move(from);
  }

  inline ListUint64& operator=(ListUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64* internal_default_instance() {
    return reinterpret_cast<const ListUint64*>(
               &_ListUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ListUint64* other);
  friend void swap(ListUint64& a, ListUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64* New() const final {
    return CreateMaybeMessage<ListUint64>(NULL);
  }

  ListUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64& from);
  void MergeFrom(const ListUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32) */ {
 public:
  ListSint32();
  virtual ~ListSint32();

  ListSint32(const ListSint32& from);

  inline ListSint32& operator=(const ListSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32(ListSint32&& from) noexcept
    : ListSint32() {
    *this = ::std::move(from);
  }

  inline ListSint32& operator=(ListSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32* internal_default_instance() {
    return reinterpret_cast<const ListSint32*>(
               &_ListSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ListSint32* other);
  friend void swap(ListSint32& a, ListSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32* New() const final {
    return CreateMaybeMessage<ListSint32>(NULL);
  }

  ListSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32& from);
  void MergeFrom(const ListSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64) */ {
 public:
  ListSint64();
  virtual ~ListSint64();

  ListSint64(const ListSint64& from);

  inline ListSint64& operator=(const ListSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64(ListSint64&& from) noexcept
    : ListSint64() {
    *this = ::std::move(from);
  }

  inline ListSint64& operator=(ListSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64* internal_default_instance() {
    return reinterpret_cast<const ListSint64*>(
               &_ListSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ListSint64* other);
  friend void swap(ListSint64& a, ListSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64* New() const final {
    return CreateMaybeMessage<ListSint64>(NULL);
  }

  ListSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64& from);
  void MergeFrom(const ListSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32) */ {
 public:
  ListFixed32();
  virtual ~ListFixed32();

  ListFixed32(const ListFixed32& from);

  inline ListFixed32& operator=(const ListFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32(ListFixed32&& from) noexcept
    : ListFixed32() {
    *this = ::std::move(from);
  }

  inline ListFixed32& operator=(ListFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32*>(
               &_ListFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ListFixed32* other);
  friend void swap(ListFixed32& a, ListFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32* New() const final {
    return CreateMaybeMessage<ListFixed32>(NULL);
  }

  ListFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32& from);
  void MergeFrom(const ListFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64) */ {
 public:
  ListFixed64();
  virtual ~ListFixed64();

  ListFixed64(const ListFixed64& from);

  inline ListFixed64& operator=(const ListFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64(ListFixed64&& from) noexcept
    : ListFixed64() {
    *this = ::std::move(from);
  }

  inline ListFixed64& operator=(ListFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64*>(
               &_ListFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ListFixed64* other);
  friend void swap(ListFixed64& a, ListFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64* New() const final {
    return CreateMaybeMessage<ListFixed64>(NULL);
  }

  ListFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64& from);
  void MergeFrom(const ListFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32) */ {
 public:
  ListSfixed32();
  virtual ~ListSfixed32();

  ListSfixed32(const ListSfixed32& from);

  inline ListSfixed32& operator=(const ListSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32(ListSfixed32&& from) noexcept
    : ListSfixed32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32& operator=(ListSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32*>(
               &_ListSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ListSfixed32* other);
  friend void swap(ListSfixed32& a, ListSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32* New() const final {
    return CreateMaybeMessage<ListSfixed32>(NULL);
  }

  ListSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32& from);
  void MergeFrom(const ListSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64) */ {
 public:
  ListSfixed64();
  virtual ~ListSfixed64();

  ListSfixed64(const ListSfixed64& from);

  inline ListSfixed64& operator=(const ListSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64(ListSfixed64&& from) noexcept
    : ListSfixed64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64& operator=(ListSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64*>(
               &_ListSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ListSfixed64* other);
  friend void swap(ListSfixed64& a, ListSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64* New() const final {
    return CreateMaybeMessage<ListSfixed64>(NULL);
  }

  ListSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64& from);
  void MergeFrom(const ListSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBool) */ {
 public:
  ListBool();
  virtual ~ListBool();

  ListBool(const ListBool& from);

  inline ListBool& operator=(const ListBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBool(ListBool&& from) noexcept
    : ListBool() {
    *this = ::std::move(from);
  }

  inline ListBool& operator=(ListBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBool* internal_default_instance() {
    return reinterpret_cast<const ListBool*>(
               &_ListBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ListBool* other);
  friend void swap(ListBool& a, ListBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBool* New() const final {
    return CreateMaybeMessage<ListBool>(NULL);
  }

  ListBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBool& from);
  void MergeFrom(const ListBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListString) */ {
 public:
  ListString();
  virtual ~ListString();

  ListString(const ListString& from);

  inline ListString& operator=(const ListString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListString(ListString&& from) noexcept
    : ListString() {
    *this = ::std::move(from);
  }

  inline ListString& operator=(ListString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListString* internal_default_instance() {
    return reinterpret_cast<const ListString*>(
               &_ListString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ListString* other);
  friend void swap(ListString& a, ListString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListString* New() const final {
    return CreateMaybeMessage<ListString>(NULL);
  }

  ListString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListString& from);
  void MergeFrom(const ListString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytes) */ {
 public:
  ListBytes();
  virtual ~ListBytes();

  ListBytes(const ListBytes& from);

  inline ListBytes& operator=(const ListBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytes(ListBytes&& from) noexcept
    : ListBytes() {
    *this = ::std::move(from);
  }

  inline ListBytes& operator=(ListBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytes* internal_default_instance() {
    return reinterpret_cast<const ListBytes*>(
               &_ListBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ListBytes* other);
  friend void swap(ListBytes& a, ListBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytes* New() const final {
    return CreateMaybeMessage<ListBytes>(NULL);
  }

  ListBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytes& from);
  void MergeFrom(const ListBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringDouble) */ {
 public:
  ListStringDouble();
  virtual ~ListStringDouble();

  ListStringDouble(const ListStringDouble& from);

  inline ListStringDouble& operator=(const ListStringDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringDouble(ListStringDouble&& from) noexcept
    : ListStringDouble() {
    *this = ::std::move(from);
  }

  inline ListStringDouble& operator=(ListStringDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringDouble* internal_default_instance() {
    return reinterpret_cast<const ListStringDouble*>(
               &_ListStringDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ListStringDouble* other);
  friend void swap(ListStringDouble& a, ListStringDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringDouble* New() const final {
    return CreateMaybeMessage<ListStringDouble>(NULL);
  }

  ListStringDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringDouble& from);
  void MergeFrom(const ListStringDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringFloat) */ {
 public:
  ListStringFloat();
  virtual ~ListStringFloat();

  ListStringFloat(const ListStringFloat& from);

  inline ListStringFloat& operator=(const ListStringFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringFloat(ListStringFloat&& from) noexcept
    : ListStringFloat() {
    *this = ::std::move(from);
  }

  inline ListStringFloat& operator=(ListStringFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringFloat* internal_default_instance() {
    return reinterpret_cast<const ListStringFloat*>(
               &_ListStringFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ListStringFloat* other);
  friend void swap(ListStringFloat& a, ListStringFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringFloat* New() const final {
    return CreateMaybeMessage<ListStringFloat>(NULL);
  }

  ListStringFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringFloat& from);
  void MergeFrom(const ListStringFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringInt32) */ {
 public:
  ListStringInt32();
  virtual ~ListStringInt32();

  ListStringInt32(const ListStringInt32& from);

  inline ListStringInt32& operator=(const ListStringInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringInt32(ListStringInt32&& from) noexcept
    : ListStringInt32() {
    *this = ::std::move(from);
  }

  inline ListStringInt32& operator=(ListStringInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringInt32* internal_default_instance() {
    return reinterpret_cast<const ListStringInt32*>(
               &_ListStringInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ListStringInt32* other);
  friend void swap(ListStringInt32& a, ListStringInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringInt32* New() const final {
    return CreateMaybeMessage<ListStringInt32>(NULL);
  }

  ListStringInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringInt32& from);
  void MergeFrom(const ListStringInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringInt64) */ {
 public:
  ListStringInt64();
  virtual ~ListStringInt64();

  ListStringInt64(const ListStringInt64& from);

  inline ListStringInt64& operator=(const ListStringInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringInt64(ListStringInt64&& from) noexcept
    : ListStringInt64() {
    *this = ::std::move(from);
  }

  inline ListStringInt64& operator=(ListStringInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringInt64* internal_default_instance() {
    return reinterpret_cast<const ListStringInt64*>(
               &_ListStringInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ListStringInt64* other);
  friend void swap(ListStringInt64& a, ListStringInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringInt64* New() const final {
    return CreateMaybeMessage<ListStringInt64>(NULL);
  }

  ListStringInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringInt64& from);
  void MergeFrom(const ListStringInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringUint32) */ {
 public:
  ListStringUint32();
  virtual ~ListStringUint32();

  ListStringUint32(const ListStringUint32& from);

  inline ListStringUint32& operator=(const ListStringUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringUint32(ListStringUint32&& from) noexcept
    : ListStringUint32() {
    *this = ::std::move(from);
  }

  inline ListStringUint32& operator=(ListStringUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringUint32* internal_default_instance() {
    return reinterpret_cast<const ListStringUint32*>(
               &_ListStringUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ListStringUint32* other);
  friend void swap(ListStringUint32& a, ListStringUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringUint32* New() const final {
    return CreateMaybeMessage<ListStringUint32>(NULL);
  }

  ListStringUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringUint32& from);
  void MergeFrom(const ListStringUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringUint64) */ {
 public:
  ListStringUint64();
  virtual ~ListStringUint64();

  ListStringUint64(const ListStringUint64& from);

  inline ListStringUint64& operator=(const ListStringUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringUint64(ListStringUint64&& from) noexcept
    : ListStringUint64() {
    *this = ::std::move(from);
  }

  inline ListStringUint64& operator=(ListStringUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringUint64* internal_default_instance() {
    return reinterpret_cast<const ListStringUint64*>(
               &_ListStringUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ListStringUint64* other);
  friend void swap(ListStringUint64& a, ListStringUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringUint64* New() const final {
    return CreateMaybeMessage<ListStringUint64>(NULL);
  }

  ListStringUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringUint64& from);
  void MergeFrom(const ListStringUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringSint32) */ {
 public:
  ListStringSint32();
  virtual ~ListStringSint32();

  ListStringSint32(const ListStringSint32& from);

  inline ListStringSint32& operator=(const ListStringSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringSint32(ListStringSint32&& from) noexcept
    : ListStringSint32() {
    *this = ::std::move(from);
  }

  inline ListStringSint32& operator=(ListStringSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringSint32* internal_default_instance() {
    return reinterpret_cast<const ListStringSint32*>(
               &_ListStringSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ListStringSint32* other);
  friend void swap(ListStringSint32& a, ListStringSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringSint32* New() const final {
    return CreateMaybeMessage<ListStringSint32>(NULL);
  }

  ListStringSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringSint32& from);
  void MergeFrom(const ListStringSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringSint64) */ {
 public:
  ListStringSint64();
  virtual ~ListStringSint64();

  ListStringSint64(const ListStringSint64& from);

  inline ListStringSint64& operator=(const ListStringSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringSint64(ListStringSint64&& from) noexcept
    : ListStringSint64() {
    *this = ::std::move(from);
  }

  inline ListStringSint64& operator=(ListStringSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringSint64* internal_default_instance() {
    return reinterpret_cast<const ListStringSint64*>(
               &_ListStringSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(ListStringSint64* other);
  friend void swap(ListStringSint64& a, ListStringSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringSint64* New() const final {
    return CreateMaybeMessage<ListStringSint64>(NULL);
  }

  ListStringSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringSint64& from);
  void MergeFrom(const ListStringSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringFixed32) */ {
 public:
  ListStringFixed32();
  virtual ~ListStringFixed32();

  ListStringFixed32(const ListStringFixed32& from);

  inline ListStringFixed32& operator=(const ListStringFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringFixed32(ListStringFixed32&& from) noexcept
    : ListStringFixed32() {
    *this = ::std::move(from);
  }

  inline ListStringFixed32& operator=(ListStringFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringFixed32* internal_default_instance() {
    return reinterpret_cast<const ListStringFixed32*>(
               &_ListStringFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ListStringFixed32* other);
  friend void swap(ListStringFixed32& a, ListStringFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringFixed32* New() const final {
    return CreateMaybeMessage<ListStringFixed32>(NULL);
  }

  ListStringFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringFixed32& from);
  void MergeFrom(const ListStringFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringFixed64) */ {
 public:
  ListStringFixed64();
  virtual ~ListStringFixed64();

  ListStringFixed64(const ListStringFixed64& from);

  inline ListStringFixed64& operator=(const ListStringFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringFixed64(ListStringFixed64&& from) noexcept
    : ListStringFixed64() {
    *this = ::std::move(from);
  }

  inline ListStringFixed64& operator=(ListStringFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringFixed64* internal_default_instance() {
    return reinterpret_cast<const ListStringFixed64*>(
               &_ListStringFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(ListStringFixed64* other);
  friend void swap(ListStringFixed64& a, ListStringFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringFixed64* New() const final {
    return CreateMaybeMessage<ListStringFixed64>(NULL);
  }

  ListStringFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringFixed64& from);
  void MergeFrom(const ListStringFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringSfixed32) */ {
 public:
  ListStringSfixed32();
  virtual ~ListStringSfixed32();

  ListStringSfixed32(const ListStringSfixed32& from);

  inline ListStringSfixed32& operator=(const ListStringSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringSfixed32(ListStringSfixed32&& from) noexcept
    : ListStringSfixed32() {
    *this = ::std::move(from);
  }

  inline ListStringSfixed32& operator=(ListStringSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListStringSfixed32*>(
               &_ListStringSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(ListStringSfixed32* other);
  friend void swap(ListStringSfixed32& a, ListStringSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringSfixed32* New() const final {
    return CreateMaybeMessage<ListStringSfixed32>(NULL);
  }

  ListStringSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringSfixed32& from);
  void MergeFrom(const ListStringSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringSfixed64) */ {
 public:
  ListStringSfixed64();
  virtual ~ListStringSfixed64();

  ListStringSfixed64(const ListStringSfixed64& from);

  inline ListStringSfixed64& operator=(const ListStringSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringSfixed64(ListStringSfixed64&& from) noexcept
    : ListStringSfixed64() {
    *this = ::std::move(from);
  }

  inline ListStringSfixed64& operator=(ListStringSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListStringSfixed64*>(
               &_ListStringSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(ListStringSfixed64* other);
  friend void swap(ListStringSfixed64& a, ListStringSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringSfixed64* New() const final {
    return CreateMaybeMessage<ListStringSfixed64>(NULL);
  }

  ListStringSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringSfixed64& from);
  void MergeFrom(const ListStringSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringBool) */ {
 public:
  ListStringBool();
  virtual ~ListStringBool();

  ListStringBool(const ListStringBool& from);

  inline ListStringBool& operator=(const ListStringBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringBool(ListStringBool&& from) noexcept
    : ListStringBool() {
    *this = ::std::move(from);
  }

  inline ListStringBool& operator=(ListStringBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringBool* internal_default_instance() {
    return reinterpret_cast<const ListStringBool*>(
               &_ListStringBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(ListStringBool* other);
  friend void swap(ListStringBool& a, ListStringBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringBool* New() const final {
    return CreateMaybeMessage<ListStringBool>(NULL);
  }

  ListStringBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringBool& from);
  void MergeFrom(const ListStringBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringString) */ {
 public:
  ListStringString();
  virtual ~ListStringString();

  ListStringString(const ListStringString& from);

  inline ListStringString& operator=(const ListStringString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringString(ListStringString&& from) noexcept
    : ListStringString() {
    *this = ::std::move(from);
  }

  inline ListStringString& operator=(ListStringString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringString* internal_default_instance() {
    return reinterpret_cast<const ListStringString*>(
               &_ListStringString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(ListStringString* other);
  friend void swap(ListStringString& a, ListStringString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringString* New() const final {
    return CreateMaybeMessage<ListStringString>(NULL);
  }

  ListStringString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringString& from);
  void MergeFrom(const ListStringString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListStringBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListStringBytes) */ {
 public:
  ListStringBytes();
  virtual ~ListStringBytes();

  ListStringBytes(const ListStringBytes& from);

  inline ListStringBytes& operator=(const ListStringBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListStringBytes(ListStringBytes&& from) noexcept
    : ListStringBytes() {
    *this = ::std::move(from);
  }

  inline ListStringBytes& operator=(ListStringBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListStringBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListStringBytes* internal_default_instance() {
    return reinterpret_cast<const ListStringBytes*>(
               &_ListStringBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(ListStringBytes* other);
  friend void swap(ListStringBytes& a, ListStringBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListStringBytes* New() const final {
    return CreateMaybeMessage<ListStringBytes>(NULL);
  }

  ListStringBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListStringBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListStringBytes& from);
  void MergeFrom(const ListStringBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListStringBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const char* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListStringBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesDouble) */ {
 public:
  ListBytesDouble();
  virtual ~ListBytesDouble();

  ListBytesDouble(const ListBytesDouble& from);

  inline ListBytesDouble& operator=(const ListBytesDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesDouble(ListBytesDouble&& from) noexcept
    : ListBytesDouble() {
    *this = ::std::move(from);
  }

  inline ListBytesDouble& operator=(ListBytesDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesDouble* internal_default_instance() {
    return reinterpret_cast<const ListBytesDouble*>(
               &_ListBytesDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(ListBytesDouble* other);
  friend void swap(ListBytesDouble& a, ListBytesDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesDouble* New() const final {
    return CreateMaybeMessage<ListBytesDouble>(NULL);
  }

  ListBytesDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesDouble& from);
  void MergeFrom(const ListBytesDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesFloat) */ {
 public:
  ListBytesFloat();
  virtual ~ListBytesFloat();

  ListBytesFloat(const ListBytesFloat& from);

  inline ListBytesFloat& operator=(const ListBytesFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesFloat(ListBytesFloat&& from) noexcept
    : ListBytesFloat() {
    *this = ::std::move(from);
  }

  inline ListBytesFloat& operator=(ListBytesFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesFloat* internal_default_instance() {
    return reinterpret_cast<const ListBytesFloat*>(
               &_ListBytesFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(ListBytesFloat* other);
  friend void swap(ListBytesFloat& a, ListBytesFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesFloat* New() const final {
    return CreateMaybeMessage<ListBytesFloat>(NULL);
  }

  ListBytesFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesFloat& from);
  void MergeFrom(const ListBytesFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesInt32) */ {
 public:
  ListBytesInt32();
  virtual ~ListBytesInt32();

  ListBytesInt32(const ListBytesInt32& from);

  inline ListBytesInt32& operator=(const ListBytesInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesInt32(ListBytesInt32&& from) noexcept
    : ListBytesInt32() {
    *this = ::std::move(from);
  }

  inline ListBytesInt32& operator=(ListBytesInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesInt32* internal_default_instance() {
    return reinterpret_cast<const ListBytesInt32*>(
               &_ListBytesInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(ListBytesInt32* other);
  friend void swap(ListBytesInt32& a, ListBytesInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesInt32* New() const final {
    return CreateMaybeMessage<ListBytesInt32>(NULL);
  }

  ListBytesInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesInt32& from);
  void MergeFrom(const ListBytesInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesInt64) */ {
 public:
  ListBytesInt64();
  virtual ~ListBytesInt64();

  ListBytesInt64(const ListBytesInt64& from);

  inline ListBytesInt64& operator=(const ListBytesInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesInt64(ListBytesInt64&& from) noexcept
    : ListBytesInt64() {
    *this = ::std::move(from);
  }

  inline ListBytesInt64& operator=(ListBytesInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesInt64* internal_default_instance() {
    return reinterpret_cast<const ListBytesInt64*>(
               &_ListBytesInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(ListBytesInt64* other);
  friend void swap(ListBytesInt64& a, ListBytesInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesInt64* New() const final {
    return CreateMaybeMessage<ListBytesInt64>(NULL);
  }

  ListBytesInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesInt64& from);
  void MergeFrom(const ListBytesInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesUint32) */ {
 public:
  ListBytesUint32();
  virtual ~ListBytesUint32();

  ListBytesUint32(const ListBytesUint32& from);

  inline ListBytesUint32& operator=(const ListBytesUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesUint32(ListBytesUint32&& from) noexcept
    : ListBytesUint32() {
    *this = ::std::move(from);
  }

  inline ListBytesUint32& operator=(ListBytesUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesUint32* internal_default_instance() {
    return reinterpret_cast<const ListBytesUint32*>(
               &_ListBytesUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(ListBytesUint32* other);
  friend void swap(ListBytesUint32& a, ListBytesUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesUint32* New() const final {
    return CreateMaybeMessage<ListBytesUint32>(NULL);
  }

  ListBytesUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesUint32& from);
  void MergeFrom(const ListBytesUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesUint64) */ {
 public:
  ListBytesUint64();
  virtual ~ListBytesUint64();

  ListBytesUint64(const ListBytesUint64& from);

  inline ListBytesUint64& operator=(const ListBytesUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesUint64(ListBytesUint64&& from) noexcept
    : ListBytesUint64() {
    *this = ::std::move(from);
  }

  inline ListBytesUint64& operator=(ListBytesUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesUint64* internal_default_instance() {
    return reinterpret_cast<const ListBytesUint64*>(
               &_ListBytesUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(ListBytesUint64* other);
  friend void swap(ListBytesUint64& a, ListBytesUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesUint64* New() const final {
    return CreateMaybeMessage<ListBytesUint64>(NULL);
  }

  ListBytesUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesUint64& from);
  void MergeFrom(const ListBytesUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesSint32) */ {
 public:
  ListBytesSint32();
  virtual ~ListBytesSint32();

  ListBytesSint32(const ListBytesSint32& from);

  inline ListBytesSint32& operator=(const ListBytesSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesSint32(ListBytesSint32&& from) noexcept
    : ListBytesSint32() {
    *this = ::std::move(from);
  }

  inline ListBytesSint32& operator=(ListBytesSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesSint32* internal_default_instance() {
    return reinterpret_cast<const ListBytesSint32*>(
               &_ListBytesSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(ListBytesSint32* other);
  friend void swap(ListBytesSint32& a, ListBytesSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesSint32* New() const final {
    return CreateMaybeMessage<ListBytesSint32>(NULL);
  }

  ListBytesSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesSint32& from);
  void MergeFrom(const ListBytesSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesSint64) */ {
 public:
  ListBytesSint64();
  virtual ~ListBytesSint64();

  ListBytesSint64(const ListBytesSint64& from);

  inline ListBytesSint64& operator=(const ListBytesSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesSint64(ListBytesSint64&& from) noexcept
    : ListBytesSint64() {
    *this = ::std::move(from);
  }

  inline ListBytesSint64& operator=(ListBytesSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesSint64* internal_default_instance() {
    return reinterpret_cast<const ListBytesSint64*>(
               &_ListBytesSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(ListBytesSint64* other);
  friend void swap(ListBytesSint64& a, ListBytesSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesSint64* New() const final {
    return CreateMaybeMessage<ListBytesSint64>(NULL);
  }

  ListBytesSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesSint64& from);
  void MergeFrom(const ListBytesSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesFixed32) */ {
 public:
  ListBytesFixed32();
  virtual ~ListBytesFixed32();

  ListBytesFixed32(const ListBytesFixed32& from);

  inline ListBytesFixed32& operator=(const ListBytesFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesFixed32(ListBytesFixed32&& from) noexcept
    : ListBytesFixed32() {
    *this = ::std::move(from);
  }

  inline ListBytesFixed32& operator=(ListBytesFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesFixed32* internal_default_instance() {
    return reinterpret_cast<const ListBytesFixed32*>(
               &_ListBytesFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(ListBytesFixed32* other);
  friend void swap(ListBytesFixed32& a, ListBytesFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesFixed32* New() const final {
    return CreateMaybeMessage<ListBytesFixed32>(NULL);
  }

  ListBytesFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesFixed32& from);
  void MergeFrom(const ListBytesFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesFixed64) */ {
 public:
  ListBytesFixed64();
  virtual ~ListBytesFixed64();

  ListBytesFixed64(const ListBytesFixed64& from);

  inline ListBytesFixed64& operator=(const ListBytesFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesFixed64(ListBytesFixed64&& from) noexcept
    : ListBytesFixed64() {
    *this = ::std::move(from);
  }

  inline ListBytesFixed64& operator=(ListBytesFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesFixed64* internal_default_instance() {
    return reinterpret_cast<const ListBytesFixed64*>(
               &_ListBytesFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(ListBytesFixed64* other);
  friend void swap(ListBytesFixed64& a, ListBytesFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesFixed64* New() const final {
    return CreateMaybeMessage<ListBytesFixed64>(NULL);
  }

  ListBytesFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesFixed64& from);
  void MergeFrom(const ListBytesFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesSfixed32) */ {
 public:
  ListBytesSfixed32();
  virtual ~ListBytesSfixed32();

  ListBytesSfixed32(const ListBytesSfixed32& from);

  inline ListBytesSfixed32& operator=(const ListBytesSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesSfixed32(ListBytesSfixed32&& from) noexcept
    : ListBytesSfixed32() {
    *this = ::std::move(from);
  }

  inline ListBytesSfixed32& operator=(ListBytesSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListBytesSfixed32*>(
               &_ListBytesSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(ListBytesSfixed32* other);
  friend void swap(ListBytesSfixed32& a, ListBytesSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesSfixed32* New() const final {
    return CreateMaybeMessage<ListBytesSfixed32>(NULL);
  }

  ListBytesSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesSfixed32& from);
  void MergeFrom(const ListBytesSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesSfixed64) */ {
 public:
  ListBytesSfixed64();
  virtual ~ListBytesSfixed64();

  ListBytesSfixed64(const ListBytesSfixed64& from);

  inline ListBytesSfixed64& operator=(const ListBytesSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesSfixed64(ListBytesSfixed64&& from) noexcept
    : ListBytesSfixed64() {
    *this = ::std::move(from);
  }

  inline ListBytesSfixed64& operator=(ListBytesSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListBytesSfixed64*>(
               &_ListBytesSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(ListBytesSfixed64* other);
  friend void swap(ListBytesSfixed64& a, ListBytesSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesSfixed64* New() const final {
    return CreateMaybeMessage<ListBytesSfixed64>(NULL);
  }

  ListBytesSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesSfixed64& from);
  void MergeFrom(const ListBytesSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesBool) */ {
 public:
  ListBytesBool();
  virtual ~ListBytesBool();

  ListBytesBool(const ListBytesBool& from);

  inline ListBytesBool& operator=(const ListBytesBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesBool(ListBytesBool&& from) noexcept
    : ListBytesBool() {
    *this = ::std::move(from);
  }

  inline ListBytesBool& operator=(ListBytesBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesBool* internal_default_instance() {
    return reinterpret_cast<const ListBytesBool*>(
               &_ListBytesBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(ListBytesBool* other);
  friend void swap(ListBytesBool& a, ListBytesBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesBool* New() const final {
    return CreateMaybeMessage<ListBytesBool>(NULL);
  }

  ListBytesBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesBool& from);
  void MergeFrom(const ListBytesBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesString) */ {
 public:
  ListBytesString();
  virtual ~ListBytesString();

  ListBytesString(const ListBytesString& from);

  inline ListBytesString& operator=(const ListBytesString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesString(ListBytesString&& from) noexcept
    : ListBytesString() {
    *this = ::std::move(from);
  }

  inline ListBytesString& operator=(ListBytesString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesString* internal_default_instance() {
    return reinterpret_cast<const ListBytesString*>(
               &_ListBytesString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(ListBytesString* other);
  friend void swap(ListBytesString& a, ListBytesString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesString* New() const final {
    return CreateMaybeMessage<ListBytesString>(NULL);
  }

  ListBytesString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesString& from);
  void MergeFrom(const ListBytesString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBytesBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBytesBytes) */ {
 public:
  ListBytesBytes();
  virtual ~ListBytesBytes();

  ListBytesBytes(const ListBytesBytes& from);

  inline ListBytesBytes& operator=(const ListBytesBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBytesBytes(ListBytesBytes&& from) noexcept
    : ListBytesBytes() {
    *this = ::std::move(from);
  }

  inline ListBytesBytes& operator=(ListBytesBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBytesBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBytesBytes* internal_default_instance() {
    return reinterpret_cast<const ListBytesBytes*>(
               &_ListBytesBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(ListBytesBytes* other);
  friend void swap(ListBytesBytes& a, ListBytesBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBytesBytes* New() const final {
    return CreateMaybeMessage<ListBytesBytes>(NULL);
  }

  ListBytesBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBytesBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBytesBytes& from);
  void MergeFrom(const ListBytesBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBytesBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  const ::std::string& k(int index) const;
  ::std::string* mutable_k(int index);
  void set_k(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_k(int index, ::std::string&& value);
  #endif
  void set_k(int index, const char* value);
  void set_k(int index, const void* value, size_t size);
  ::std::string* add_k();
  void add_k(const ::std::string& value);
  #if LANG_CXX11
  void add_k(::std::string&& value);
  #endif
  void add_k(const char* value);
  void add_k(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& k() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBytesBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> k_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Double) */ {
 public:
  ListInt32Double();
  virtual ~ListInt32Double();

  ListInt32Double(const ListInt32Double& from);

  inline ListInt32Double& operator=(const ListInt32Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Double(ListInt32Double&& from) noexcept
    : ListInt32Double() {
    *this = ::std::move(from);
  }

  inline ListInt32Double& operator=(ListInt32Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Double* internal_default_instance() {
    return reinterpret_cast<const ListInt32Double*>(
               &_ListInt32Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(ListInt32Double* other);
  friend void swap(ListInt32Double& a, ListInt32Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Double* New() const final {
    return CreateMaybeMessage<ListInt32Double>(NULL);
  }

  ListInt32Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Double& from);
  void MergeFrom(const ListInt32Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Float) */ {
 public:
  ListInt32Float();
  virtual ~ListInt32Float();

  ListInt32Float(const ListInt32Float& from);

  inline ListInt32Float& operator=(const ListInt32Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Float(ListInt32Float&& from) noexcept
    : ListInt32Float() {
    *this = ::std::move(from);
  }

  inline ListInt32Float& operator=(ListInt32Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Float* internal_default_instance() {
    return reinterpret_cast<const ListInt32Float*>(
               &_ListInt32Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(ListInt32Float* other);
  friend void swap(ListInt32Float& a, ListInt32Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Float* New() const final {
    return CreateMaybeMessage<ListInt32Float>(NULL);
  }

  ListInt32Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Float& from);
  void MergeFrom(const ListInt32Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Int32) */ {
 public:
  ListInt32Int32();
  virtual ~ListInt32Int32();

  ListInt32Int32(const ListInt32Int32& from);

  inline ListInt32Int32& operator=(const ListInt32Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Int32(ListInt32Int32&& from) noexcept
    : ListInt32Int32() {
    *this = ::std::move(from);
  }

  inline ListInt32Int32& operator=(ListInt32Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Int32* internal_default_instance() {
    return reinterpret_cast<const ListInt32Int32*>(
               &_ListInt32Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(ListInt32Int32* other);
  friend void swap(ListInt32Int32& a, ListInt32Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Int32* New() const final {
    return CreateMaybeMessage<ListInt32Int32>(NULL);
  }

  ListInt32Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Int32& from);
  void MergeFrom(const ListInt32Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Int64) */ {
 public:
  ListInt32Int64();
  virtual ~ListInt32Int64();

  ListInt32Int64(const ListInt32Int64& from);

  inline ListInt32Int64& operator=(const ListInt32Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Int64(ListInt32Int64&& from) noexcept
    : ListInt32Int64() {
    *this = ::std::move(from);
  }

  inline ListInt32Int64& operator=(ListInt32Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Int64* internal_default_instance() {
    return reinterpret_cast<const ListInt32Int64*>(
               &_ListInt32Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(ListInt32Int64* other);
  friend void swap(ListInt32Int64& a, ListInt32Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Int64* New() const final {
    return CreateMaybeMessage<ListInt32Int64>(NULL);
  }

  ListInt32Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Int64& from);
  void MergeFrom(const ListInt32Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Uint32) */ {
 public:
  ListInt32Uint32();
  virtual ~ListInt32Uint32();

  ListInt32Uint32(const ListInt32Uint32& from);

  inline ListInt32Uint32& operator=(const ListInt32Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Uint32(ListInt32Uint32&& from) noexcept
    : ListInt32Uint32() {
    *this = ::std::move(from);
  }

  inline ListInt32Uint32& operator=(ListInt32Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Uint32* internal_default_instance() {
    return reinterpret_cast<const ListInt32Uint32*>(
               &_ListInt32Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(ListInt32Uint32* other);
  friend void swap(ListInt32Uint32& a, ListInt32Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Uint32* New() const final {
    return CreateMaybeMessage<ListInt32Uint32>(NULL);
  }

  ListInt32Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Uint32& from);
  void MergeFrom(const ListInt32Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Uint64) */ {
 public:
  ListInt32Uint64();
  virtual ~ListInt32Uint64();

  ListInt32Uint64(const ListInt32Uint64& from);

  inline ListInt32Uint64& operator=(const ListInt32Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Uint64(ListInt32Uint64&& from) noexcept
    : ListInt32Uint64() {
    *this = ::std::move(from);
  }

  inline ListInt32Uint64& operator=(ListInt32Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Uint64* internal_default_instance() {
    return reinterpret_cast<const ListInt32Uint64*>(
               &_ListInt32Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(ListInt32Uint64* other);
  friend void swap(ListInt32Uint64& a, ListInt32Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Uint64* New() const final {
    return CreateMaybeMessage<ListInt32Uint64>(NULL);
  }

  ListInt32Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Uint64& from);
  void MergeFrom(const ListInt32Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Sint32) */ {
 public:
  ListInt32Sint32();
  virtual ~ListInt32Sint32();

  ListInt32Sint32(const ListInt32Sint32& from);

  inline ListInt32Sint32& operator=(const ListInt32Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Sint32(ListInt32Sint32&& from) noexcept
    : ListInt32Sint32() {
    *this = ::std::move(from);
  }

  inline ListInt32Sint32& operator=(ListInt32Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Sint32* internal_default_instance() {
    return reinterpret_cast<const ListInt32Sint32*>(
               &_ListInt32Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(ListInt32Sint32* other);
  friend void swap(ListInt32Sint32& a, ListInt32Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Sint32* New() const final {
    return CreateMaybeMessage<ListInt32Sint32>(NULL);
  }

  ListInt32Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Sint32& from);
  void MergeFrom(const ListInt32Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Sint64) */ {
 public:
  ListInt32Sint64();
  virtual ~ListInt32Sint64();

  ListInt32Sint64(const ListInt32Sint64& from);

  inline ListInt32Sint64& operator=(const ListInt32Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Sint64(ListInt32Sint64&& from) noexcept
    : ListInt32Sint64() {
    *this = ::std::move(from);
  }

  inline ListInt32Sint64& operator=(ListInt32Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Sint64* internal_default_instance() {
    return reinterpret_cast<const ListInt32Sint64*>(
               &_ListInt32Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(ListInt32Sint64* other);
  friend void swap(ListInt32Sint64& a, ListInt32Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Sint64* New() const final {
    return CreateMaybeMessage<ListInt32Sint64>(NULL);
  }

  ListInt32Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Sint64& from);
  void MergeFrom(const ListInt32Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Fixed32) */ {
 public:
  ListInt32Fixed32();
  virtual ~ListInt32Fixed32();

  ListInt32Fixed32(const ListInt32Fixed32& from);

  inline ListInt32Fixed32& operator=(const ListInt32Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Fixed32(ListInt32Fixed32&& from) noexcept
    : ListInt32Fixed32() {
    *this = ::std::move(from);
  }

  inline ListInt32Fixed32& operator=(ListInt32Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListInt32Fixed32*>(
               &_ListInt32Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(ListInt32Fixed32* other);
  friend void swap(ListInt32Fixed32& a, ListInt32Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Fixed32* New() const final {
    return CreateMaybeMessage<ListInt32Fixed32>(NULL);
  }

  ListInt32Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Fixed32& from);
  void MergeFrom(const ListInt32Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Fixed64) */ {
 public:
  ListInt32Fixed64();
  virtual ~ListInt32Fixed64();

  ListInt32Fixed64(const ListInt32Fixed64& from);

  inline ListInt32Fixed64& operator=(const ListInt32Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Fixed64(ListInt32Fixed64&& from) noexcept
    : ListInt32Fixed64() {
    *this = ::std::move(from);
  }

  inline ListInt32Fixed64& operator=(ListInt32Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListInt32Fixed64*>(
               &_ListInt32Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(ListInt32Fixed64* other);
  friend void swap(ListInt32Fixed64& a, ListInt32Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Fixed64* New() const final {
    return CreateMaybeMessage<ListInt32Fixed64>(NULL);
  }

  ListInt32Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Fixed64& from);
  void MergeFrom(const ListInt32Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Sfixed32) */ {
 public:
  ListInt32Sfixed32();
  virtual ~ListInt32Sfixed32();

  ListInt32Sfixed32(const ListInt32Sfixed32& from);

  inline ListInt32Sfixed32& operator=(const ListInt32Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Sfixed32(ListInt32Sfixed32&& from) noexcept
    : ListInt32Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListInt32Sfixed32& operator=(ListInt32Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListInt32Sfixed32*>(
               &_ListInt32Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(ListInt32Sfixed32* other);
  friend void swap(ListInt32Sfixed32& a, ListInt32Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Sfixed32* New() const final {
    return CreateMaybeMessage<ListInt32Sfixed32>(NULL);
  }

  ListInt32Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Sfixed32& from);
  void MergeFrom(const ListInt32Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Sfixed64) */ {
 public:
  ListInt32Sfixed64();
  virtual ~ListInt32Sfixed64();

  ListInt32Sfixed64(const ListInt32Sfixed64& from);

  inline ListInt32Sfixed64& operator=(const ListInt32Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Sfixed64(ListInt32Sfixed64&& from) noexcept
    : ListInt32Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListInt32Sfixed64& operator=(ListInt32Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListInt32Sfixed64*>(
               &_ListInt32Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(ListInt32Sfixed64* other);
  friend void swap(ListInt32Sfixed64& a, ListInt32Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Sfixed64* New() const final {
    return CreateMaybeMessage<ListInt32Sfixed64>(NULL);
  }

  ListInt32Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Sfixed64& from);
  void MergeFrom(const ListInt32Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Bool) */ {
 public:
  ListInt32Bool();
  virtual ~ListInt32Bool();

  ListInt32Bool(const ListInt32Bool& from);

  inline ListInt32Bool& operator=(const ListInt32Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Bool(ListInt32Bool&& from) noexcept
    : ListInt32Bool() {
    *this = ::std::move(from);
  }

  inline ListInt32Bool& operator=(ListInt32Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Bool* internal_default_instance() {
    return reinterpret_cast<const ListInt32Bool*>(
               &_ListInt32Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(ListInt32Bool* other);
  friend void swap(ListInt32Bool& a, ListInt32Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Bool* New() const final {
    return CreateMaybeMessage<ListInt32Bool>(NULL);
  }

  ListInt32Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Bool& from);
  void MergeFrom(const ListInt32Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32String) */ {
 public:
  ListInt32String();
  virtual ~ListInt32String();

  ListInt32String(const ListInt32String& from);

  inline ListInt32String& operator=(const ListInt32String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32String(ListInt32String&& from) noexcept
    : ListInt32String() {
    *this = ::std::move(from);
  }

  inline ListInt32String& operator=(ListInt32String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32String* internal_default_instance() {
    return reinterpret_cast<const ListInt32String*>(
               &_ListInt32String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(ListInt32String* other);
  friend void swap(ListInt32String& a, ListInt32String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32String* New() const final {
    return CreateMaybeMessage<ListInt32String>(NULL);
  }

  ListInt32String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32String& from);
  void MergeFrom(const ListInt32String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt32Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt32Bytes) */ {
 public:
  ListInt32Bytes();
  virtual ~ListInt32Bytes();

  ListInt32Bytes(const ListInt32Bytes& from);

  inline ListInt32Bytes& operator=(const ListInt32Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt32Bytes(ListInt32Bytes&& from) noexcept
    : ListInt32Bytes() {
    *this = ::std::move(from);
  }

  inline ListInt32Bytes& operator=(ListInt32Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt32Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt32Bytes* internal_default_instance() {
    return reinterpret_cast<const ListInt32Bytes*>(
               &_ListInt32Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(ListInt32Bytes* other);
  friend void swap(ListInt32Bytes& a, ListInt32Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt32Bytes* New() const final {
    return CreateMaybeMessage<ListInt32Bytes>(NULL);
  }

  ListInt32Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt32Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt32Bytes& from);
  void MergeFrom(const ListInt32Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt32Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt32Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Double) */ {
 public:
  ListInt64Double();
  virtual ~ListInt64Double();

  ListInt64Double(const ListInt64Double& from);

  inline ListInt64Double& operator=(const ListInt64Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Double(ListInt64Double&& from) noexcept
    : ListInt64Double() {
    *this = ::std::move(from);
  }

  inline ListInt64Double& operator=(ListInt64Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Double* internal_default_instance() {
    return reinterpret_cast<const ListInt64Double*>(
               &_ListInt64Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(ListInt64Double* other);
  friend void swap(ListInt64Double& a, ListInt64Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Double* New() const final {
    return CreateMaybeMessage<ListInt64Double>(NULL);
  }

  ListInt64Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Double& from);
  void MergeFrom(const ListInt64Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Float) */ {
 public:
  ListInt64Float();
  virtual ~ListInt64Float();

  ListInt64Float(const ListInt64Float& from);

  inline ListInt64Float& operator=(const ListInt64Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Float(ListInt64Float&& from) noexcept
    : ListInt64Float() {
    *this = ::std::move(from);
  }

  inline ListInt64Float& operator=(ListInt64Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Float* internal_default_instance() {
    return reinterpret_cast<const ListInt64Float*>(
               &_ListInt64Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(ListInt64Float* other);
  friend void swap(ListInt64Float& a, ListInt64Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Float* New() const final {
    return CreateMaybeMessage<ListInt64Float>(NULL);
  }

  ListInt64Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Float& from);
  void MergeFrom(const ListInt64Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Int32) */ {
 public:
  ListInt64Int32();
  virtual ~ListInt64Int32();

  ListInt64Int32(const ListInt64Int32& from);

  inline ListInt64Int32& operator=(const ListInt64Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Int32(ListInt64Int32&& from) noexcept
    : ListInt64Int32() {
    *this = ::std::move(from);
  }

  inline ListInt64Int32& operator=(ListInt64Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Int32* internal_default_instance() {
    return reinterpret_cast<const ListInt64Int32*>(
               &_ListInt64Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(ListInt64Int32* other);
  friend void swap(ListInt64Int32& a, ListInt64Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Int32* New() const final {
    return CreateMaybeMessage<ListInt64Int32>(NULL);
  }

  ListInt64Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Int32& from);
  void MergeFrom(const ListInt64Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Int64) */ {
 public:
  ListInt64Int64();
  virtual ~ListInt64Int64();

  ListInt64Int64(const ListInt64Int64& from);

  inline ListInt64Int64& operator=(const ListInt64Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Int64(ListInt64Int64&& from) noexcept
    : ListInt64Int64() {
    *this = ::std::move(from);
  }

  inline ListInt64Int64& operator=(ListInt64Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Int64* internal_default_instance() {
    return reinterpret_cast<const ListInt64Int64*>(
               &_ListInt64Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(ListInt64Int64* other);
  friend void swap(ListInt64Int64& a, ListInt64Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Int64* New() const final {
    return CreateMaybeMessage<ListInt64Int64>(NULL);
  }

  ListInt64Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Int64& from);
  void MergeFrom(const ListInt64Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Uint32) */ {
 public:
  ListInt64Uint32();
  virtual ~ListInt64Uint32();

  ListInt64Uint32(const ListInt64Uint32& from);

  inline ListInt64Uint32& operator=(const ListInt64Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Uint32(ListInt64Uint32&& from) noexcept
    : ListInt64Uint32() {
    *this = ::std::move(from);
  }

  inline ListInt64Uint32& operator=(ListInt64Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Uint32* internal_default_instance() {
    return reinterpret_cast<const ListInt64Uint32*>(
               &_ListInt64Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(ListInt64Uint32* other);
  friend void swap(ListInt64Uint32& a, ListInt64Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Uint32* New() const final {
    return CreateMaybeMessage<ListInt64Uint32>(NULL);
  }

  ListInt64Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Uint32& from);
  void MergeFrom(const ListInt64Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Uint64) */ {
 public:
  ListInt64Uint64();
  virtual ~ListInt64Uint64();

  ListInt64Uint64(const ListInt64Uint64& from);

  inline ListInt64Uint64& operator=(const ListInt64Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Uint64(ListInt64Uint64&& from) noexcept
    : ListInt64Uint64() {
    *this = ::std::move(from);
  }

  inline ListInt64Uint64& operator=(ListInt64Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Uint64* internal_default_instance() {
    return reinterpret_cast<const ListInt64Uint64*>(
               &_ListInt64Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(ListInt64Uint64* other);
  friend void swap(ListInt64Uint64& a, ListInt64Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Uint64* New() const final {
    return CreateMaybeMessage<ListInt64Uint64>(NULL);
  }

  ListInt64Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Uint64& from);
  void MergeFrom(const ListInt64Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Sint32) */ {
 public:
  ListInt64Sint32();
  virtual ~ListInt64Sint32();

  ListInt64Sint32(const ListInt64Sint32& from);

  inline ListInt64Sint32& operator=(const ListInt64Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Sint32(ListInt64Sint32&& from) noexcept
    : ListInt64Sint32() {
    *this = ::std::move(from);
  }

  inline ListInt64Sint32& operator=(ListInt64Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Sint32* internal_default_instance() {
    return reinterpret_cast<const ListInt64Sint32*>(
               &_ListInt64Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(ListInt64Sint32* other);
  friend void swap(ListInt64Sint32& a, ListInt64Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Sint32* New() const final {
    return CreateMaybeMessage<ListInt64Sint32>(NULL);
  }

  ListInt64Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Sint32& from);
  void MergeFrom(const ListInt64Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Sint64) */ {
 public:
  ListInt64Sint64();
  virtual ~ListInt64Sint64();

  ListInt64Sint64(const ListInt64Sint64& from);

  inline ListInt64Sint64& operator=(const ListInt64Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Sint64(ListInt64Sint64&& from) noexcept
    : ListInt64Sint64() {
    *this = ::std::move(from);
  }

  inline ListInt64Sint64& operator=(ListInt64Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Sint64* internal_default_instance() {
    return reinterpret_cast<const ListInt64Sint64*>(
               &_ListInt64Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(ListInt64Sint64* other);
  friend void swap(ListInt64Sint64& a, ListInt64Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Sint64* New() const final {
    return CreateMaybeMessage<ListInt64Sint64>(NULL);
  }

  ListInt64Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Sint64& from);
  void MergeFrom(const ListInt64Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Fixed32) */ {
 public:
  ListInt64Fixed32();
  virtual ~ListInt64Fixed32();

  ListInt64Fixed32(const ListInt64Fixed32& from);

  inline ListInt64Fixed32& operator=(const ListInt64Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Fixed32(ListInt64Fixed32&& from) noexcept
    : ListInt64Fixed32() {
    *this = ::std::move(from);
  }

  inline ListInt64Fixed32& operator=(ListInt64Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListInt64Fixed32*>(
               &_ListInt64Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(ListInt64Fixed32* other);
  friend void swap(ListInt64Fixed32& a, ListInt64Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Fixed32* New() const final {
    return CreateMaybeMessage<ListInt64Fixed32>(NULL);
  }

  ListInt64Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Fixed32& from);
  void MergeFrom(const ListInt64Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Fixed64) */ {
 public:
  ListInt64Fixed64();
  virtual ~ListInt64Fixed64();

  ListInt64Fixed64(const ListInt64Fixed64& from);

  inline ListInt64Fixed64& operator=(const ListInt64Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Fixed64(ListInt64Fixed64&& from) noexcept
    : ListInt64Fixed64() {
    *this = ::std::move(from);
  }

  inline ListInt64Fixed64& operator=(ListInt64Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListInt64Fixed64*>(
               &_ListInt64Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(ListInt64Fixed64* other);
  friend void swap(ListInt64Fixed64& a, ListInt64Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Fixed64* New() const final {
    return CreateMaybeMessage<ListInt64Fixed64>(NULL);
  }

  ListInt64Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Fixed64& from);
  void MergeFrom(const ListInt64Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Sfixed32) */ {
 public:
  ListInt64Sfixed32();
  virtual ~ListInt64Sfixed32();

  ListInt64Sfixed32(const ListInt64Sfixed32& from);

  inline ListInt64Sfixed32& operator=(const ListInt64Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Sfixed32(ListInt64Sfixed32&& from) noexcept
    : ListInt64Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListInt64Sfixed32& operator=(ListInt64Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListInt64Sfixed32*>(
               &_ListInt64Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(ListInt64Sfixed32* other);
  friend void swap(ListInt64Sfixed32& a, ListInt64Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Sfixed32* New() const final {
    return CreateMaybeMessage<ListInt64Sfixed32>(NULL);
  }

  ListInt64Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Sfixed32& from);
  void MergeFrom(const ListInt64Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Sfixed64) */ {
 public:
  ListInt64Sfixed64();
  virtual ~ListInt64Sfixed64();

  ListInt64Sfixed64(const ListInt64Sfixed64& from);

  inline ListInt64Sfixed64& operator=(const ListInt64Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Sfixed64(ListInt64Sfixed64&& from) noexcept
    : ListInt64Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListInt64Sfixed64& operator=(ListInt64Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListInt64Sfixed64*>(
               &_ListInt64Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(ListInt64Sfixed64* other);
  friend void swap(ListInt64Sfixed64& a, ListInt64Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Sfixed64* New() const final {
    return CreateMaybeMessage<ListInt64Sfixed64>(NULL);
  }

  ListInt64Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Sfixed64& from);
  void MergeFrom(const ListInt64Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Bool) */ {
 public:
  ListInt64Bool();
  virtual ~ListInt64Bool();

  ListInt64Bool(const ListInt64Bool& from);

  inline ListInt64Bool& operator=(const ListInt64Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Bool(ListInt64Bool&& from) noexcept
    : ListInt64Bool() {
    *this = ::std::move(from);
  }

  inline ListInt64Bool& operator=(ListInt64Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Bool* internal_default_instance() {
    return reinterpret_cast<const ListInt64Bool*>(
               &_ListInt64Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(ListInt64Bool* other);
  friend void swap(ListInt64Bool& a, ListInt64Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Bool* New() const final {
    return CreateMaybeMessage<ListInt64Bool>(NULL);
  }

  ListInt64Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Bool& from);
  void MergeFrom(const ListInt64Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64String) */ {
 public:
  ListInt64String();
  virtual ~ListInt64String();

  ListInt64String(const ListInt64String& from);

  inline ListInt64String& operator=(const ListInt64String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64String(ListInt64String&& from) noexcept
    : ListInt64String() {
    *this = ::std::move(from);
  }

  inline ListInt64String& operator=(ListInt64String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64String* internal_default_instance() {
    return reinterpret_cast<const ListInt64String*>(
               &_ListInt64String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(ListInt64String* other);
  friend void swap(ListInt64String& a, ListInt64String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64String* New() const final {
    return CreateMaybeMessage<ListInt64String>(NULL);
  }

  ListInt64String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64String& from);
  void MergeFrom(const ListInt64String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInt64Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListInt64Bytes) */ {
 public:
  ListInt64Bytes();
  virtual ~ListInt64Bytes();

  ListInt64Bytes(const ListInt64Bytes& from);

  inline ListInt64Bytes& operator=(const ListInt64Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInt64Bytes(ListInt64Bytes&& from) noexcept
    : ListInt64Bytes() {
    *this = ::std::move(from);
  }

  inline ListInt64Bytes& operator=(ListInt64Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInt64Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInt64Bytes* internal_default_instance() {
    return reinterpret_cast<const ListInt64Bytes*>(
               &_ListInt64Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(ListInt64Bytes* other);
  friend void swap(ListInt64Bytes& a, ListInt64Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInt64Bytes* New() const final {
    return CreateMaybeMessage<ListInt64Bytes>(NULL);
  }

  ListInt64Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInt64Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInt64Bytes& from);
  void MergeFrom(const ListInt64Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInt64Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListInt64Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Double) */ {
 public:
  ListUint32Double();
  virtual ~ListUint32Double();

  ListUint32Double(const ListUint32Double& from);

  inline ListUint32Double& operator=(const ListUint32Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Double(ListUint32Double&& from) noexcept
    : ListUint32Double() {
    *this = ::std::move(from);
  }

  inline ListUint32Double& operator=(ListUint32Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Double* internal_default_instance() {
    return reinterpret_cast<const ListUint32Double*>(
               &_ListUint32Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(ListUint32Double* other);
  friend void swap(ListUint32Double& a, ListUint32Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Double* New() const final {
    return CreateMaybeMessage<ListUint32Double>(NULL);
  }

  ListUint32Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Double& from);
  void MergeFrom(const ListUint32Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Float) */ {
 public:
  ListUint32Float();
  virtual ~ListUint32Float();

  ListUint32Float(const ListUint32Float& from);

  inline ListUint32Float& operator=(const ListUint32Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Float(ListUint32Float&& from) noexcept
    : ListUint32Float() {
    *this = ::std::move(from);
  }

  inline ListUint32Float& operator=(ListUint32Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Float* internal_default_instance() {
    return reinterpret_cast<const ListUint32Float*>(
               &_ListUint32Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(ListUint32Float* other);
  friend void swap(ListUint32Float& a, ListUint32Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Float* New() const final {
    return CreateMaybeMessage<ListUint32Float>(NULL);
  }

  ListUint32Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Float& from);
  void MergeFrom(const ListUint32Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Int32) */ {
 public:
  ListUint32Int32();
  virtual ~ListUint32Int32();

  ListUint32Int32(const ListUint32Int32& from);

  inline ListUint32Int32& operator=(const ListUint32Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Int32(ListUint32Int32&& from) noexcept
    : ListUint32Int32() {
    *this = ::std::move(from);
  }

  inline ListUint32Int32& operator=(ListUint32Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Int32* internal_default_instance() {
    return reinterpret_cast<const ListUint32Int32*>(
               &_ListUint32Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(ListUint32Int32* other);
  friend void swap(ListUint32Int32& a, ListUint32Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Int32* New() const final {
    return CreateMaybeMessage<ListUint32Int32>(NULL);
  }

  ListUint32Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Int32& from);
  void MergeFrom(const ListUint32Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Int64) */ {
 public:
  ListUint32Int64();
  virtual ~ListUint32Int64();

  ListUint32Int64(const ListUint32Int64& from);

  inline ListUint32Int64& operator=(const ListUint32Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Int64(ListUint32Int64&& from) noexcept
    : ListUint32Int64() {
    *this = ::std::move(from);
  }

  inline ListUint32Int64& operator=(ListUint32Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Int64* internal_default_instance() {
    return reinterpret_cast<const ListUint32Int64*>(
               &_ListUint32Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(ListUint32Int64* other);
  friend void swap(ListUint32Int64& a, ListUint32Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Int64* New() const final {
    return CreateMaybeMessage<ListUint32Int64>(NULL);
  }

  ListUint32Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Int64& from);
  void MergeFrom(const ListUint32Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Uint32) */ {
 public:
  ListUint32Uint32();
  virtual ~ListUint32Uint32();

  ListUint32Uint32(const ListUint32Uint32& from);

  inline ListUint32Uint32& operator=(const ListUint32Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Uint32(ListUint32Uint32&& from) noexcept
    : ListUint32Uint32() {
    *this = ::std::move(from);
  }

  inline ListUint32Uint32& operator=(ListUint32Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Uint32* internal_default_instance() {
    return reinterpret_cast<const ListUint32Uint32*>(
               &_ListUint32Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(ListUint32Uint32* other);
  friend void swap(ListUint32Uint32& a, ListUint32Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Uint32* New() const final {
    return CreateMaybeMessage<ListUint32Uint32>(NULL);
  }

  ListUint32Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Uint32& from);
  void MergeFrom(const ListUint32Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Uint64) */ {
 public:
  ListUint32Uint64();
  virtual ~ListUint32Uint64();

  ListUint32Uint64(const ListUint32Uint64& from);

  inline ListUint32Uint64& operator=(const ListUint32Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Uint64(ListUint32Uint64&& from) noexcept
    : ListUint32Uint64() {
    *this = ::std::move(from);
  }

  inline ListUint32Uint64& operator=(ListUint32Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Uint64* internal_default_instance() {
    return reinterpret_cast<const ListUint32Uint64*>(
               &_ListUint32Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(ListUint32Uint64* other);
  friend void swap(ListUint32Uint64& a, ListUint32Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Uint64* New() const final {
    return CreateMaybeMessage<ListUint32Uint64>(NULL);
  }

  ListUint32Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Uint64& from);
  void MergeFrom(const ListUint32Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Sint32) */ {
 public:
  ListUint32Sint32();
  virtual ~ListUint32Sint32();

  ListUint32Sint32(const ListUint32Sint32& from);

  inline ListUint32Sint32& operator=(const ListUint32Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Sint32(ListUint32Sint32&& from) noexcept
    : ListUint32Sint32() {
    *this = ::std::move(from);
  }

  inline ListUint32Sint32& operator=(ListUint32Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Sint32* internal_default_instance() {
    return reinterpret_cast<const ListUint32Sint32*>(
               &_ListUint32Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(ListUint32Sint32* other);
  friend void swap(ListUint32Sint32& a, ListUint32Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Sint32* New() const final {
    return CreateMaybeMessage<ListUint32Sint32>(NULL);
  }

  ListUint32Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Sint32& from);
  void MergeFrom(const ListUint32Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Sint64) */ {
 public:
  ListUint32Sint64();
  virtual ~ListUint32Sint64();

  ListUint32Sint64(const ListUint32Sint64& from);

  inline ListUint32Sint64& operator=(const ListUint32Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Sint64(ListUint32Sint64&& from) noexcept
    : ListUint32Sint64() {
    *this = ::std::move(from);
  }

  inline ListUint32Sint64& operator=(ListUint32Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Sint64* internal_default_instance() {
    return reinterpret_cast<const ListUint32Sint64*>(
               &_ListUint32Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(ListUint32Sint64* other);
  friend void swap(ListUint32Sint64& a, ListUint32Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Sint64* New() const final {
    return CreateMaybeMessage<ListUint32Sint64>(NULL);
  }

  ListUint32Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Sint64& from);
  void MergeFrom(const ListUint32Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Fixed32) */ {
 public:
  ListUint32Fixed32();
  virtual ~ListUint32Fixed32();

  ListUint32Fixed32(const ListUint32Fixed32& from);

  inline ListUint32Fixed32& operator=(const ListUint32Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Fixed32(ListUint32Fixed32&& from) noexcept
    : ListUint32Fixed32() {
    *this = ::std::move(from);
  }

  inline ListUint32Fixed32& operator=(ListUint32Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListUint32Fixed32*>(
               &_ListUint32Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(ListUint32Fixed32* other);
  friend void swap(ListUint32Fixed32& a, ListUint32Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Fixed32* New() const final {
    return CreateMaybeMessage<ListUint32Fixed32>(NULL);
  }

  ListUint32Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Fixed32& from);
  void MergeFrom(const ListUint32Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Fixed64) */ {
 public:
  ListUint32Fixed64();
  virtual ~ListUint32Fixed64();

  ListUint32Fixed64(const ListUint32Fixed64& from);

  inline ListUint32Fixed64& operator=(const ListUint32Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Fixed64(ListUint32Fixed64&& from) noexcept
    : ListUint32Fixed64() {
    *this = ::std::move(from);
  }

  inline ListUint32Fixed64& operator=(ListUint32Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListUint32Fixed64*>(
               &_ListUint32Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(ListUint32Fixed64* other);
  friend void swap(ListUint32Fixed64& a, ListUint32Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Fixed64* New() const final {
    return CreateMaybeMessage<ListUint32Fixed64>(NULL);
  }

  ListUint32Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Fixed64& from);
  void MergeFrom(const ListUint32Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Sfixed32) */ {
 public:
  ListUint32Sfixed32();
  virtual ~ListUint32Sfixed32();

  ListUint32Sfixed32(const ListUint32Sfixed32& from);

  inline ListUint32Sfixed32& operator=(const ListUint32Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Sfixed32(ListUint32Sfixed32&& from) noexcept
    : ListUint32Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListUint32Sfixed32& operator=(ListUint32Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListUint32Sfixed32*>(
               &_ListUint32Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(ListUint32Sfixed32* other);
  friend void swap(ListUint32Sfixed32& a, ListUint32Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Sfixed32* New() const final {
    return CreateMaybeMessage<ListUint32Sfixed32>(NULL);
  }

  ListUint32Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Sfixed32& from);
  void MergeFrom(const ListUint32Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Sfixed64) */ {
 public:
  ListUint32Sfixed64();
  virtual ~ListUint32Sfixed64();

  ListUint32Sfixed64(const ListUint32Sfixed64& from);

  inline ListUint32Sfixed64& operator=(const ListUint32Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Sfixed64(ListUint32Sfixed64&& from) noexcept
    : ListUint32Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListUint32Sfixed64& operator=(ListUint32Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListUint32Sfixed64*>(
               &_ListUint32Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(ListUint32Sfixed64* other);
  friend void swap(ListUint32Sfixed64& a, ListUint32Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Sfixed64* New() const final {
    return CreateMaybeMessage<ListUint32Sfixed64>(NULL);
  }

  ListUint32Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Sfixed64& from);
  void MergeFrom(const ListUint32Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Bool) */ {
 public:
  ListUint32Bool();
  virtual ~ListUint32Bool();

  ListUint32Bool(const ListUint32Bool& from);

  inline ListUint32Bool& operator=(const ListUint32Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Bool(ListUint32Bool&& from) noexcept
    : ListUint32Bool() {
    *this = ::std::move(from);
  }

  inline ListUint32Bool& operator=(ListUint32Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Bool* internal_default_instance() {
    return reinterpret_cast<const ListUint32Bool*>(
               &_ListUint32Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(ListUint32Bool* other);
  friend void swap(ListUint32Bool& a, ListUint32Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Bool* New() const final {
    return CreateMaybeMessage<ListUint32Bool>(NULL);
  }

  ListUint32Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Bool& from);
  void MergeFrom(const ListUint32Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32String) */ {
 public:
  ListUint32String();
  virtual ~ListUint32String();

  ListUint32String(const ListUint32String& from);

  inline ListUint32String& operator=(const ListUint32String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32String(ListUint32String&& from) noexcept
    : ListUint32String() {
    *this = ::std::move(from);
  }

  inline ListUint32String& operator=(ListUint32String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32String* internal_default_instance() {
    return reinterpret_cast<const ListUint32String*>(
               &_ListUint32String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(ListUint32String* other);
  friend void swap(ListUint32String& a, ListUint32String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32String* New() const final {
    return CreateMaybeMessage<ListUint32String>(NULL);
  }

  ListUint32String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32String& from);
  void MergeFrom(const ListUint32String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint32Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint32Bytes) */ {
 public:
  ListUint32Bytes();
  virtual ~ListUint32Bytes();

  ListUint32Bytes(const ListUint32Bytes& from);

  inline ListUint32Bytes& operator=(const ListUint32Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint32Bytes(ListUint32Bytes&& from) noexcept
    : ListUint32Bytes() {
    *this = ::std::move(from);
  }

  inline ListUint32Bytes& operator=(ListUint32Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint32Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint32Bytes* internal_default_instance() {
    return reinterpret_cast<const ListUint32Bytes*>(
               &_ListUint32Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(ListUint32Bytes* other);
  friend void swap(ListUint32Bytes& a, ListUint32Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint32Bytes* New() const final {
    return CreateMaybeMessage<ListUint32Bytes>(NULL);
  }

  ListUint32Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint32Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint32Bytes& from);
  void MergeFrom(const ListUint32Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint32Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint32Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Double) */ {
 public:
  ListUint64Double();
  virtual ~ListUint64Double();

  ListUint64Double(const ListUint64Double& from);

  inline ListUint64Double& operator=(const ListUint64Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Double(ListUint64Double&& from) noexcept
    : ListUint64Double() {
    *this = ::std::move(from);
  }

  inline ListUint64Double& operator=(ListUint64Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Double* internal_default_instance() {
    return reinterpret_cast<const ListUint64Double*>(
               &_ListUint64Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(ListUint64Double* other);
  friend void swap(ListUint64Double& a, ListUint64Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Double* New() const final {
    return CreateMaybeMessage<ListUint64Double>(NULL);
  }

  ListUint64Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Double& from);
  void MergeFrom(const ListUint64Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Float) */ {
 public:
  ListUint64Float();
  virtual ~ListUint64Float();

  ListUint64Float(const ListUint64Float& from);

  inline ListUint64Float& operator=(const ListUint64Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Float(ListUint64Float&& from) noexcept
    : ListUint64Float() {
    *this = ::std::move(from);
  }

  inline ListUint64Float& operator=(ListUint64Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Float* internal_default_instance() {
    return reinterpret_cast<const ListUint64Float*>(
               &_ListUint64Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(ListUint64Float* other);
  friend void swap(ListUint64Float& a, ListUint64Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Float* New() const final {
    return CreateMaybeMessage<ListUint64Float>(NULL);
  }

  ListUint64Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Float& from);
  void MergeFrom(const ListUint64Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Int32) */ {
 public:
  ListUint64Int32();
  virtual ~ListUint64Int32();

  ListUint64Int32(const ListUint64Int32& from);

  inline ListUint64Int32& operator=(const ListUint64Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Int32(ListUint64Int32&& from) noexcept
    : ListUint64Int32() {
    *this = ::std::move(from);
  }

  inline ListUint64Int32& operator=(ListUint64Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Int32* internal_default_instance() {
    return reinterpret_cast<const ListUint64Int32*>(
               &_ListUint64Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(ListUint64Int32* other);
  friend void swap(ListUint64Int32& a, ListUint64Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Int32* New() const final {
    return CreateMaybeMessage<ListUint64Int32>(NULL);
  }

  ListUint64Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Int32& from);
  void MergeFrom(const ListUint64Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Int64) */ {
 public:
  ListUint64Int64();
  virtual ~ListUint64Int64();

  ListUint64Int64(const ListUint64Int64& from);

  inline ListUint64Int64& operator=(const ListUint64Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Int64(ListUint64Int64&& from) noexcept
    : ListUint64Int64() {
    *this = ::std::move(from);
  }

  inline ListUint64Int64& operator=(ListUint64Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Int64* internal_default_instance() {
    return reinterpret_cast<const ListUint64Int64*>(
               &_ListUint64Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(ListUint64Int64* other);
  friend void swap(ListUint64Int64& a, ListUint64Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Int64* New() const final {
    return CreateMaybeMessage<ListUint64Int64>(NULL);
  }

  ListUint64Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Int64& from);
  void MergeFrom(const ListUint64Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Uint32) */ {
 public:
  ListUint64Uint32();
  virtual ~ListUint64Uint32();

  ListUint64Uint32(const ListUint64Uint32& from);

  inline ListUint64Uint32& operator=(const ListUint64Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Uint32(ListUint64Uint32&& from) noexcept
    : ListUint64Uint32() {
    *this = ::std::move(from);
  }

  inline ListUint64Uint32& operator=(ListUint64Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Uint32* internal_default_instance() {
    return reinterpret_cast<const ListUint64Uint32*>(
               &_ListUint64Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(ListUint64Uint32* other);
  friend void swap(ListUint64Uint32& a, ListUint64Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Uint32* New() const final {
    return CreateMaybeMessage<ListUint64Uint32>(NULL);
  }

  ListUint64Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Uint32& from);
  void MergeFrom(const ListUint64Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Uint64) */ {
 public:
  ListUint64Uint64();
  virtual ~ListUint64Uint64();

  ListUint64Uint64(const ListUint64Uint64& from);

  inline ListUint64Uint64& operator=(const ListUint64Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Uint64(ListUint64Uint64&& from) noexcept
    : ListUint64Uint64() {
    *this = ::std::move(from);
  }

  inline ListUint64Uint64& operator=(ListUint64Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Uint64* internal_default_instance() {
    return reinterpret_cast<const ListUint64Uint64*>(
               &_ListUint64Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(ListUint64Uint64* other);
  friend void swap(ListUint64Uint64& a, ListUint64Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Uint64* New() const final {
    return CreateMaybeMessage<ListUint64Uint64>(NULL);
  }

  ListUint64Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Uint64& from);
  void MergeFrom(const ListUint64Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Sint32) */ {
 public:
  ListUint64Sint32();
  virtual ~ListUint64Sint32();

  ListUint64Sint32(const ListUint64Sint32& from);

  inline ListUint64Sint32& operator=(const ListUint64Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Sint32(ListUint64Sint32&& from) noexcept
    : ListUint64Sint32() {
    *this = ::std::move(from);
  }

  inline ListUint64Sint32& operator=(ListUint64Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Sint32* internal_default_instance() {
    return reinterpret_cast<const ListUint64Sint32*>(
               &_ListUint64Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(ListUint64Sint32* other);
  friend void swap(ListUint64Sint32& a, ListUint64Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Sint32* New() const final {
    return CreateMaybeMessage<ListUint64Sint32>(NULL);
  }

  ListUint64Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Sint32& from);
  void MergeFrom(const ListUint64Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Sint64) */ {
 public:
  ListUint64Sint64();
  virtual ~ListUint64Sint64();

  ListUint64Sint64(const ListUint64Sint64& from);

  inline ListUint64Sint64& operator=(const ListUint64Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Sint64(ListUint64Sint64&& from) noexcept
    : ListUint64Sint64() {
    *this = ::std::move(from);
  }

  inline ListUint64Sint64& operator=(ListUint64Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Sint64* internal_default_instance() {
    return reinterpret_cast<const ListUint64Sint64*>(
               &_ListUint64Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(ListUint64Sint64* other);
  friend void swap(ListUint64Sint64& a, ListUint64Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Sint64* New() const final {
    return CreateMaybeMessage<ListUint64Sint64>(NULL);
  }

  ListUint64Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Sint64& from);
  void MergeFrom(const ListUint64Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Fixed32) */ {
 public:
  ListUint64Fixed32();
  virtual ~ListUint64Fixed32();

  ListUint64Fixed32(const ListUint64Fixed32& from);

  inline ListUint64Fixed32& operator=(const ListUint64Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Fixed32(ListUint64Fixed32&& from) noexcept
    : ListUint64Fixed32() {
    *this = ::std::move(from);
  }

  inline ListUint64Fixed32& operator=(ListUint64Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListUint64Fixed32*>(
               &_ListUint64Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(ListUint64Fixed32* other);
  friend void swap(ListUint64Fixed32& a, ListUint64Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Fixed32* New() const final {
    return CreateMaybeMessage<ListUint64Fixed32>(NULL);
  }

  ListUint64Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Fixed32& from);
  void MergeFrom(const ListUint64Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Fixed64) */ {
 public:
  ListUint64Fixed64();
  virtual ~ListUint64Fixed64();

  ListUint64Fixed64(const ListUint64Fixed64& from);

  inline ListUint64Fixed64& operator=(const ListUint64Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Fixed64(ListUint64Fixed64&& from) noexcept
    : ListUint64Fixed64() {
    *this = ::std::move(from);
  }

  inline ListUint64Fixed64& operator=(ListUint64Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListUint64Fixed64*>(
               &_ListUint64Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(ListUint64Fixed64* other);
  friend void swap(ListUint64Fixed64& a, ListUint64Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Fixed64* New() const final {
    return CreateMaybeMessage<ListUint64Fixed64>(NULL);
  }

  ListUint64Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Fixed64& from);
  void MergeFrom(const ListUint64Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Sfixed32) */ {
 public:
  ListUint64Sfixed32();
  virtual ~ListUint64Sfixed32();

  ListUint64Sfixed32(const ListUint64Sfixed32& from);

  inline ListUint64Sfixed32& operator=(const ListUint64Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Sfixed32(ListUint64Sfixed32&& from) noexcept
    : ListUint64Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListUint64Sfixed32& operator=(ListUint64Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListUint64Sfixed32*>(
               &_ListUint64Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(ListUint64Sfixed32* other);
  friend void swap(ListUint64Sfixed32& a, ListUint64Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Sfixed32* New() const final {
    return CreateMaybeMessage<ListUint64Sfixed32>(NULL);
  }

  ListUint64Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Sfixed32& from);
  void MergeFrom(const ListUint64Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Sfixed64) */ {
 public:
  ListUint64Sfixed64();
  virtual ~ListUint64Sfixed64();

  ListUint64Sfixed64(const ListUint64Sfixed64& from);

  inline ListUint64Sfixed64& operator=(const ListUint64Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Sfixed64(ListUint64Sfixed64&& from) noexcept
    : ListUint64Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListUint64Sfixed64& operator=(ListUint64Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListUint64Sfixed64*>(
               &_ListUint64Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(ListUint64Sfixed64* other);
  friend void swap(ListUint64Sfixed64& a, ListUint64Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Sfixed64* New() const final {
    return CreateMaybeMessage<ListUint64Sfixed64>(NULL);
  }

  ListUint64Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Sfixed64& from);
  void MergeFrom(const ListUint64Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Bool) */ {
 public:
  ListUint64Bool();
  virtual ~ListUint64Bool();

  ListUint64Bool(const ListUint64Bool& from);

  inline ListUint64Bool& operator=(const ListUint64Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Bool(ListUint64Bool&& from) noexcept
    : ListUint64Bool() {
    *this = ::std::move(from);
  }

  inline ListUint64Bool& operator=(ListUint64Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Bool* internal_default_instance() {
    return reinterpret_cast<const ListUint64Bool*>(
               &_ListUint64Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(ListUint64Bool* other);
  friend void swap(ListUint64Bool& a, ListUint64Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Bool* New() const final {
    return CreateMaybeMessage<ListUint64Bool>(NULL);
  }

  ListUint64Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Bool& from);
  void MergeFrom(const ListUint64Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64String) */ {
 public:
  ListUint64String();
  virtual ~ListUint64String();

  ListUint64String(const ListUint64String& from);

  inline ListUint64String& operator=(const ListUint64String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64String(ListUint64String&& from) noexcept
    : ListUint64String() {
    *this = ::std::move(from);
  }

  inline ListUint64String& operator=(ListUint64String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64String* internal_default_instance() {
    return reinterpret_cast<const ListUint64String*>(
               &_ListUint64String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(ListUint64String* other);
  friend void swap(ListUint64String& a, ListUint64String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64String* New() const final {
    return CreateMaybeMessage<ListUint64String>(NULL);
  }

  ListUint64String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64String& from);
  void MergeFrom(const ListUint64String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListUint64Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListUint64Bytes) */ {
 public:
  ListUint64Bytes();
  virtual ~ListUint64Bytes();

  ListUint64Bytes(const ListUint64Bytes& from);

  inline ListUint64Bytes& operator=(const ListUint64Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUint64Bytes(ListUint64Bytes&& from) noexcept
    : ListUint64Bytes() {
    *this = ::std::move(from);
  }

  inline ListUint64Bytes& operator=(ListUint64Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUint64Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUint64Bytes* internal_default_instance() {
    return reinterpret_cast<const ListUint64Bytes*>(
               &_ListUint64Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(ListUint64Bytes* other);
  friend void swap(ListUint64Bytes& a, ListUint64Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUint64Bytes* New() const final {
    return CreateMaybeMessage<ListUint64Bytes>(NULL);
  }

  ListUint64Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListUint64Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListUint64Bytes& from);
  void MergeFrom(const ListUint64Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListUint64Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListUint64Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Double) */ {
 public:
  ListSint32Double();
  virtual ~ListSint32Double();

  ListSint32Double(const ListSint32Double& from);

  inline ListSint32Double& operator=(const ListSint32Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Double(ListSint32Double&& from) noexcept
    : ListSint32Double() {
    *this = ::std::move(from);
  }

  inline ListSint32Double& operator=(ListSint32Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Double* internal_default_instance() {
    return reinterpret_cast<const ListSint32Double*>(
               &_ListSint32Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(ListSint32Double* other);
  friend void swap(ListSint32Double& a, ListSint32Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Double* New() const final {
    return CreateMaybeMessage<ListSint32Double>(NULL);
  }

  ListSint32Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Double& from);
  void MergeFrom(const ListSint32Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Float) */ {
 public:
  ListSint32Float();
  virtual ~ListSint32Float();

  ListSint32Float(const ListSint32Float& from);

  inline ListSint32Float& operator=(const ListSint32Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Float(ListSint32Float&& from) noexcept
    : ListSint32Float() {
    *this = ::std::move(from);
  }

  inline ListSint32Float& operator=(ListSint32Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Float* internal_default_instance() {
    return reinterpret_cast<const ListSint32Float*>(
               &_ListSint32Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(ListSint32Float* other);
  friend void swap(ListSint32Float& a, ListSint32Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Float* New() const final {
    return CreateMaybeMessage<ListSint32Float>(NULL);
  }

  ListSint32Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Float& from);
  void MergeFrom(const ListSint32Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Int32) */ {
 public:
  ListSint32Int32();
  virtual ~ListSint32Int32();

  ListSint32Int32(const ListSint32Int32& from);

  inline ListSint32Int32& operator=(const ListSint32Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Int32(ListSint32Int32&& from) noexcept
    : ListSint32Int32() {
    *this = ::std::move(from);
  }

  inline ListSint32Int32& operator=(ListSint32Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Int32* internal_default_instance() {
    return reinterpret_cast<const ListSint32Int32*>(
               &_ListSint32Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(ListSint32Int32* other);
  friend void swap(ListSint32Int32& a, ListSint32Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Int32* New() const final {
    return CreateMaybeMessage<ListSint32Int32>(NULL);
  }

  ListSint32Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Int32& from);
  void MergeFrom(const ListSint32Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Int64) */ {
 public:
  ListSint32Int64();
  virtual ~ListSint32Int64();

  ListSint32Int64(const ListSint32Int64& from);

  inline ListSint32Int64& operator=(const ListSint32Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Int64(ListSint32Int64&& from) noexcept
    : ListSint32Int64() {
    *this = ::std::move(from);
  }

  inline ListSint32Int64& operator=(ListSint32Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Int64* internal_default_instance() {
    return reinterpret_cast<const ListSint32Int64*>(
               &_ListSint32Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(ListSint32Int64* other);
  friend void swap(ListSint32Int64& a, ListSint32Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Int64* New() const final {
    return CreateMaybeMessage<ListSint32Int64>(NULL);
  }

  ListSint32Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Int64& from);
  void MergeFrom(const ListSint32Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Uint32) */ {
 public:
  ListSint32Uint32();
  virtual ~ListSint32Uint32();

  ListSint32Uint32(const ListSint32Uint32& from);

  inline ListSint32Uint32& operator=(const ListSint32Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Uint32(ListSint32Uint32&& from) noexcept
    : ListSint32Uint32() {
    *this = ::std::move(from);
  }

  inline ListSint32Uint32& operator=(ListSint32Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Uint32* internal_default_instance() {
    return reinterpret_cast<const ListSint32Uint32*>(
               &_ListSint32Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(ListSint32Uint32* other);
  friend void swap(ListSint32Uint32& a, ListSint32Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Uint32* New() const final {
    return CreateMaybeMessage<ListSint32Uint32>(NULL);
  }

  ListSint32Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Uint32& from);
  void MergeFrom(const ListSint32Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Uint64) */ {
 public:
  ListSint32Uint64();
  virtual ~ListSint32Uint64();

  ListSint32Uint64(const ListSint32Uint64& from);

  inline ListSint32Uint64& operator=(const ListSint32Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Uint64(ListSint32Uint64&& from) noexcept
    : ListSint32Uint64() {
    *this = ::std::move(from);
  }

  inline ListSint32Uint64& operator=(ListSint32Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Uint64* internal_default_instance() {
    return reinterpret_cast<const ListSint32Uint64*>(
               &_ListSint32Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(ListSint32Uint64* other);
  friend void swap(ListSint32Uint64& a, ListSint32Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Uint64* New() const final {
    return CreateMaybeMessage<ListSint32Uint64>(NULL);
  }

  ListSint32Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Uint64& from);
  void MergeFrom(const ListSint32Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Sint32) */ {
 public:
  ListSint32Sint32();
  virtual ~ListSint32Sint32();

  ListSint32Sint32(const ListSint32Sint32& from);

  inline ListSint32Sint32& operator=(const ListSint32Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Sint32(ListSint32Sint32&& from) noexcept
    : ListSint32Sint32() {
    *this = ::std::move(from);
  }

  inline ListSint32Sint32& operator=(ListSint32Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Sint32* internal_default_instance() {
    return reinterpret_cast<const ListSint32Sint32*>(
               &_ListSint32Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(ListSint32Sint32* other);
  friend void swap(ListSint32Sint32& a, ListSint32Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Sint32* New() const final {
    return CreateMaybeMessage<ListSint32Sint32>(NULL);
  }

  ListSint32Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Sint32& from);
  void MergeFrom(const ListSint32Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Sint64) */ {
 public:
  ListSint32Sint64();
  virtual ~ListSint32Sint64();

  ListSint32Sint64(const ListSint32Sint64& from);

  inline ListSint32Sint64& operator=(const ListSint32Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Sint64(ListSint32Sint64&& from) noexcept
    : ListSint32Sint64() {
    *this = ::std::move(from);
  }

  inline ListSint32Sint64& operator=(ListSint32Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Sint64* internal_default_instance() {
    return reinterpret_cast<const ListSint32Sint64*>(
               &_ListSint32Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(ListSint32Sint64* other);
  friend void swap(ListSint32Sint64& a, ListSint32Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Sint64* New() const final {
    return CreateMaybeMessage<ListSint32Sint64>(NULL);
  }

  ListSint32Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Sint64& from);
  void MergeFrom(const ListSint32Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Fixed32) */ {
 public:
  ListSint32Fixed32();
  virtual ~ListSint32Fixed32();

  ListSint32Fixed32(const ListSint32Fixed32& from);

  inline ListSint32Fixed32& operator=(const ListSint32Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Fixed32(ListSint32Fixed32&& from) noexcept
    : ListSint32Fixed32() {
    *this = ::std::move(from);
  }

  inline ListSint32Fixed32& operator=(ListSint32Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListSint32Fixed32*>(
               &_ListSint32Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(ListSint32Fixed32* other);
  friend void swap(ListSint32Fixed32& a, ListSint32Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Fixed32* New() const final {
    return CreateMaybeMessage<ListSint32Fixed32>(NULL);
  }

  ListSint32Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Fixed32& from);
  void MergeFrom(const ListSint32Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Fixed64) */ {
 public:
  ListSint32Fixed64();
  virtual ~ListSint32Fixed64();

  ListSint32Fixed64(const ListSint32Fixed64& from);

  inline ListSint32Fixed64& operator=(const ListSint32Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Fixed64(ListSint32Fixed64&& from) noexcept
    : ListSint32Fixed64() {
    *this = ::std::move(from);
  }

  inline ListSint32Fixed64& operator=(ListSint32Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListSint32Fixed64*>(
               &_ListSint32Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(ListSint32Fixed64* other);
  friend void swap(ListSint32Fixed64& a, ListSint32Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Fixed64* New() const final {
    return CreateMaybeMessage<ListSint32Fixed64>(NULL);
  }

  ListSint32Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Fixed64& from);
  void MergeFrom(const ListSint32Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Sfixed32) */ {
 public:
  ListSint32Sfixed32();
  virtual ~ListSint32Sfixed32();

  ListSint32Sfixed32(const ListSint32Sfixed32& from);

  inline ListSint32Sfixed32& operator=(const ListSint32Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Sfixed32(ListSint32Sfixed32&& from) noexcept
    : ListSint32Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListSint32Sfixed32& operator=(ListSint32Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListSint32Sfixed32*>(
               &_ListSint32Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(ListSint32Sfixed32* other);
  friend void swap(ListSint32Sfixed32& a, ListSint32Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Sfixed32* New() const final {
    return CreateMaybeMessage<ListSint32Sfixed32>(NULL);
  }

  ListSint32Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Sfixed32& from);
  void MergeFrom(const ListSint32Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Sfixed64) */ {
 public:
  ListSint32Sfixed64();
  virtual ~ListSint32Sfixed64();

  ListSint32Sfixed64(const ListSint32Sfixed64& from);

  inline ListSint32Sfixed64& operator=(const ListSint32Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Sfixed64(ListSint32Sfixed64&& from) noexcept
    : ListSint32Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListSint32Sfixed64& operator=(ListSint32Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListSint32Sfixed64*>(
               &_ListSint32Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(ListSint32Sfixed64* other);
  friend void swap(ListSint32Sfixed64& a, ListSint32Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Sfixed64* New() const final {
    return CreateMaybeMessage<ListSint32Sfixed64>(NULL);
  }

  ListSint32Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Sfixed64& from);
  void MergeFrom(const ListSint32Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Bool) */ {
 public:
  ListSint32Bool();
  virtual ~ListSint32Bool();

  ListSint32Bool(const ListSint32Bool& from);

  inline ListSint32Bool& operator=(const ListSint32Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Bool(ListSint32Bool&& from) noexcept
    : ListSint32Bool() {
    *this = ::std::move(from);
  }

  inline ListSint32Bool& operator=(ListSint32Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Bool* internal_default_instance() {
    return reinterpret_cast<const ListSint32Bool*>(
               &_ListSint32Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(ListSint32Bool* other);
  friend void swap(ListSint32Bool& a, ListSint32Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Bool* New() const final {
    return CreateMaybeMessage<ListSint32Bool>(NULL);
  }

  ListSint32Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Bool& from);
  void MergeFrom(const ListSint32Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32String) */ {
 public:
  ListSint32String();
  virtual ~ListSint32String();

  ListSint32String(const ListSint32String& from);

  inline ListSint32String& operator=(const ListSint32String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32String(ListSint32String&& from) noexcept
    : ListSint32String() {
    *this = ::std::move(from);
  }

  inline ListSint32String& operator=(ListSint32String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32String* internal_default_instance() {
    return reinterpret_cast<const ListSint32String*>(
               &_ListSint32String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(ListSint32String* other);
  friend void swap(ListSint32String& a, ListSint32String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32String* New() const final {
    return CreateMaybeMessage<ListSint32String>(NULL);
  }

  ListSint32String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32String& from);
  void MergeFrom(const ListSint32String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint32Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint32Bytes) */ {
 public:
  ListSint32Bytes();
  virtual ~ListSint32Bytes();

  ListSint32Bytes(const ListSint32Bytes& from);

  inline ListSint32Bytes& operator=(const ListSint32Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint32Bytes(ListSint32Bytes&& from) noexcept
    : ListSint32Bytes() {
    *this = ::std::move(from);
  }

  inline ListSint32Bytes& operator=(ListSint32Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint32Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint32Bytes* internal_default_instance() {
    return reinterpret_cast<const ListSint32Bytes*>(
               &_ListSint32Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(ListSint32Bytes* other);
  friend void swap(ListSint32Bytes& a, ListSint32Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint32Bytes* New() const final {
    return CreateMaybeMessage<ListSint32Bytes>(NULL);
  }

  ListSint32Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint32Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint32Bytes& from);
  void MergeFrom(const ListSint32Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint32Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint32Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Double) */ {
 public:
  ListSint64Double();
  virtual ~ListSint64Double();

  ListSint64Double(const ListSint64Double& from);

  inline ListSint64Double& operator=(const ListSint64Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Double(ListSint64Double&& from) noexcept
    : ListSint64Double() {
    *this = ::std::move(from);
  }

  inline ListSint64Double& operator=(ListSint64Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Double* internal_default_instance() {
    return reinterpret_cast<const ListSint64Double*>(
               &_ListSint64Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(ListSint64Double* other);
  friend void swap(ListSint64Double& a, ListSint64Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Double* New() const final {
    return CreateMaybeMessage<ListSint64Double>(NULL);
  }

  ListSint64Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Double& from);
  void MergeFrom(const ListSint64Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Float) */ {
 public:
  ListSint64Float();
  virtual ~ListSint64Float();

  ListSint64Float(const ListSint64Float& from);

  inline ListSint64Float& operator=(const ListSint64Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Float(ListSint64Float&& from) noexcept
    : ListSint64Float() {
    *this = ::std::move(from);
  }

  inline ListSint64Float& operator=(ListSint64Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Float* internal_default_instance() {
    return reinterpret_cast<const ListSint64Float*>(
               &_ListSint64Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(ListSint64Float* other);
  friend void swap(ListSint64Float& a, ListSint64Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Float* New() const final {
    return CreateMaybeMessage<ListSint64Float>(NULL);
  }

  ListSint64Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Float& from);
  void MergeFrom(const ListSint64Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Int32) */ {
 public:
  ListSint64Int32();
  virtual ~ListSint64Int32();

  ListSint64Int32(const ListSint64Int32& from);

  inline ListSint64Int32& operator=(const ListSint64Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Int32(ListSint64Int32&& from) noexcept
    : ListSint64Int32() {
    *this = ::std::move(from);
  }

  inline ListSint64Int32& operator=(ListSint64Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Int32* internal_default_instance() {
    return reinterpret_cast<const ListSint64Int32*>(
               &_ListSint64Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(ListSint64Int32* other);
  friend void swap(ListSint64Int32& a, ListSint64Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Int32* New() const final {
    return CreateMaybeMessage<ListSint64Int32>(NULL);
  }

  ListSint64Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Int32& from);
  void MergeFrom(const ListSint64Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Int64) */ {
 public:
  ListSint64Int64();
  virtual ~ListSint64Int64();

  ListSint64Int64(const ListSint64Int64& from);

  inline ListSint64Int64& operator=(const ListSint64Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Int64(ListSint64Int64&& from) noexcept
    : ListSint64Int64() {
    *this = ::std::move(from);
  }

  inline ListSint64Int64& operator=(ListSint64Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Int64* internal_default_instance() {
    return reinterpret_cast<const ListSint64Int64*>(
               &_ListSint64Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(ListSint64Int64* other);
  friend void swap(ListSint64Int64& a, ListSint64Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Int64* New() const final {
    return CreateMaybeMessage<ListSint64Int64>(NULL);
  }

  ListSint64Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Int64& from);
  void MergeFrom(const ListSint64Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Uint32) */ {
 public:
  ListSint64Uint32();
  virtual ~ListSint64Uint32();

  ListSint64Uint32(const ListSint64Uint32& from);

  inline ListSint64Uint32& operator=(const ListSint64Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Uint32(ListSint64Uint32&& from) noexcept
    : ListSint64Uint32() {
    *this = ::std::move(from);
  }

  inline ListSint64Uint32& operator=(ListSint64Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Uint32* internal_default_instance() {
    return reinterpret_cast<const ListSint64Uint32*>(
               &_ListSint64Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(ListSint64Uint32* other);
  friend void swap(ListSint64Uint32& a, ListSint64Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Uint32* New() const final {
    return CreateMaybeMessage<ListSint64Uint32>(NULL);
  }

  ListSint64Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Uint32& from);
  void MergeFrom(const ListSint64Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Uint64) */ {
 public:
  ListSint64Uint64();
  virtual ~ListSint64Uint64();

  ListSint64Uint64(const ListSint64Uint64& from);

  inline ListSint64Uint64& operator=(const ListSint64Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Uint64(ListSint64Uint64&& from) noexcept
    : ListSint64Uint64() {
    *this = ::std::move(from);
  }

  inline ListSint64Uint64& operator=(ListSint64Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Uint64* internal_default_instance() {
    return reinterpret_cast<const ListSint64Uint64*>(
               &_ListSint64Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(ListSint64Uint64* other);
  friend void swap(ListSint64Uint64& a, ListSint64Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Uint64* New() const final {
    return CreateMaybeMessage<ListSint64Uint64>(NULL);
  }

  ListSint64Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Uint64& from);
  void MergeFrom(const ListSint64Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Sint32) */ {
 public:
  ListSint64Sint32();
  virtual ~ListSint64Sint32();

  ListSint64Sint32(const ListSint64Sint32& from);

  inline ListSint64Sint32& operator=(const ListSint64Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Sint32(ListSint64Sint32&& from) noexcept
    : ListSint64Sint32() {
    *this = ::std::move(from);
  }

  inline ListSint64Sint32& operator=(ListSint64Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Sint32* internal_default_instance() {
    return reinterpret_cast<const ListSint64Sint32*>(
               &_ListSint64Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(ListSint64Sint32* other);
  friend void swap(ListSint64Sint32& a, ListSint64Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Sint32* New() const final {
    return CreateMaybeMessage<ListSint64Sint32>(NULL);
  }

  ListSint64Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Sint32& from);
  void MergeFrom(const ListSint64Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Sint64) */ {
 public:
  ListSint64Sint64();
  virtual ~ListSint64Sint64();

  ListSint64Sint64(const ListSint64Sint64& from);

  inline ListSint64Sint64& operator=(const ListSint64Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Sint64(ListSint64Sint64&& from) noexcept
    : ListSint64Sint64() {
    *this = ::std::move(from);
  }

  inline ListSint64Sint64& operator=(ListSint64Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Sint64* internal_default_instance() {
    return reinterpret_cast<const ListSint64Sint64*>(
               &_ListSint64Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(ListSint64Sint64* other);
  friend void swap(ListSint64Sint64& a, ListSint64Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Sint64* New() const final {
    return CreateMaybeMessage<ListSint64Sint64>(NULL);
  }

  ListSint64Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Sint64& from);
  void MergeFrom(const ListSint64Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Fixed32) */ {
 public:
  ListSint64Fixed32();
  virtual ~ListSint64Fixed32();

  ListSint64Fixed32(const ListSint64Fixed32& from);

  inline ListSint64Fixed32& operator=(const ListSint64Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Fixed32(ListSint64Fixed32&& from) noexcept
    : ListSint64Fixed32() {
    *this = ::std::move(from);
  }

  inline ListSint64Fixed32& operator=(ListSint64Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListSint64Fixed32*>(
               &_ListSint64Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(ListSint64Fixed32* other);
  friend void swap(ListSint64Fixed32& a, ListSint64Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Fixed32* New() const final {
    return CreateMaybeMessage<ListSint64Fixed32>(NULL);
  }

  ListSint64Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Fixed32& from);
  void MergeFrom(const ListSint64Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Fixed64) */ {
 public:
  ListSint64Fixed64();
  virtual ~ListSint64Fixed64();

  ListSint64Fixed64(const ListSint64Fixed64& from);

  inline ListSint64Fixed64& operator=(const ListSint64Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Fixed64(ListSint64Fixed64&& from) noexcept
    : ListSint64Fixed64() {
    *this = ::std::move(from);
  }

  inline ListSint64Fixed64& operator=(ListSint64Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListSint64Fixed64*>(
               &_ListSint64Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(ListSint64Fixed64* other);
  friend void swap(ListSint64Fixed64& a, ListSint64Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Fixed64* New() const final {
    return CreateMaybeMessage<ListSint64Fixed64>(NULL);
  }

  ListSint64Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Fixed64& from);
  void MergeFrom(const ListSint64Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Sfixed32) */ {
 public:
  ListSint64Sfixed32();
  virtual ~ListSint64Sfixed32();

  ListSint64Sfixed32(const ListSint64Sfixed32& from);

  inline ListSint64Sfixed32& operator=(const ListSint64Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Sfixed32(ListSint64Sfixed32&& from) noexcept
    : ListSint64Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListSint64Sfixed32& operator=(ListSint64Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListSint64Sfixed32*>(
               &_ListSint64Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(ListSint64Sfixed32* other);
  friend void swap(ListSint64Sfixed32& a, ListSint64Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Sfixed32* New() const final {
    return CreateMaybeMessage<ListSint64Sfixed32>(NULL);
  }

  ListSint64Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Sfixed32& from);
  void MergeFrom(const ListSint64Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Sfixed64) */ {
 public:
  ListSint64Sfixed64();
  virtual ~ListSint64Sfixed64();

  ListSint64Sfixed64(const ListSint64Sfixed64& from);

  inline ListSint64Sfixed64& operator=(const ListSint64Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Sfixed64(ListSint64Sfixed64&& from) noexcept
    : ListSint64Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListSint64Sfixed64& operator=(ListSint64Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListSint64Sfixed64*>(
               &_ListSint64Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(ListSint64Sfixed64* other);
  friend void swap(ListSint64Sfixed64& a, ListSint64Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Sfixed64* New() const final {
    return CreateMaybeMessage<ListSint64Sfixed64>(NULL);
  }

  ListSint64Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Sfixed64& from);
  void MergeFrom(const ListSint64Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Bool) */ {
 public:
  ListSint64Bool();
  virtual ~ListSint64Bool();

  ListSint64Bool(const ListSint64Bool& from);

  inline ListSint64Bool& operator=(const ListSint64Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Bool(ListSint64Bool&& from) noexcept
    : ListSint64Bool() {
    *this = ::std::move(from);
  }

  inline ListSint64Bool& operator=(ListSint64Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Bool* internal_default_instance() {
    return reinterpret_cast<const ListSint64Bool*>(
               &_ListSint64Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(ListSint64Bool* other);
  friend void swap(ListSint64Bool& a, ListSint64Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Bool* New() const final {
    return CreateMaybeMessage<ListSint64Bool>(NULL);
  }

  ListSint64Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Bool& from);
  void MergeFrom(const ListSint64Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64String) */ {
 public:
  ListSint64String();
  virtual ~ListSint64String();

  ListSint64String(const ListSint64String& from);

  inline ListSint64String& operator=(const ListSint64String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64String(ListSint64String&& from) noexcept
    : ListSint64String() {
    *this = ::std::move(from);
  }

  inline ListSint64String& operator=(ListSint64String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64String* internal_default_instance() {
    return reinterpret_cast<const ListSint64String*>(
               &_ListSint64String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  void Swap(ListSint64String* other);
  friend void swap(ListSint64String& a, ListSint64String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64String* New() const final {
    return CreateMaybeMessage<ListSint64String>(NULL);
  }

  ListSint64String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64String& from);
  void MergeFrom(const ListSint64String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSint64Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSint64Bytes) */ {
 public:
  ListSint64Bytes();
  virtual ~ListSint64Bytes();

  ListSint64Bytes(const ListSint64Bytes& from);

  inline ListSint64Bytes& operator=(const ListSint64Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSint64Bytes(ListSint64Bytes&& from) noexcept
    : ListSint64Bytes() {
    *this = ::std::move(from);
  }

  inline ListSint64Bytes& operator=(ListSint64Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSint64Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSint64Bytes* internal_default_instance() {
    return reinterpret_cast<const ListSint64Bytes*>(
               &_ListSint64Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  void Swap(ListSint64Bytes* other);
  friend void swap(ListSint64Bytes& a, ListSint64Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSint64Bytes* New() const final {
    return CreateMaybeMessage<ListSint64Bytes>(NULL);
  }

  ListSint64Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSint64Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSint64Bytes& from);
  void MergeFrom(const ListSint64Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSint64Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSint64Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Double) */ {
 public:
  ListFixed32Double();
  virtual ~ListFixed32Double();

  ListFixed32Double(const ListFixed32Double& from);

  inline ListFixed32Double& operator=(const ListFixed32Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Double(ListFixed32Double&& from) noexcept
    : ListFixed32Double() {
    *this = ::std::move(from);
  }

  inline ListFixed32Double& operator=(ListFixed32Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Double* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Double*>(
               &_ListFixed32Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  void Swap(ListFixed32Double* other);
  friend void swap(ListFixed32Double& a, ListFixed32Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Double* New() const final {
    return CreateMaybeMessage<ListFixed32Double>(NULL);
  }

  ListFixed32Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Double& from);
  void MergeFrom(const ListFixed32Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Float) */ {
 public:
  ListFixed32Float();
  virtual ~ListFixed32Float();

  ListFixed32Float(const ListFixed32Float& from);

  inline ListFixed32Float& operator=(const ListFixed32Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Float(ListFixed32Float&& from) noexcept
    : ListFixed32Float() {
    *this = ::std::move(from);
  }

  inline ListFixed32Float& operator=(ListFixed32Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Float* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Float*>(
               &_ListFixed32Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  void Swap(ListFixed32Float* other);
  friend void swap(ListFixed32Float& a, ListFixed32Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Float* New() const final {
    return CreateMaybeMessage<ListFixed32Float>(NULL);
  }

  ListFixed32Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Float& from);
  void MergeFrom(const ListFixed32Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Int32) */ {
 public:
  ListFixed32Int32();
  virtual ~ListFixed32Int32();

  ListFixed32Int32(const ListFixed32Int32& from);

  inline ListFixed32Int32& operator=(const ListFixed32Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Int32(ListFixed32Int32&& from) noexcept
    : ListFixed32Int32() {
    *this = ::std::move(from);
  }

  inline ListFixed32Int32& operator=(ListFixed32Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Int32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Int32*>(
               &_ListFixed32Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  void Swap(ListFixed32Int32* other);
  friend void swap(ListFixed32Int32& a, ListFixed32Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Int32* New() const final {
    return CreateMaybeMessage<ListFixed32Int32>(NULL);
  }

  ListFixed32Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Int32& from);
  void MergeFrom(const ListFixed32Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Int64) */ {
 public:
  ListFixed32Int64();
  virtual ~ListFixed32Int64();

  ListFixed32Int64(const ListFixed32Int64& from);

  inline ListFixed32Int64& operator=(const ListFixed32Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Int64(ListFixed32Int64&& from) noexcept
    : ListFixed32Int64() {
    *this = ::std::move(from);
  }

  inline ListFixed32Int64& operator=(ListFixed32Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Int64* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Int64*>(
               &_ListFixed32Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  void Swap(ListFixed32Int64* other);
  friend void swap(ListFixed32Int64& a, ListFixed32Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Int64* New() const final {
    return CreateMaybeMessage<ListFixed32Int64>(NULL);
  }

  ListFixed32Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Int64& from);
  void MergeFrom(const ListFixed32Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Uint32) */ {
 public:
  ListFixed32Uint32();
  virtual ~ListFixed32Uint32();

  ListFixed32Uint32(const ListFixed32Uint32& from);

  inline ListFixed32Uint32& operator=(const ListFixed32Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Uint32(ListFixed32Uint32&& from) noexcept
    : ListFixed32Uint32() {
    *this = ::std::move(from);
  }

  inline ListFixed32Uint32& operator=(ListFixed32Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Uint32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Uint32*>(
               &_ListFixed32Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  void Swap(ListFixed32Uint32* other);
  friend void swap(ListFixed32Uint32& a, ListFixed32Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Uint32* New() const final {
    return CreateMaybeMessage<ListFixed32Uint32>(NULL);
  }

  ListFixed32Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Uint32& from);
  void MergeFrom(const ListFixed32Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Uint64) */ {
 public:
  ListFixed32Uint64();
  virtual ~ListFixed32Uint64();

  ListFixed32Uint64(const ListFixed32Uint64& from);

  inline ListFixed32Uint64& operator=(const ListFixed32Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Uint64(ListFixed32Uint64&& from) noexcept
    : ListFixed32Uint64() {
    *this = ::std::move(from);
  }

  inline ListFixed32Uint64& operator=(ListFixed32Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Uint64* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Uint64*>(
               &_ListFixed32Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  void Swap(ListFixed32Uint64* other);
  friend void swap(ListFixed32Uint64& a, ListFixed32Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Uint64* New() const final {
    return CreateMaybeMessage<ListFixed32Uint64>(NULL);
  }

  ListFixed32Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Uint64& from);
  void MergeFrom(const ListFixed32Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Sint32) */ {
 public:
  ListFixed32Sint32();
  virtual ~ListFixed32Sint32();

  ListFixed32Sint32(const ListFixed32Sint32& from);

  inline ListFixed32Sint32& operator=(const ListFixed32Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Sint32(ListFixed32Sint32&& from) noexcept
    : ListFixed32Sint32() {
    *this = ::std::move(from);
  }

  inline ListFixed32Sint32& operator=(ListFixed32Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Sint32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Sint32*>(
               &_ListFixed32Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  void Swap(ListFixed32Sint32* other);
  friend void swap(ListFixed32Sint32& a, ListFixed32Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Sint32* New() const final {
    return CreateMaybeMessage<ListFixed32Sint32>(NULL);
  }

  ListFixed32Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Sint32& from);
  void MergeFrom(const ListFixed32Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Sint64) */ {
 public:
  ListFixed32Sint64();
  virtual ~ListFixed32Sint64();

  ListFixed32Sint64(const ListFixed32Sint64& from);

  inline ListFixed32Sint64& operator=(const ListFixed32Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Sint64(ListFixed32Sint64&& from) noexcept
    : ListFixed32Sint64() {
    *this = ::std::move(from);
  }

  inline ListFixed32Sint64& operator=(ListFixed32Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Sint64* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Sint64*>(
               &_ListFixed32Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  void Swap(ListFixed32Sint64* other);
  friend void swap(ListFixed32Sint64& a, ListFixed32Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Sint64* New() const final {
    return CreateMaybeMessage<ListFixed32Sint64>(NULL);
  }

  ListFixed32Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Sint64& from);
  void MergeFrom(const ListFixed32Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Fixed32) */ {
 public:
  ListFixed32Fixed32();
  virtual ~ListFixed32Fixed32();

  ListFixed32Fixed32(const ListFixed32Fixed32& from);

  inline ListFixed32Fixed32& operator=(const ListFixed32Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Fixed32(ListFixed32Fixed32&& from) noexcept
    : ListFixed32Fixed32() {
    *this = ::std::move(from);
  }

  inline ListFixed32Fixed32& operator=(ListFixed32Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Fixed32*>(
               &_ListFixed32Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  void Swap(ListFixed32Fixed32* other);
  friend void swap(ListFixed32Fixed32& a, ListFixed32Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Fixed32* New() const final {
    return CreateMaybeMessage<ListFixed32Fixed32>(NULL);
  }

  ListFixed32Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Fixed32& from);
  void MergeFrom(const ListFixed32Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Fixed64) */ {
 public:
  ListFixed32Fixed64();
  virtual ~ListFixed32Fixed64();

  ListFixed32Fixed64(const ListFixed32Fixed64& from);

  inline ListFixed32Fixed64& operator=(const ListFixed32Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Fixed64(ListFixed32Fixed64&& from) noexcept
    : ListFixed32Fixed64() {
    *this = ::std::move(from);
  }

  inline ListFixed32Fixed64& operator=(ListFixed32Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Fixed64*>(
               &_ListFixed32Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  void Swap(ListFixed32Fixed64* other);
  friend void swap(ListFixed32Fixed64& a, ListFixed32Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Fixed64* New() const final {
    return CreateMaybeMessage<ListFixed32Fixed64>(NULL);
  }

  ListFixed32Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Fixed64& from);
  void MergeFrom(const ListFixed32Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Sfixed32) */ {
 public:
  ListFixed32Sfixed32();
  virtual ~ListFixed32Sfixed32();

  ListFixed32Sfixed32(const ListFixed32Sfixed32& from);

  inline ListFixed32Sfixed32& operator=(const ListFixed32Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Sfixed32(ListFixed32Sfixed32&& from) noexcept
    : ListFixed32Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListFixed32Sfixed32& operator=(ListFixed32Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Sfixed32*>(
               &_ListFixed32Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  void Swap(ListFixed32Sfixed32* other);
  friend void swap(ListFixed32Sfixed32& a, ListFixed32Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Sfixed32* New() const final {
    return CreateMaybeMessage<ListFixed32Sfixed32>(NULL);
  }

  ListFixed32Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Sfixed32& from);
  void MergeFrom(const ListFixed32Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Sfixed64) */ {
 public:
  ListFixed32Sfixed64();
  virtual ~ListFixed32Sfixed64();

  ListFixed32Sfixed64(const ListFixed32Sfixed64& from);

  inline ListFixed32Sfixed64& operator=(const ListFixed32Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Sfixed64(ListFixed32Sfixed64&& from) noexcept
    : ListFixed32Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListFixed32Sfixed64& operator=(ListFixed32Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Sfixed64*>(
               &_ListFixed32Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  void Swap(ListFixed32Sfixed64* other);
  friend void swap(ListFixed32Sfixed64& a, ListFixed32Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Sfixed64* New() const final {
    return CreateMaybeMessage<ListFixed32Sfixed64>(NULL);
  }

  ListFixed32Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Sfixed64& from);
  void MergeFrom(const ListFixed32Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Bool) */ {
 public:
  ListFixed32Bool();
  virtual ~ListFixed32Bool();

  ListFixed32Bool(const ListFixed32Bool& from);

  inline ListFixed32Bool& operator=(const ListFixed32Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Bool(ListFixed32Bool&& from) noexcept
    : ListFixed32Bool() {
    *this = ::std::move(from);
  }

  inline ListFixed32Bool& operator=(ListFixed32Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Bool* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Bool*>(
               &_ListFixed32Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  void Swap(ListFixed32Bool* other);
  friend void swap(ListFixed32Bool& a, ListFixed32Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Bool* New() const final {
    return CreateMaybeMessage<ListFixed32Bool>(NULL);
  }

  ListFixed32Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Bool& from);
  void MergeFrom(const ListFixed32Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32String) */ {
 public:
  ListFixed32String();
  virtual ~ListFixed32String();

  ListFixed32String(const ListFixed32String& from);

  inline ListFixed32String& operator=(const ListFixed32String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32String(ListFixed32String&& from) noexcept
    : ListFixed32String() {
    *this = ::std::move(from);
  }

  inline ListFixed32String& operator=(ListFixed32String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32String* internal_default_instance() {
    return reinterpret_cast<const ListFixed32String*>(
               &_ListFixed32String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  void Swap(ListFixed32String* other);
  friend void swap(ListFixed32String& a, ListFixed32String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32String* New() const final {
    return CreateMaybeMessage<ListFixed32String>(NULL);
  }

  ListFixed32String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32String& from);
  void MergeFrom(const ListFixed32String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed32Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed32Bytes) */ {
 public:
  ListFixed32Bytes();
  virtual ~ListFixed32Bytes();

  ListFixed32Bytes(const ListFixed32Bytes& from);

  inline ListFixed32Bytes& operator=(const ListFixed32Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed32Bytes(ListFixed32Bytes&& from) noexcept
    : ListFixed32Bytes() {
    *this = ::std::move(from);
  }

  inline ListFixed32Bytes& operator=(ListFixed32Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed32Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed32Bytes* internal_default_instance() {
    return reinterpret_cast<const ListFixed32Bytes*>(
               &_ListFixed32Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  void Swap(ListFixed32Bytes* other);
  friend void swap(ListFixed32Bytes& a, ListFixed32Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed32Bytes* New() const final {
    return CreateMaybeMessage<ListFixed32Bytes>(NULL);
  }

  ListFixed32Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed32Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed32Bytes& from);
  void MergeFrom(const ListFixed32Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed32Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint32 k(int index) const;
  void set_k(int index, ::google::protobuf::uint32 value);
  void add_k(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed32Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Double) */ {
 public:
  ListFixed64Double();
  virtual ~ListFixed64Double();

  ListFixed64Double(const ListFixed64Double& from);

  inline ListFixed64Double& operator=(const ListFixed64Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Double(ListFixed64Double&& from) noexcept
    : ListFixed64Double() {
    *this = ::std::move(from);
  }

  inline ListFixed64Double& operator=(ListFixed64Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Double* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Double*>(
               &_ListFixed64Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  void Swap(ListFixed64Double* other);
  friend void swap(ListFixed64Double& a, ListFixed64Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Double* New() const final {
    return CreateMaybeMessage<ListFixed64Double>(NULL);
  }

  ListFixed64Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Double& from);
  void MergeFrom(const ListFixed64Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Float) */ {
 public:
  ListFixed64Float();
  virtual ~ListFixed64Float();

  ListFixed64Float(const ListFixed64Float& from);

  inline ListFixed64Float& operator=(const ListFixed64Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Float(ListFixed64Float&& from) noexcept
    : ListFixed64Float() {
    *this = ::std::move(from);
  }

  inline ListFixed64Float& operator=(ListFixed64Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Float* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Float*>(
               &_ListFixed64Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  void Swap(ListFixed64Float* other);
  friend void swap(ListFixed64Float& a, ListFixed64Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Float* New() const final {
    return CreateMaybeMessage<ListFixed64Float>(NULL);
  }

  ListFixed64Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Float& from);
  void MergeFrom(const ListFixed64Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Int32) */ {
 public:
  ListFixed64Int32();
  virtual ~ListFixed64Int32();

  ListFixed64Int32(const ListFixed64Int32& from);

  inline ListFixed64Int32& operator=(const ListFixed64Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Int32(ListFixed64Int32&& from) noexcept
    : ListFixed64Int32() {
    *this = ::std::move(from);
  }

  inline ListFixed64Int32& operator=(ListFixed64Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Int32* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Int32*>(
               &_ListFixed64Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  void Swap(ListFixed64Int32* other);
  friend void swap(ListFixed64Int32& a, ListFixed64Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Int32* New() const final {
    return CreateMaybeMessage<ListFixed64Int32>(NULL);
  }

  ListFixed64Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Int32& from);
  void MergeFrom(const ListFixed64Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Int64) */ {
 public:
  ListFixed64Int64();
  virtual ~ListFixed64Int64();

  ListFixed64Int64(const ListFixed64Int64& from);

  inline ListFixed64Int64& operator=(const ListFixed64Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Int64(ListFixed64Int64&& from) noexcept
    : ListFixed64Int64() {
    *this = ::std::move(from);
  }

  inline ListFixed64Int64& operator=(ListFixed64Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Int64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Int64*>(
               &_ListFixed64Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  void Swap(ListFixed64Int64* other);
  friend void swap(ListFixed64Int64& a, ListFixed64Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Int64* New() const final {
    return CreateMaybeMessage<ListFixed64Int64>(NULL);
  }

  ListFixed64Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Int64& from);
  void MergeFrom(const ListFixed64Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Uint32) */ {
 public:
  ListFixed64Uint32();
  virtual ~ListFixed64Uint32();

  ListFixed64Uint32(const ListFixed64Uint32& from);

  inline ListFixed64Uint32& operator=(const ListFixed64Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Uint32(ListFixed64Uint32&& from) noexcept
    : ListFixed64Uint32() {
    *this = ::std::move(from);
  }

  inline ListFixed64Uint32& operator=(ListFixed64Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Uint32* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Uint32*>(
               &_ListFixed64Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  void Swap(ListFixed64Uint32* other);
  friend void swap(ListFixed64Uint32& a, ListFixed64Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Uint32* New() const final {
    return CreateMaybeMessage<ListFixed64Uint32>(NULL);
  }

  ListFixed64Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Uint32& from);
  void MergeFrom(const ListFixed64Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Uint64) */ {
 public:
  ListFixed64Uint64();
  virtual ~ListFixed64Uint64();

  ListFixed64Uint64(const ListFixed64Uint64& from);

  inline ListFixed64Uint64& operator=(const ListFixed64Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Uint64(ListFixed64Uint64&& from) noexcept
    : ListFixed64Uint64() {
    *this = ::std::move(from);
  }

  inline ListFixed64Uint64& operator=(ListFixed64Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Uint64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Uint64*>(
               &_ListFixed64Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  void Swap(ListFixed64Uint64* other);
  friend void swap(ListFixed64Uint64& a, ListFixed64Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Uint64* New() const final {
    return CreateMaybeMessage<ListFixed64Uint64>(NULL);
  }

  ListFixed64Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Uint64& from);
  void MergeFrom(const ListFixed64Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Sint32) */ {
 public:
  ListFixed64Sint32();
  virtual ~ListFixed64Sint32();

  ListFixed64Sint32(const ListFixed64Sint32& from);

  inline ListFixed64Sint32& operator=(const ListFixed64Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Sint32(ListFixed64Sint32&& from) noexcept
    : ListFixed64Sint32() {
    *this = ::std::move(from);
  }

  inline ListFixed64Sint32& operator=(ListFixed64Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Sint32* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Sint32*>(
               &_ListFixed64Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  void Swap(ListFixed64Sint32* other);
  friend void swap(ListFixed64Sint32& a, ListFixed64Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Sint32* New() const final {
    return CreateMaybeMessage<ListFixed64Sint32>(NULL);
  }

  ListFixed64Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Sint32& from);
  void MergeFrom(const ListFixed64Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Sint64) */ {
 public:
  ListFixed64Sint64();
  virtual ~ListFixed64Sint64();

  ListFixed64Sint64(const ListFixed64Sint64& from);

  inline ListFixed64Sint64& operator=(const ListFixed64Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Sint64(ListFixed64Sint64&& from) noexcept
    : ListFixed64Sint64() {
    *this = ::std::move(from);
  }

  inline ListFixed64Sint64& operator=(ListFixed64Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Sint64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Sint64*>(
               &_ListFixed64Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  void Swap(ListFixed64Sint64* other);
  friend void swap(ListFixed64Sint64& a, ListFixed64Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Sint64* New() const final {
    return CreateMaybeMessage<ListFixed64Sint64>(NULL);
  }

  ListFixed64Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Sint64& from);
  void MergeFrom(const ListFixed64Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Fixed32) */ {
 public:
  ListFixed64Fixed32();
  virtual ~ListFixed64Fixed32();

  ListFixed64Fixed32(const ListFixed64Fixed32& from);

  inline ListFixed64Fixed32& operator=(const ListFixed64Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Fixed32(ListFixed64Fixed32&& from) noexcept
    : ListFixed64Fixed32() {
    *this = ::std::move(from);
  }

  inline ListFixed64Fixed32& operator=(ListFixed64Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Fixed32*>(
               &_ListFixed64Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  void Swap(ListFixed64Fixed32* other);
  friend void swap(ListFixed64Fixed32& a, ListFixed64Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Fixed32* New() const final {
    return CreateMaybeMessage<ListFixed64Fixed32>(NULL);
  }

  ListFixed64Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Fixed32& from);
  void MergeFrom(const ListFixed64Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Fixed64) */ {
 public:
  ListFixed64Fixed64();
  virtual ~ListFixed64Fixed64();

  ListFixed64Fixed64(const ListFixed64Fixed64& from);

  inline ListFixed64Fixed64& operator=(const ListFixed64Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Fixed64(ListFixed64Fixed64&& from) noexcept
    : ListFixed64Fixed64() {
    *this = ::std::move(from);
  }

  inline ListFixed64Fixed64& operator=(ListFixed64Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Fixed64*>(
               &_ListFixed64Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  void Swap(ListFixed64Fixed64* other);
  friend void swap(ListFixed64Fixed64& a, ListFixed64Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Fixed64* New() const final {
    return CreateMaybeMessage<ListFixed64Fixed64>(NULL);
  }

  ListFixed64Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Fixed64& from);
  void MergeFrom(const ListFixed64Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Sfixed32) */ {
 public:
  ListFixed64Sfixed32();
  virtual ~ListFixed64Sfixed32();

  ListFixed64Sfixed32(const ListFixed64Sfixed32& from);

  inline ListFixed64Sfixed32& operator=(const ListFixed64Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Sfixed32(ListFixed64Sfixed32&& from) noexcept
    : ListFixed64Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListFixed64Sfixed32& operator=(ListFixed64Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Sfixed32*>(
               &_ListFixed64Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  void Swap(ListFixed64Sfixed32* other);
  friend void swap(ListFixed64Sfixed32& a, ListFixed64Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Sfixed32* New() const final {
    return CreateMaybeMessage<ListFixed64Sfixed32>(NULL);
  }

  ListFixed64Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Sfixed32& from);
  void MergeFrom(const ListFixed64Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Sfixed64) */ {
 public:
  ListFixed64Sfixed64();
  virtual ~ListFixed64Sfixed64();

  ListFixed64Sfixed64(const ListFixed64Sfixed64& from);

  inline ListFixed64Sfixed64& operator=(const ListFixed64Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Sfixed64(ListFixed64Sfixed64&& from) noexcept
    : ListFixed64Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListFixed64Sfixed64& operator=(ListFixed64Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Sfixed64*>(
               &_ListFixed64Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  void Swap(ListFixed64Sfixed64* other);
  friend void swap(ListFixed64Sfixed64& a, ListFixed64Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Sfixed64* New() const final {
    return CreateMaybeMessage<ListFixed64Sfixed64>(NULL);
  }

  ListFixed64Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Sfixed64& from);
  void MergeFrom(const ListFixed64Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Bool) */ {
 public:
  ListFixed64Bool();
  virtual ~ListFixed64Bool();

  ListFixed64Bool(const ListFixed64Bool& from);

  inline ListFixed64Bool& operator=(const ListFixed64Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Bool(ListFixed64Bool&& from) noexcept
    : ListFixed64Bool() {
    *this = ::std::move(from);
  }

  inline ListFixed64Bool& operator=(ListFixed64Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Bool* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Bool*>(
               &_ListFixed64Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  void Swap(ListFixed64Bool* other);
  friend void swap(ListFixed64Bool& a, ListFixed64Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Bool* New() const final {
    return CreateMaybeMessage<ListFixed64Bool>(NULL);
  }

  ListFixed64Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Bool& from);
  void MergeFrom(const ListFixed64Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64String) */ {
 public:
  ListFixed64String();
  virtual ~ListFixed64String();

  ListFixed64String(const ListFixed64String& from);

  inline ListFixed64String& operator=(const ListFixed64String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64String(ListFixed64String&& from) noexcept
    : ListFixed64String() {
    *this = ::std::move(from);
  }

  inline ListFixed64String& operator=(ListFixed64String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64String* internal_default_instance() {
    return reinterpret_cast<const ListFixed64String*>(
               &_ListFixed64String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  void Swap(ListFixed64String* other);
  friend void swap(ListFixed64String& a, ListFixed64String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64String* New() const final {
    return CreateMaybeMessage<ListFixed64String>(NULL);
  }

  ListFixed64String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64String& from);
  void MergeFrom(const ListFixed64String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFixed64Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFixed64Bytes) */ {
 public:
  ListFixed64Bytes();
  virtual ~ListFixed64Bytes();

  ListFixed64Bytes(const ListFixed64Bytes& from);

  inline ListFixed64Bytes& operator=(const ListFixed64Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFixed64Bytes(ListFixed64Bytes&& from) noexcept
    : ListFixed64Bytes() {
    *this = ::std::move(from);
  }

  inline ListFixed64Bytes& operator=(ListFixed64Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFixed64Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFixed64Bytes* internal_default_instance() {
    return reinterpret_cast<const ListFixed64Bytes*>(
               &_ListFixed64Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  void Swap(ListFixed64Bytes* other);
  friend void swap(ListFixed64Bytes& a, ListFixed64Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFixed64Bytes* New() const final {
    return CreateMaybeMessage<ListFixed64Bytes>(NULL);
  }

  ListFixed64Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFixed64Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFixed64Bytes& from);
  void MergeFrom(const ListFixed64Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFixed64Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::uint64 k(int index) const;
  void set_k(int index, ::google::protobuf::uint64 value);
  void add_k(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFixed64Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Double) */ {
 public:
  ListSfixed32Double();
  virtual ~ListSfixed32Double();

  ListSfixed32Double(const ListSfixed32Double& from);

  inline ListSfixed32Double& operator=(const ListSfixed32Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Double(ListSfixed32Double&& from) noexcept
    : ListSfixed32Double() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Double& operator=(ListSfixed32Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Double* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Double*>(
               &_ListSfixed32Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  void Swap(ListSfixed32Double* other);
  friend void swap(ListSfixed32Double& a, ListSfixed32Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Double* New() const final {
    return CreateMaybeMessage<ListSfixed32Double>(NULL);
  }

  ListSfixed32Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Double& from);
  void MergeFrom(const ListSfixed32Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Float) */ {
 public:
  ListSfixed32Float();
  virtual ~ListSfixed32Float();

  ListSfixed32Float(const ListSfixed32Float& from);

  inline ListSfixed32Float& operator=(const ListSfixed32Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Float(ListSfixed32Float&& from) noexcept
    : ListSfixed32Float() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Float& operator=(ListSfixed32Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Float* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Float*>(
               &_ListSfixed32Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  void Swap(ListSfixed32Float* other);
  friend void swap(ListSfixed32Float& a, ListSfixed32Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Float* New() const final {
    return CreateMaybeMessage<ListSfixed32Float>(NULL);
  }

  ListSfixed32Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Float& from);
  void MergeFrom(const ListSfixed32Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Int32) */ {
 public:
  ListSfixed32Int32();
  virtual ~ListSfixed32Int32();

  ListSfixed32Int32(const ListSfixed32Int32& from);

  inline ListSfixed32Int32& operator=(const ListSfixed32Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Int32(ListSfixed32Int32&& from) noexcept
    : ListSfixed32Int32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Int32& operator=(ListSfixed32Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Int32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Int32*>(
               &_ListSfixed32Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  void Swap(ListSfixed32Int32* other);
  friend void swap(ListSfixed32Int32& a, ListSfixed32Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Int32* New() const final {
    return CreateMaybeMessage<ListSfixed32Int32>(NULL);
  }

  ListSfixed32Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Int32& from);
  void MergeFrom(const ListSfixed32Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Int64) */ {
 public:
  ListSfixed32Int64();
  virtual ~ListSfixed32Int64();

  ListSfixed32Int64(const ListSfixed32Int64& from);

  inline ListSfixed32Int64& operator=(const ListSfixed32Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Int64(ListSfixed32Int64&& from) noexcept
    : ListSfixed32Int64() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Int64& operator=(ListSfixed32Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Int64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Int64*>(
               &_ListSfixed32Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  void Swap(ListSfixed32Int64* other);
  friend void swap(ListSfixed32Int64& a, ListSfixed32Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Int64* New() const final {
    return CreateMaybeMessage<ListSfixed32Int64>(NULL);
  }

  ListSfixed32Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Int64& from);
  void MergeFrom(const ListSfixed32Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Uint32) */ {
 public:
  ListSfixed32Uint32();
  virtual ~ListSfixed32Uint32();

  ListSfixed32Uint32(const ListSfixed32Uint32& from);

  inline ListSfixed32Uint32& operator=(const ListSfixed32Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Uint32(ListSfixed32Uint32&& from) noexcept
    : ListSfixed32Uint32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Uint32& operator=(ListSfixed32Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Uint32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Uint32*>(
               &_ListSfixed32Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  void Swap(ListSfixed32Uint32* other);
  friend void swap(ListSfixed32Uint32& a, ListSfixed32Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Uint32* New() const final {
    return CreateMaybeMessage<ListSfixed32Uint32>(NULL);
  }

  ListSfixed32Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Uint32& from);
  void MergeFrom(const ListSfixed32Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Uint64) */ {
 public:
  ListSfixed32Uint64();
  virtual ~ListSfixed32Uint64();

  ListSfixed32Uint64(const ListSfixed32Uint64& from);

  inline ListSfixed32Uint64& operator=(const ListSfixed32Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Uint64(ListSfixed32Uint64&& from) noexcept
    : ListSfixed32Uint64() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Uint64& operator=(ListSfixed32Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Uint64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Uint64*>(
               &_ListSfixed32Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  void Swap(ListSfixed32Uint64* other);
  friend void swap(ListSfixed32Uint64& a, ListSfixed32Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Uint64* New() const final {
    return CreateMaybeMessage<ListSfixed32Uint64>(NULL);
  }

  ListSfixed32Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Uint64& from);
  void MergeFrom(const ListSfixed32Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Sint32) */ {
 public:
  ListSfixed32Sint32();
  virtual ~ListSfixed32Sint32();

  ListSfixed32Sint32(const ListSfixed32Sint32& from);

  inline ListSfixed32Sint32& operator=(const ListSfixed32Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Sint32(ListSfixed32Sint32&& from) noexcept
    : ListSfixed32Sint32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Sint32& operator=(ListSfixed32Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Sint32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Sint32*>(
               &_ListSfixed32Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  void Swap(ListSfixed32Sint32* other);
  friend void swap(ListSfixed32Sint32& a, ListSfixed32Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Sint32* New() const final {
    return CreateMaybeMessage<ListSfixed32Sint32>(NULL);
  }

  ListSfixed32Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Sint32& from);
  void MergeFrom(const ListSfixed32Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Sint64) */ {
 public:
  ListSfixed32Sint64();
  virtual ~ListSfixed32Sint64();

  ListSfixed32Sint64(const ListSfixed32Sint64& from);

  inline ListSfixed32Sint64& operator=(const ListSfixed32Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Sint64(ListSfixed32Sint64&& from) noexcept
    : ListSfixed32Sint64() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Sint64& operator=(ListSfixed32Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Sint64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Sint64*>(
               &_ListSfixed32Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  void Swap(ListSfixed32Sint64* other);
  friend void swap(ListSfixed32Sint64& a, ListSfixed32Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Sint64* New() const final {
    return CreateMaybeMessage<ListSfixed32Sint64>(NULL);
  }

  ListSfixed32Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Sint64& from);
  void MergeFrom(const ListSfixed32Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Fixed32) */ {
 public:
  ListSfixed32Fixed32();
  virtual ~ListSfixed32Fixed32();

  ListSfixed32Fixed32(const ListSfixed32Fixed32& from);

  inline ListSfixed32Fixed32& operator=(const ListSfixed32Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Fixed32(ListSfixed32Fixed32&& from) noexcept
    : ListSfixed32Fixed32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Fixed32& operator=(ListSfixed32Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Fixed32*>(
               &_ListSfixed32Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  void Swap(ListSfixed32Fixed32* other);
  friend void swap(ListSfixed32Fixed32& a, ListSfixed32Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Fixed32* New() const final {
    return CreateMaybeMessage<ListSfixed32Fixed32>(NULL);
  }

  ListSfixed32Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Fixed32& from);
  void MergeFrom(const ListSfixed32Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Fixed64) */ {
 public:
  ListSfixed32Fixed64();
  virtual ~ListSfixed32Fixed64();

  ListSfixed32Fixed64(const ListSfixed32Fixed64& from);

  inline ListSfixed32Fixed64& operator=(const ListSfixed32Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Fixed64(ListSfixed32Fixed64&& from) noexcept
    : ListSfixed32Fixed64() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Fixed64& operator=(ListSfixed32Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Fixed64*>(
               &_ListSfixed32Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  void Swap(ListSfixed32Fixed64* other);
  friend void swap(ListSfixed32Fixed64& a, ListSfixed32Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Fixed64* New() const final {
    return CreateMaybeMessage<ListSfixed32Fixed64>(NULL);
  }

  ListSfixed32Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Fixed64& from);
  void MergeFrom(const ListSfixed32Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Sfixed32) */ {
 public:
  ListSfixed32Sfixed32();
  virtual ~ListSfixed32Sfixed32();

  ListSfixed32Sfixed32(const ListSfixed32Sfixed32& from);

  inline ListSfixed32Sfixed32& operator=(const ListSfixed32Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Sfixed32(ListSfixed32Sfixed32&& from) noexcept
    : ListSfixed32Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Sfixed32& operator=(ListSfixed32Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Sfixed32*>(
               &_ListSfixed32Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  void Swap(ListSfixed32Sfixed32* other);
  friend void swap(ListSfixed32Sfixed32& a, ListSfixed32Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Sfixed32* New() const final {
    return CreateMaybeMessage<ListSfixed32Sfixed32>(NULL);
  }

  ListSfixed32Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Sfixed32& from);
  void MergeFrom(const ListSfixed32Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Sfixed64) */ {
 public:
  ListSfixed32Sfixed64();
  virtual ~ListSfixed32Sfixed64();

  ListSfixed32Sfixed64(const ListSfixed32Sfixed64& from);

  inline ListSfixed32Sfixed64& operator=(const ListSfixed32Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Sfixed64(ListSfixed32Sfixed64&& from) noexcept
    : ListSfixed32Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Sfixed64& operator=(ListSfixed32Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Sfixed64*>(
               &_ListSfixed32Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  void Swap(ListSfixed32Sfixed64* other);
  friend void swap(ListSfixed32Sfixed64& a, ListSfixed32Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Sfixed64* New() const final {
    return CreateMaybeMessage<ListSfixed32Sfixed64>(NULL);
  }

  ListSfixed32Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Sfixed64& from);
  void MergeFrom(const ListSfixed32Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Bool) */ {
 public:
  ListSfixed32Bool();
  virtual ~ListSfixed32Bool();

  ListSfixed32Bool(const ListSfixed32Bool& from);

  inline ListSfixed32Bool& operator=(const ListSfixed32Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Bool(ListSfixed32Bool&& from) noexcept
    : ListSfixed32Bool() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Bool& operator=(ListSfixed32Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Bool* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Bool*>(
               &_ListSfixed32Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  void Swap(ListSfixed32Bool* other);
  friend void swap(ListSfixed32Bool& a, ListSfixed32Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Bool* New() const final {
    return CreateMaybeMessage<ListSfixed32Bool>(NULL);
  }

  ListSfixed32Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Bool& from);
  void MergeFrom(const ListSfixed32Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32String) */ {
 public:
  ListSfixed32String();
  virtual ~ListSfixed32String();

  ListSfixed32String(const ListSfixed32String& from);

  inline ListSfixed32String& operator=(const ListSfixed32String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32String(ListSfixed32String&& from) noexcept
    : ListSfixed32String() {
    *this = ::std::move(from);
  }

  inline ListSfixed32String& operator=(ListSfixed32String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32String* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32String*>(
               &_ListSfixed32String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  void Swap(ListSfixed32String* other);
  friend void swap(ListSfixed32String& a, ListSfixed32String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32String* New() const final {
    return CreateMaybeMessage<ListSfixed32String>(NULL);
  }

  ListSfixed32String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32String& from);
  void MergeFrom(const ListSfixed32String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed32Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed32Bytes) */ {
 public:
  ListSfixed32Bytes();
  virtual ~ListSfixed32Bytes();

  ListSfixed32Bytes(const ListSfixed32Bytes& from);

  inline ListSfixed32Bytes& operator=(const ListSfixed32Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed32Bytes(ListSfixed32Bytes&& from) noexcept
    : ListSfixed32Bytes() {
    *this = ::std::move(from);
  }

  inline ListSfixed32Bytes& operator=(ListSfixed32Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed32Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed32Bytes* internal_default_instance() {
    return reinterpret_cast<const ListSfixed32Bytes*>(
               &_ListSfixed32Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  void Swap(ListSfixed32Bytes* other);
  friend void swap(ListSfixed32Bytes& a, ListSfixed32Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed32Bytes* New() const final {
    return CreateMaybeMessage<ListSfixed32Bytes>(NULL);
  }

  ListSfixed32Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed32Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed32Bytes& from);
  void MergeFrom(const ListSfixed32Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed32Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed32 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int32 k(int index) const;
  void set_k(int index, ::google::protobuf::int32 value);
  void add_k(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed32Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Double) */ {
 public:
  ListSfixed64Double();
  virtual ~ListSfixed64Double();

  ListSfixed64Double(const ListSfixed64Double& from);

  inline ListSfixed64Double& operator=(const ListSfixed64Double& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Double(ListSfixed64Double&& from) noexcept
    : ListSfixed64Double() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Double& operator=(ListSfixed64Double&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Double& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Double* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Double*>(
               &_ListSfixed64Double_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  void Swap(ListSfixed64Double* other);
  friend void swap(ListSfixed64Double& a, ListSfixed64Double& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Double* New() const final {
    return CreateMaybeMessage<ListSfixed64Double>(NULL);
  }

  ListSfixed64Double* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Double>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Double& from);
  void MergeFrom(const ListSfixed64Double& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Float) */ {
 public:
  ListSfixed64Float();
  virtual ~ListSfixed64Float();

  ListSfixed64Float(const ListSfixed64Float& from);

  inline ListSfixed64Float& operator=(const ListSfixed64Float& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Float(ListSfixed64Float&& from) noexcept
    : ListSfixed64Float() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Float& operator=(ListSfixed64Float&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Float& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Float* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Float*>(
               &_ListSfixed64Float_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  void Swap(ListSfixed64Float* other);
  friend void swap(ListSfixed64Float& a, ListSfixed64Float& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Float* New() const final {
    return CreateMaybeMessage<ListSfixed64Float>(NULL);
  }

  ListSfixed64Float* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Float>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Float& from);
  void MergeFrom(const ListSfixed64Float& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Int32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Int32) */ {
 public:
  ListSfixed64Int32();
  virtual ~ListSfixed64Int32();

  ListSfixed64Int32(const ListSfixed64Int32& from);

  inline ListSfixed64Int32& operator=(const ListSfixed64Int32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Int32(ListSfixed64Int32&& from) noexcept
    : ListSfixed64Int32() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Int32& operator=(ListSfixed64Int32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Int32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Int32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Int32*>(
               &_ListSfixed64Int32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  void Swap(ListSfixed64Int32* other);
  friend void swap(ListSfixed64Int32& a, ListSfixed64Int32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Int32* New() const final {
    return CreateMaybeMessage<ListSfixed64Int32>(NULL);
  }

  ListSfixed64Int32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Int32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Int32& from);
  void MergeFrom(const ListSfixed64Int32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Int32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Int32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Int64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Int64) */ {
 public:
  ListSfixed64Int64();
  virtual ~ListSfixed64Int64();

  ListSfixed64Int64(const ListSfixed64Int64& from);

  inline ListSfixed64Int64& operator=(const ListSfixed64Int64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Int64(ListSfixed64Int64&& from) noexcept
    : ListSfixed64Int64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Int64& operator=(ListSfixed64Int64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Int64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Int64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Int64*>(
               &_ListSfixed64Int64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  void Swap(ListSfixed64Int64* other);
  friend void swap(ListSfixed64Int64& a, ListSfixed64Int64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Int64* New() const final {
    return CreateMaybeMessage<ListSfixed64Int64>(NULL);
  }

  ListSfixed64Int64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Int64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Int64& from);
  void MergeFrom(const ListSfixed64Int64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Int64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Int64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Uint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Uint32) */ {
 public:
  ListSfixed64Uint32();
  virtual ~ListSfixed64Uint32();

  ListSfixed64Uint32(const ListSfixed64Uint32& from);

  inline ListSfixed64Uint32& operator=(const ListSfixed64Uint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Uint32(ListSfixed64Uint32&& from) noexcept
    : ListSfixed64Uint32() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Uint32& operator=(ListSfixed64Uint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Uint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Uint32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Uint32*>(
               &_ListSfixed64Uint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  void Swap(ListSfixed64Uint32* other);
  friend void swap(ListSfixed64Uint32& a, ListSfixed64Uint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Uint32* New() const final {
    return CreateMaybeMessage<ListSfixed64Uint32>(NULL);
  }

  ListSfixed64Uint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Uint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Uint32& from);
  void MergeFrom(const ListSfixed64Uint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Uint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Uint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Uint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Uint64) */ {
 public:
  ListSfixed64Uint64();
  virtual ~ListSfixed64Uint64();

  ListSfixed64Uint64(const ListSfixed64Uint64& from);

  inline ListSfixed64Uint64& operator=(const ListSfixed64Uint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Uint64(ListSfixed64Uint64&& from) noexcept
    : ListSfixed64Uint64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Uint64& operator=(ListSfixed64Uint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Uint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Uint64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Uint64*>(
               &_ListSfixed64Uint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  void Swap(ListSfixed64Uint64* other);
  friend void swap(ListSfixed64Uint64& a, ListSfixed64Uint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Uint64* New() const final {
    return CreateMaybeMessage<ListSfixed64Uint64>(NULL);
  }

  ListSfixed64Uint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Uint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Uint64& from);
  void MergeFrom(const ListSfixed64Uint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Uint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Uint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Sint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Sint32) */ {
 public:
  ListSfixed64Sint32();
  virtual ~ListSfixed64Sint32();

  ListSfixed64Sint32(const ListSfixed64Sint32& from);

  inline ListSfixed64Sint32& operator=(const ListSfixed64Sint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Sint32(ListSfixed64Sint32&& from) noexcept
    : ListSfixed64Sint32() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Sint32& operator=(ListSfixed64Sint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Sint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Sint32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Sint32*>(
               &_ListSfixed64Sint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  void Swap(ListSfixed64Sint32* other);
  friend void swap(ListSfixed64Sint32& a, ListSfixed64Sint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Sint32* New() const final {
    return CreateMaybeMessage<ListSfixed64Sint32>(NULL);
  }

  ListSfixed64Sint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Sint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Sint32& from);
  void MergeFrom(const ListSfixed64Sint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Sint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Sint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Sint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Sint64) */ {
 public:
  ListSfixed64Sint64();
  virtual ~ListSfixed64Sint64();

  ListSfixed64Sint64(const ListSfixed64Sint64& from);

  inline ListSfixed64Sint64& operator=(const ListSfixed64Sint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Sint64(ListSfixed64Sint64&& from) noexcept
    : ListSfixed64Sint64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Sint64& operator=(ListSfixed64Sint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Sint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Sint64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Sint64*>(
               &_ListSfixed64Sint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  void Swap(ListSfixed64Sint64* other);
  friend void swap(ListSfixed64Sint64& a, ListSfixed64Sint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Sint64* New() const final {
    return CreateMaybeMessage<ListSfixed64Sint64>(NULL);
  }

  ListSfixed64Sint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Sint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Sint64& from);
  void MergeFrom(const ListSfixed64Sint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Sint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Sint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Fixed32) */ {
 public:
  ListSfixed64Fixed32();
  virtual ~ListSfixed64Fixed32();

  ListSfixed64Fixed32(const ListSfixed64Fixed32& from);

  inline ListSfixed64Fixed32& operator=(const ListSfixed64Fixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Fixed32(ListSfixed64Fixed32&& from) noexcept
    : ListSfixed64Fixed32() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Fixed32& operator=(ListSfixed64Fixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Fixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Fixed32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Fixed32*>(
               &_ListSfixed64Fixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  void Swap(ListSfixed64Fixed32* other);
  friend void swap(ListSfixed64Fixed32& a, ListSfixed64Fixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Fixed32* New() const final {
    return CreateMaybeMessage<ListSfixed64Fixed32>(NULL);
  }

  ListSfixed64Fixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Fixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Fixed32& from);
  void MergeFrom(const ListSfixed64Fixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Fixed64) */ {
 public:
  ListSfixed64Fixed64();
  virtual ~ListSfixed64Fixed64();

  ListSfixed64Fixed64(const ListSfixed64Fixed64& from);

  inline ListSfixed64Fixed64& operator=(const ListSfixed64Fixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Fixed64(ListSfixed64Fixed64&& from) noexcept
    : ListSfixed64Fixed64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Fixed64& operator=(ListSfixed64Fixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Fixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Fixed64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Fixed64*>(
               &_ListSfixed64Fixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  void Swap(ListSfixed64Fixed64* other);
  friend void swap(ListSfixed64Fixed64& a, ListSfixed64Fixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Fixed64* New() const final {
    return CreateMaybeMessage<ListSfixed64Fixed64>(NULL);
  }

  ListSfixed64Fixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Fixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Fixed64& from);
  void MergeFrom(const ListSfixed64Fixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Sfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Sfixed32) */ {
 public:
  ListSfixed64Sfixed32();
  virtual ~ListSfixed64Sfixed32();

  ListSfixed64Sfixed32(const ListSfixed64Sfixed32& from);

  inline ListSfixed64Sfixed32& operator=(const ListSfixed64Sfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Sfixed32(ListSfixed64Sfixed32&& from) noexcept
    : ListSfixed64Sfixed32() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Sfixed32& operator=(ListSfixed64Sfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Sfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Sfixed32* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Sfixed32*>(
               &_ListSfixed64Sfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  void Swap(ListSfixed64Sfixed32* other);
  friend void swap(ListSfixed64Sfixed32& a, ListSfixed64Sfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Sfixed32* New() const final {
    return CreateMaybeMessage<ListSfixed64Sfixed32>(NULL);
  }

  ListSfixed64Sfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Sfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Sfixed32& from);
  void MergeFrom(const ListSfixed64Sfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Sfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Sfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Sfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Sfixed64) */ {
 public:
  ListSfixed64Sfixed64();
  virtual ~ListSfixed64Sfixed64();

  ListSfixed64Sfixed64(const ListSfixed64Sfixed64& from);

  inline ListSfixed64Sfixed64& operator=(const ListSfixed64Sfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Sfixed64(ListSfixed64Sfixed64&& from) noexcept
    : ListSfixed64Sfixed64() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Sfixed64& operator=(ListSfixed64Sfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Sfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Sfixed64* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Sfixed64*>(
               &_ListSfixed64Sfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    191;

  void Swap(ListSfixed64Sfixed64* other);
  friend void swap(ListSfixed64Sfixed64& a, ListSfixed64Sfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Sfixed64* New() const final {
    return CreateMaybeMessage<ListSfixed64Sfixed64>(NULL);
  }

  ListSfixed64Sfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Sfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Sfixed64& from);
  void MergeFrom(const ListSfixed64Sfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Sfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Sfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Bool) */ {
 public:
  ListSfixed64Bool();
  virtual ~ListSfixed64Bool();

  ListSfixed64Bool(const ListSfixed64Bool& from);

  inline ListSfixed64Bool& operator=(const ListSfixed64Bool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Bool(ListSfixed64Bool&& from) noexcept
    : ListSfixed64Bool() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Bool& operator=(ListSfixed64Bool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Bool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Bool* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Bool*>(
               &_ListSfixed64Bool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    192;

  void Swap(ListSfixed64Bool* other);
  friend void swap(ListSfixed64Bool& a, ListSfixed64Bool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Bool* New() const final {
    return CreateMaybeMessage<ListSfixed64Bool>(NULL);
  }

  ListSfixed64Bool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Bool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Bool& from);
  void MergeFrom(const ListSfixed64Bool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64String) */ {
 public:
  ListSfixed64String();
  virtual ~ListSfixed64String();

  ListSfixed64String(const ListSfixed64String& from);

  inline ListSfixed64String& operator=(const ListSfixed64String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64String(ListSfixed64String&& from) noexcept
    : ListSfixed64String() {
    *this = ::std::move(from);
  }

  inline ListSfixed64String& operator=(ListSfixed64String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64String* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64String*>(
               &_ListSfixed64String_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    193;

  void Swap(ListSfixed64String* other);
  friend void swap(ListSfixed64String& a, ListSfixed64String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64String* New() const final {
    return CreateMaybeMessage<ListSfixed64String>(NULL);
  }

  ListSfixed64String* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64String>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64String& from);
  void MergeFrom(const ListSfixed64String& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64String)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListSfixed64Bytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListSfixed64Bytes) */ {
 public:
  ListSfixed64Bytes();
  virtual ~ListSfixed64Bytes();

  ListSfixed64Bytes(const ListSfixed64Bytes& from);

  inline ListSfixed64Bytes& operator=(const ListSfixed64Bytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSfixed64Bytes(ListSfixed64Bytes&& from) noexcept
    : ListSfixed64Bytes() {
    *this = ::std::move(from);
  }

  inline ListSfixed64Bytes& operator=(ListSfixed64Bytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListSfixed64Bytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSfixed64Bytes* internal_default_instance() {
    return reinterpret_cast<const ListSfixed64Bytes*>(
               &_ListSfixed64Bytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    194;

  void Swap(ListSfixed64Bytes* other);
  friend void swap(ListSfixed64Bytes& a, ListSfixed64Bytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSfixed64Bytes* New() const final {
    return CreateMaybeMessage<ListSfixed64Bytes>(NULL);
  }

  ListSfixed64Bytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSfixed64Bytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSfixed64Bytes& from);
  void MergeFrom(const ListSfixed64Bytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSfixed64Bytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sfixed64 k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  ::google::protobuf::int64 k(int index) const;
  void set_k(int index, ::google::protobuf::int64 value);
  void add_k(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      k() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListSfixed64Bytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleDouble) */ {
 public:
  ListDoubleDouble();
  virtual ~ListDoubleDouble();

  ListDoubleDouble(const ListDoubleDouble& from);

  inline ListDoubleDouble& operator=(const ListDoubleDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleDouble(ListDoubleDouble&& from) noexcept
    : ListDoubleDouble() {
    *this = ::std::move(from);
  }

  inline ListDoubleDouble& operator=(ListDoubleDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleDouble* internal_default_instance() {
    return reinterpret_cast<const ListDoubleDouble*>(
               &_ListDoubleDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    195;

  void Swap(ListDoubleDouble* other);
  friend void swap(ListDoubleDouble& a, ListDoubleDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleDouble* New() const final {
    return CreateMaybeMessage<ListDoubleDouble>(NULL);
  }

  ListDoubleDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleDouble& from);
  void MergeFrom(const ListDoubleDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleFloat) */ {
 public:
  ListDoubleFloat();
  virtual ~ListDoubleFloat();

  ListDoubleFloat(const ListDoubleFloat& from);

  inline ListDoubleFloat& operator=(const ListDoubleFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleFloat(ListDoubleFloat&& from) noexcept
    : ListDoubleFloat() {
    *this = ::std::move(from);
  }

  inline ListDoubleFloat& operator=(ListDoubleFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleFloat* internal_default_instance() {
    return reinterpret_cast<const ListDoubleFloat*>(
               &_ListDoubleFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    196;

  void Swap(ListDoubleFloat* other);
  friend void swap(ListDoubleFloat& a, ListDoubleFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleFloat* New() const final {
    return CreateMaybeMessage<ListDoubleFloat>(NULL);
  }

  ListDoubleFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleFloat& from);
  void MergeFrom(const ListDoubleFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleInt32) */ {
 public:
  ListDoubleInt32();
  virtual ~ListDoubleInt32();

  ListDoubleInt32(const ListDoubleInt32& from);

  inline ListDoubleInt32& operator=(const ListDoubleInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleInt32(ListDoubleInt32&& from) noexcept
    : ListDoubleInt32() {
    *this = ::std::move(from);
  }

  inline ListDoubleInt32& operator=(ListDoubleInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleInt32* internal_default_instance() {
    return reinterpret_cast<const ListDoubleInt32*>(
               &_ListDoubleInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    197;

  void Swap(ListDoubleInt32* other);
  friend void swap(ListDoubleInt32& a, ListDoubleInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleInt32* New() const final {
    return CreateMaybeMessage<ListDoubleInt32>(NULL);
  }

  ListDoubleInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleInt32& from);
  void MergeFrom(const ListDoubleInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleInt64) */ {
 public:
  ListDoubleInt64();
  virtual ~ListDoubleInt64();

  ListDoubleInt64(const ListDoubleInt64& from);

  inline ListDoubleInt64& operator=(const ListDoubleInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleInt64(ListDoubleInt64&& from) noexcept
    : ListDoubleInt64() {
    *this = ::std::move(from);
  }

  inline ListDoubleInt64& operator=(ListDoubleInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleInt64* internal_default_instance() {
    return reinterpret_cast<const ListDoubleInt64*>(
               &_ListDoubleInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    198;

  void Swap(ListDoubleInt64* other);
  friend void swap(ListDoubleInt64& a, ListDoubleInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleInt64* New() const final {
    return CreateMaybeMessage<ListDoubleInt64>(NULL);
  }

  ListDoubleInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleInt64& from);
  void MergeFrom(const ListDoubleInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleUint32) */ {
 public:
  ListDoubleUint32();
  virtual ~ListDoubleUint32();

  ListDoubleUint32(const ListDoubleUint32& from);

  inline ListDoubleUint32& operator=(const ListDoubleUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleUint32(ListDoubleUint32&& from) noexcept
    : ListDoubleUint32() {
    *this = ::std::move(from);
  }

  inline ListDoubleUint32& operator=(ListDoubleUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleUint32* internal_default_instance() {
    return reinterpret_cast<const ListDoubleUint32*>(
               &_ListDoubleUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    199;

  void Swap(ListDoubleUint32* other);
  friend void swap(ListDoubleUint32& a, ListDoubleUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleUint32* New() const final {
    return CreateMaybeMessage<ListDoubleUint32>(NULL);
  }

  ListDoubleUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleUint32& from);
  void MergeFrom(const ListDoubleUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleUint64) */ {
 public:
  ListDoubleUint64();
  virtual ~ListDoubleUint64();

  ListDoubleUint64(const ListDoubleUint64& from);

  inline ListDoubleUint64& operator=(const ListDoubleUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleUint64(ListDoubleUint64&& from) noexcept
    : ListDoubleUint64() {
    *this = ::std::move(from);
  }

  inline ListDoubleUint64& operator=(ListDoubleUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleUint64* internal_default_instance() {
    return reinterpret_cast<const ListDoubleUint64*>(
               &_ListDoubleUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    200;

  void Swap(ListDoubleUint64* other);
  friend void swap(ListDoubleUint64& a, ListDoubleUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleUint64* New() const final {
    return CreateMaybeMessage<ListDoubleUint64>(NULL);
  }

  ListDoubleUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleUint64& from);
  void MergeFrom(const ListDoubleUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleSint32) */ {
 public:
  ListDoubleSint32();
  virtual ~ListDoubleSint32();

  ListDoubleSint32(const ListDoubleSint32& from);

  inline ListDoubleSint32& operator=(const ListDoubleSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleSint32(ListDoubleSint32&& from) noexcept
    : ListDoubleSint32() {
    *this = ::std::move(from);
  }

  inline ListDoubleSint32& operator=(ListDoubleSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleSint32* internal_default_instance() {
    return reinterpret_cast<const ListDoubleSint32*>(
               &_ListDoubleSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    201;

  void Swap(ListDoubleSint32* other);
  friend void swap(ListDoubleSint32& a, ListDoubleSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleSint32* New() const final {
    return CreateMaybeMessage<ListDoubleSint32>(NULL);
  }

  ListDoubleSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleSint32& from);
  void MergeFrom(const ListDoubleSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleSint64) */ {
 public:
  ListDoubleSint64();
  virtual ~ListDoubleSint64();

  ListDoubleSint64(const ListDoubleSint64& from);

  inline ListDoubleSint64& operator=(const ListDoubleSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleSint64(ListDoubleSint64&& from) noexcept
    : ListDoubleSint64() {
    *this = ::std::move(from);
  }

  inline ListDoubleSint64& operator=(ListDoubleSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleSint64* internal_default_instance() {
    return reinterpret_cast<const ListDoubleSint64*>(
               &_ListDoubleSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    202;

  void Swap(ListDoubleSint64* other);
  friend void swap(ListDoubleSint64& a, ListDoubleSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleSint64* New() const final {
    return CreateMaybeMessage<ListDoubleSint64>(NULL);
  }

  ListDoubleSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleSint64& from);
  void MergeFrom(const ListDoubleSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleFixed32) */ {
 public:
  ListDoubleFixed32();
  virtual ~ListDoubleFixed32();

  ListDoubleFixed32(const ListDoubleFixed32& from);

  inline ListDoubleFixed32& operator=(const ListDoubleFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleFixed32(ListDoubleFixed32&& from) noexcept
    : ListDoubleFixed32() {
    *this = ::std::move(from);
  }

  inline ListDoubleFixed32& operator=(ListDoubleFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleFixed32* internal_default_instance() {
    return reinterpret_cast<const ListDoubleFixed32*>(
               &_ListDoubleFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    203;

  void Swap(ListDoubleFixed32* other);
  friend void swap(ListDoubleFixed32& a, ListDoubleFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleFixed32* New() const final {
    return CreateMaybeMessage<ListDoubleFixed32>(NULL);
  }

  ListDoubleFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleFixed32& from);
  void MergeFrom(const ListDoubleFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleFixed64) */ {
 public:
  ListDoubleFixed64();
  virtual ~ListDoubleFixed64();

  ListDoubleFixed64(const ListDoubleFixed64& from);

  inline ListDoubleFixed64& operator=(const ListDoubleFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleFixed64(ListDoubleFixed64&& from) noexcept
    : ListDoubleFixed64() {
    *this = ::std::move(from);
  }

  inline ListDoubleFixed64& operator=(ListDoubleFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleFixed64* internal_default_instance() {
    return reinterpret_cast<const ListDoubleFixed64*>(
               &_ListDoubleFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    204;

  void Swap(ListDoubleFixed64* other);
  friend void swap(ListDoubleFixed64& a, ListDoubleFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleFixed64* New() const final {
    return CreateMaybeMessage<ListDoubleFixed64>(NULL);
  }

  ListDoubleFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleFixed64& from);
  void MergeFrom(const ListDoubleFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleSfixed32) */ {
 public:
  ListDoubleSfixed32();
  virtual ~ListDoubleSfixed32();

  ListDoubleSfixed32(const ListDoubleSfixed32& from);

  inline ListDoubleSfixed32& operator=(const ListDoubleSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleSfixed32(ListDoubleSfixed32&& from) noexcept
    : ListDoubleSfixed32() {
    *this = ::std::move(from);
  }

  inline ListDoubleSfixed32& operator=(ListDoubleSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListDoubleSfixed32*>(
               &_ListDoubleSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    205;

  void Swap(ListDoubleSfixed32* other);
  friend void swap(ListDoubleSfixed32& a, ListDoubleSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleSfixed32* New() const final {
    return CreateMaybeMessage<ListDoubleSfixed32>(NULL);
  }

  ListDoubleSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleSfixed32& from);
  void MergeFrom(const ListDoubleSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleSfixed64) */ {
 public:
  ListDoubleSfixed64();
  virtual ~ListDoubleSfixed64();

  ListDoubleSfixed64(const ListDoubleSfixed64& from);

  inline ListDoubleSfixed64& operator=(const ListDoubleSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleSfixed64(ListDoubleSfixed64&& from) noexcept
    : ListDoubleSfixed64() {
    *this = ::std::move(from);
  }

  inline ListDoubleSfixed64& operator=(ListDoubleSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListDoubleSfixed64*>(
               &_ListDoubleSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    206;

  void Swap(ListDoubleSfixed64* other);
  friend void swap(ListDoubleSfixed64& a, ListDoubleSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleSfixed64* New() const final {
    return CreateMaybeMessage<ListDoubleSfixed64>(NULL);
  }

  ListDoubleSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleSfixed64& from);
  void MergeFrom(const ListDoubleSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleBool) */ {
 public:
  ListDoubleBool();
  virtual ~ListDoubleBool();

  ListDoubleBool(const ListDoubleBool& from);

  inline ListDoubleBool& operator=(const ListDoubleBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleBool(ListDoubleBool&& from) noexcept
    : ListDoubleBool() {
    *this = ::std::move(from);
  }

  inline ListDoubleBool& operator=(ListDoubleBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleBool* internal_default_instance() {
    return reinterpret_cast<const ListDoubleBool*>(
               &_ListDoubleBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    207;

  void Swap(ListDoubleBool* other);
  friend void swap(ListDoubleBool& a, ListDoubleBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleBool* New() const final {
    return CreateMaybeMessage<ListDoubleBool>(NULL);
  }

  ListDoubleBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleBool& from);
  void MergeFrom(const ListDoubleBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleString) */ {
 public:
  ListDoubleString();
  virtual ~ListDoubleString();

  ListDoubleString(const ListDoubleString& from);

  inline ListDoubleString& operator=(const ListDoubleString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleString(ListDoubleString&& from) noexcept
    : ListDoubleString() {
    *this = ::std::move(from);
  }

  inline ListDoubleString& operator=(ListDoubleString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleString* internal_default_instance() {
    return reinterpret_cast<const ListDoubleString*>(
               &_ListDoubleString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    208;

  void Swap(ListDoubleString* other);
  friend void swap(ListDoubleString& a, ListDoubleString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleString* New() const final {
    return CreateMaybeMessage<ListDoubleString>(NULL);
  }

  ListDoubleString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleString& from);
  void MergeFrom(const ListDoubleString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListDoubleBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListDoubleBytes) */ {
 public:
  ListDoubleBytes();
  virtual ~ListDoubleBytes();

  ListDoubleBytes(const ListDoubleBytes& from);

  inline ListDoubleBytes& operator=(const ListDoubleBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDoubleBytes(ListDoubleBytes&& from) noexcept
    : ListDoubleBytes() {
    *this = ::std::move(from);
  }

  inline ListDoubleBytes& operator=(ListDoubleBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListDoubleBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDoubleBytes* internal_default_instance() {
    return reinterpret_cast<const ListDoubleBytes*>(
               &_ListDoubleBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    209;

  void Swap(ListDoubleBytes* other);
  friend void swap(ListDoubleBytes& a, ListDoubleBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDoubleBytes* New() const final {
    return CreateMaybeMessage<ListDoubleBytes>(NULL);
  }

  ListDoubleBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDoubleBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDoubleBytes& from);
  void MergeFrom(const ListDoubleBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDoubleBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  double k(int index) const;
  void set_k(int index, double value);
  void add_k(double value);
  const ::google::protobuf::RepeatedField< double >&
      k() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListDoubleBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatDouble) */ {
 public:
  ListFloatDouble();
  virtual ~ListFloatDouble();

  ListFloatDouble(const ListFloatDouble& from);

  inline ListFloatDouble& operator=(const ListFloatDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatDouble(ListFloatDouble&& from) noexcept
    : ListFloatDouble() {
    *this = ::std::move(from);
  }

  inline ListFloatDouble& operator=(ListFloatDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatDouble* internal_default_instance() {
    return reinterpret_cast<const ListFloatDouble*>(
               &_ListFloatDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    210;

  void Swap(ListFloatDouble* other);
  friend void swap(ListFloatDouble& a, ListFloatDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatDouble* New() const final {
    return CreateMaybeMessage<ListFloatDouble>(NULL);
  }

  ListFloatDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatDouble& from);
  void MergeFrom(const ListFloatDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatFloat) */ {
 public:
  ListFloatFloat();
  virtual ~ListFloatFloat();

  ListFloatFloat(const ListFloatFloat& from);

  inline ListFloatFloat& operator=(const ListFloatFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatFloat(ListFloatFloat&& from) noexcept
    : ListFloatFloat() {
    *this = ::std::move(from);
  }

  inline ListFloatFloat& operator=(ListFloatFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatFloat* internal_default_instance() {
    return reinterpret_cast<const ListFloatFloat*>(
               &_ListFloatFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    211;

  void Swap(ListFloatFloat* other);
  friend void swap(ListFloatFloat& a, ListFloatFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatFloat* New() const final {
    return CreateMaybeMessage<ListFloatFloat>(NULL);
  }

  ListFloatFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatFloat& from);
  void MergeFrom(const ListFloatFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatInt32) */ {
 public:
  ListFloatInt32();
  virtual ~ListFloatInt32();

  ListFloatInt32(const ListFloatInt32& from);

  inline ListFloatInt32& operator=(const ListFloatInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatInt32(ListFloatInt32&& from) noexcept
    : ListFloatInt32() {
    *this = ::std::move(from);
  }

  inline ListFloatInt32& operator=(ListFloatInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatInt32* internal_default_instance() {
    return reinterpret_cast<const ListFloatInt32*>(
               &_ListFloatInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    212;

  void Swap(ListFloatInt32* other);
  friend void swap(ListFloatInt32& a, ListFloatInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatInt32* New() const final {
    return CreateMaybeMessage<ListFloatInt32>(NULL);
  }

  ListFloatInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatInt32& from);
  void MergeFrom(const ListFloatInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatInt64) */ {
 public:
  ListFloatInt64();
  virtual ~ListFloatInt64();

  ListFloatInt64(const ListFloatInt64& from);

  inline ListFloatInt64& operator=(const ListFloatInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatInt64(ListFloatInt64&& from) noexcept
    : ListFloatInt64() {
    *this = ::std::move(from);
  }

  inline ListFloatInt64& operator=(ListFloatInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatInt64* internal_default_instance() {
    return reinterpret_cast<const ListFloatInt64*>(
               &_ListFloatInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    213;

  void Swap(ListFloatInt64* other);
  friend void swap(ListFloatInt64& a, ListFloatInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatInt64* New() const final {
    return CreateMaybeMessage<ListFloatInt64>(NULL);
  }

  ListFloatInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatInt64& from);
  void MergeFrom(const ListFloatInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatUint32) */ {
 public:
  ListFloatUint32();
  virtual ~ListFloatUint32();

  ListFloatUint32(const ListFloatUint32& from);

  inline ListFloatUint32& operator=(const ListFloatUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatUint32(ListFloatUint32&& from) noexcept
    : ListFloatUint32() {
    *this = ::std::move(from);
  }

  inline ListFloatUint32& operator=(ListFloatUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatUint32* internal_default_instance() {
    return reinterpret_cast<const ListFloatUint32*>(
               &_ListFloatUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    214;

  void Swap(ListFloatUint32* other);
  friend void swap(ListFloatUint32& a, ListFloatUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatUint32* New() const final {
    return CreateMaybeMessage<ListFloatUint32>(NULL);
  }

  ListFloatUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatUint32& from);
  void MergeFrom(const ListFloatUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatUint64) */ {
 public:
  ListFloatUint64();
  virtual ~ListFloatUint64();

  ListFloatUint64(const ListFloatUint64& from);

  inline ListFloatUint64& operator=(const ListFloatUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatUint64(ListFloatUint64&& from) noexcept
    : ListFloatUint64() {
    *this = ::std::move(from);
  }

  inline ListFloatUint64& operator=(ListFloatUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatUint64* internal_default_instance() {
    return reinterpret_cast<const ListFloatUint64*>(
               &_ListFloatUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    215;

  void Swap(ListFloatUint64* other);
  friend void swap(ListFloatUint64& a, ListFloatUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatUint64* New() const final {
    return CreateMaybeMessage<ListFloatUint64>(NULL);
  }

  ListFloatUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatUint64& from);
  void MergeFrom(const ListFloatUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatSint32) */ {
 public:
  ListFloatSint32();
  virtual ~ListFloatSint32();

  ListFloatSint32(const ListFloatSint32& from);

  inline ListFloatSint32& operator=(const ListFloatSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatSint32(ListFloatSint32&& from) noexcept
    : ListFloatSint32() {
    *this = ::std::move(from);
  }

  inline ListFloatSint32& operator=(ListFloatSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatSint32* internal_default_instance() {
    return reinterpret_cast<const ListFloatSint32*>(
               &_ListFloatSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    216;

  void Swap(ListFloatSint32* other);
  friend void swap(ListFloatSint32& a, ListFloatSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatSint32* New() const final {
    return CreateMaybeMessage<ListFloatSint32>(NULL);
  }

  ListFloatSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatSint32& from);
  void MergeFrom(const ListFloatSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatSint64) */ {
 public:
  ListFloatSint64();
  virtual ~ListFloatSint64();

  ListFloatSint64(const ListFloatSint64& from);

  inline ListFloatSint64& operator=(const ListFloatSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatSint64(ListFloatSint64&& from) noexcept
    : ListFloatSint64() {
    *this = ::std::move(from);
  }

  inline ListFloatSint64& operator=(ListFloatSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatSint64* internal_default_instance() {
    return reinterpret_cast<const ListFloatSint64*>(
               &_ListFloatSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    217;

  void Swap(ListFloatSint64* other);
  friend void swap(ListFloatSint64& a, ListFloatSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatSint64* New() const final {
    return CreateMaybeMessage<ListFloatSint64>(NULL);
  }

  ListFloatSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatSint64& from);
  void MergeFrom(const ListFloatSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatFixed32) */ {
 public:
  ListFloatFixed32();
  virtual ~ListFloatFixed32();

  ListFloatFixed32(const ListFloatFixed32& from);

  inline ListFloatFixed32& operator=(const ListFloatFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatFixed32(ListFloatFixed32&& from) noexcept
    : ListFloatFixed32() {
    *this = ::std::move(from);
  }

  inline ListFloatFixed32& operator=(ListFloatFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatFixed32* internal_default_instance() {
    return reinterpret_cast<const ListFloatFixed32*>(
               &_ListFloatFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    218;

  void Swap(ListFloatFixed32* other);
  friend void swap(ListFloatFixed32& a, ListFloatFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatFixed32* New() const final {
    return CreateMaybeMessage<ListFloatFixed32>(NULL);
  }

  ListFloatFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatFixed32& from);
  void MergeFrom(const ListFloatFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatFixed64) */ {
 public:
  ListFloatFixed64();
  virtual ~ListFloatFixed64();

  ListFloatFixed64(const ListFloatFixed64& from);

  inline ListFloatFixed64& operator=(const ListFloatFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatFixed64(ListFloatFixed64&& from) noexcept
    : ListFloatFixed64() {
    *this = ::std::move(from);
  }

  inline ListFloatFixed64& operator=(ListFloatFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatFixed64* internal_default_instance() {
    return reinterpret_cast<const ListFloatFixed64*>(
               &_ListFloatFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    219;

  void Swap(ListFloatFixed64* other);
  friend void swap(ListFloatFixed64& a, ListFloatFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatFixed64* New() const final {
    return CreateMaybeMessage<ListFloatFixed64>(NULL);
  }

  ListFloatFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatFixed64& from);
  void MergeFrom(const ListFloatFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatSfixed32) */ {
 public:
  ListFloatSfixed32();
  virtual ~ListFloatSfixed32();

  ListFloatSfixed32(const ListFloatSfixed32& from);

  inline ListFloatSfixed32& operator=(const ListFloatSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatSfixed32(ListFloatSfixed32&& from) noexcept
    : ListFloatSfixed32() {
    *this = ::std::move(from);
  }

  inline ListFloatSfixed32& operator=(ListFloatSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListFloatSfixed32*>(
               &_ListFloatSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    220;

  void Swap(ListFloatSfixed32* other);
  friend void swap(ListFloatSfixed32& a, ListFloatSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatSfixed32* New() const final {
    return CreateMaybeMessage<ListFloatSfixed32>(NULL);
  }

  ListFloatSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatSfixed32& from);
  void MergeFrom(const ListFloatSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatSfixed64) */ {
 public:
  ListFloatSfixed64();
  virtual ~ListFloatSfixed64();

  ListFloatSfixed64(const ListFloatSfixed64& from);

  inline ListFloatSfixed64& operator=(const ListFloatSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatSfixed64(ListFloatSfixed64&& from) noexcept
    : ListFloatSfixed64() {
    *this = ::std::move(from);
  }

  inline ListFloatSfixed64& operator=(ListFloatSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListFloatSfixed64*>(
               &_ListFloatSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    221;

  void Swap(ListFloatSfixed64* other);
  friend void swap(ListFloatSfixed64& a, ListFloatSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatSfixed64* New() const final {
    return CreateMaybeMessage<ListFloatSfixed64>(NULL);
  }

  ListFloatSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatSfixed64& from);
  void MergeFrom(const ListFloatSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatBool) */ {
 public:
  ListFloatBool();
  virtual ~ListFloatBool();

  ListFloatBool(const ListFloatBool& from);

  inline ListFloatBool& operator=(const ListFloatBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatBool(ListFloatBool&& from) noexcept
    : ListFloatBool() {
    *this = ::std::move(from);
  }

  inline ListFloatBool& operator=(ListFloatBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatBool* internal_default_instance() {
    return reinterpret_cast<const ListFloatBool*>(
               &_ListFloatBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    222;

  void Swap(ListFloatBool* other);
  friend void swap(ListFloatBool& a, ListFloatBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatBool* New() const final {
    return CreateMaybeMessage<ListFloatBool>(NULL);
  }

  ListFloatBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatBool& from);
  void MergeFrom(const ListFloatBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatString) */ {
 public:
  ListFloatString();
  virtual ~ListFloatString();

  ListFloatString(const ListFloatString& from);

  inline ListFloatString& operator=(const ListFloatString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatString(ListFloatString&& from) noexcept
    : ListFloatString() {
    *this = ::std::move(from);
  }

  inline ListFloatString& operator=(ListFloatString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatString* internal_default_instance() {
    return reinterpret_cast<const ListFloatString*>(
               &_ListFloatString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    223;

  void Swap(ListFloatString* other);
  friend void swap(ListFloatString& a, ListFloatString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatString* New() const final {
    return CreateMaybeMessage<ListFloatString>(NULL);
  }

  ListFloatString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatString& from);
  void MergeFrom(const ListFloatString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListFloatBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListFloatBytes) */ {
 public:
  ListFloatBytes();
  virtual ~ListFloatBytes();

  ListFloatBytes(const ListFloatBytes& from);

  inline ListFloatBytes& operator=(const ListFloatBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListFloatBytes(ListFloatBytes&& from) noexcept
    : ListFloatBytes() {
    *this = ::std::move(from);
  }

  inline ListFloatBytes& operator=(ListFloatBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListFloatBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFloatBytes* internal_default_instance() {
    return reinterpret_cast<const ListFloatBytes*>(
               &_ListFloatBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    224;

  void Swap(ListFloatBytes* other);
  friend void swap(ListFloatBytes& a, ListFloatBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListFloatBytes* New() const final {
    return CreateMaybeMessage<ListFloatBytes>(NULL);
  }

  ListFloatBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListFloatBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListFloatBytes& from);
  void MergeFrom(const ListFloatBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFloatBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  float k(int index) const;
  void set_k(int index, float value);
  void add_k(float value);
  const ::google::protobuf::RepeatedField< float >&
      k() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListFloatBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolDouble) */ {
 public:
  ListBoolDouble();
  virtual ~ListBoolDouble();

  ListBoolDouble(const ListBoolDouble& from);

  inline ListBoolDouble& operator=(const ListBoolDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolDouble(ListBoolDouble&& from) noexcept
    : ListBoolDouble() {
    *this = ::std::move(from);
  }

  inline ListBoolDouble& operator=(ListBoolDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolDouble* internal_default_instance() {
    return reinterpret_cast<const ListBoolDouble*>(
               &_ListBoolDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    225;

  void Swap(ListBoolDouble* other);
  friend void swap(ListBoolDouble& a, ListBoolDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolDouble* New() const final {
    return CreateMaybeMessage<ListBoolDouble>(NULL);
  }

  ListBoolDouble* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolDouble>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolDouble& from);
  void MergeFrom(const ListBoolDouble& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated double w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  double w(int index) const;
  void set_w(int index, double value);
  void add_w(double value);
  const ::google::protobuf::RepeatedField< double >&
      w() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolFloat) */ {
 public:
  ListBoolFloat();
  virtual ~ListBoolFloat();

  ListBoolFloat(const ListBoolFloat& from);

  inline ListBoolFloat& operator=(const ListBoolFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolFloat(ListBoolFloat&& from) noexcept
    : ListBoolFloat() {
    *this = ::std::move(from);
  }

  inline ListBoolFloat& operator=(ListBoolFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolFloat* internal_default_instance() {
    return reinterpret_cast<const ListBoolFloat*>(
               &_ListBoolFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    226;

  void Swap(ListBoolFloat* other);
  friend void swap(ListBoolFloat& a, ListBoolFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolFloat* New() const final {
    return CreateMaybeMessage<ListBoolFloat>(NULL);
  }

  ListBoolFloat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolFloat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolFloat& from);
  void MergeFrom(const ListBoolFloat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated float w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  float w(int index) const;
  void set_w(int index, float value);
  void add_w(float value);
  const ::google::protobuf::RepeatedField< float >&
      w() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolInt32) */ {
 public:
  ListBoolInt32();
  virtual ~ListBoolInt32();

  ListBoolInt32(const ListBoolInt32& from);

  inline ListBoolInt32& operator=(const ListBoolInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolInt32(ListBoolInt32&& from) noexcept
    : ListBoolInt32() {
    *this = ::std::move(from);
  }

  inline ListBoolInt32& operator=(ListBoolInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolInt32* internal_default_instance() {
    return reinterpret_cast<const ListBoolInt32*>(
               &_ListBoolInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    227;

  void Swap(ListBoolInt32* other);
  friend void swap(ListBoolInt32& a, ListBoolInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolInt32* New() const final {
    return CreateMaybeMessage<ListBoolInt32>(NULL);
  }

  ListBoolInt32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolInt32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolInt32& from);
  void MergeFrom(const ListBoolInt32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated int32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolInt64) */ {
 public:
  ListBoolInt64();
  virtual ~ListBoolInt64();

  ListBoolInt64(const ListBoolInt64& from);

  inline ListBoolInt64& operator=(const ListBoolInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolInt64(ListBoolInt64&& from) noexcept
    : ListBoolInt64() {
    *this = ::std::move(from);
  }

  inline ListBoolInt64& operator=(ListBoolInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolInt64* internal_default_instance() {
    return reinterpret_cast<const ListBoolInt64*>(
               &_ListBoolInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    228;

  void Swap(ListBoolInt64* other);
  friend void swap(ListBoolInt64& a, ListBoolInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolInt64* New() const final {
    return CreateMaybeMessage<ListBoolInt64>(NULL);
  }

  ListBoolInt64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolInt64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolInt64& from);
  void MergeFrom(const ListBoolInt64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated int64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolUint32) */ {
 public:
  ListBoolUint32();
  virtual ~ListBoolUint32();

  ListBoolUint32(const ListBoolUint32& from);

  inline ListBoolUint32& operator=(const ListBoolUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolUint32(ListBoolUint32&& from) noexcept
    : ListBoolUint32() {
    *this = ::std::move(from);
  }

  inline ListBoolUint32& operator=(ListBoolUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolUint32* internal_default_instance() {
    return reinterpret_cast<const ListBoolUint32*>(
               &_ListBoolUint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    229;

  void Swap(ListBoolUint32* other);
  friend void swap(ListBoolUint32& a, ListBoolUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolUint32* New() const final {
    return CreateMaybeMessage<ListBoolUint32>(NULL);
  }

  ListBoolUint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolUint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolUint32& from);
  void MergeFrom(const ListBoolUint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated uint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolUint64) */ {
 public:
  ListBoolUint64();
  virtual ~ListBoolUint64();

  ListBoolUint64(const ListBoolUint64& from);

  inline ListBoolUint64& operator=(const ListBoolUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolUint64(ListBoolUint64&& from) noexcept
    : ListBoolUint64() {
    *this = ::std::move(from);
  }

  inline ListBoolUint64& operator=(ListBoolUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolUint64* internal_default_instance() {
    return reinterpret_cast<const ListBoolUint64*>(
               &_ListBoolUint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    230;

  void Swap(ListBoolUint64* other);
  friend void swap(ListBoolUint64& a, ListBoolUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolUint64* New() const final {
    return CreateMaybeMessage<ListBoolUint64>(NULL);
  }

  ListBoolUint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolUint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolUint64& from);
  void MergeFrom(const ListBoolUint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated uint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolSint32) */ {
 public:
  ListBoolSint32();
  virtual ~ListBoolSint32();

  ListBoolSint32(const ListBoolSint32& from);

  inline ListBoolSint32& operator=(const ListBoolSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolSint32(ListBoolSint32&& from) noexcept
    : ListBoolSint32() {
    *this = ::std::move(from);
  }

  inline ListBoolSint32& operator=(ListBoolSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolSint32* internal_default_instance() {
    return reinterpret_cast<const ListBoolSint32*>(
               &_ListBoolSint32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    231;

  void Swap(ListBoolSint32* other);
  friend void swap(ListBoolSint32& a, ListBoolSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolSint32* New() const final {
    return CreateMaybeMessage<ListBoolSint32>(NULL);
  }

  ListBoolSint32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolSint32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolSint32& from);
  void MergeFrom(const ListBoolSint32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated sint32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolSint64) */ {
 public:
  ListBoolSint64();
  virtual ~ListBoolSint64();

  ListBoolSint64(const ListBoolSint64& from);

  inline ListBoolSint64& operator=(const ListBoolSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolSint64(ListBoolSint64&& from) noexcept
    : ListBoolSint64() {
    *this = ::std::move(from);
  }

  inline ListBoolSint64& operator=(ListBoolSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolSint64* internal_default_instance() {
    return reinterpret_cast<const ListBoolSint64*>(
               &_ListBoolSint64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    232;

  void Swap(ListBoolSint64* other);
  friend void swap(ListBoolSint64& a, ListBoolSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolSint64* New() const final {
    return CreateMaybeMessage<ListBoolSint64>(NULL);
  }

  ListBoolSint64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolSint64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolSint64& from);
  void MergeFrom(const ListBoolSint64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated sint64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolFixed32) */ {
 public:
  ListBoolFixed32();
  virtual ~ListBoolFixed32();

  ListBoolFixed32(const ListBoolFixed32& from);

  inline ListBoolFixed32& operator=(const ListBoolFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolFixed32(ListBoolFixed32&& from) noexcept
    : ListBoolFixed32() {
    *this = ::std::move(from);
  }

  inline ListBoolFixed32& operator=(ListBoolFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolFixed32* internal_default_instance() {
    return reinterpret_cast<const ListBoolFixed32*>(
               &_ListBoolFixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    233;

  void Swap(ListBoolFixed32* other);
  friend void swap(ListBoolFixed32& a, ListBoolFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolFixed32* New() const final {
    return CreateMaybeMessage<ListBoolFixed32>(NULL);
  }

  ListBoolFixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolFixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolFixed32& from);
  void MergeFrom(const ListBoolFixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated fixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint32 w(int index) const;
  void set_w(int index, ::google::protobuf::uint32 value);
  void add_w(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolFixed64) */ {
 public:
  ListBoolFixed64();
  virtual ~ListBoolFixed64();

  ListBoolFixed64(const ListBoolFixed64& from);

  inline ListBoolFixed64& operator=(const ListBoolFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolFixed64(ListBoolFixed64&& from) noexcept
    : ListBoolFixed64() {
    *this = ::std::move(from);
  }

  inline ListBoolFixed64& operator=(ListBoolFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolFixed64* internal_default_instance() {
    return reinterpret_cast<const ListBoolFixed64*>(
               &_ListBoolFixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    234;

  void Swap(ListBoolFixed64* other);
  friend void swap(ListBoolFixed64& a, ListBoolFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolFixed64* New() const final {
    return CreateMaybeMessage<ListBoolFixed64>(NULL);
  }

  ListBoolFixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolFixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolFixed64& from);
  void MergeFrom(const ListBoolFixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated fixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::uint64 w(int index) const;
  void set_w(int index, ::google::protobuf::uint64 value);
  void add_w(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolSfixed32) */ {
 public:
  ListBoolSfixed32();
  virtual ~ListBoolSfixed32();

  ListBoolSfixed32(const ListBoolSfixed32& from);

  inline ListBoolSfixed32& operator=(const ListBoolSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolSfixed32(ListBoolSfixed32&& from) noexcept
    : ListBoolSfixed32() {
    *this = ::std::move(from);
  }

  inline ListBoolSfixed32& operator=(ListBoolSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolSfixed32* internal_default_instance() {
    return reinterpret_cast<const ListBoolSfixed32*>(
               &_ListBoolSfixed32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    235;

  void Swap(ListBoolSfixed32* other);
  friend void swap(ListBoolSfixed32& a, ListBoolSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolSfixed32* New() const final {
    return CreateMaybeMessage<ListBoolSfixed32>(NULL);
  }

  ListBoolSfixed32* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolSfixed32>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolSfixed32& from);
  void MergeFrom(const ListBoolSfixed32& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated sfixed32 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int32 w(int index) const;
  void set_w(int index, ::google::protobuf::int32 value);
  void add_w(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolSfixed64) */ {
 public:
  ListBoolSfixed64();
  virtual ~ListBoolSfixed64();

  ListBoolSfixed64(const ListBoolSfixed64& from);

  inline ListBoolSfixed64& operator=(const ListBoolSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolSfixed64(ListBoolSfixed64&& from) noexcept
    : ListBoolSfixed64() {
    *this = ::std::move(from);
  }

  inline ListBoolSfixed64& operator=(ListBoolSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolSfixed64* internal_default_instance() {
    return reinterpret_cast<const ListBoolSfixed64*>(
               &_ListBoolSfixed64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    236;

  void Swap(ListBoolSfixed64* other);
  friend void swap(ListBoolSfixed64& a, ListBoolSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolSfixed64* New() const final {
    return CreateMaybeMessage<ListBoolSfixed64>(NULL);
  }

  ListBoolSfixed64* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolSfixed64>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolSfixed64& from);
  void MergeFrom(const ListBoolSfixed64& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated sfixed64 w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  ::google::protobuf::int64 w(int index) const;
  void set_w(int index, ::google::protobuf::int64 value);
  void add_w(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      w() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolBool) */ {
 public:
  ListBoolBool();
  virtual ~ListBoolBool();

  ListBoolBool(const ListBoolBool& from);

  inline ListBoolBool& operator=(const ListBoolBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolBool(ListBoolBool&& from) noexcept
    : ListBoolBool() {
    *this = ::std::move(from);
  }

  inline ListBoolBool& operator=(ListBoolBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolBool* internal_default_instance() {
    return reinterpret_cast<const ListBoolBool*>(
               &_ListBoolBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    237;

  void Swap(ListBoolBool* other);
  friend void swap(ListBoolBool& a, ListBoolBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolBool* New() const final {
    return CreateMaybeMessage<ListBoolBool>(NULL);
  }

  ListBoolBool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolBool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolBool& from);
  void MergeFrom(const ListBoolBool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated bool w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  bool w(int index) const;
  void set_w(int index, bool value);
  void add_w(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      w() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > w_;
  mutable int _w_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolString) */ {
 public:
  ListBoolString();
  virtual ~ListBoolString();

  ListBoolString(const ListBoolString& from);

  inline ListBoolString& operator=(const ListBoolString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolString(ListBoolString&& from) noexcept
    : ListBoolString() {
    *this = ::std::move(from);
  }

  inline ListBoolString& operator=(ListBoolString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolString* internal_default_instance() {
    return reinterpret_cast<const ListBoolString*>(
               &_ListBoolString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    238;

  void Swap(ListBoolString* other);
  friend void swap(ListBoolString& a, ListBoolString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolString* New() const final {
    return CreateMaybeMessage<ListBoolString>(NULL);
  }

  ListBoolString* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolString>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolString& from);
  void MergeFrom(const ListBoolString& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated string w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const char* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListBoolBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.ListBoolBytes) */ {
 public:
  ListBoolBytes();
  virtual ~ListBoolBytes();

  ListBoolBytes(const ListBoolBytes& from);

  inline ListBoolBytes& operator=(const ListBoolBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBoolBytes(ListBoolBytes&& from) noexcept
    : ListBoolBytes() {
    *this = ::std::move(from);
  }

  inline ListBoolBytes& operator=(ListBoolBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBoolBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBoolBytes* internal_default_instance() {
    return reinterpret_cast<const ListBoolBytes*>(
               &_ListBoolBytes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    239;

  void Swap(ListBoolBytes* other);
  friend void swap(ListBoolBytes& a, ListBoolBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBoolBytes* New() const final {
    return CreateMaybeMessage<ListBoolBytes>(NULL);
  }

  ListBoolBytes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListBoolBytes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListBoolBytes& from);
  void MergeFrom(const ListBoolBytes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListBoolBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool k = 1;
  int k_size() const;
  void clear_k();
  static const int kKFieldNumber = 1;
  bool k(int index) const;
  void set_k(int index, bool value);
  void add_k(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      k() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_k();

  // repeated bytes w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::std::string& w(int index) const;
  ::std::string* mutable_w(int index);
  void set_w(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_w(int index, ::std::string&& value);
  #endif
  void set_w(int index, const char* value);
  void set_w(int index, const void* value, size_t size);
  ::std::string* add_w();
  void add_w(const ::std::string& value);
  #if LANG_CXX11
  void add_w(::std::string&& value);
  #endif
  void add_w(const char* value);
  void add_w(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& w() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_w();

  // @@protoc_insertion_point(class_scope:feature_proto.ListBoolBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > k_;
  mutable int _k_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> w_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Feature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.Feature) */ {
 public:
  Feature();
  virtual ~Feature();

  Feature(const Feature& from);

  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Feature(Feature&& from) noexcept
    : Feature() {
    *this = ::std::move(from);
  }

  inline Feature& operator=(Feature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Feature& default_instance();

  enum KindCase {
    kVDouble = 1,
    kVFloat = 2,
    kVInt32 = 3,
    kVInt64 = 4,
    kVUint32 = 5,
    kVUint64 = 6,
    kVSint32 = 7,
    kVSint64 = 8,
    kVFixed32 = 9,
    kVFixed64 = 10,
    kVSfixed32 = 11,
    kVSfixed64 = 12,
    kVBool = 13,
    kVString = 14,
    kVBytes = 15,
    kVListDouble = 16,
    kVListFloat = 17,
    kVListInt32 = 18,
    kVListInt64 = 19,
    kVListUint32 = 20,
    kVListUint64 = 21,
    kVListSint32 = 22,
    kVListSint64 = 23,
    kVListFixed32 = 24,
    kVListFixed64 = 25,
    kVListSfixed32 = 26,
    kVListSfixed64 = 27,
    kVListBool = 28,
    kVListString = 29,
    kVListBytes = 30,
    kVListStringDouble = 31,
    kVListStringFloat = 32,
    kVListStringInt32 = 33,
    kVListStringInt64 = 34,
    kVListStringUint32 = 35,
    kVListStringUint64 = 36,
    kVListStringSint32 = 37,
    kVListStringSint64 = 38,
    kVListStringFixed32 = 39,
    kVListStringFixed64 = 40,
    kVListStringSfixed32 = 41,
    kVListStringSfixed64 = 42,
    kVListStringBool = 43,
    kVListStringString = 44,
    kVListStringBytes = 45,
    kVListBytesDouble = 46,
    kVListBytesFloat = 47,
    kVListBytesInt32 = 48,
    kVListBytesInt64 = 49,
    kVListBytesUint32 = 50,
    kVListBytesUint64 = 51,
    kVListBytesSint32 = 52,
    kVListBytesSint64 = 53,
    kVListBytesFixed32 = 54,
    kVListBytesFixed64 = 55,
    kVListBytesSfixed32 = 56,
    kVListBytesSfixed64 = 57,
    kVListBytesBool = 58,
    kVListBytesString = 59,
    kVListBytesBytes = 60,
    kVListInt32Double = 61,
    kVListInt32Float = 62,
    kVListInt32Int32 = 63,
    kVListInt32Int64 = 64,
    kVListInt32Uint32 = 65,
    kVListInt32Uint64 = 66,
    kVListInt32Sint32 = 67,
    kVListInt32Sint64 = 68,
    kVListInt32Fixed32 = 69,
    kVListInt32Fixed64 = 70,
    kVListInt32Sfixed32 = 71,
    kVListInt32Sfixed64 = 72,
    kVListInt32Bool = 73,
    kVListInt32String = 74,
    kVListInt32Bytes = 75,
    kVListInt64Double = 76,
    kVListInt64Float = 77,
    kVListInt64Int32 = 78,
    kVListInt64Int64 = 79,
    kVListInt64Uint32 = 80,
    kVListInt64Uint64 = 81,
    kVListInt64Sint32 = 82,
    kVListInt64Sint64 = 83,
    kVListInt64Fixed32 = 84,
    kVListInt64Fixed64 = 85,
    kVListInt64Sfixed32 = 86,
    kVListInt64Sfixed64 = 87,
    kVListInt64Bool = 88,
    kVListInt64String = 89,
    kVListInt64Bytes = 90,
    kVListUint32Double = 91,
    kVListUint32Float = 92,
    kVListUint32Int32 = 93,
    kVListUint32Int64 = 94,
    kVListUint32Uint32 = 95,
    kVListUint32Uint64 = 96,
    kVListUint32Sint32 = 97,
    kVListUint32Sint64 = 98,
    kVListUint32Fixed32 = 99,
    kVListUint32Fixed64 = 100,
    kVListUint32Sfixed32 = 101,
    kVListUint32Sfixed64 = 102,
    kVListUint32Bool = 103,
    kVListUint32String = 104,
    kVListUint32Bytes = 105,
    kVListUint64Double = 106,
    kVListUint64Float = 107,
    kVListUint64Int32 = 108,
    kVListUint64Int64 = 109,
    kVListUint64Uint32 = 110,
    kVListUint64Uint64 = 111,
    kVListUint64Sint32 = 112,
    kVListUint64Sint64 = 113,
    kVListUint64Fixed32 = 114,
    kVListUint64Fixed64 = 115,
    kVListUint64Sfixed32 = 116,
    kVListUint64Sfixed64 = 117,
    kVListUint64Bool = 118,
    kVListUint64String = 119,
    kVListUint64Bytes = 120,
    kVListSint32Double = 121,
    kVListSint32Float = 122,
    kVListSint32Int32 = 123,
    kVListSint32Int64 = 124,
    kVListSint32Uint32 = 125,
    kVListSint32Uint64 = 126,
    kVListSint32Sint32 = 127,
    kVListSint32Sint64 = 128,
    kVListSint32Fixed32 = 129,
    kVListSint32Fixed64 = 130,
    kVListSint32Sfixed32 = 131,
    kVListSint32Sfixed64 = 132,
    kVListSint32Bool = 133,
    kVListSint32String = 134,
    kVListSint32Bytes = 135,
    kVListSint64Double = 136,
    kVListSint64Float = 137,
    kVListSint64Int32 = 138,
    kVListSint64Int64 = 139,
    kVListSint64Uint32 = 140,
    kVListSint64Uint64 = 141,
    kVListSint64Sint32 = 142,
    kVListSint64Sint64 = 143,
    kVListSint64Fixed32 = 144,
    kVListSint64Fixed64 = 145,
    kVListSint64Sfixed32 = 146,
    kVListSint64Sfixed64 = 147,
    kVListSint64Bool = 148,
    kVListSint64String = 149,
    kVListSint64Bytes = 150,
    kVListFixed32Double = 151,
    kVListFixed32Float = 152,
    kVListFixed32Int32 = 153,
    kVListFixed32Int64 = 154,
    kVListFixed32Uint32 = 155,
    kVListFixed32Uint64 = 156,
    kVListFixed32Sint32 = 157,
    kVListFixed32Sint64 = 158,
    kVListFixed32Fixed32 = 159,
    kVListFixed32Fixed64 = 160,
    kVListFixed32Sfixed32 = 161,
    kVListFixed32Sfixed64 = 162,
    kVListFixed32Bool = 163,
    kVListFixed32String = 164,
    kVListFixed32Bytes = 165,
    kVListFixed64Double = 166,
    kVListFixed64Float = 167,
    kVListFixed64Int32 = 168,
    kVListFixed64Int64 = 169,
    kVListFixed64Uint32 = 170,
    kVListFixed64Uint64 = 171,
    kVListFixed64Sint32 = 172,
    kVListFixed64Sint64 = 173,
    kVListFixed64Fixed32 = 174,
    kVListFixed64Fixed64 = 175,
    kVListFixed64Sfixed32 = 176,
    kVListFixed64Sfixed64 = 177,
    kVListFixed64Bool = 178,
    kVListFixed64String = 179,
    kVListFixed64Bytes = 180,
    kVListSfixed32Double = 181,
    kVListSfixed32Float = 182,
    kVListSfixed32Int32 = 183,
    kVListSfixed32Int64 = 184,
    kVListSfixed32Uint32 = 185,
    kVListSfixed32Uint64 = 186,
    kVListSfixed32Sint32 = 187,
    kVListSfixed32Sint64 = 188,
    kVListSfixed32Fixed32 = 189,
    kVListSfixed32Fixed64 = 190,
    kVListSfixed32Sfixed32 = 191,
    kVListSfixed32Sfixed64 = 192,
    kVListSfixed32Bool = 193,
    kVListSfixed32String = 194,
    kVListSfixed32Bytes = 195,
    kVListSfixed64Double = 196,
    kVListSfixed64Float = 197,
    kVListSfixed64Int32 = 198,
    kVListSfixed64Int64 = 199,
    kVListSfixed64Uint32 = 200,
    kVListSfixed64Uint64 = 201,
    kVListSfixed64Sint32 = 202,
    kVListSfixed64Sint64 = 203,
    kVListSfixed64Fixed32 = 204,
    kVListSfixed64Fixed64 = 205,
    kVListSfixed64Sfixed32 = 206,
    kVListSfixed64Sfixed64 = 207,
    kVListSfixed64Bool = 208,
    kVListSfixed64String = 209,
    kVListSfixed64Bytes = 210,
    kVListDoubleDouble = 211,
    kVListDoubleFloat = 212,
    kVListDoubleInt32 = 213,
    kVListDoubleInt64 = 214,
    kVListDoubleUint32 = 215,
    kVListDoubleUint64 = 216,
    kVListDoubleSint32 = 217,
    kVListDoubleSint64 = 218,
    kVListDoubleFixed32 = 219,
    kVListDoubleFixed64 = 220,
    kVListDoubleSfixed32 = 221,
    kVListDoubleSfixed64 = 222,
    kVListDoubleBool = 223,
    kVListDoubleString = 224,
    kVListDoubleBytes = 225,
    kVListFloatDouble = 226,
    kVListFloatFloat = 227,
    kVListFloatInt32 = 228,
    kVListFloatInt64 = 229,
    kVListFloatUint32 = 230,
    kVListFloatUint64 = 231,
    kVListFloatSint32 = 232,
    kVListFloatSint64 = 233,
    kVListFloatFixed32 = 234,
    kVListFloatFixed64 = 235,
    kVListFloatSfixed32 = 236,
    kVListFloatSfixed64 = 237,
    kVListFloatBool = 238,
    kVListFloatString = 239,
    kVListFloatBytes = 240,
    kVListBoolDouble = 241,
    kVListBoolFloat = 242,
    kVListBoolInt32 = 243,
    kVListBoolInt64 = 244,
    kVListBoolUint32 = 245,
    kVListBoolUint64 = 246,
    kVListBoolSint32 = 247,
    kVListBoolSint64 = 248,
    kVListBoolFixed32 = 249,
    kVListBoolFixed64 = 250,
    kVListBoolSfixed32 = 251,
    kVListBoolSfixed64 = 252,
    kVListBoolBool = 253,
    kVListBoolString = 254,
    kVListBoolBytes = 255,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Feature* internal_default_instance() {
    return reinterpret_cast<const Feature*>(
               &_Feature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    240;

  void Swap(Feature* other);
  friend void swap(Feature& a, Feature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Feature* New() const final {
    return CreateMaybeMessage<Feature>(NULL);
  }

  Feature* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Feature>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Feature& from);
  void MergeFrom(const Feature& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Feature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double v_double = 1;
  private:
  bool has_v_double() const;
  public:
  void clear_v_double();
  static const int kVDoubleFieldNumber = 1;
  double v_double() const;
  void set_v_double(double value);

  // float v_float = 2;
  private:
  bool has_v_float() const;
  public:
  void clear_v_float();
  static const int kVFloatFieldNumber = 2;
  float v_float() const;
  void set_v_float(float value);

  // int32 v_int32 = 3;
  private:
  bool has_v_int32() const;
  public:
  void clear_v_int32();
  static const int kVInt32FieldNumber = 3;
  ::google::protobuf::int32 v_int32() const;
  void set_v_int32(::google::protobuf::int32 value);

  // int64 v_int64 = 4;
  private:
  bool has_v_int64() const;
  public:
  void clear_v_int64();
  static const int kVInt64FieldNumber = 4;
  ::google::protobuf::int64 v_int64() const;
  void set_v_int64(::google::protobuf::int64 value);

  // uint32 v_uint32 = 5;
  private:
  bool has_v_uint32() const;
  public:
  void clear_v_uint32();
  static const int kVUint32FieldNumber = 5;
  ::google::protobuf::uint32 v_uint32() const;
  void set_v_uint32(::google::protobuf::uint32 value);

  // uint64 v_uint64 = 6;
  private:
  bool has_v_uint64() const;
  public:
  void clear_v_uint64();
  static const int kVUint64FieldNumber = 6;
  ::google::protobuf::uint64 v_uint64() const;
  void set_v_uint64(::google::protobuf::uint64 value);

  // sint32 v_sint32 = 7;
  private:
  bool has_v_sint32() const;
  public:
  void clear_v_sint32();
  static const int kVSint32FieldNumber = 7;
  ::google::protobuf::int32 v_sint32() const;
  void set_v_sint32(::google::protobuf::int32 value);

  // sint64 v_sint64 = 8;
  private:
  bool has_v_sint64() const;
  public:
  void clear_v_sint64();
  static const int kVSint64FieldNumber = 8;
  ::google::protobuf::int64 v_sint64() const;
  void set_v_sint64(::google::protobuf::int64 value);

  // fixed32 v_fixed32 = 9;
  private:
  bool has_v_fixed32() const;
  public:
  void clear_v_fixed32();
  static const int kVFixed32FieldNumber = 9;
  ::google::protobuf::uint32 v_fixed32() const;
  void set_v_fixed32(::google::protobuf::uint32 value);

  // fixed64 v_fixed64 = 10;
  private:
  bool has_v_fixed64() const;
  public:
  void clear_v_fixed64();
  static const int kVFixed64FieldNumber = 10;
  ::google::protobuf::uint64 v_fixed64() const;
  void set_v_fixed64(::google::protobuf::uint64 value);

  // sfixed32 v_sfixed32 = 11;
  private:
  bool has_v_sfixed32() const;
  public:
  void clear_v_sfixed32();
  static const int kVSfixed32FieldNumber = 11;
  ::google::protobuf::int32 v_sfixed32() const;
  void set_v_sfixed32(::google::protobuf::int32 value);

  // sfixed64 v_sfixed64 = 12;
  private:
  bool has_v_sfixed64() const;
  public:
  void clear_v_sfixed64();
  static const int kVSfixed64FieldNumber = 12;
  ::google::protobuf::int64 v_sfixed64() const;
  void set_v_sfixed64(::google::protobuf::int64 value);

  // bool v_bool = 13;
  private:
  bool has_v_bool() const;
  public:
  void clear_v_bool();
  static const int kVBoolFieldNumber = 13;
  bool v_bool() const;
  void set_v_bool(bool value);

  // string v_string = 14;
  private:
  bool has_v_string() const;
  public:
  void clear_v_string();
  static const int kVStringFieldNumber = 14;
  const ::std::string& v_string() const;
  void set_v_string(const ::std::string& value);
  #if LANG_CXX11
  void set_v_string(::std::string&& value);
  #endif
  void set_v_string(const char* value);
  void set_v_string(const char* value, size_t size);
  ::std::string* mutable_v_string();
  ::std::string* release_v_string();
  void set_allocated_v_string(::std::string* v_string);

  // bytes v_bytes = 15;
  private:
  bool has_v_bytes() const;
  public:
  void clear_v_bytes();
  static const int kVBytesFieldNumber = 15;
  const ::std::string& v_bytes() const;
  void set_v_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_v_bytes(::std::string&& value);
  #endif
  void set_v_bytes(const char* value);
  void set_v_bytes(const void* value, size_t size);
  ::std::string* mutable_v_bytes();
  ::std::string* release_v_bytes();
  void set_allocated_v_bytes(::std::string* v_bytes);

  // .feature_proto.ListDouble v_list_double = 16;
  bool has_v_list_double() const;
  void clear_v_list_double();
  static const int kVListDoubleFieldNumber = 16;
  private:
  const ::feature_proto::ListDouble& _internal_v_list_double() const;
  public:
  const ::feature_proto::ListDouble& v_list_double() const;
  ::feature_proto::ListDouble* release_v_list_double();
  ::feature_proto::ListDouble* mutable_v_list_double();
  void set_allocated_v_list_double(::feature_proto::ListDouble* v_list_double);

  // .feature_proto.ListFloat v_list_float = 17;
  bool has_v_list_float() const;
  void clear_v_list_float();
  static const int kVListFloatFieldNumber = 17;
  private:
  const ::feature_proto::ListFloat& _internal_v_list_float() const;
  public:
  const ::feature_proto::ListFloat& v_list_float() const;
  ::feature_proto::ListFloat* release_v_list_float();
  ::feature_proto::ListFloat* mutable_v_list_float();
  void set_allocated_v_list_float(::feature_proto::ListFloat* v_list_float);

  // .feature_proto.ListInt32 v_list_int32 = 18;
  bool has_v_list_int32() const;
  void clear_v_list_int32();
  static const int kVListInt32FieldNumber = 18;
  private:
  const ::feature_proto::ListInt32& _internal_v_list_int32() const;
  public:
  const ::feature_proto::ListInt32& v_list_int32() const;
  ::feature_proto::ListInt32* release_v_list_int32();
  ::feature_proto::ListInt32* mutable_v_list_int32();
  void set_allocated_v_list_int32(::feature_proto::ListInt32* v_list_int32);

  // .feature_proto.ListInt64 v_list_int64 = 19;
  bool has_v_list_int64() const;
  void clear_v_list_int64();
  static const int kVListInt64FieldNumber = 19;
  private:
  const ::feature_proto::ListInt64& _internal_v_list_int64() const;
  public:
  const ::feature_proto::ListInt64& v_list_int64() const;
  ::feature_proto::ListInt64* release_v_list_int64();
  ::feature_proto::ListInt64* mutable_v_list_int64();
  void set_allocated_v_list_int64(::feature_proto::ListInt64* v_list_int64);

  // .feature_proto.ListUint32 v_list_uint32 = 20;
  bool has_v_list_uint32() const;
  void clear_v_list_uint32();
  static const int kVListUint32FieldNumber = 20;
  private:
  const ::feature_proto::ListUint32& _internal_v_list_uint32() const;
  public:
  const ::feature_proto::ListUint32& v_list_uint32() const;
  ::feature_proto::ListUint32* release_v_list_uint32();
  ::feature_proto::ListUint32* mutable_v_list_uint32();
  void set_allocated_v_list_uint32(::feature_proto::ListUint32* v_list_uint32);

  // .feature_proto.ListUint64 v_list_uint64 = 21;
  bool has_v_list_uint64() const;
  void clear_v_list_uint64();
  static const int kVListUint64FieldNumber = 21;
  private:
  const ::feature_proto::ListUint64& _internal_v_list_uint64() const;
  public:
  const ::feature_proto::ListUint64& v_list_uint64() const;
  ::feature_proto::ListUint64* release_v_list_uint64();
  ::feature_proto::ListUint64* mutable_v_list_uint64();
  void set_allocated_v_list_uint64(::feature_proto::ListUint64* v_list_uint64);

  // .feature_proto.ListSint32 v_list_sint32 = 22;
  bool has_v_list_sint32() const;
  void clear_v_list_sint32();
  static const int kVListSint32FieldNumber = 22;
  private:
  const ::feature_proto::ListSint32& _internal_v_list_sint32() const;
  public:
  const ::feature_proto::ListSint32& v_list_sint32() const;
  ::feature_proto::ListSint32* release_v_list_sint32();
  ::feature_proto::ListSint32* mutable_v_list_sint32();
  void set_allocated_v_list_sint32(::feature_proto::ListSint32* v_list_sint32);

  // .feature_proto.ListSint64 v_list_sint64 = 23;
  bool has_v_list_sint64() const;
  void clear_v_list_sint64();
  static const int kVListSint64FieldNumber = 23;
  private:
  const ::feature_proto::ListSint64& _internal_v_list_sint64() const;
  public:
  const ::feature_proto::ListSint64& v_list_sint64() const;
  ::feature_proto::ListSint64* release_v_list_sint64();
  ::feature_proto::ListSint64* mutable_v_list_sint64();
  void set_allocated_v_list_sint64(::feature_proto::ListSint64* v_list_sint64);

  // .feature_proto.ListFixed32 v_list_fixed32 = 24;
  bool has_v_list_fixed32() const;
  void clear_v_list_fixed32();
  static const int kVListFixed32FieldNumber = 24;
  private:
  const ::feature_proto::ListFixed32& _internal_v_list_fixed32() const;
  public:
  const ::feature_proto::ListFixed32& v_list_fixed32() const;
  ::feature_proto::ListFixed32* release_v_list_fixed32();
  ::feature_proto::ListFixed32* mutable_v_list_fixed32();
  void set_allocated_v_list_fixed32(::feature_proto::ListFixed32* v_list_fixed32);

  // .feature_proto.ListFixed64 v_list_fixed64 = 25;
  bool has_v_list_fixed64() const;
  void clear_v_list_fixed64();
  static const int kVListFixed64FieldNumber = 25;
  private:
  const ::feature_proto::ListFixed64& _internal_v_list_fixed64() const;
  public:
  const ::feature_proto::ListFixed64& v_list_fixed64() const;
  ::feature_proto::ListFixed64* release_v_list_fixed64();
  ::feature_proto::ListFixed64* mutable_v_list_fixed64();
  void set_allocated_v_list_fixed64(::feature_proto::ListFixed64* v_list_fixed64);

  // .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
  bool has_v_list_sfixed32() const;
  void clear_v_list_sfixed32();
  static const int kVListSfixed32FieldNumber = 26;
  private:
  const ::feature_proto::ListSfixed32& _internal_v_list_sfixed32() const;
  public:
  const ::feature_proto::ListSfixed32& v_list_sfixed32() const;
  ::feature_proto::ListSfixed32* release_v_list_sfixed32();
  ::feature_proto::ListSfixed32* mutable_v_list_sfixed32();
  void set_allocated_v_list_sfixed32(::feature_proto::ListSfixed32* v_list_sfixed32);

  // .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
  bool has_v_list_sfixed64() const;
  void clear_v_list_sfixed64();
  static const int kVListSfixed64FieldNumber = 27;
  private:
  const ::feature_proto::ListSfixed64& _internal_v_list_sfixed64() const;
  public:
  const ::feature_proto::ListSfixed64& v_list_sfixed64() const;
  ::feature_proto::ListSfixed64* release_v_list_sfixed64();
  ::feature_proto::ListSfixed64* mutable_v_list_sfixed64();
  void set_allocated_v_list_sfixed64(::feature_proto::ListSfixed64* v_list_sfixed64);

  // .feature_proto.ListBool v_list_bool = 28;
  bool has_v_list_bool() const;
  void clear_v_list_bool();
  static const int kVListBoolFieldNumber = 28;
  private:
  const ::feature_proto::ListBool& _internal_v_list_bool() const;
  public:
  const ::feature_proto::ListBool& v_list_bool() const;
  ::feature_proto::ListBool* release_v_list_bool();
  ::feature_proto::ListBool* mutable_v_list_bool();
  void set_allocated_v_list_bool(::feature_proto::ListBool* v_list_bool);

  // .feature_proto.ListString v_list_string = 29;
  bool has_v_list_string() const;
  void clear_v_list_string();
  static const int kVListStringFieldNumber = 29;
  private:
  const ::feature_proto::ListString& _internal_v_list_string() const;
  public:
  const ::feature_proto::ListString& v_list_string() const;
  ::feature_proto::ListString* release_v_list_string();
  ::feature_proto::ListString* mutable_v_list_string();
  void set_allocated_v_list_string(::feature_proto::ListString* v_list_string);

  // .feature_proto.ListBytes v_list_bytes = 30;
  bool has_v_list_bytes() const;
  void clear_v_list_bytes();
  static const int kVListBytesFieldNumber = 30;
  private:
  const ::feature_proto::ListBytes& _internal_v_list_bytes() const;
  public:
  const ::feature_proto::ListBytes& v_list_bytes() const;
  ::feature_proto::ListBytes* release_v_list_bytes();
  ::feature_proto::ListBytes* mutable_v_list_bytes();
  void set_allocated_v_list_bytes(::feature_proto::ListBytes* v_list_bytes);

  // .feature_proto.ListStringDouble v_list_string_double = 31;
  bool has_v_list_string_double() const;
  void clear_v_list_string_double();
  static const int kVListStringDoubleFieldNumber = 31;
  private:
  const ::feature_proto::ListStringDouble& _internal_v_list_string_double() const;
  public:
  const ::feature_proto::ListStringDouble& v_list_string_double() const;
  ::feature_proto::ListStringDouble* release_v_list_string_double();
  ::feature_proto::ListStringDouble* mutable_v_list_string_double();
  void set_allocated_v_list_string_double(::feature_proto::ListStringDouble* v_list_string_double);

  // .feature_proto.ListStringFloat v_list_string_float = 32;
  bool has_v_list_string_float() const;
  void clear_v_list_string_float();
  static const int kVListStringFloatFieldNumber = 32;
  private:
  const ::feature_proto::ListStringFloat& _internal_v_list_string_float() const;
  public:
  const ::feature_proto::ListStringFloat& v_list_string_float() const;
  ::feature_proto::ListStringFloat* release_v_list_string_float();
  ::feature_proto::ListStringFloat* mutable_v_list_string_float();
  void set_allocated_v_list_string_float(::feature_proto::ListStringFloat* v_list_string_float);

  // .feature_proto.ListStringInt32 v_list_string_int32 = 33;
  bool has_v_list_string_int32() const;
  void clear_v_list_string_int32();
  static const int kVListStringInt32FieldNumber = 33;
  private:
  const ::feature_proto::ListStringInt32& _internal_v_list_string_int32() const;
  public:
  const ::feature_proto::ListStringInt32& v_list_string_int32() const;
  ::feature_proto::ListStringInt32* release_v_list_string_int32();
  ::feature_proto::ListStringInt32* mutable_v_list_string_int32();
  void set_allocated_v_list_string_int32(::feature_proto::ListStringInt32* v_list_string_int32);

  // .feature_proto.ListStringInt64 v_list_string_int64 = 34;
  bool has_v_list_string_int64() const;
  void clear_v_list_string_int64();
  static const int kVListStringInt64FieldNumber = 34;
  private:
  const ::feature_proto::ListStringInt64& _internal_v_list_string_int64() const;
  public:
  const ::feature_proto::ListStringInt64& v_list_string_int64() const;
  ::feature_proto::ListStringInt64* release_v_list_string_int64();
  ::feature_proto::ListStringInt64* mutable_v_list_string_int64();
  void set_allocated_v_list_string_int64(::feature_proto::ListStringInt64* v_list_string_int64);

  // .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
  bool has_v_list_string_uint32() const;
  void clear_v_list_string_uint32();
  static const int kVListStringUint32FieldNumber = 35;
  private:
  const ::feature_proto::ListStringUint32& _internal_v_list_string_uint32() const;
  public:
  const ::feature_proto::ListStringUint32& v_list_string_uint32() const;
  ::feature_proto::ListStringUint32* release_v_list_string_uint32();
  ::feature_proto::ListStringUint32* mutable_v_list_string_uint32();
  void set_allocated_v_list_string_uint32(::feature_proto::ListStringUint32* v_list_string_uint32);

  // .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
  bool has_v_list_string_uint64() const;
  void clear_v_list_string_uint64();
  static const int kVListStringUint64FieldNumber = 36;
  private:
  const ::feature_proto::ListStringUint64& _internal_v_list_string_uint64() const;
  public:
  const ::feature_proto::ListStringUint64& v_list_string_uint64() const;
  ::feature_proto::ListStringUint64* release_v_list_string_uint64();
  ::feature_proto::ListStringUint64* mutable_v_list_string_uint64();
  void set_allocated_v_list_string_uint64(::feature_proto::ListStringUint64* v_list_string_uint64);

  // .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
  bool has_v_list_string_sint32() const;
  void clear_v_list_string_sint32();
  static const int kVListStringSint32FieldNumber = 37;
  private:
  const ::feature_proto::ListStringSint32& _internal_v_list_string_sint32() const;
  public:
  const ::feature_proto::ListStringSint32& v_list_string_sint32() const;
  ::feature_proto::ListStringSint32* release_v_list_string_sint32();
  ::feature_proto::ListStringSint32* mutable_v_list_string_sint32();
  void set_allocated_v_list_string_sint32(::feature_proto::ListStringSint32* v_list_string_sint32);

  // .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
  bool has_v_list_string_sint64() const;
  void clear_v_list_string_sint64();
  static const int kVListStringSint64FieldNumber = 38;
  private:
  const ::feature_proto::ListStringSint64& _internal_v_list_string_sint64() const;
  public:
  const ::feature_proto::ListStringSint64& v_list_string_sint64() const;
  ::feature_proto::ListStringSint64* release_v_list_string_sint64();
  ::feature_proto::ListStringSint64* mutable_v_list_string_sint64();
  void set_allocated_v_list_string_sint64(::feature_proto::ListStringSint64* v_list_string_sint64);

  // .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
  bool has_v_list_string_fixed32() const;
  void clear_v_list_string_fixed32();
  static const int kVListStringFixed32FieldNumber = 39;
  private:
  const ::feature_proto::ListStringFixed32& _internal_v_list_string_fixed32() const;
  public:
  const ::feature_proto::ListStringFixed32& v_list_string_fixed32() const;
  ::feature_proto::ListStringFixed32* release_v_list_string_fixed32();
  ::feature_proto::ListStringFixed32* mutable_v_list_string_fixed32();
  void set_allocated_v_list_string_fixed32(::feature_proto::ListStringFixed32* v_list_string_fixed32);

  // .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
  bool has_v_list_string_fixed64() const;
  void clear_v_list_string_fixed64();
  static const int kVListStringFixed64FieldNumber = 40;
  private:
  const ::feature_proto::ListStringFixed64& _internal_v_list_string_fixed64() const;
  public:
  const ::feature_proto::ListStringFixed64& v_list_string_fixed64() const;
  ::feature_proto::ListStringFixed64* release_v_list_string_fixed64();
  ::feature_proto::ListStringFixed64* mutable_v_list_string_fixed64();
  void set_allocated_v_list_string_fixed64(::feature_proto::ListStringFixed64* v_list_string_fixed64);

  // .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
  bool has_v_list_string_sfixed32() const;
  void clear_v_list_string_sfixed32();
  static const int kVListStringSfixed32FieldNumber = 41;
  private:
  const ::feature_proto::ListStringSfixed32& _internal_v_list_string_sfixed32() const;
  public:
  const ::feature_proto::ListStringSfixed32& v_list_string_sfixed32() const;
  ::feature_proto::ListStringSfixed32* release_v_list_string_sfixed32();
  ::feature_proto::ListStringSfixed32* mutable_v_list_string_sfixed32();
  void set_allocated_v_list_string_sfixed32(::feature_proto::ListStringSfixed32* v_list_string_sfixed32);

  // .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
  bool has_v_list_string_sfixed64() const;
  void clear_v_list_string_sfixed64();
  static const int kVListStringSfixed64FieldNumber = 42;
  private:
  const ::feature_proto::ListStringSfixed64& _internal_v_list_string_sfixed64() const;
  public:
  const ::feature_proto::ListStringSfixed64& v_list_string_sfixed64() const;
  ::feature_proto::ListStringSfixed64* release_v_list_string_sfixed64();
  ::feature_proto::ListStringSfixed64* mutable_v_list_string_sfixed64();
  void set_allocated_v_list_string_sfixed64(::feature_proto::ListStringSfixed64* v_list_string_sfixed64);

  // .feature_proto.ListStringBool v_list_string_bool = 43;
  bool has_v_list_string_bool() const;
  void clear_v_list_string_bool();
  static const int kVListStringBoolFieldNumber = 43;
  private:
  const ::feature_proto::ListStringBool& _internal_v_list_string_bool() const;
  public:
  const ::feature_proto::ListStringBool& v_list_string_bool() const;
  ::feature_proto::ListStringBool* release_v_list_string_bool();
  ::feature_proto::ListStringBool* mutable_v_list_string_bool();
  void set_allocated_v_list_string_bool(::feature_proto::ListStringBool* v_list_string_bool);

  // .feature_proto.ListStringString v_list_string_string = 44;
  bool has_v_list_string_string() const;
  void clear_v_list_string_string();
  static const int kVListStringStringFieldNumber = 44;
  private:
  const ::feature_proto::ListStringString& _internal_v_list_string_string() const;
  public:
  const ::feature_proto::ListStringString& v_list_string_string() const;
  ::feature_proto::ListStringString* release_v_list_string_string();
  ::feature_proto::ListStringString* mutable_v_list_string_string();
  void set_allocated_v_list_string_string(::feature_proto::ListStringString* v_list_string_string);

  // .feature_proto.ListStringBytes v_list_string_bytes = 45;
  bool has_v_list_string_bytes() const;
  void clear_v_list_string_bytes();
  static const int kVListStringBytesFieldNumber = 45;
  private:
  const ::feature_proto::ListStringBytes& _internal_v_list_string_bytes() const;
  public:
  const ::feature_proto::ListStringBytes& v_list_string_bytes() const;
  ::feature_proto::ListStringBytes* release_v_list_string_bytes();
  ::feature_proto::ListStringBytes* mutable_v_list_string_bytes();
  void set_allocated_v_list_string_bytes(::feature_proto::ListStringBytes* v_list_string_bytes);

  // .feature_proto.ListBytesDouble v_list_bytes_double = 46;
  bool has_v_list_bytes_double() const;
  void clear_v_list_bytes_double();
  static const int kVListBytesDoubleFieldNumber = 46;
  private:
  const ::feature_proto::ListBytesDouble& _internal_v_list_bytes_double() const;
  public:
  const ::feature_proto::ListBytesDouble& v_list_bytes_double() const;
  ::feature_proto::ListBytesDouble* release_v_list_bytes_double();
  ::feature_proto::ListBytesDouble* mutable_v_list_bytes_double();
  void set_allocated_v_list_bytes_double(::feature_proto::ListBytesDouble* v_list_bytes_double);

  // .feature_proto.ListBytesFloat v_list_bytes_float = 47;
  bool has_v_list_bytes_float() const;
  void clear_v_list_bytes_float();
  static const int kVListBytesFloatFieldNumber = 47;
  private:
  const ::feature_proto::ListBytesFloat& _internal_v_list_bytes_float() const;
  public:
  const ::feature_proto::ListBytesFloat& v_list_bytes_float() const;
  ::feature_proto::ListBytesFloat* release_v_list_bytes_float();
  ::feature_proto::ListBytesFloat* mutable_v_list_bytes_float();
  void set_allocated_v_list_bytes_float(::feature_proto::ListBytesFloat* v_list_bytes_float);

  // .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
  bool has_v_list_bytes_int32() const;
  void clear_v_list_bytes_int32();
  static const int kVListBytesInt32FieldNumber = 48;
  private:
  const ::feature_proto::ListBytesInt32& _internal_v_list_bytes_int32() const;
  public:
  const ::feature_proto::ListBytesInt32& v_list_bytes_int32() const;
  ::feature_proto::ListBytesInt32* release_v_list_bytes_int32();
  ::feature_proto::ListBytesInt32* mutable_v_list_bytes_int32();
  void set_allocated_v_list_bytes_int32(::feature_proto::ListBytesInt32* v_list_bytes_int32);

  // .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
  bool has_v_list_bytes_int64() const;
  void clear_v_list_bytes_int64();
  static const int kVListBytesInt64FieldNumber = 49;
  private:
  const ::feature_proto::ListBytesInt64& _internal_v_list_bytes_int64() const;
  public:
  const ::feature_proto::ListBytesInt64& v_list_bytes_int64() const;
  ::feature_proto::ListBytesInt64* release_v_list_bytes_int64();
  ::feature_proto::ListBytesInt64* mutable_v_list_bytes_int64();
  void set_allocated_v_list_bytes_int64(::feature_proto::ListBytesInt64* v_list_bytes_int64);

  // .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
  bool has_v_list_bytes_uint32() const;
  void clear_v_list_bytes_uint32();
  static const int kVListBytesUint32FieldNumber = 50;
  private:
  const ::feature_proto::ListBytesUint32& _internal_v_list_bytes_uint32() const;
  public:
  const ::feature_proto::ListBytesUint32& v_list_bytes_uint32() const;
  ::feature_proto::ListBytesUint32* release_v_list_bytes_uint32();
  ::feature_proto::ListBytesUint32* mutable_v_list_bytes_uint32();
  void set_allocated_v_list_bytes_uint32(::feature_proto::ListBytesUint32* v_list_bytes_uint32);

  // .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
  bool has_v_list_bytes_uint64() const;
  void clear_v_list_bytes_uint64();
  static const int kVListBytesUint64FieldNumber = 51;
  private:
  const ::feature_proto::ListBytesUint64& _internal_v_list_bytes_uint64() const;
  public:
  const ::feature_proto::ListBytesUint64& v_list_bytes_uint64() const;
  ::feature_proto::ListBytesUint64* release_v_list_bytes_uint64();
  ::feature_proto::ListBytesUint64* mutable_v_list_bytes_uint64();
  void set_allocated_v_list_bytes_uint64(::feature_proto::ListBytesUint64* v_list_bytes_uint64);

  // .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
  bool has_v_list_bytes_sint32() const;
  void clear_v_list_bytes_sint32();
  static const int kVListBytesSint32FieldNumber = 52;
  private:
  const ::feature_proto::ListBytesSint32& _internal_v_list_bytes_sint32() const;
  public:
  const ::feature_proto::ListBytesSint32& v_list_bytes_sint32() const;
  ::feature_proto::ListBytesSint32* release_v_list_bytes_sint32();
  ::feature_proto::ListBytesSint32* mutable_v_list_bytes_sint32();
  void set_allocated_v_list_bytes_sint32(::feature_proto::ListBytesSint32* v_list_bytes_sint32);

  // .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
  bool has_v_list_bytes_sint64() const;
  void clear_v_list_bytes_sint64();
  static const int kVListBytesSint64FieldNumber = 53;
  private:
  const ::feature_proto::ListBytesSint64& _internal_v_list_bytes_sint64() const;
  public:
  const ::feature_proto::ListBytesSint64& v_list_bytes_sint64() const;
  ::feature_proto::ListBytesSint64* release_v_list_bytes_sint64();
  ::feature_proto::ListBytesSint64* mutable_v_list_bytes_sint64();
  void set_allocated_v_list_bytes_sint64(::feature_proto::ListBytesSint64* v_list_bytes_sint64);

  // .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
  bool has_v_list_bytes_fixed32() const;
  void clear_v_list_bytes_fixed32();
  static const int kVListBytesFixed32FieldNumber = 54;
  private:
  const ::feature_proto::ListBytesFixed32& _internal_v_list_bytes_fixed32() const;
  public:
  const ::feature_proto::ListBytesFixed32& v_list_bytes_fixed32() const;
  ::feature_proto::ListBytesFixed32* release_v_list_bytes_fixed32();
  ::feature_proto::ListBytesFixed32* mutable_v_list_bytes_fixed32();
  void set_allocated_v_list_bytes_fixed32(::feature_proto::ListBytesFixed32* v_list_bytes_fixed32);

  // .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
  bool has_v_list_bytes_fixed64() const;
  void clear_v_list_bytes_fixed64();
  static const int kVListBytesFixed64FieldNumber = 55;
  private:
  const ::feature_proto::ListBytesFixed64& _internal_v_list_bytes_fixed64() const;
  public:
  const ::feature_proto::ListBytesFixed64& v_list_bytes_fixed64() const;
  ::feature_proto::ListBytesFixed64* release_v_list_bytes_fixed64();
  ::feature_proto::ListBytesFixed64* mutable_v_list_bytes_fixed64();
  void set_allocated_v_list_bytes_fixed64(::feature_proto::ListBytesFixed64* v_list_bytes_fixed64);

  // .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
  bool has_v_list_bytes_sfixed32() const;
  void clear_v_list_bytes_sfixed32();
  static const int kVListBytesSfixed32FieldNumber = 56;
  private:
  const ::feature_proto::ListBytesSfixed32& _internal_v_list_bytes_sfixed32() const;
  public:
  const ::feature_proto::ListBytesSfixed32& v_list_bytes_sfixed32() const;
  ::feature_proto::ListBytesSfixed32* release_v_list_bytes_sfixed32();
  ::feature_proto::ListBytesSfixed32* mutable_v_list_bytes_sfixed32();
  void set_allocated_v_list_bytes_sfixed32(::feature_proto::ListBytesSfixed32* v_list_bytes_sfixed32);

  // .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
  bool has_v_list_bytes_sfixed64() const;
  void clear_v_list_bytes_sfixed64();
  static const int kVListBytesSfixed64FieldNumber = 57;
  private:
  const ::feature_proto::ListBytesSfixed64& _internal_v_list_bytes_sfixed64() const;
  public:
  const ::feature_proto::ListBytesSfixed64& v_list_bytes_sfixed64() const;
  ::feature_proto::ListBytesSfixed64* release_v_list_bytes_sfixed64();
  ::feature_proto::ListBytesSfixed64* mutable_v_list_bytes_sfixed64();
  void set_allocated_v_list_bytes_sfixed64(::feature_proto::ListBytesSfixed64* v_list_bytes_sfixed64);

  // .feature_proto.ListBytesBool v_list_bytes_bool = 58;
  bool has_v_list_bytes_bool() const;
  void clear_v_list_bytes_bool();
  static const int kVListBytesBoolFieldNumber = 58;
  private:
  const ::feature_proto::ListBytesBool& _internal_v_list_bytes_bool() const;
  public:
  const ::feature_proto::ListBytesBool& v_list_bytes_bool() const;
  ::feature_proto::ListBytesBool* release_v_list_bytes_bool();
  ::feature_proto::ListBytesBool* mutable_v_list_bytes_bool();
  void set_allocated_v_list_bytes_bool(::feature_proto::ListBytesBool* v_list_bytes_bool);

  // .feature_proto.ListBytesString v_list_bytes_string = 59;
  bool has_v_list_bytes_string() const;
  void clear_v_list_bytes_string();
  static const int kVListBytesStringFieldNumber = 59;
  private:
  const ::feature_proto::ListBytesString& _internal_v_list_bytes_string() const;
  public:
  const ::feature_proto::ListBytesString& v_list_bytes_string() const;
  ::feature_proto::ListBytesString* release_v_list_bytes_string();
  ::feature_proto::ListBytesString* mutable_v_list_bytes_string();
  void set_allocated_v_list_bytes_string(::feature_proto::ListBytesString* v_list_bytes_string);

  // .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
  bool has_v_list_bytes_bytes() const;
  void clear_v_list_bytes_bytes();
  static const int kVListBytesBytesFieldNumber = 60;
  private:
  const ::feature_proto::ListBytesBytes& _internal_v_list_bytes_bytes() const;
  public:
  const ::feature_proto::ListBytesBytes& v_list_bytes_bytes() const;
  ::feature_proto::ListBytesBytes* release_v_list_bytes_bytes();
  ::feature_proto::ListBytesBytes* mutable_v_list_bytes_bytes();
  void set_allocated_v_list_bytes_bytes(::feature_proto::ListBytesBytes* v_list_bytes_bytes);

  // .feature_proto.ListInt32Double v_list_int32_double = 61;
  bool has_v_list_int32_double() const;
  void clear_v_list_int32_double();
  static const int kVListInt32DoubleFieldNumber = 61;
  private:
  const ::feature_proto::ListInt32Double& _internal_v_list_int32_double() const;
  public:
  const ::feature_proto::ListInt32Double& v_list_int32_double() const;
  ::feature_proto::ListInt32Double* release_v_list_int32_double();
  ::feature_proto::ListInt32Double* mutable_v_list_int32_double();
  void set_allocated_v_list_int32_double(::feature_proto::ListInt32Double* v_list_int32_double);

  // .feature_proto.ListInt32Float v_list_int32_float = 62;
  bool has_v_list_int32_float() const;
  void clear_v_list_int32_float();
  static const int kVListInt32FloatFieldNumber = 62;
  private:
  const ::feature_proto::ListInt32Float& _internal_v_list_int32_float() const;
  public:
  const ::feature_proto::ListInt32Float& v_list_int32_float() const;
  ::feature_proto::ListInt32Float* release_v_list_int32_float();
  ::feature_proto::ListInt32Float* mutable_v_list_int32_float();
  void set_allocated_v_list_int32_float(::feature_proto::ListInt32Float* v_list_int32_float);

  // .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
  bool has_v_list_int32_int32() const;
  void clear_v_list_int32_int32();
  static const int kVListInt32Int32FieldNumber = 63;
  private:
  const ::feature_proto::ListInt32Int32& _internal_v_list_int32_int32() const;
  public:
  const ::feature_proto::ListInt32Int32& v_list_int32_int32() const;
  ::feature_proto::ListInt32Int32* release_v_list_int32_int32();
  ::feature_proto::ListInt32Int32* mutable_v_list_int32_int32();
  void set_allocated_v_list_int32_int32(::feature_proto::ListInt32Int32* v_list_int32_int32);

  // .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
  bool has_v_list_int32_int64() const;
  void clear_v_list_int32_int64();
  static const int kVListInt32Int64FieldNumber = 64;
  private:
  const ::feature_proto::ListInt32Int64& _internal_v_list_int32_int64() const;
  public:
  const ::feature_proto::ListInt32Int64& v_list_int32_int64() const;
  ::feature_proto::ListInt32Int64* release_v_list_int32_int64();
  ::feature_proto::ListInt32Int64* mutable_v_list_int32_int64();
  void set_allocated_v_list_int32_int64(::feature_proto::ListInt32Int64* v_list_int32_int64);

  // .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
  bool has_v_list_int32_uint32() const;
  void clear_v_list_int32_uint32();
  static const int kVListInt32Uint32FieldNumber = 65;
  private:
  const ::feature_proto::ListInt32Uint32& _internal_v_list_int32_uint32() const;
  public:
  const ::feature_proto::ListInt32Uint32& v_list_int32_uint32() const;
  ::feature_proto::ListInt32Uint32* release_v_list_int32_uint32();
  ::feature_proto::ListInt32Uint32* mutable_v_list_int32_uint32();
  void set_allocated_v_list_int32_uint32(::feature_proto::ListInt32Uint32* v_list_int32_uint32);

  // .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
  bool has_v_list_int32_uint64() const;
  void clear_v_list_int32_uint64();
  static const int kVListInt32Uint64FieldNumber = 66;
  private:
  const ::feature_proto::ListInt32Uint64& _internal_v_list_int32_uint64() const;
  public:
  const ::feature_proto::ListInt32Uint64& v_list_int32_uint64() const;
  ::feature_proto::ListInt32Uint64* release_v_list_int32_uint64();
  ::feature_proto::ListInt32Uint64* mutable_v_list_int32_uint64();
  void set_allocated_v_list_int32_uint64(::feature_proto::ListInt32Uint64* v_list_int32_uint64);

  // .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
  bool has_v_list_int32_sint32() const;
  void clear_v_list_int32_sint32();
  static const int kVListInt32Sint32FieldNumber = 67;
  private:
  const ::feature_proto::ListInt32Sint32& _internal_v_list_int32_sint32() const;
  public:
  const ::feature_proto::ListInt32Sint32& v_list_int32_sint32() const;
  ::feature_proto::ListInt32Sint32* release_v_list_int32_sint32();
  ::feature_proto::ListInt32Sint32* mutable_v_list_int32_sint32();
  void set_allocated_v_list_int32_sint32(::feature_proto::ListInt32Sint32* v_list_int32_sint32);

  // .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
  bool has_v_list_int32_sint64() const;
  void clear_v_list_int32_sint64();
  static const int kVListInt32Sint64FieldNumber = 68;
  private:
  const ::feature_proto::ListInt32Sint64& _internal_v_list_int32_sint64() const;
  public:
  const ::feature_proto::ListInt32Sint64& v_list_int32_sint64() const;
  ::feature_proto::ListInt32Sint64* release_v_list_int32_sint64();
  ::feature_proto::ListInt32Sint64* mutable_v_list_int32_sint64();
  void set_allocated_v_list_int32_sint64(::feature_proto::ListInt32Sint64* v_list_int32_sint64);

  // .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
  bool has_v_list_int32_fixed32() const;
  void clear_v_list_int32_fixed32();
  static const int kVListInt32Fixed32FieldNumber = 69;
  private:
  const ::feature_proto::ListInt32Fixed32& _internal_v_list_int32_fixed32() const;
  public:
  const ::feature_proto::ListInt32Fixed32& v_list_int32_fixed32() const;
  ::feature_proto::ListInt32Fixed32* release_v_list_int32_fixed32();
  ::feature_proto::ListInt32Fixed32* mutable_v_list_int32_fixed32();
  void set_allocated_v_list_int32_fixed32(::feature_proto::ListInt32Fixed32* v_list_int32_fixed32);

  // .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
  bool has_v_list_int32_fixed64() const;
  void clear_v_list_int32_fixed64();
  static const int kVListInt32Fixed64FieldNumber = 70;
  private:
  const ::feature_proto::ListInt32Fixed64& _internal_v_list_int32_fixed64() const;
  public:
  const ::feature_proto::ListInt32Fixed64& v_list_int32_fixed64() const;
  ::feature_proto::ListInt32Fixed64* release_v_list_int32_fixed64();
  ::feature_proto::ListInt32Fixed64* mutable_v_list_int32_fixed64();
  void set_allocated_v_list_int32_fixed64(::feature_proto::ListInt32Fixed64* v_list_int32_fixed64);

  // .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
  bool has_v_list_int32_sfixed32() const;
  void clear_v_list_int32_sfixed32();
  static const int kVListInt32Sfixed32FieldNumber = 71;
  private:
  const ::feature_proto::ListInt32Sfixed32& _internal_v_list_int32_sfixed32() const;
  public:
  const ::feature_proto::ListInt32Sfixed32& v_list_int32_sfixed32() const;
  ::feature_proto::ListInt32Sfixed32* release_v_list_int32_sfixed32();
  ::feature_proto::ListInt32Sfixed32* mutable_v_list_int32_sfixed32();
  void set_allocated_v_list_int32_sfixed32(::feature_proto::ListInt32Sfixed32* v_list_int32_sfixed32);

  // .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
  bool has_v_list_int32_sfixed64() const;
  void clear_v_list_int32_sfixed64();
  static const int kVListInt32Sfixed64FieldNumber = 72;
  private:
  const ::feature_proto::ListInt32Sfixed64& _internal_v_list_int32_sfixed64() const;
  public:
  const ::feature_proto::ListInt32Sfixed64& v_list_int32_sfixed64() const;
  ::feature_proto::ListInt32Sfixed64* release_v_list_int32_sfixed64();
  ::feature_proto::ListInt32Sfixed64* mutable_v_list_int32_sfixed64();
  void set_allocated_v_list_int32_sfixed64(::feature_proto::ListInt32Sfixed64* v_list_int32_sfixed64);

  // .feature_proto.ListInt32Bool v_list_int32_bool = 73;
  bool has_v_list_int32_bool() const;
  void clear_v_list_int32_bool();
  static const int kVListInt32BoolFieldNumber = 73;
  private:
  const ::feature_proto::ListInt32Bool& _internal_v_list_int32_bool() const;
  public:
  const ::feature_proto::ListInt32Bool& v_list_int32_bool() const;
  ::feature_proto::ListInt32Bool* release_v_list_int32_bool();
  ::feature_proto::ListInt32Bool* mutable_v_list_int32_bool();
  void set_allocated_v_list_int32_bool(::feature_proto::ListInt32Bool* v_list_int32_bool);

  // .feature_proto.ListInt32String v_list_int32_string = 74;
  bool has_v_list_int32_string() const;
  void clear_v_list_int32_string();
  static const int kVListInt32StringFieldNumber = 74;
  private:
  const ::feature_proto::ListInt32String& _internal_v_list_int32_string() const;
  public:
  const ::feature_proto::ListInt32String& v_list_int32_string() const;
  ::feature_proto::ListInt32String* release_v_list_int32_string();
  ::feature_proto::ListInt32String* mutable_v_list_int32_string();
  void set_allocated_v_list_int32_string(::feature_proto::ListInt32String* v_list_int32_string);

  // .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
  bool has_v_list_int32_bytes() const;
  void clear_v_list_int32_bytes();
  static const int kVListInt32BytesFieldNumber = 75;
  private:
  const ::feature_proto::ListInt32Bytes& _internal_v_list_int32_bytes() const;
  public:
  const ::feature_proto::ListInt32Bytes& v_list_int32_bytes() const;
  ::feature_proto::ListInt32Bytes* release_v_list_int32_bytes();
  ::feature_proto::ListInt32Bytes* mutable_v_list_int32_bytes();
  void set_allocated_v_list_int32_bytes(::feature_proto::ListInt32Bytes* v_list_int32_bytes);

  // .feature_proto.ListInt64Double v_list_int64_double = 76;
  bool has_v_list_int64_double() const;
  void clear_v_list_int64_double();
  static const int kVListInt64DoubleFieldNumber = 76;
  private:
  const ::feature_proto::ListInt64Double& _internal_v_list_int64_double() const;
  public:
  const ::feature_proto::ListInt64Double& v_list_int64_double() const;
  ::feature_proto::ListInt64Double* release_v_list_int64_double();
  ::feature_proto::ListInt64Double* mutable_v_list_int64_double();
  void set_allocated_v_list_int64_double(::feature_proto::ListInt64Double* v_list_int64_double);

  // .feature_proto.ListInt64Float v_list_int64_float = 77;
  bool has_v_list_int64_float() const;
  void clear_v_list_int64_float();
  static const int kVListInt64FloatFieldNumber = 77;
  private:
  const ::feature_proto::ListInt64Float& _internal_v_list_int64_float() const;
  public:
  const ::feature_proto::ListInt64Float& v_list_int64_float() const;
  ::feature_proto::ListInt64Float* release_v_list_int64_float();
  ::feature_proto::ListInt64Float* mutable_v_list_int64_float();
  void set_allocated_v_list_int64_float(::feature_proto::ListInt64Float* v_list_int64_float);

  // .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
  bool has_v_list_int64_int32() const;
  void clear_v_list_int64_int32();
  static const int kVListInt64Int32FieldNumber = 78;
  private:
  const ::feature_proto::ListInt64Int32& _internal_v_list_int64_int32() const;
  public:
  const ::feature_proto::ListInt64Int32& v_list_int64_int32() const;
  ::feature_proto::ListInt64Int32* release_v_list_int64_int32();
  ::feature_proto::ListInt64Int32* mutable_v_list_int64_int32();
  void set_allocated_v_list_int64_int32(::feature_proto::ListInt64Int32* v_list_int64_int32);

  // .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
  bool has_v_list_int64_int64() const;
  void clear_v_list_int64_int64();
  static const int kVListInt64Int64FieldNumber = 79;
  private:
  const ::feature_proto::ListInt64Int64& _internal_v_list_int64_int64() const;
  public:
  const ::feature_proto::ListInt64Int64& v_list_int64_int64() const;
  ::feature_proto::ListInt64Int64* release_v_list_int64_int64();
  ::feature_proto::ListInt64Int64* mutable_v_list_int64_int64();
  void set_allocated_v_list_int64_int64(::feature_proto::ListInt64Int64* v_list_int64_int64);

  // .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
  bool has_v_list_int64_uint32() const;
  void clear_v_list_int64_uint32();
  static const int kVListInt64Uint32FieldNumber = 80;
  private:
  const ::feature_proto::ListInt64Uint32& _internal_v_list_int64_uint32() const;
  public:
  const ::feature_proto::ListInt64Uint32& v_list_int64_uint32() const;
  ::feature_proto::ListInt64Uint32* release_v_list_int64_uint32();
  ::feature_proto::ListInt64Uint32* mutable_v_list_int64_uint32();
  void set_allocated_v_list_int64_uint32(::feature_proto::ListInt64Uint32* v_list_int64_uint32);

  // .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
  bool has_v_list_int64_uint64() const;
  void clear_v_list_int64_uint64();
  static const int kVListInt64Uint64FieldNumber = 81;
  private:
  const ::feature_proto::ListInt64Uint64& _internal_v_list_int64_uint64() const;
  public:
  const ::feature_proto::ListInt64Uint64& v_list_int64_uint64() const;
  ::feature_proto::ListInt64Uint64* release_v_list_int64_uint64();
  ::feature_proto::ListInt64Uint64* mutable_v_list_int64_uint64();
  void set_allocated_v_list_int64_uint64(::feature_proto::ListInt64Uint64* v_list_int64_uint64);

  // .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
  bool has_v_list_int64_sint32() const;
  void clear_v_list_int64_sint32();
  static const int kVListInt64Sint32FieldNumber = 82;
  private:
  const ::feature_proto::ListInt64Sint32& _internal_v_list_int64_sint32() const;
  public:
  const ::feature_proto::ListInt64Sint32& v_list_int64_sint32() const;
  ::feature_proto::ListInt64Sint32* release_v_list_int64_sint32();
  ::feature_proto::ListInt64Sint32* mutable_v_list_int64_sint32();
  void set_allocated_v_list_int64_sint32(::feature_proto::ListInt64Sint32* v_list_int64_sint32);

  // .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
  bool has_v_list_int64_sint64() const;
  void clear_v_list_int64_sint64();
  static const int kVListInt64Sint64FieldNumber = 83;
  private:
  const ::feature_proto::ListInt64Sint64& _internal_v_list_int64_sint64() const;
  public:
  const ::feature_proto::ListInt64Sint64& v_list_int64_sint64() const;
  ::feature_proto::ListInt64Sint64* release_v_list_int64_sint64();
  ::feature_proto::ListInt64Sint64* mutable_v_list_int64_sint64();
  void set_allocated_v_list_int64_sint64(::feature_proto::ListInt64Sint64* v_list_int64_sint64);

  // .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
  bool has_v_list_int64_fixed32() const;
  void clear_v_list_int64_fixed32();
  static const int kVListInt64Fixed32FieldNumber = 84;
  private:
  const ::feature_proto::ListInt64Fixed32& _internal_v_list_int64_fixed32() const;
  public:
  const ::feature_proto::ListInt64Fixed32& v_list_int64_fixed32() const;
  ::feature_proto::ListInt64Fixed32* release_v_list_int64_fixed32();
  ::feature_proto::ListInt64Fixed32* mutable_v_list_int64_fixed32();
  void set_allocated_v_list_int64_fixed32(::feature_proto::ListInt64Fixed32* v_list_int64_fixed32);

  // .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
  bool has_v_list_int64_fixed64() const;
  void clear_v_list_int64_fixed64();
  static const int kVListInt64Fixed64FieldNumber = 85;
  private:
  const ::feature_proto::ListInt64Fixed64& _internal_v_list_int64_fixed64() const;
  public:
  const ::feature_proto::ListInt64Fixed64& v_list_int64_fixed64() const;
  ::feature_proto::ListInt64Fixed64* release_v_list_int64_fixed64();
  ::feature_proto::ListInt64Fixed64* mutable_v_list_int64_fixed64();
  void set_allocated_v_list_int64_fixed64(::feature_proto::ListInt64Fixed64* v_list_int64_fixed64);

  // .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
  bool has_v_list_int64_sfixed32() const;
  void clear_v_list_int64_sfixed32();
  static const int kVListInt64Sfixed32FieldNumber = 86;
  private:
  const ::feature_proto::ListInt64Sfixed32& _internal_v_list_int64_sfixed32() const;
  public:
  const ::feature_proto::ListInt64Sfixed32& v_list_int64_sfixed32() const;
  ::feature_proto::ListInt64Sfixed32* release_v_list_int64_sfixed32();
  ::feature_proto::ListInt64Sfixed32* mutable_v_list_int64_sfixed32();
  void set_allocated_v_list_int64_sfixed32(::feature_proto::ListInt64Sfixed32* v_list_int64_sfixed32);

  // .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
  bool has_v_list_int64_sfixed64() const;
  void clear_v_list_int64_sfixed64();
  static const int kVListInt64Sfixed64FieldNumber = 87;
  private:
  const ::feature_proto::ListInt64Sfixed64& _internal_v_list_int64_sfixed64() const;
  public:
  const ::feature_proto::ListInt64Sfixed64& v_list_int64_sfixed64() const;
  ::feature_proto::ListInt64Sfixed64* release_v_list_int64_sfixed64();
  ::feature_proto::ListInt64Sfixed64* mutable_v_list_int64_sfixed64();
  void set_allocated_v_list_int64_sfixed64(::feature_proto::ListInt64Sfixed64* v_list_int64_sfixed64);

  // .feature_proto.ListInt64Bool v_list_int64_bool = 88;
  bool has_v_list_int64_bool() const;
  void clear_v_list_int64_bool();
  static const int kVListInt64BoolFieldNumber = 88;
  private:
  const ::feature_proto::ListInt64Bool& _internal_v_list_int64_bool() const;
  public:
  const ::feature_proto::ListInt64Bool& v_list_int64_bool() const;
  ::feature_proto::ListInt64Bool* release_v_list_int64_bool();
  ::feature_proto::ListInt64Bool* mutable_v_list_int64_bool();
  void set_allocated_v_list_int64_bool(::feature_proto::ListInt64Bool* v_list_int64_bool);

  // .feature_proto.ListInt64String v_list_int64_string = 89;
  bool has_v_list_int64_string() const;
  void clear_v_list_int64_string();
  static const int kVListInt64StringFieldNumber = 89;
  private:
  const ::feature_proto::ListInt64String& _internal_v_list_int64_string() const;
  public:
  const ::feature_proto::ListInt64String& v_list_int64_string() const;
  ::feature_proto::ListInt64String* release_v_list_int64_string();
  ::feature_proto::ListInt64String* mutable_v_list_int64_string();
  void set_allocated_v_list_int64_string(::feature_proto::ListInt64String* v_list_int64_string);

  // .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
  bool has_v_list_int64_bytes() const;
  void clear_v_list_int64_bytes();
  static const int kVListInt64BytesFieldNumber = 90;
  private:
  const ::feature_proto::ListInt64Bytes& _internal_v_list_int64_bytes() const;
  public:
  const ::feature_proto::ListInt64Bytes& v_list_int64_bytes() const;
  ::feature_proto::ListInt64Bytes* release_v_list_int64_bytes();
  ::feature_proto::ListInt64Bytes* mutable_v_list_int64_bytes();
  void set_allocated_v_list_int64_bytes(::feature_proto::ListInt64Bytes* v_list_int64_bytes);

  // .feature_proto.ListUint32Double v_list_uint32_double = 91;
  bool has_v_list_uint32_double() const;
  void clear_v_list_uint32_double();
  static const int kVListUint32DoubleFieldNumber = 91;
  private:
  const ::feature_proto::ListUint32Double& _internal_v_list_uint32_double() const;
  public:
  const ::feature_proto::ListUint32Double& v_list_uint32_double() const;
  ::feature_proto::ListUint32Double* release_v_list_uint32_double();
  ::feature_proto::ListUint32Double* mutable_v_list_uint32_double();
  void set_allocated_v_list_uint32_double(::feature_proto::ListUint32Double* v_list_uint32_double);

  // .feature_proto.ListUint32Float v_list_uint32_float = 92;
  bool has_v_list_uint32_float() const;
  void clear_v_list_uint32_float();
  static const int kVListUint32FloatFieldNumber = 92;
  private:
  const ::feature_proto::ListUint32Float& _internal_v_list_uint32_float() const;
  public:
  const ::feature_proto::ListUint32Float& v_list_uint32_float() const;
  ::feature_proto::ListUint32Float* release_v_list_uint32_float();
  ::feature_proto::ListUint32Float* mutable_v_list_uint32_float();
  void set_allocated_v_list_uint32_float(::feature_proto::ListUint32Float* v_list_uint32_float);

  // .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
  bool has_v_list_uint32_int32() const;
  void clear_v_list_uint32_int32();
  static const int kVListUint32Int32FieldNumber = 93;
  private:
  const ::feature_proto::ListUint32Int32& _internal_v_list_uint32_int32() const;
  public:
  const ::feature_proto::ListUint32Int32& v_list_uint32_int32() const;
  ::feature_proto::ListUint32Int32* release_v_list_uint32_int32();
  ::feature_proto::ListUint32Int32* mutable_v_list_uint32_int32();
  void set_allocated_v_list_uint32_int32(::feature_proto::ListUint32Int32* v_list_uint32_int32);

  // .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
  bool has_v_list_uint32_int64() const;
  void clear_v_list_uint32_int64();
  static const int kVListUint32Int64FieldNumber = 94;
  private:
  const ::feature_proto::ListUint32Int64& _internal_v_list_uint32_int64() const;
  public:
  const ::feature_proto::ListUint32Int64& v_list_uint32_int64() const;
  ::feature_proto::ListUint32Int64* release_v_list_uint32_int64();
  ::feature_proto::ListUint32Int64* mutable_v_list_uint32_int64();
  void set_allocated_v_list_uint32_int64(::feature_proto::ListUint32Int64* v_list_uint32_int64);

  // .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
  bool has_v_list_uint32_uint32() const;
  void clear_v_list_uint32_uint32();
  static const int kVListUint32Uint32FieldNumber = 95;
  private:
  const ::feature_proto::ListUint32Uint32& _internal_v_list_uint32_uint32() const;
  public:
  const ::feature_proto::ListUint32Uint32& v_list_uint32_uint32() const;
  ::feature_proto::ListUint32Uint32* release_v_list_uint32_uint32();
  ::feature_proto::ListUint32Uint32* mutable_v_list_uint32_uint32();
  void set_allocated_v_list_uint32_uint32(::feature_proto::ListUint32Uint32* v_list_uint32_uint32);

  // .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
  bool has_v_list_uint32_uint64() const;
  void clear_v_list_uint32_uint64();
  static const int kVListUint32Uint64FieldNumber = 96;
  private:
  const ::feature_proto::ListUint32Uint64& _internal_v_list_uint32_uint64() const;
  public:
  const ::feature_proto::ListUint32Uint64& v_list_uint32_uint64() const;
  ::feature_proto::ListUint32Uint64* release_v_list_uint32_uint64();
  ::feature_proto::ListUint32Uint64* mutable_v_list_uint32_uint64();
  void set_allocated_v_list_uint32_uint64(::feature_proto::ListUint32Uint64* v_list_uint32_uint64);

  // .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
  bool has_v_list_uint32_sint32() const;
  void clear_v_list_uint32_sint32();
  static const int kVListUint32Sint32FieldNumber = 97;
  private:
  const ::feature_proto::ListUint32Sint32& _internal_v_list_uint32_sint32() const;
  public:
  const ::feature_proto::ListUint32Sint32& v_list_uint32_sint32() const;
  ::feature_proto::ListUint32Sint32* release_v_list_uint32_sint32();
  ::feature_proto::ListUint32Sint32* mutable_v_list_uint32_sint32();
  void set_allocated_v_list_uint32_sint32(::feature_proto::ListUint32Sint32* v_list_uint32_sint32);

  // .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
  bool has_v_list_uint32_sint64() const;
  void clear_v_list_uint32_sint64();
  static const int kVListUint32Sint64FieldNumber = 98;
  private:
  const ::feature_proto::ListUint32Sint64& _internal_v_list_uint32_sint64() const;
  public:
  const ::feature_proto::ListUint32Sint64& v_list_uint32_sint64() const;
  ::feature_proto::ListUint32Sint64* release_v_list_uint32_sint64();
  ::feature_proto::ListUint32Sint64* mutable_v_list_uint32_sint64();
  void set_allocated_v_list_uint32_sint64(::feature_proto::ListUint32Sint64* v_list_uint32_sint64);

  // .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
  bool has_v_list_uint32_fixed32() const;
  void clear_v_list_uint32_fixed32();
  static const int kVListUint32Fixed32FieldNumber = 99;
  private:
  const ::feature_proto::ListUint32Fixed32& _internal_v_list_uint32_fixed32() const;
  public:
  const ::feature_proto::ListUint32Fixed32& v_list_uint32_fixed32() const;
  ::feature_proto::ListUint32Fixed32* release_v_list_uint32_fixed32();
  ::feature_proto::ListUint32Fixed32* mutable_v_list_uint32_fixed32();
  void set_allocated_v_list_uint32_fixed32(::feature_proto::ListUint32Fixed32* v_list_uint32_fixed32);

  // .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
  bool has_v_list_uint32_fixed64() const;
  void clear_v_list_uint32_fixed64();
  static const int kVListUint32Fixed64FieldNumber = 100;
  private:
  const ::feature_proto::ListUint32Fixed64& _internal_v_list_uint32_fixed64() const;
  public:
  const ::feature_proto::ListUint32Fixed64& v_list_uint32_fixed64() const;
  ::feature_proto::ListUint32Fixed64* release_v_list_uint32_fixed64();
  ::feature_proto::ListUint32Fixed64* mutable_v_list_uint32_fixed64();
  void set_allocated_v_list_uint32_fixed64(::feature_proto::ListUint32Fixed64* v_list_uint32_fixed64);

  // .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
  bool has_v_list_uint32_sfixed32() const;
  void clear_v_list_uint32_sfixed32();
  static const int kVListUint32Sfixed32FieldNumber = 101;
  private:
  const ::feature_proto::ListUint32Sfixed32& _internal_v_list_uint32_sfixed32() const;
  public:
  const ::feature_proto::ListUint32Sfixed32& v_list_uint32_sfixed32() const;
  ::feature_proto::ListUint32Sfixed32* release_v_list_uint32_sfixed32();
  ::feature_proto::ListUint32Sfixed32* mutable_v_list_uint32_sfixed32();
  void set_allocated_v_list_uint32_sfixed32(::feature_proto::ListUint32Sfixed32* v_list_uint32_sfixed32);

  // .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
  bool has_v_list_uint32_sfixed64() const;
  void clear_v_list_uint32_sfixed64();
  static const int kVListUint32Sfixed64FieldNumber = 102;
  private:
  const ::feature_proto::ListUint32Sfixed64& _internal_v_list_uint32_sfixed64() const;
  public:
  const ::feature_proto::ListUint32Sfixed64& v_list_uint32_sfixed64() const;
  ::feature_proto::ListUint32Sfixed64* release_v_list_uint32_sfixed64();
  ::feature_proto::ListUint32Sfixed64* mutable_v_list_uint32_sfixed64();
  void set_allocated_v_list_uint32_sfixed64(::feature_proto::ListUint32Sfixed64* v_list_uint32_sfixed64);

  // .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
  bool has_v_list_uint32_bool() const;
  void clear_v_list_uint32_bool();
  static const int kVListUint32BoolFieldNumber = 103;
  private:
  const ::feature_proto::ListUint32Bool& _internal_v_list_uint32_bool() const;
  public:
  const ::feature_proto::ListUint32Bool& v_list_uint32_bool() const;
  ::feature_proto::ListUint32Bool* release_v_list_uint32_bool();
  ::feature_proto::ListUint32Bool* mutable_v_list_uint32_bool();
  void set_allocated_v_list_uint32_bool(::feature_proto::ListUint32Bool* v_list_uint32_bool);

  // .feature_proto.ListUint32String v_list_uint32_string = 104;
  bool has_v_list_uint32_string() const;
  void clear_v_list_uint32_string();
  static const int kVListUint32StringFieldNumber = 104;
  private:
  const ::feature_proto::ListUint32String& _internal_v_list_uint32_string() const;
  public:
  const ::feature_proto::ListUint32String& v_list_uint32_string() const;
  ::feature_proto::ListUint32String* release_v_list_uint32_string();
  ::feature_proto::ListUint32String* mutable_v_list_uint32_string();
  void set_allocated_v_list_uint32_string(::feature_proto::ListUint32String* v_list_uint32_string);

  // .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
  bool has_v_list_uint32_bytes() const;
  void clear_v_list_uint32_bytes();
  static const int kVListUint32BytesFieldNumber = 105;
  private:
  const ::feature_proto::ListUint32Bytes& _internal_v_list_uint32_bytes() const;
  public:
  const ::feature_proto::ListUint32Bytes& v_list_uint32_bytes() const;
  ::feature_proto::ListUint32Bytes* release_v_list_uint32_bytes();
  ::feature_proto::ListUint32Bytes* mutable_v_list_uint32_bytes();
  void set_allocated_v_list_uint32_bytes(::feature_proto::ListUint32Bytes* v_list_uint32_bytes);

  // .feature_proto.ListUint64Double v_list_uint64_double = 106;
  bool has_v_list_uint64_double() const;
  void clear_v_list_uint64_double();
  static const int kVListUint64DoubleFieldNumber = 106;
  private:
  const ::feature_proto::ListUint64Double& _internal_v_list_uint64_double() const;
  public:
  const ::feature_proto::ListUint64Double& v_list_uint64_double() const;
  ::feature_proto::ListUint64Double* release_v_list_uint64_double();
  ::feature_proto::ListUint64Double* mutable_v_list_uint64_double();
  void set_allocated_v_list_uint64_double(::feature_proto::ListUint64Double* v_list_uint64_double);

  // .feature_proto.ListUint64Float v_list_uint64_float = 107;
  bool has_v_list_uint64_float() const;
  void clear_v_list_uint64_float();
  static const int kVListUint64FloatFieldNumber = 107;
  private:
  const ::feature_proto::ListUint64Float& _internal_v_list_uint64_float() const;
  public:
  const ::feature_proto::ListUint64Float& v_list_uint64_float() const;
  ::feature_proto::ListUint64Float* release_v_list_uint64_float();
  ::feature_proto::ListUint64Float* mutable_v_list_uint64_float();
  void set_allocated_v_list_uint64_float(::feature_proto::ListUint64Float* v_list_uint64_float);

  // .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
  bool has_v_list_uint64_int32() const;
  void clear_v_list_uint64_int32();
  static const int kVListUint64Int32FieldNumber = 108;
  private:
  const ::feature_proto::ListUint64Int32& _internal_v_list_uint64_int32() const;
  public:
  const ::feature_proto::ListUint64Int32& v_list_uint64_int32() const;
  ::feature_proto::ListUint64Int32* release_v_list_uint64_int32();
  ::feature_proto::ListUint64Int32* mutable_v_list_uint64_int32();
  void set_allocated_v_list_uint64_int32(::feature_proto::ListUint64Int32* v_list_uint64_int32);

  // .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
  bool has_v_list_uint64_int64() const;
  void clear_v_list_uint64_int64();
  static const int kVListUint64Int64FieldNumber = 109;
  private:
  const ::feature_proto::ListUint64Int64& _internal_v_list_uint64_int64() const;
  public:
  const ::feature_proto::ListUint64Int64& v_list_uint64_int64() const;
  ::feature_proto::ListUint64Int64* release_v_list_uint64_int64();
  ::feature_proto::ListUint64Int64* mutable_v_list_uint64_int64();
  void set_allocated_v_list_uint64_int64(::feature_proto::ListUint64Int64* v_list_uint64_int64);

  // .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
  bool has_v_list_uint64_uint32() const;
  void clear_v_list_uint64_uint32();
  static const int kVListUint64Uint32FieldNumber = 110;
  private:
  const ::feature_proto::ListUint64Uint32& _internal_v_list_uint64_uint32() const;
  public:
  const ::feature_proto::ListUint64Uint32& v_list_uint64_uint32() const;
  ::feature_proto::ListUint64Uint32* release_v_list_uint64_uint32();
  ::feature_proto::ListUint64Uint32* mutable_v_list_uint64_uint32();
  void set_allocated_v_list_uint64_uint32(::feature_proto::ListUint64Uint32* v_list_uint64_uint32);

  // .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
  bool has_v_list_uint64_uint64() const;
  void clear_v_list_uint64_uint64();
  static const int kVListUint64Uint64FieldNumber = 111;
  private:
  const ::feature_proto::ListUint64Uint64& _internal_v_list_uint64_uint64() const;
  public:
  const ::feature_proto::ListUint64Uint64& v_list_uint64_uint64() const;
  ::feature_proto::ListUint64Uint64* release_v_list_uint64_uint64();
  ::feature_proto::ListUint64Uint64* mutable_v_list_uint64_uint64();
  void set_allocated_v_list_uint64_uint64(::feature_proto::ListUint64Uint64* v_list_uint64_uint64);

  // .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
  bool has_v_list_uint64_sint32() const;
  void clear_v_list_uint64_sint32();
  static const int kVListUint64Sint32FieldNumber = 112;
  private:
  const ::feature_proto::ListUint64Sint32& _internal_v_list_uint64_sint32() const;
  public:
  const ::feature_proto::ListUint64Sint32& v_list_uint64_sint32() const;
  ::feature_proto::ListUint64Sint32* release_v_list_uint64_sint32();
  ::feature_proto::ListUint64Sint32* mutable_v_list_uint64_sint32();
  void set_allocated_v_list_uint64_sint32(::feature_proto::ListUint64Sint32* v_list_uint64_sint32);

  // .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
  bool has_v_list_uint64_sint64() const;
  void clear_v_list_uint64_sint64();
  static const int kVListUint64Sint64FieldNumber = 113;
  private:
  const ::feature_proto::ListUint64Sint64& _internal_v_list_uint64_sint64() const;
  public:
  const ::feature_proto::ListUint64Sint64& v_list_uint64_sint64() const;
  ::feature_proto::ListUint64Sint64* release_v_list_uint64_sint64();
  ::feature_proto::ListUint64Sint64* mutable_v_list_uint64_sint64();
  void set_allocated_v_list_uint64_sint64(::feature_proto::ListUint64Sint64* v_list_uint64_sint64);

  // .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
  bool has_v_list_uint64_fixed32() const;
  void clear_v_list_uint64_fixed32();
  static const int kVListUint64Fixed32FieldNumber = 114;
  private:
  const ::feature_proto::ListUint64Fixed32& _internal_v_list_uint64_fixed32() const;
  public:
  const ::feature_proto::ListUint64Fixed32& v_list_uint64_fixed32() const;
  ::feature_proto::ListUint64Fixed32* release_v_list_uint64_fixed32();
  ::feature_proto::ListUint64Fixed32* mutable_v_list_uint64_fixed32();
  void set_allocated_v_list_uint64_fixed32(::feature_proto::ListUint64Fixed32* v_list_uint64_fixed32);

  // .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
  bool has_v_list_uint64_fixed64() const;
  void clear_v_list_uint64_fixed64();
  static const int kVListUint64Fixed64FieldNumber = 115;
  private:
  const ::feature_proto::ListUint64Fixed64& _internal_v_list_uint64_fixed64() const;
  public:
  const ::feature_proto::ListUint64Fixed64& v_list_uint64_fixed64() const;
  ::feature_proto::ListUint64Fixed64* release_v_list_uint64_fixed64();
  ::feature_proto::ListUint64Fixed64* mutable_v_list_uint64_fixed64();
  void set_allocated_v_list_uint64_fixed64(::feature_proto::ListUint64Fixed64* v_list_uint64_fixed64);

  // .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
  bool has_v_list_uint64_sfixed32() const;
  void clear_v_list_uint64_sfixed32();
  static const int kVListUint64Sfixed32FieldNumber = 116;
  private:
  const ::feature_proto::ListUint64Sfixed32& _internal_v_list_uint64_sfixed32() const;
  public:
  const ::feature_proto::ListUint64Sfixed32& v_list_uint64_sfixed32() const;
  ::feature_proto::ListUint64Sfixed32* release_v_list_uint64_sfixed32();
  ::feature_proto::ListUint64Sfixed32* mutable_v_list_uint64_sfixed32();
  void set_allocated_v_list_uint64_sfixed32(::feature_proto::ListUint64Sfixed32* v_list_uint64_sfixed32);

  // .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
  bool has_v_list_uint64_sfixed64() const;
  void clear_v_list_uint64_sfixed64();
  static const int kVListUint64Sfixed64FieldNumber = 117;
  private:
  const ::feature_proto::ListUint64Sfixed64& _internal_v_list_uint64_sfixed64() const;
  public:
  const ::feature_proto::ListUint64Sfixed64& v_list_uint64_sfixed64() const;
  ::feature_proto::ListUint64Sfixed64* release_v_list_uint64_sfixed64();
  ::feature_proto::ListUint64Sfixed64* mutable_v_list_uint64_sfixed64();
  void set_allocated_v_list_uint64_sfixed64(::feature_proto::ListUint64Sfixed64* v_list_uint64_sfixed64);

  // .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
  bool has_v_list_uint64_bool() const;
  void clear_v_list_uint64_bool();
  static const int kVListUint64BoolFieldNumber = 118;
  private:
  const ::feature_proto::ListUint64Bool& _internal_v_list_uint64_bool() const;
  public:
  const ::feature_proto::ListUint64Bool& v_list_uint64_bool() const;
  ::feature_proto::ListUint64Bool* release_v_list_uint64_bool();
  ::feature_proto::ListUint64Bool* mutable_v_list_uint64_bool();
  void set_allocated_v_list_uint64_bool(::feature_proto::ListUint64Bool* v_list_uint64_bool);

  // .feature_proto.ListUint64String v_list_uint64_string = 119;
  bool has_v_list_uint64_string() const;
  void clear_v_list_uint64_string();
  static const int kVListUint64StringFieldNumber = 119;
  private:
  const ::feature_proto::ListUint64String& _internal_v_list_uint64_string() const;
  public:
  const ::feature_proto::ListUint64String& v_list_uint64_string() const;
  ::feature_proto::ListUint64String* release_v_list_uint64_string();
  ::feature_proto::ListUint64String* mutable_v_list_uint64_string();
  void set_allocated_v_list_uint64_string(::feature_proto::ListUint64String* v_list_uint64_string);

  // .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
  bool has_v_list_uint64_bytes() const;
  void clear_v_list_uint64_bytes();
  static const int kVListUint64BytesFieldNumber = 120;
  private:
  const ::feature_proto::ListUint64Bytes& _internal_v_list_uint64_bytes() const;
  public:
  const ::feature_proto::ListUint64Bytes& v_list_uint64_bytes() const;
  ::feature_proto::ListUint64Bytes* release_v_list_uint64_bytes();
  ::feature_proto::ListUint64Bytes* mutable_v_list_uint64_bytes();
  void set_allocated_v_list_uint64_bytes(::feature_proto::ListUint64Bytes* v_list_uint64_bytes);

  // .feature_proto.ListSint32Double v_list_sint32_double = 121;
  bool has_v_list_sint32_double() const;
  void clear_v_list_sint32_double();
  static const int kVListSint32DoubleFieldNumber = 121;
  private:
  const ::feature_proto::ListSint32Double& _internal_v_list_sint32_double() const;
  public:
  const ::feature_proto::ListSint32Double& v_list_sint32_double() const;
  ::feature_proto::ListSint32Double* release_v_list_sint32_double();
  ::feature_proto::ListSint32Double* mutable_v_list_sint32_double();
  void set_allocated_v_list_sint32_double(::feature_proto::ListSint32Double* v_list_sint32_double);

  // .feature_proto.ListSint32Float v_list_sint32_float = 122;
  bool has_v_list_sint32_float() const;
  void clear_v_list_sint32_float();
  static const int kVListSint32FloatFieldNumber = 122;
  private:
  const ::feature_proto::ListSint32Float& _internal_v_list_sint32_float() const;
  public:
  const ::feature_proto::ListSint32Float& v_list_sint32_float() const;
  ::feature_proto::ListSint32Float* release_v_list_sint32_float();
  ::feature_proto::ListSint32Float* mutable_v_list_sint32_float();
  void set_allocated_v_list_sint32_float(::feature_proto::ListSint32Float* v_list_sint32_float);

  // .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
  bool has_v_list_sint32_int32() const;
  void clear_v_list_sint32_int32();
  static const int kVListSint32Int32FieldNumber = 123;
  private:
  const ::feature_proto::ListSint32Int32& _internal_v_list_sint32_int32() const;
  public:
  const ::feature_proto::ListSint32Int32& v_list_sint32_int32() const;
  ::feature_proto::ListSint32Int32* release_v_list_sint32_int32();
  ::feature_proto::ListSint32Int32* mutable_v_list_sint32_int32();
  void set_allocated_v_list_sint32_int32(::feature_proto::ListSint32Int32* v_list_sint32_int32);

  // .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
  bool has_v_list_sint32_int64() const;
  void clear_v_list_sint32_int64();
  static const int kVListSint32Int64FieldNumber = 124;
  private:
  const ::feature_proto::ListSint32Int64& _internal_v_list_sint32_int64() const;
  public:
  const ::feature_proto::ListSint32Int64& v_list_sint32_int64() const;
  ::feature_proto::ListSint32Int64* release_v_list_sint32_int64();
  ::feature_proto::ListSint32Int64* mutable_v_list_sint32_int64();
  void set_allocated_v_list_sint32_int64(::feature_proto::ListSint32Int64* v_list_sint32_int64);

  // .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
  bool has_v_list_sint32_uint32() const;
  void clear_v_list_sint32_uint32();
  static const int kVListSint32Uint32FieldNumber = 125;
  private:
  const ::feature_proto::ListSint32Uint32& _internal_v_list_sint32_uint32() const;
  public:
  const ::feature_proto::ListSint32Uint32& v_list_sint32_uint32() const;
  ::feature_proto::ListSint32Uint32* release_v_list_sint32_uint32();
  ::feature_proto::ListSint32Uint32* mutable_v_list_sint32_uint32();
  void set_allocated_v_list_sint32_uint32(::feature_proto::ListSint32Uint32* v_list_sint32_uint32);

  // .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
  bool has_v_list_sint32_uint64() const;
  void clear_v_list_sint32_uint64();
  static const int kVListSint32Uint64FieldNumber = 126;
  private:
  const ::feature_proto::ListSint32Uint64& _internal_v_list_sint32_uint64() const;
  public:
  const ::feature_proto::ListSint32Uint64& v_list_sint32_uint64() const;
  ::feature_proto::ListSint32Uint64* release_v_list_sint32_uint64();
  ::feature_proto::ListSint32Uint64* mutable_v_list_sint32_uint64();
  void set_allocated_v_list_sint32_uint64(::feature_proto::ListSint32Uint64* v_list_sint32_uint64);

  // .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
  bool has_v_list_sint32_sint32() const;
  void clear_v_list_sint32_sint32();
  static const int kVListSint32Sint32FieldNumber = 127;
  private:
  const ::feature_proto::ListSint32Sint32& _internal_v_list_sint32_sint32() const;
  public:
  const ::feature_proto::ListSint32Sint32& v_list_sint32_sint32() const;
  ::feature_proto::ListSint32Sint32* release_v_list_sint32_sint32();
  ::feature_proto::ListSint32Sint32* mutable_v_list_sint32_sint32();
  void set_allocated_v_list_sint32_sint32(::feature_proto::ListSint32Sint32* v_list_sint32_sint32);

  // .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
  bool has_v_list_sint32_sint64() const;
  void clear_v_list_sint32_sint64();
  static const int kVListSint32Sint64FieldNumber = 128;
  private:
  const ::feature_proto::ListSint32Sint64& _internal_v_list_sint32_sint64() const;
  public:
  const ::feature_proto::ListSint32Sint64& v_list_sint32_sint64() const;
  ::feature_proto::ListSint32Sint64* release_v_list_sint32_sint64();
  ::feature_proto::ListSint32Sint64* mutable_v_list_sint32_sint64();
  void set_allocated_v_list_sint32_sint64(::feature_proto::ListSint32Sint64* v_list_sint32_sint64);

  // .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
  bool has_v_list_sint32_fixed32() const;
  void clear_v_list_sint32_fixed32();
  static const int kVListSint32Fixed32FieldNumber = 129;
  private:
  const ::feature_proto::ListSint32Fixed32& _internal_v_list_sint32_fixed32() const;
  public:
  const ::feature_proto::ListSint32Fixed32& v_list_sint32_fixed32() const;
  ::feature_proto::ListSint32Fixed32* release_v_list_sint32_fixed32();
  ::feature_proto::ListSint32Fixed32* mutable_v_list_sint32_fixed32();
  void set_allocated_v_list_sint32_fixed32(::feature_proto::ListSint32Fixed32* v_list_sint32_fixed32);

  // .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
  bool has_v_list_sint32_fixed64() const;
  void clear_v_list_sint32_fixed64();
  static const int kVListSint32Fixed64FieldNumber = 130;
  private:
  const ::feature_proto::ListSint32Fixed64& _internal_v_list_sint32_fixed64() const;
  public:
  const ::feature_proto::ListSint32Fixed64& v_list_sint32_fixed64() const;
  ::feature_proto::ListSint32Fixed64* release_v_list_sint32_fixed64();
  ::feature_proto::ListSint32Fixed64* mutable_v_list_sint32_fixed64();
  void set_allocated_v_list_sint32_fixed64(::feature_proto::ListSint32Fixed64* v_list_sint32_fixed64);

  // .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
  bool has_v_list_sint32_sfixed32() const;
  void clear_v_list_sint32_sfixed32();
  static const int kVListSint32Sfixed32FieldNumber = 131;
  private:
  const ::feature_proto::ListSint32Sfixed32& _internal_v_list_sint32_sfixed32() const;
  public:
  const ::feature_proto::ListSint32Sfixed32& v_list_sint32_sfixed32() const;
  ::feature_proto::ListSint32Sfixed32* release_v_list_sint32_sfixed32();
  ::feature_proto::ListSint32Sfixed32* mutable_v_list_sint32_sfixed32();
  void set_allocated_v_list_sint32_sfixed32(::feature_proto::ListSint32Sfixed32* v_list_sint32_sfixed32);

  // .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
  bool has_v_list_sint32_sfixed64() const;
  void clear_v_list_sint32_sfixed64();
  static const int kVListSint32Sfixed64FieldNumber = 132;
  private:
  const ::feature_proto::ListSint32Sfixed64& _internal_v_list_sint32_sfixed64() const;
  public:
  const ::feature_proto::ListSint32Sfixed64& v_list_sint32_sfixed64() const;
  ::feature_proto::ListSint32Sfixed64* release_v_list_sint32_sfixed64();
  ::feature_proto::ListSint32Sfixed64* mutable_v_list_sint32_sfixed64();
  void set_allocated_v_list_sint32_sfixed64(::feature_proto::ListSint32Sfixed64* v_list_sint32_sfixed64);

  // .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
  bool has_v_list_sint32_bool() const;
  void clear_v_list_sint32_bool();
  static const int kVListSint32BoolFieldNumber = 133;
  private:
  const ::feature_proto::ListSint32Bool& _internal_v_list_sint32_bool() const;
  public:
  const ::feature_proto::ListSint32Bool& v_list_sint32_bool() const;
  ::feature_proto::ListSint32Bool* release_v_list_sint32_bool();
  ::feature_proto::ListSint32Bool* mutable_v_list_sint32_bool();
  void set_allocated_v_list_sint32_bool(::feature_proto::ListSint32Bool* v_list_sint32_bool);

  // .feature_proto.ListSint32String v_list_sint32_string = 134;
  bool has_v_list_sint32_string() const;
  void clear_v_list_sint32_string();
  static const int kVListSint32StringFieldNumber = 134;
  private:
  const ::feature_proto::ListSint32String& _internal_v_list_sint32_string() const;
  public:
  const ::feature_proto::ListSint32String& v_list_sint32_string() const;
  ::feature_proto::ListSint32String* release_v_list_sint32_string();
  ::feature_proto::ListSint32String* mutable_v_list_sint32_string();
  void set_allocated_v_list_sint32_string(::feature_proto::ListSint32String* v_list_sint32_string);

  // .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
  bool has_v_list_sint32_bytes() const;
  void clear_v_list_sint32_bytes();
  static const int kVListSint32BytesFieldNumber = 135;
  private:
  const ::feature_proto::ListSint32Bytes& _internal_v_list_sint32_bytes() const;
  public:
  const ::feature_proto::ListSint32Bytes& v_list_sint32_bytes() const;
  ::feature_proto::ListSint32Bytes* release_v_list_sint32_bytes();
  ::feature_proto::ListSint32Bytes* mutable_v_list_sint32_bytes();
  void set_allocated_v_list_sint32_bytes(::feature_proto::ListSint32Bytes* v_list_sint32_bytes);

  // .feature_proto.ListSint64Double v_list_sint64_double = 136;
  bool has_v_list_sint64_double() const;
  void clear_v_list_sint64_double();
  static const int kVListSint64DoubleFieldNumber = 136;
  private:
  const ::feature_proto::ListSint64Double& _internal_v_list_sint64_double() const;
  public:
  const ::feature_proto::ListSint64Double& v_list_sint64_double() const;
  ::feature_proto::ListSint64Double* release_v_list_sint64_double();
  ::feature_proto::ListSint64Double* mutable_v_list_sint64_double();
  void set_allocated_v_list_sint64_double(::feature_proto::ListSint64Double* v_list_sint64_double);

  // .feature_proto.ListSint64Float v_list_sint64_float = 137;
  bool has_v_list_sint64_float() const;
  void clear_v_list_sint64_float();
  static const int kVListSint64FloatFieldNumber = 137;
  private:
  const ::feature_proto::ListSint64Float& _internal_v_list_sint64_float() const;
  public:
  const ::feature_proto::ListSint64Float& v_list_sint64_float() const;
  ::feature_proto::ListSint64Float* release_v_list_sint64_float();
  ::feature_proto::ListSint64Float* mutable_v_list_sint64_float();
  void set_allocated_v_list_sint64_float(::feature_proto::ListSint64Float* v_list_sint64_float);

  // .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
  bool has_v_list_sint64_int32() const;
  void clear_v_list_sint64_int32();
  static const int kVListSint64Int32FieldNumber = 138;
  private:
  const ::feature_proto::ListSint64Int32& _internal_v_list_sint64_int32() const;
  public:
  const ::feature_proto::ListSint64Int32& v_list_sint64_int32() const;
  ::feature_proto::ListSint64Int32* release_v_list_sint64_int32();
  ::feature_proto::ListSint64Int32* mutable_v_list_sint64_int32();
  void set_allocated_v_list_sint64_int32(::feature_proto::ListSint64Int32* v_list_sint64_int32);

  // .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
  bool has_v_list_sint64_int64() const;
  void clear_v_list_sint64_int64();
  static const int kVListSint64Int64FieldNumber = 139;
  private:
  const ::feature_proto::ListSint64Int64& _internal_v_list_sint64_int64() const;
  public:
  const ::feature_proto::ListSint64Int64& v_list_sint64_int64() const;
  ::feature_proto::ListSint64Int64* release_v_list_sint64_int64();
  ::feature_proto::ListSint64Int64* mutable_v_list_sint64_int64();
  void set_allocated_v_list_sint64_int64(::feature_proto::ListSint64Int64* v_list_sint64_int64);

  // .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
  bool has_v_list_sint64_uint32() const;
  void clear_v_list_sint64_uint32();
  static const int kVListSint64Uint32FieldNumber = 140;
  private:
  const ::feature_proto::ListSint64Uint32& _internal_v_list_sint64_uint32() const;
  public:
  const ::feature_proto::ListSint64Uint32& v_list_sint64_uint32() const;
  ::feature_proto::ListSint64Uint32* release_v_list_sint64_uint32();
  ::feature_proto::ListSint64Uint32* mutable_v_list_sint64_uint32();
  void set_allocated_v_list_sint64_uint32(::feature_proto::ListSint64Uint32* v_list_sint64_uint32);

  // .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
  bool has_v_list_sint64_uint64() const;
  void clear_v_list_sint64_uint64();
  static const int kVListSint64Uint64FieldNumber = 141;
  private:
  const ::feature_proto::ListSint64Uint64& _internal_v_list_sint64_uint64() const;
  public:
  const ::feature_proto::ListSint64Uint64& v_list_sint64_uint64() const;
  ::feature_proto::ListSint64Uint64* release_v_list_sint64_uint64();
  ::feature_proto::ListSint64Uint64* mutable_v_list_sint64_uint64();
  void set_allocated_v_list_sint64_uint64(::feature_proto::ListSint64Uint64* v_list_sint64_uint64);

  // .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
  bool has_v_list_sint64_sint32() const;
  void clear_v_list_sint64_sint32();
  static const int kVListSint64Sint32FieldNumber = 142;
  private:
  const ::feature_proto::ListSint64Sint32& _internal_v_list_sint64_sint32() const;
  public:
  const ::feature_proto::ListSint64Sint32& v_list_sint64_sint32() const;
  ::feature_proto::ListSint64Sint32* release_v_list_sint64_sint32();
  ::feature_proto::ListSint64Sint32* mutable_v_list_sint64_sint32();
  void set_allocated_v_list_sint64_sint32(::feature_proto::ListSint64Sint32* v_list_sint64_sint32);

  // .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
  bool has_v_list_sint64_sint64() const;
  void clear_v_list_sint64_sint64();
  static const int kVListSint64Sint64FieldNumber = 143;
  private:
  const ::feature_proto::ListSint64Sint64& _internal_v_list_sint64_sint64() const;
  public:
  const ::feature_proto::ListSint64Sint64& v_list_sint64_sint64() const;
  ::feature_proto::ListSint64Sint64* release_v_list_sint64_sint64();
  ::feature_proto::ListSint64Sint64* mutable_v_list_sint64_sint64();
  void set_allocated_v_list_sint64_sint64(::feature_proto::ListSint64Sint64* v_list_sint64_sint64);

  // .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
  bool has_v_list_sint64_fixed32() const;
  void clear_v_list_sint64_fixed32();
  static const int kVListSint64Fixed32FieldNumber = 144;
  private:
  const ::feature_proto::ListSint64Fixed32& _internal_v_list_sint64_fixed32() const;
  public:
  const ::feature_proto::ListSint64Fixed32& v_list_sint64_fixed32() const;
  ::feature_proto::ListSint64Fixed32* release_v_list_sint64_fixed32();
  ::feature_proto::ListSint64Fixed32* mutable_v_list_sint64_fixed32();
  void set_allocated_v_list_sint64_fixed32(::feature_proto::ListSint64Fixed32* v_list_sint64_fixed32);

  // .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
  bool has_v_list_sint64_fixed64() const;
  void clear_v_list_sint64_fixed64();
  static const int kVListSint64Fixed64FieldNumber = 145;
  private:
  const ::feature_proto::ListSint64Fixed64& _internal_v_list_sint64_fixed64() const;
  public:
  const ::feature_proto::ListSint64Fixed64& v_list_sint64_fixed64() const;
  ::feature_proto::ListSint64Fixed64* release_v_list_sint64_fixed64();
  ::feature_proto::ListSint64Fixed64* mutable_v_list_sint64_fixed64();
  void set_allocated_v_list_sint64_fixed64(::feature_proto::ListSint64Fixed64* v_list_sint64_fixed64);

  // .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
  bool has_v_list_sint64_sfixed32() const;
  void clear_v_list_sint64_sfixed32();
  static const int kVListSint64Sfixed32FieldNumber = 146;
  private:
  const ::feature_proto::ListSint64Sfixed32& _internal_v_list_sint64_sfixed32() const;
  public:
  const ::feature_proto::ListSint64Sfixed32& v_list_sint64_sfixed32() const;
  ::feature_proto::ListSint64Sfixed32* release_v_list_sint64_sfixed32();
  ::feature_proto::ListSint64Sfixed32* mutable_v_list_sint64_sfixed32();
  void set_allocated_v_list_sint64_sfixed32(::feature_proto::ListSint64Sfixed32* v_list_sint64_sfixed32);

  // .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
  bool has_v_list_sint64_sfixed64() const;
  void clear_v_list_sint64_sfixed64();
  static const int kVListSint64Sfixed64FieldNumber = 147;
  private:
  const ::feature_proto::ListSint64Sfixed64& _internal_v_list_sint64_sfixed64() const;
  public:
  const ::feature_proto::ListSint64Sfixed64& v_list_sint64_sfixed64() const;
  ::feature_proto::ListSint64Sfixed64* release_v_list_sint64_sfixed64();
  ::feature_proto::ListSint64Sfixed64* mutable_v_list_sint64_sfixed64();
  void set_allocated_v_list_sint64_sfixed64(::feature_proto::ListSint64Sfixed64* v_list_sint64_sfixed64);

  // .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
  bool has_v_list_sint64_bool() const;
  void clear_v_list_sint64_bool();
  static const int kVListSint64BoolFieldNumber = 148;
  private:
  const ::feature_proto::ListSint64Bool& _internal_v_list_sint64_bool() const;
  public:
  const ::feature_proto::ListSint64Bool& v_list_sint64_bool() const;
  ::feature_proto::ListSint64Bool* release_v_list_sint64_bool();
  ::feature_proto::ListSint64Bool* mutable_v_list_sint64_bool();
  void set_allocated_v_list_sint64_bool(::feature_proto::ListSint64Bool* v_list_sint64_bool);

  // .feature_proto.ListSint64String v_list_sint64_string = 149;
  bool has_v_list_sint64_string() const;
  void clear_v_list_sint64_string();
  static const int kVListSint64StringFieldNumber = 149;
  private:
  const ::feature_proto::ListSint64String& _internal_v_list_sint64_string() const;
  public:
  const ::feature_proto::ListSint64String& v_list_sint64_string() const;
  ::feature_proto::ListSint64String* release_v_list_sint64_string();
  ::feature_proto::ListSint64String* mutable_v_list_sint64_string();
  void set_allocated_v_list_sint64_string(::feature_proto::ListSint64String* v_list_sint64_string);

  // .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
  bool has_v_list_sint64_bytes() const;
  void clear_v_list_sint64_bytes();
  static const int kVListSint64BytesFieldNumber = 150;
  private:
  const ::feature_proto::ListSint64Bytes& _internal_v_list_sint64_bytes() const;
  public:
  const ::feature_proto::ListSint64Bytes& v_list_sint64_bytes() const;
  ::feature_proto::ListSint64Bytes* release_v_list_sint64_bytes();
  ::feature_proto::ListSint64Bytes* mutable_v_list_sint64_bytes();
  void set_allocated_v_list_sint64_bytes(::feature_proto::ListSint64Bytes* v_list_sint64_bytes);

  // .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
  bool has_v_list_fixed32_double() const;
  void clear_v_list_fixed32_double();
  static const int kVListFixed32DoubleFieldNumber = 151;
  private:
  const ::feature_proto::ListFixed32Double& _internal_v_list_fixed32_double() const;
  public:
  const ::feature_proto::ListFixed32Double& v_list_fixed32_double() const;
  ::feature_proto::ListFixed32Double* release_v_list_fixed32_double();
  ::feature_proto::ListFixed32Double* mutable_v_list_fixed32_double();
  void set_allocated_v_list_fixed32_double(::feature_proto::ListFixed32Double* v_list_fixed32_double);

  // .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
  bool has_v_list_fixed32_float() const;
  void clear_v_list_fixed32_float();
  static const int kVListFixed32FloatFieldNumber = 152;
  private:
  const ::feature_proto::ListFixed32Float& _internal_v_list_fixed32_float() const;
  public:
  const ::feature_proto::ListFixed32Float& v_list_fixed32_float() const;
  ::feature_proto::ListFixed32Float* release_v_list_fixed32_float();
  ::feature_proto::ListFixed32Float* mutable_v_list_fixed32_float();
  void set_allocated_v_list_fixed32_float(::feature_proto::ListFixed32Float* v_list_fixed32_float);

  // .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
  bool has_v_list_fixed32_int32() const;
  void clear_v_list_fixed32_int32();
  static const int kVListFixed32Int32FieldNumber = 153;
  private:
  const ::feature_proto::ListFixed32Int32& _internal_v_list_fixed32_int32() const;
  public:
  const ::feature_proto::ListFixed32Int32& v_list_fixed32_int32() const;
  ::feature_proto::ListFixed32Int32* release_v_list_fixed32_int32();
  ::feature_proto::ListFixed32Int32* mutable_v_list_fixed32_int32();
  void set_allocated_v_list_fixed32_int32(::feature_proto::ListFixed32Int32* v_list_fixed32_int32);

  // .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
  bool has_v_list_fixed32_int64() const;
  void clear_v_list_fixed32_int64();
  static const int kVListFixed32Int64FieldNumber = 154;
  private:
  const ::feature_proto::ListFixed32Int64& _internal_v_list_fixed32_int64() const;
  public:
  const ::feature_proto::ListFixed32Int64& v_list_fixed32_int64() const;
  ::feature_proto::ListFixed32Int64* release_v_list_fixed32_int64();
  ::feature_proto::ListFixed32Int64* mutable_v_list_fixed32_int64();
  void set_allocated_v_list_fixed32_int64(::feature_proto::ListFixed32Int64* v_list_fixed32_int64);

  // .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
  bool has_v_list_fixed32_uint32() const;
  void clear_v_list_fixed32_uint32();
  static const int kVListFixed32Uint32FieldNumber = 155;
  private:
  const ::feature_proto::ListFixed32Uint32& _internal_v_list_fixed32_uint32() const;
  public:
  const ::feature_proto::ListFixed32Uint32& v_list_fixed32_uint32() const;
  ::feature_proto::ListFixed32Uint32* release_v_list_fixed32_uint32();
  ::feature_proto::ListFixed32Uint32* mutable_v_list_fixed32_uint32();
  void set_allocated_v_list_fixed32_uint32(::feature_proto::ListFixed32Uint32* v_list_fixed32_uint32);

  // .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
  bool has_v_list_fixed32_uint64() const;
  void clear_v_list_fixed32_uint64();
  static const int kVListFixed32Uint64FieldNumber = 156;
  private:
  const ::feature_proto::ListFixed32Uint64& _internal_v_list_fixed32_uint64() const;
  public:
  const ::feature_proto::ListFixed32Uint64& v_list_fixed32_uint64() const;
  ::feature_proto::ListFixed32Uint64* release_v_list_fixed32_uint64();
  ::feature_proto::ListFixed32Uint64* mutable_v_list_fixed32_uint64();
  void set_allocated_v_list_fixed32_uint64(::feature_proto::ListFixed32Uint64* v_list_fixed32_uint64);

  // .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
  bool has_v_list_fixed32_sint32() const;
  void clear_v_list_fixed32_sint32();
  static const int kVListFixed32Sint32FieldNumber = 157;
  private:
  const ::feature_proto::ListFixed32Sint32& _internal_v_list_fixed32_sint32() const;
  public:
  const ::feature_proto::ListFixed32Sint32& v_list_fixed32_sint32() const;
  ::feature_proto::ListFixed32Sint32* release_v_list_fixed32_sint32();
  ::feature_proto::ListFixed32Sint32* mutable_v_list_fixed32_sint32();
  void set_allocated_v_list_fixed32_sint32(::feature_proto::ListFixed32Sint32* v_list_fixed32_sint32);

  // .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
  bool has_v_list_fixed32_sint64() const;
  void clear_v_list_fixed32_sint64();
  static const int kVListFixed32Sint64FieldNumber = 158;
  private:
  const ::feature_proto::ListFixed32Sint64& _internal_v_list_fixed32_sint64() const;
  public:
  const ::feature_proto::ListFixed32Sint64& v_list_fixed32_sint64() const;
  ::feature_proto::ListFixed32Sint64* release_v_list_fixed32_sint64();
  ::feature_proto::ListFixed32Sint64* mutable_v_list_fixed32_sint64();
  void set_allocated_v_list_fixed32_sint64(::feature_proto::ListFixed32Sint64* v_list_fixed32_sint64);

  // .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
  bool has_v_list_fixed32_fixed32() const;
  void clear_v_list_fixed32_fixed32();
  static const int kVListFixed32Fixed32FieldNumber = 159;
  private:
  const ::feature_proto::ListFixed32Fixed32& _internal_v_list_fixed32_fixed32() const;
  public:
  const ::feature_proto::ListFixed32Fixed32& v_list_fixed32_fixed32() const;
  ::feature_proto::ListFixed32Fixed32* release_v_list_fixed32_fixed32();
  ::feature_proto::ListFixed32Fixed32* mutable_v_list_fixed32_fixed32();
  void set_allocated_v_list_fixed32_fixed32(::feature_proto::ListFixed32Fixed32* v_list_fixed32_fixed32);

  // .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
  bool has_v_list_fixed32_fixed64() const;
  void clear_v_list_fixed32_fixed64();
  static const int kVListFixed32Fixed64FieldNumber = 160;
  private:
  const ::feature_proto::ListFixed32Fixed64& _internal_v_list_fixed32_fixed64() const;
  public:
  const ::feature_proto::ListFixed32Fixed64& v_list_fixed32_fixed64() const;
  ::feature_proto::ListFixed32Fixed64* release_v_list_fixed32_fixed64();
  ::feature_proto::ListFixed32Fixed64* mutable_v_list_fixed32_fixed64();
  void set_allocated_v_list_fixed32_fixed64(::feature_proto::ListFixed32Fixed64* v_list_fixed32_fixed64);

  // .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
  bool has_v_list_fixed32_sfixed32() const;
  void clear_v_list_fixed32_sfixed32();
  static const int kVListFixed32Sfixed32FieldNumber = 161;
  private:
  const ::feature_proto::ListFixed32Sfixed32& _internal_v_list_fixed32_sfixed32() const;
  public:
  const ::feature_proto::ListFixed32Sfixed32& v_list_fixed32_sfixed32() const;
  ::feature_proto::ListFixed32Sfixed32* release_v_list_fixed32_sfixed32();
  ::feature_proto::ListFixed32Sfixed32* mutable_v_list_fixed32_sfixed32();
  void set_allocated_v_list_fixed32_sfixed32(::feature_proto::ListFixed32Sfixed32* v_list_fixed32_sfixed32);

  // .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
  bool has_v_list_fixed32_sfixed64() const;
  void clear_v_list_fixed32_sfixed64();
  static const int kVListFixed32Sfixed64FieldNumber = 162;
  private:
  const ::feature_proto::ListFixed32Sfixed64& _internal_v_list_fixed32_sfixed64() const;
  public:
  const ::feature_proto::ListFixed32Sfixed64& v_list_fixed32_sfixed64() const;
  ::feature_proto::ListFixed32Sfixed64* release_v_list_fixed32_sfixed64();
  ::feature_proto::ListFixed32Sfixed64* mutable_v_list_fixed32_sfixed64();
  void set_allocated_v_list_fixed32_sfixed64(::feature_proto::ListFixed32Sfixed64* v_list_fixed32_sfixed64);

  // .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
  bool has_v_list_fixed32_bool() const;
  void clear_v_list_fixed32_bool();
  static const int kVListFixed32BoolFieldNumber = 163;
  private:
  const ::feature_proto::ListFixed32Bool& _internal_v_list_fixed32_bool() const;
  public:
  const ::feature_proto::ListFixed32Bool& v_list_fixed32_bool() const;
  ::feature_proto::ListFixed32Bool* release_v_list_fixed32_bool();
  ::feature_proto::ListFixed32Bool* mutable_v_list_fixed32_bool();
  void set_allocated_v_list_fixed32_bool(::feature_proto::ListFixed32Bool* v_list_fixed32_bool);

  // .feature_proto.ListFixed32String v_list_fixed32_string = 164;
  bool has_v_list_fixed32_string() const;
  void clear_v_list_fixed32_string();
  static const int kVListFixed32StringFieldNumber = 164;
  private:
  const ::feature_proto::ListFixed32String& _internal_v_list_fixed32_string() const;
  public:
  const ::feature_proto::ListFixed32String& v_list_fixed32_string() const;
  ::feature_proto::ListFixed32String* release_v_list_fixed32_string();
  ::feature_proto::ListFixed32String* mutable_v_list_fixed32_string();
  void set_allocated_v_list_fixed32_string(::feature_proto::ListFixed32String* v_list_fixed32_string);

  // .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
  bool has_v_list_fixed32_bytes() const;
  void clear_v_list_fixed32_bytes();
  static const int kVListFixed32BytesFieldNumber = 165;
  private:
  const ::feature_proto::ListFixed32Bytes& _internal_v_list_fixed32_bytes() const;
  public:
  const ::feature_proto::ListFixed32Bytes& v_list_fixed32_bytes() const;
  ::feature_proto::ListFixed32Bytes* release_v_list_fixed32_bytes();
  ::feature_proto::ListFixed32Bytes* mutable_v_list_fixed32_bytes();
  void set_allocated_v_list_fixed32_bytes(::feature_proto::ListFixed32Bytes* v_list_fixed32_bytes);

  // .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
  bool has_v_list_fixed64_double() const;
  void clear_v_list_fixed64_double();
  static const int kVListFixed64DoubleFieldNumber = 166;
  private:
  const ::feature_proto::ListFixed64Double& _internal_v_list_fixed64_double() const;
  public:
  const ::feature_proto::ListFixed64Double& v_list_fixed64_double() const;
  ::feature_proto::ListFixed64Double* release_v_list_fixed64_double();
  ::feature_proto::ListFixed64Double* mutable_v_list_fixed64_double();
  void set_allocated_v_list_fixed64_double(::feature_proto::ListFixed64Double* v_list_fixed64_double);

  // .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
  bool has_v_list_fixed64_float() const;
  void clear_v_list_fixed64_float();
  static const int kVListFixed64FloatFieldNumber = 167;
  private:
  const ::feature_proto::ListFixed64Float& _internal_v_list_fixed64_float() const;
  public:
  const ::feature_proto::ListFixed64Float& v_list_fixed64_float() const;
  ::feature_proto::ListFixed64Float* release_v_list_fixed64_float();
  ::feature_proto::ListFixed64Float* mutable_v_list_fixed64_float();
  void set_allocated_v_list_fixed64_float(::feature_proto::ListFixed64Float* v_list_fixed64_float);

  // .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
  bool has_v_list_fixed64_int32() const;
  void clear_v_list_fixed64_int32();
  static const int kVListFixed64Int32FieldNumber = 168;
  private:
  const ::feature_proto::ListFixed64Int32& _internal_v_list_fixed64_int32() const;
  public:
  const ::feature_proto::ListFixed64Int32& v_list_fixed64_int32() const;
  ::feature_proto::ListFixed64Int32* release_v_list_fixed64_int32();
  ::feature_proto::ListFixed64Int32* mutable_v_list_fixed64_int32();
  void set_allocated_v_list_fixed64_int32(::feature_proto::ListFixed64Int32* v_list_fixed64_int32);

  // .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
  bool has_v_list_fixed64_int64() const;
  void clear_v_list_fixed64_int64();
  static const int kVListFixed64Int64FieldNumber = 169;
  private:
  const ::feature_proto::ListFixed64Int64& _internal_v_list_fixed64_int64() const;
  public:
  const ::feature_proto::ListFixed64Int64& v_list_fixed64_int64() const;
  ::feature_proto::ListFixed64Int64* release_v_list_fixed64_int64();
  ::feature_proto::ListFixed64Int64* mutable_v_list_fixed64_int64();
  void set_allocated_v_list_fixed64_int64(::feature_proto::ListFixed64Int64* v_list_fixed64_int64);

  // .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
  bool has_v_list_fixed64_uint32() const;
  void clear_v_list_fixed64_uint32();
  static const int kVListFixed64Uint32FieldNumber = 170;
  private:
  const ::feature_proto::ListFixed64Uint32& _internal_v_list_fixed64_uint32() const;
  public:
  const ::feature_proto::ListFixed64Uint32& v_list_fixed64_uint32() const;
  ::feature_proto::ListFixed64Uint32* release_v_list_fixed64_uint32();
  ::feature_proto::ListFixed64Uint32* mutable_v_list_fixed64_uint32();
  void set_allocated_v_list_fixed64_uint32(::feature_proto::ListFixed64Uint32* v_list_fixed64_uint32);

  // .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
  bool has_v_list_fixed64_uint64() const;
  void clear_v_list_fixed64_uint64();
  static const int kVListFixed64Uint64FieldNumber = 171;
  private:
  const ::feature_proto::ListFixed64Uint64& _internal_v_list_fixed64_uint64() const;
  public:
  const ::feature_proto::ListFixed64Uint64& v_list_fixed64_uint64() const;
  ::feature_proto::ListFixed64Uint64* release_v_list_fixed64_uint64();
  ::feature_proto::ListFixed64Uint64* mutable_v_list_fixed64_uint64();
  void set_allocated_v_list_fixed64_uint64(::feature_proto::ListFixed64Uint64* v_list_fixed64_uint64);

  // .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
  bool has_v_list_fixed64_sint32() const;
  void clear_v_list_fixed64_sint32();
  static const int kVListFixed64Sint32FieldNumber = 172;
  private:
  const ::feature_proto::ListFixed64Sint32& _internal_v_list_fixed64_sint32() const;
  public:
  const ::feature_proto::ListFixed64Sint32& v_list_fixed64_sint32() const;
  ::feature_proto::ListFixed64Sint32* release_v_list_fixed64_sint32();
  ::feature_proto::ListFixed64Sint32* mutable_v_list_fixed64_sint32();
  void set_allocated_v_list_fixed64_sint32(::feature_proto::ListFixed64Sint32* v_list_fixed64_sint32);

  // .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
  bool has_v_list_fixed64_sint64() const;
  void clear_v_list_fixed64_sint64();
  static const int kVListFixed64Sint64FieldNumber = 173;
  private:
  const ::feature_proto::ListFixed64Sint64& _internal_v_list_fixed64_sint64() const;
  public:
  const ::feature_proto::ListFixed64Sint64& v_list_fixed64_sint64() const;
  ::feature_proto::ListFixed64Sint64* release_v_list_fixed64_sint64();
  ::feature_proto::ListFixed64Sint64* mutable_v_list_fixed64_sint64();
  void set_allocated_v_list_fixed64_sint64(::feature_proto::ListFixed64Sint64* v_list_fixed64_sint64);

  // .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
  bool has_v_list_fixed64_fixed32() const;
  void clear_v_list_fixed64_fixed32();
  static const int kVListFixed64Fixed32FieldNumber = 174;
  private:
  const ::feature_proto::ListFixed64Fixed32& _internal_v_list_fixed64_fixed32() const;
  public:
  const ::feature_proto::ListFixed64Fixed32& v_list_fixed64_fixed32() const;
  ::feature_proto::ListFixed64Fixed32* release_v_list_fixed64_fixed32();
  ::feature_proto::ListFixed64Fixed32* mutable_v_list_fixed64_fixed32();
  void set_allocated_v_list_fixed64_fixed32(::feature_proto::ListFixed64Fixed32* v_list_fixed64_fixed32);

  // .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
  bool has_v_list_fixed64_fixed64() const;
  void clear_v_list_fixed64_fixed64();
  static const int kVListFixed64Fixed64FieldNumber = 175;
  private:
  const ::feature_proto::ListFixed64Fixed64& _internal_v_list_fixed64_fixed64() const;
  public:
  const ::feature_proto::ListFixed64Fixed64& v_list_fixed64_fixed64() const;
  ::feature_proto::ListFixed64Fixed64* release_v_list_fixed64_fixed64();
  ::feature_proto::ListFixed64Fixed64* mutable_v_list_fixed64_fixed64();
  void set_allocated_v_list_fixed64_fixed64(::feature_proto::ListFixed64Fixed64* v_list_fixed64_fixed64);

  // .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
  bool has_v_list_fixed64_sfixed32() const;
  void clear_v_list_fixed64_sfixed32();
  static const int kVListFixed64Sfixed32FieldNumber = 176;
  private:
  const ::feature_proto::ListFixed64Sfixed32& _internal_v_list_fixed64_sfixed32() const;
  public:
  const ::feature_proto::ListFixed64Sfixed32& v_list_fixed64_sfixed32() const;
  ::feature_proto::ListFixed64Sfixed32* release_v_list_fixed64_sfixed32();
  ::feature_proto::ListFixed64Sfixed32* mutable_v_list_fixed64_sfixed32();
  void set_allocated_v_list_fixed64_sfixed32(::feature_proto::ListFixed64Sfixed32* v_list_fixed64_sfixed32);

  // .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
  bool has_v_list_fixed64_sfixed64() const;
  void clear_v_list_fixed64_sfixed64();
  static const int kVListFixed64Sfixed64FieldNumber = 177;
  private:
  const ::feature_proto::ListFixed64Sfixed64& _internal_v_list_fixed64_sfixed64() const;
  public:
  const ::feature_proto::ListFixed64Sfixed64& v_list_fixed64_sfixed64() const;
  ::feature_proto::ListFixed64Sfixed64* release_v_list_fixed64_sfixed64();
  ::feature_proto::ListFixed64Sfixed64* mutable_v_list_fixed64_sfixed64();
  void set_allocated_v_list_fixed64_sfixed64(::feature_proto::ListFixed64Sfixed64* v_list_fixed64_sfixed64);

  // .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
  bool has_v_list_fixed64_bool() const;
  void clear_v_list_fixed64_bool();
  static const int kVListFixed64BoolFieldNumber = 178;
  private:
  const ::feature_proto::ListFixed64Bool& _internal_v_list_fixed64_bool() const;
  public:
  const ::feature_proto::ListFixed64Bool& v_list_fixed64_bool() const;
  ::feature_proto::ListFixed64Bool* release_v_list_fixed64_bool();
  ::feature_proto::ListFixed64Bool* mutable_v_list_fixed64_bool();
  void set_allocated_v_list_fixed64_bool(::feature_proto::ListFixed64Bool* v_list_fixed64_bool);

  // .feature_proto.ListFixed64String v_list_fixed64_string = 179;
  bool has_v_list_fixed64_string() const;
  void clear_v_list_fixed64_string();
  static const int kVListFixed64StringFieldNumber = 179;
  private:
  const ::feature_proto::ListFixed64String& _internal_v_list_fixed64_string() const;
  public:
  const ::feature_proto::ListFixed64String& v_list_fixed64_string() const;
  ::feature_proto::ListFixed64String* release_v_list_fixed64_string();
  ::feature_proto::ListFixed64String* mutable_v_list_fixed64_string();
  void set_allocated_v_list_fixed64_string(::feature_proto::ListFixed64String* v_list_fixed64_string);

  // .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
  bool has_v_list_fixed64_bytes() const;
  void clear_v_list_fixed64_bytes();
  static const int kVListFixed64BytesFieldNumber = 180;
  private:
  const ::feature_proto::ListFixed64Bytes& _internal_v_list_fixed64_bytes() const;
  public:
  const ::feature_proto::ListFixed64Bytes& v_list_fixed64_bytes() const;
  ::feature_proto::ListFixed64Bytes* release_v_list_fixed64_bytes();
  ::feature_proto::ListFixed64Bytes* mutable_v_list_fixed64_bytes();
  void set_allocated_v_list_fixed64_bytes(::feature_proto::ListFixed64Bytes* v_list_fixed64_bytes);

  // .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
  bool has_v_list_sfixed32_double() const;
  void clear_v_list_sfixed32_double();
  static const int kVListSfixed32DoubleFieldNumber = 181;
  private:
  const ::feature_proto::ListSfixed32Double& _internal_v_list_sfixed32_double() const;
  public:
  const ::feature_proto::ListSfixed32Double& v_list_sfixed32_double() const;
  ::feature_proto::ListSfixed32Double* release_v_list_sfixed32_double();
  ::feature_proto::ListSfixed32Double* mutable_v_list_sfixed32_double();
  void set_allocated_v_list_sfixed32_double(::feature_proto::ListSfixed32Double* v_list_sfixed32_double);

  // .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
  bool has_v_list_sfixed32_float() const;
  void clear_v_list_sfixed32_float();
  static const int kVListSfixed32FloatFieldNumber = 182;
  private:
  const ::feature_proto::ListSfixed32Float& _internal_v_list_sfixed32_float() const;
  public:
  const ::feature_proto::ListSfixed32Float& v_list_sfixed32_float() const;
  ::feature_proto::ListSfixed32Float* release_v_list_sfixed32_float();
  ::feature_proto::ListSfixed32Float* mutable_v_list_sfixed32_float();
  void set_allocated_v_list_sfixed32_float(::feature_proto::ListSfixed32Float* v_list_sfixed32_float);

  // .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
  bool has_v_list_sfixed32_int32() const;
  void clear_v_list_sfixed32_int32();
  static const int kVListSfixed32Int32FieldNumber = 183;
  private:
  const ::feature_proto::ListSfixed32Int32& _internal_v_list_sfixed32_int32() const;
  public:
  const ::feature_proto::ListSfixed32Int32& v_list_sfixed32_int32() const;
  ::feature_proto::ListSfixed32Int32* release_v_list_sfixed32_int32();
  ::feature_proto::ListSfixed32Int32* mutable_v_list_sfixed32_int32();
  void set_allocated_v_list_sfixed32_int32(::feature_proto::ListSfixed32Int32* v_list_sfixed32_int32);

  // .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
  bool has_v_list_sfixed32_int64() const;
  void clear_v_list_sfixed32_int64();
  static const int kVListSfixed32Int64FieldNumber = 184;
  private:
  const ::feature_proto::ListSfixed32Int64& _internal_v_list_sfixed32_int64() const;
  public:
  const ::feature_proto::ListSfixed32Int64& v_list_sfixed32_int64() const;
  ::feature_proto::ListSfixed32Int64* release_v_list_sfixed32_int64();
  ::feature_proto::ListSfixed32Int64* mutable_v_list_sfixed32_int64();
  void set_allocated_v_list_sfixed32_int64(::feature_proto::ListSfixed32Int64* v_list_sfixed32_int64);

  // .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
  bool has_v_list_sfixed32_uint32() const;
  void clear_v_list_sfixed32_uint32();
  static const int kVListSfixed32Uint32FieldNumber = 185;
  private:
  const ::feature_proto::ListSfixed32Uint32& _internal_v_list_sfixed32_uint32() const;
  public:
  const ::feature_proto::ListSfixed32Uint32& v_list_sfixed32_uint32() const;
  ::feature_proto::ListSfixed32Uint32* release_v_list_sfixed32_uint32();
  ::feature_proto::ListSfixed32Uint32* mutable_v_list_sfixed32_uint32();
  void set_allocated_v_list_sfixed32_uint32(::feature_proto::ListSfixed32Uint32* v_list_sfixed32_uint32);

  // .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
  bool has_v_list_sfixed32_uint64() const;
  void clear_v_list_sfixed32_uint64();
  static const int kVListSfixed32Uint64FieldNumber = 186;
  private:
  const ::feature_proto::ListSfixed32Uint64& _internal_v_list_sfixed32_uint64() const;
  public:
  const ::feature_proto::ListSfixed32Uint64& v_list_sfixed32_uint64() const;
  ::feature_proto::ListSfixed32Uint64* release_v_list_sfixed32_uint64();
  ::feature_proto::ListSfixed32Uint64* mutable_v_list_sfixed32_uint64();
  void set_allocated_v_list_sfixed32_uint64(::feature_proto::ListSfixed32Uint64* v_list_sfixed32_uint64);

  // .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
  bool has_v_list_sfixed32_sint32() const;
  void clear_v_list_sfixed32_sint32();
  static const int kVListSfixed32Sint32FieldNumber = 187;
  private:
  const ::feature_proto::ListSfixed32Sint32& _internal_v_list_sfixed32_sint32() const;
  public:
  const ::feature_proto::ListSfixed32Sint32& v_list_sfixed32_sint32() const;
  ::feature_proto::ListSfixed32Sint32* release_v_list_sfixed32_sint32();
  ::feature_proto::ListSfixed32Sint32* mutable_v_list_sfixed32_sint32();
  void set_allocated_v_list_sfixed32_sint32(::feature_proto::ListSfixed32Sint32* v_list_sfixed32_sint32);

  // .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
  bool has_v_list_sfixed32_sint64() const;
  void clear_v_list_sfixed32_sint64();
  static const int kVListSfixed32Sint64FieldNumber = 188;
  private:
  const ::feature_proto::ListSfixed32Sint64& _internal_v_list_sfixed32_sint64() const;
  public:
  const ::feature_proto::ListSfixed32Sint64& v_list_sfixed32_sint64() const;
  ::feature_proto::ListSfixed32Sint64* release_v_list_sfixed32_sint64();
  ::feature_proto::ListSfixed32Sint64* mutable_v_list_sfixed32_sint64();
  void set_allocated_v_list_sfixed32_sint64(::feature_proto::ListSfixed32Sint64* v_list_sfixed32_sint64);

  // .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
  bool has_v_list_sfixed32_fixed32() const;
  void clear_v_list_sfixed32_fixed32();
  static const int kVListSfixed32Fixed32FieldNumber = 189;
  private:
  const ::feature_proto::ListSfixed32Fixed32& _internal_v_list_sfixed32_fixed32() const;
  public:
  const ::feature_proto::ListSfixed32Fixed32& v_list_sfixed32_fixed32() const;
  ::feature_proto::ListSfixed32Fixed32* release_v_list_sfixed32_fixed32();
  ::feature_proto::ListSfixed32Fixed32* mutable_v_list_sfixed32_fixed32();
  void set_allocated_v_list_sfixed32_fixed32(::feature_proto::ListSfixed32Fixed32* v_list_sfixed32_fixed32);

  // .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
  bool has_v_list_sfixed32_fixed64() const;
  void clear_v_list_sfixed32_fixed64();
  static const int kVListSfixed32Fixed64FieldNumber = 190;
  private:
  const ::feature_proto::ListSfixed32Fixed64& _internal_v_list_sfixed32_fixed64() const;
  public:
  const ::feature_proto::ListSfixed32Fixed64& v_list_sfixed32_fixed64() const;
  ::feature_proto::ListSfixed32Fixed64* release_v_list_sfixed32_fixed64();
  ::feature_proto::ListSfixed32Fixed64* mutable_v_list_sfixed32_fixed64();
  void set_allocated_v_list_sfixed32_fixed64(::feature_proto::ListSfixed32Fixed64* v_list_sfixed32_fixed64);

  // .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
  bool has_v_list_sfixed32_sfixed32() const;
  void clear_v_list_sfixed32_sfixed32();
  static const int kVListSfixed32Sfixed32FieldNumber = 191;
  private:
  const ::feature_proto::ListSfixed32Sfixed32& _internal_v_list_sfixed32_sfixed32() const;
  public:
  const ::feature_proto::ListSfixed32Sfixed32& v_list_sfixed32_sfixed32() const;
  ::feature_proto::ListSfixed32Sfixed32* release_v_list_sfixed32_sfixed32();
  ::feature_proto::ListSfixed32Sfixed32* mutable_v_list_sfixed32_sfixed32();
  void set_allocated_v_list_sfixed32_sfixed32(::feature_proto::ListSfixed32Sfixed32* v_list_sfixed32_sfixed32);

  // .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
  bool has_v_list_sfixed32_sfixed64() const;
  void clear_v_list_sfixed32_sfixed64();
  static const int kVListSfixed32Sfixed64FieldNumber = 192;
  private:
  const ::feature_proto::ListSfixed32Sfixed64& _internal_v_list_sfixed32_sfixed64() const;
  public:
  const ::feature_proto::ListSfixed32Sfixed64& v_list_sfixed32_sfixed64() const;
  ::feature_proto::ListSfixed32Sfixed64* release_v_list_sfixed32_sfixed64();
  ::feature_proto::ListSfixed32Sfixed64* mutable_v_list_sfixed32_sfixed64();
  void set_allocated_v_list_sfixed32_sfixed64(::feature_proto::ListSfixed32Sfixed64* v_list_sfixed32_sfixed64);

  // .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
  bool has_v_list_sfixed32_bool() const;
  void clear_v_list_sfixed32_bool();
  static const int kVListSfixed32BoolFieldNumber = 193;
  private:
  const ::feature_proto::ListSfixed32Bool& _internal_v_list_sfixed32_bool() const;
  public:
  const ::feature_proto::ListSfixed32Bool& v_list_sfixed32_bool() const;
  ::feature_proto::ListSfixed32Bool* release_v_list_sfixed32_bool();
  ::feature_proto::ListSfixed32Bool* mutable_v_list_sfixed32_bool();
  void set_allocated_v_list_sfixed32_bool(::feature_proto::ListSfixed32Bool* v_list_sfixed32_bool);

  // .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
  bool has_v_list_sfixed32_string() const;
  void clear_v_list_sfixed32_string();
  static const int kVListSfixed32StringFieldNumber = 194;
  private:
  const ::feature_proto::ListSfixed32String& _internal_v_list_sfixed32_string() const;
  public:
  const ::feature_proto::ListSfixed32String& v_list_sfixed32_string() const;
  ::feature_proto::ListSfixed32String* release_v_list_sfixed32_string();
  ::feature_proto::ListSfixed32String* mutable_v_list_sfixed32_string();
  void set_allocated_v_list_sfixed32_string(::feature_proto::ListSfixed32String* v_list_sfixed32_string);

  // .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
  bool has_v_list_sfixed32_bytes() const;
  void clear_v_list_sfixed32_bytes();
  static const int kVListSfixed32BytesFieldNumber = 195;
  private:
  const ::feature_proto::ListSfixed32Bytes& _internal_v_list_sfixed32_bytes() const;
  public:
  const ::feature_proto::ListSfixed32Bytes& v_list_sfixed32_bytes() const;
  ::feature_proto::ListSfixed32Bytes* release_v_list_sfixed32_bytes();
  ::feature_proto::ListSfixed32Bytes* mutable_v_list_sfixed32_bytes();
  void set_allocated_v_list_sfixed32_bytes(::feature_proto::ListSfixed32Bytes* v_list_sfixed32_bytes);

  // .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
  bool has_v_list_sfixed64_double() const;
  void clear_v_list_sfixed64_double();
  static const int kVListSfixed64DoubleFieldNumber = 196;
  private:
  const ::feature_proto::ListSfixed64Double& _internal_v_list_sfixed64_double() const;
  public:
  const ::feature_proto::ListSfixed64Double& v_list_sfixed64_double() const;
  ::feature_proto::ListSfixed64Double* release_v_list_sfixed64_double();
  ::feature_proto::ListSfixed64Double* mutable_v_list_sfixed64_double();
  void set_allocated_v_list_sfixed64_double(::feature_proto::ListSfixed64Double* v_list_sfixed64_double);

  // .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
  bool has_v_list_sfixed64_float() const;
  void clear_v_list_sfixed64_float();
  static const int kVListSfixed64FloatFieldNumber = 197;
  private:
  const ::feature_proto::ListSfixed64Float& _internal_v_list_sfixed64_float() const;
  public:
  const ::feature_proto::ListSfixed64Float& v_list_sfixed64_float() const;
  ::feature_proto::ListSfixed64Float* release_v_list_sfixed64_float();
  ::feature_proto::ListSfixed64Float* mutable_v_list_sfixed64_float();
  void set_allocated_v_list_sfixed64_float(::feature_proto::ListSfixed64Float* v_list_sfixed64_float);

  // .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
  bool has_v_list_sfixed64_int32() const;
  void clear_v_list_sfixed64_int32();
  static const int kVListSfixed64Int32FieldNumber = 198;
  private:
  const ::feature_proto::ListSfixed64Int32& _internal_v_list_sfixed64_int32() const;
  public:
  const ::feature_proto::ListSfixed64Int32& v_list_sfixed64_int32() const;
  ::feature_proto::ListSfixed64Int32* release_v_list_sfixed64_int32();
  ::feature_proto::ListSfixed64Int32* mutable_v_list_sfixed64_int32();
  void set_allocated_v_list_sfixed64_int32(::feature_proto::ListSfixed64Int32* v_list_sfixed64_int32);

  // .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
  bool has_v_list_sfixed64_int64() const;
  void clear_v_list_sfixed64_int64();
  static const int kVListSfixed64Int64FieldNumber = 199;
  private:
  const ::feature_proto::ListSfixed64Int64& _internal_v_list_sfixed64_int64() const;
  public:
  const ::feature_proto::ListSfixed64Int64& v_list_sfixed64_int64() const;
  ::feature_proto::ListSfixed64Int64* release_v_list_sfixed64_int64();
  ::feature_proto::ListSfixed64Int64* mutable_v_list_sfixed64_int64();
  void set_allocated_v_list_sfixed64_int64(::feature_proto::ListSfixed64Int64* v_list_sfixed64_int64);

  // .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
  bool has_v_list_sfixed64_uint32() const;
  void clear_v_list_sfixed64_uint32();
  static const int kVListSfixed64Uint32FieldNumber = 200;
  private:
  const ::feature_proto::ListSfixed64Uint32& _internal_v_list_sfixed64_uint32() const;
  public:
  const ::feature_proto::ListSfixed64Uint32& v_list_sfixed64_uint32() const;
  ::feature_proto::ListSfixed64Uint32* release_v_list_sfixed64_uint32();
  ::feature_proto::ListSfixed64Uint32* mutable_v_list_sfixed64_uint32();
  void set_allocated_v_list_sfixed64_uint32(::feature_proto::ListSfixed64Uint32* v_list_sfixed64_uint32);

  // .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
  bool has_v_list_sfixed64_uint64() const;
  void clear_v_list_sfixed64_uint64();
  static const int kVListSfixed64Uint64FieldNumber = 201;
  private:
  const ::feature_proto::ListSfixed64Uint64& _internal_v_list_sfixed64_uint64() const;
  public:
  const ::feature_proto::ListSfixed64Uint64& v_list_sfixed64_uint64() const;
  ::feature_proto::ListSfixed64Uint64* release_v_list_sfixed64_uint64();
  ::feature_proto::ListSfixed64Uint64* mutable_v_list_sfixed64_uint64();
  void set_allocated_v_list_sfixed64_uint64(::feature_proto::ListSfixed64Uint64* v_list_sfixed64_uint64);

  // .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
  bool has_v_list_sfixed64_sint32() const;
  void clear_v_list_sfixed64_sint32();
  static const int kVListSfixed64Sint32FieldNumber = 202;
  private:
  const ::feature_proto::ListSfixed64Sint32& _internal_v_list_sfixed64_sint32() const;
  public:
  const ::feature_proto::ListSfixed64Sint32& v_list_sfixed64_sint32() const;
  ::feature_proto::ListSfixed64Sint32* release_v_list_sfixed64_sint32();
  ::feature_proto::ListSfixed64Sint32* mutable_v_list_sfixed64_sint32();
  void set_allocated_v_list_sfixed64_sint32(::feature_proto::ListSfixed64Sint32* v_list_sfixed64_sint32);

  // .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
  bool has_v_list_sfixed64_sint64() const;
  void clear_v_list_sfixed64_sint64();
  static const int kVListSfixed64Sint64FieldNumber = 203;
  private:
  const ::feature_proto::ListSfixed64Sint64& _internal_v_list_sfixed64_sint64() const;
  public:
  const ::feature_proto::ListSfixed64Sint64& v_list_sfixed64_sint64() const;
  ::feature_proto::ListSfixed64Sint64* release_v_list_sfixed64_sint64();
  ::feature_proto::ListSfixed64Sint64* mutable_v_list_sfixed64_sint64();
  void set_allocated_v_list_sfixed64_sint64(::feature_proto::ListSfixed64Sint64* v_list_sfixed64_sint64);

  // .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
  bool has_v_list_sfixed64_fixed32() const;
  void clear_v_list_sfixed64_fixed32();
  static const int kVListSfixed64Fixed32FieldNumber = 204;
  private:
  const ::feature_proto::ListSfixed64Fixed32& _internal_v_list_sfixed64_fixed32() const;
  public:
  const ::feature_proto::ListSfixed64Fixed32& v_list_sfixed64_fixed32() const;
  ::feature_proto::ListSfixed64Fixed32* release_v_list_sfixed64_fixed32();
  ::feature_proto::ListSfixed64Fixed32* mutable_v_list_sfixed64_fixed32();
  void set_allocated_v_list_sfixed64_fixed32(::feature_proto::ListSfixed64Fixed32* v_list_sfixed64_fixed32);

  // .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
  bool has_v_list_sfixed64_fixed64() const;
  void clear_v_list_sfixed64_fixed64();
  static const int kVListSfixed64Fixed64FieldNumber = 205;
  private:
  const ::feature_proto::ListSfixed64Fixed64& _internal_v_list_sfixed64_fixed64() const;
  public:
  const ::feature_proto::ListSfixed64Fixed64& v_list_sfixed64_fixed64() const;
  ::feature_proto::ListSfixed64Fixed64* release_v_list_sfixed64_fixed64();
  ::feature_proto::ListSfixed64Fixed64* mutable_v_list_sfixed64_fixed64();
  void set_allocated_v_list_sfixed64_fixed64(::feature_proto::ListSfixed64Fixed64* v_list_sfixed64_fixed64);

  // .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
  bool has_v_list_sfixed64_sfixed32() const;
  void clear_v_list_sfixed64_sfixed32();
  static const int kVListSfixed64Sfixed32FieldNumber = 206;
  private:
  const ::feature_proto::ListSfixed64Sfixed32& _internal_v_list_sfixed64_sfixed32() const;
  public:
  const ::feature_proto::ListSfixed64Sfixed32& v_list_sfixed64_sfixed32() const;
  ::feature_proto::ListSfixed64Sfixed32* release_v_list_sfixed64_sfixed32();
  ::feature_proto::ListSfixed64Sfixed32* mutable_v_list_sfixed64_sfixed32();
  void set_allocated_v_list_sfixed64_sfixed32(::feature_proto::ListSfixed64Sfixed32* v_list_sfixed64_sfixed32);

  // .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
  bool has_v_list_sfixed64_sfixed64() const;
  void clear_v_list_sfixed64_sfixed64();
  static const int kVListSfixed64Sfixed64FieldNumber = 207;
  private:
  const ::feature_proto::ListSfixed64Sfixed64& _internal_v_list_sfixed64_sfixed64() const;
  public:
  const ::feature_proto::ListSfixed64Sfixed64& v_list_sfixed64_sfixed64() const;
  ::feature_proto::ListSfixed64Sfixed64* release_v_list_sfixed64_sfixed64();
  ::feature_proto::ListSfixed64Sfixed64* mutable_v_list_sfixed64_sfixed64();
  void set_allocated_v_list_sfixed64_sfixed64(::feature_proto::ListSfixed64Sfixed64* v_list_sfixed64_sfixed64);

  // .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
  bool has_v_list_sfixed64_bool() const;
  void clear_v_list_sfixed64_bool();
  static const int kVListSfixed64BoolFieldNumber = 208;
  private:
  const ::feature_proto::ListSfixed64Bool& _internal_v_list_sfixed64_bool() const;
  public:
  const ::feature_proto::ListSfixed64Bool& v_list_sfixed64_bool() const;
  ::feature_proto::ListSfixed64Bool* release_v_list_sfixed64_bool();
  ::feature_proto::ListSfixed64Bool* mutable_v_list_sfixed64_bool();
  void set_allocated_v_list_sfixed64_bool(::feature_proto::ListSfixed64Bool* v_list_sfixed64_bool);

  // .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
  bool has_v_list_sfixed64_string() const;
  void clear_v_list_sfixed64_string();
  static const int kVListSfixed64StringFieldNumber = 209;
  private:
  const ::feature_proto::ListSfixed64String& _internal_v_list_sfixed64_string() const;
  public:
  const ::feature_proto::ListSfixed64String& v_list_sfixed64_string() const;
  ::feature_proto::ListSfixed64String* release_v_list_sfixed64_string();
  ::feature_proto::ListSfixed64String* mutable_v_list_sfixed64_string();
  void set_allocated_v_list_sfixed64_string(::feature_proto::ListSfixed64String* v_list_sfixed64_string);

  // .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
  bool has_v_list_sfixed64_bytes() const;
  void clear_v_list_sfixed64_bytes();
  static const int kVListSfixed64BytesFieldNumber = 210;
  private:
  const ::feature_proto::ListSfixed64Bytes& _internal_v_list_sfixed64_bytes() const;
  public:
  const ::feature_proto::ListSfixed64Bytes& v_list_sfixed64_bytes() const;
  ::feature_proto::ListSfixed64Bytes* release_v_list_sfixed64_bytes();
  ::feature_proto::ListSfixed64Bytes* mutable_v_list_sfixed64_bytes();
  void set_allocated_v_list_sfixed64_bytes(::feature_proto::ListSfixed64Bytes* v_list_sfixed64_bytes);

  // .feature_proto.ListDoubleDouble v_list_double_double = 211;
  bool has_v_list_double_double() const;
  void clear_v_list_double_double();
  static const int kVListDoubleDoubleFieldNumber = 211;
  private:
  const ::feature_proto::ListDoubleDouble& _internal_v_list_double_double() const;
  public:
  const ::feature_proto::ListDoubleDouble& v_list_double_double() const;
  ::feature_proto::ListDoubleDouble* release_v_list_double_double();
  ::feature_proto::ListDoubleDouble* mutable_v_list_double_double();
  void set_allocated_v_list_double_double(::feature_proto::ListDoubleDouble* v_list_double_double);

  // .feature_proto.ListDoubleFloat v_list_double_float = 212;
  bool has_v_list_double_float() const;
  void clear_v_list_double_float();
  static const int kVListDoubleFloatFieldNumber = 212;
  private:
  const ::feature_proto::ListDoubleFloat& _internal_v_list_double_float() const;
  public:
  const ::feature_proto::ListDoubleFloat& v_list_double_float() const;
  ::feature_proto::ListDoubleFloat* release_v_list_double_float();
  ::feature_proto::ListDoubleFloat* mutable_v_list_double_float();
  void set_allocated_v_list_double_float(::feature_proto::ListDoubleFloat* v_list_double_float);

  // .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
  bool has_v_list_double_int32() const;
  void clear_v_list_double_int32();
  static const int kVListDoubleInt32FieldNumber = 213;
  private:
  const ::feature_proto::ListDoubleInt32& _internal_v_list_double_int32() const;
  public:
  const ::feature_proto::ListDoubleInt32& v_list_double_int32() const;
  ::feature_proto::ListDoubleInt32* release_v_list_double_int32();
  ::feature_proto::ListDoubleInt32* mutable_v_list_double_int32();
  void set_allocated_v_list_double_int32(::feature_proto::ListDoubleInt32* v_list_double_int32);

  // .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
  bool has_v_list_double_int64() const;
  void clear_v_list_double_int64();
  static const int kVListDoubleInt64FieldNumber = 214;
  private:
  const ::feature_proto::ListDoubleInt64& _internal_v_list_double_int64() const;
  public:
  const ::feature_proto::ListDoubleInt64& v_list_double_int64() const;
  ::feature_proto::ListDoubleInt64* release_v_list_double_int64();
  ::feature_proto::ListDoubleInt64* mutable_v_list_double_int64();
  void set_allocated_v_list_double_int64(::feature_proto::ListDoubleInt64* v_list_double_int64);

  // .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
  bool has_v_list_double_uint32() const;
  void clear_v_list_double_uint32();
  static const int kVListDoubleUint32FieldNumber = 215;
  private:
  const ::feature_proto::ListDoubleUint32& _internal_v_list_double_uint32() const;
  public:
  const ::feature_proto::ListDoubleUint32& v_list_double_uint32() const;
  ::feature_proto::ListDoubleUint32* release_v_list_double_uint32();
  ::feature_proto::ListDoubleUint32* mutable_v_list_double_uint32();
  void set_allocated_v_list_double_uint32(::feature_proto::ListDoubleUint32* v_list_double_uint32);

  // .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
  bool has_v_list_double_uint64() const;
  void clear_v_list_double_uint64();
  static const int kVListDoubleUint64FieldNumber = 216;
  private:
  const ::feature_proto::ListDoubleUint64& _internal_v_list_double_uint64() const;
  public:
  const ::feature_proto::ListDoubleUint64& v_list_double_uint64() const;
  ::feature_proto::ListDoubleUint64* release_v_list_double_uint64();
  ::feature_proto::ListDoubleUint64* mutable_v_list_double_uint64();
  void set_allocated_v_list_double_uint64(::feature_proto::ListDoubleUint64* v_list_double_uint64);

  // .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
  bool has_v_list_double_sint32() const;
  void clear_v_list_double_sint32();
  static const int kVListDoubleSint32FieldNumber = 217;
  private:
  const ::feature_proto::ListDoubleSint32& _internal_v_list_double_sint32() const;
  public:
  const ::feature_proto::ListDoubleSint32& v_list_double_sint32() const;
  ::feature_proto::ListDoubleSint32* release_v_list_double_sint32();
  ::feature_proto::ListDoubleSint32* mutable_v_list_double_sint32();
  void set_allocated_v_list_double_sint32(::feature_proto::ListDoubleSint32* v_list_double_sint32);

  // .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
  bool has_v_list_double_sint64() const;
  void clear_v_list_double_sint64();
  static const int kVListDoubleSint64FieldNumber = 218;
  private:
  const ::feature_proto::ListDoubleSint64& _internal_v_list_double_sint64() const;
  public:
  const ::feature_proto::ListDoubleSint64& v_list_double_sint64() const;
  ::feature_proto::ListDoubleSint64* release_v_list_double_sint64();
  ::feature_proto::ListDoubleSint64* mutable_v_list_double_sint64();
  void set_allocated_v_list_double_sint64(::feature_proto::ListDoubleSint64* v_list_double_sint64);

  // .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
  bool has_v_list_double_fixed32() const;
  void clear_v_list_double_fixed32();
  static const int kVListDoubleFixed32FieldNumber = 219;
  private:
  const ::feature_proto::ListDoubleFixed32& _internal_v_list_double_fixed32() const;
  public:
  const ::feature_proto::ListDoubleFixed32& v_list_double_fixed32() const;
  ::feature_proto::ListDoubleFixed32* release_v_list_double_fixed32();
  ::feature_proto::ListDoubleFixed32* mutable_v_list_double_fixed32();
  void set_allocated_v_list_double_fixed32(::feature_proto::ListDoubleFixed32* v_list_double_fixed32);

  // .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
  bool has_v_list_double_fixed64() const;
  void clear_v_list_double_fixed64();
  static const int kVListDoubleFixed64FieldNumber = 220;
  private:
  const ::feature_proto::ListDoubleFixed64& _internal_v_list_double_fixed64() const;
  public:
  const ::feature_proto::ListDoubleFixed64& v_list_double_fixed64() const;
  ::feature_proto::ListDoubleFixed64* release_v_list_double_fixed64();
  ::feature_proto::ListDoubleFixed64* mutable_v_list_double_fixed64();
  void set_allocated_v_list_double_fixed64(::feature_proto::ListDoubleFixed64* v_list_double_fixed64);

  // .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
  bool has_v_list_double_sfixed32() const;
  void clear_v_list_double_sfixed32();
  static const int kVListDoubleSfixed32FieldNumber = 221;
  private:
  const ::feature_proto::ListDoubleSfixed32& _internal_v_list_double_sfixed32() const;
  public:
  const ::feature_proto::ListDoubleSfixed32& v_list_double_sfixed32() const;
  ::feature_proto::ListDoubleSfixed32* release_v_list_double_sfixed32();
  ::feature_proto::ListDoubleSfixed32* mutable_v_list_double_sfixed32();
  void set_allocated_v_list_double_sfixed32(::feature_proto::ListDoubleSfixed32* v_list_double_sfixed32);

  // .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
  bool has_v_list_double_sfixed64() const;
  void clear_v_list_double_sfixed64();
  static const int kVListDoubleSfixed64FieldNumber = 222;
  private:
  const ::feature_proto::ListDoubleSfixed64& _internal_v_list_double_sfixed64() const;
  public:
  const ::feature_proto::ListDoubleSfixed64& v_list_double_sfixed64() const;
  ::feature_proto::ListDoubleSfixed64* release_v_list_double_sfixed64();
  ::feature_proto::ListDoubleSfixed64* mutable_v_list_double_sfixed64();
  void set_allocated_v_list_double_sfixed64(::feature_proto::ListDoubleSfixed64* v_list_double_sfixed64);

  // .feature_proto.ListDoubleBool v_list_double_bool = 223;
  bool has_v_list_double_bool() const;
  void clear_v_list_double_bool();
  static const int kVListDoubleBoolFieldNumber = 223;
  private:
  const ::feature_proto::ListDoubleBool& _internal_v_list_double_bool() const;
  public:
  const ::feature_proto::ListDoubleBool& v_list_double_bool() const;
  ::feature_proto::ListDoubleBool* release_v_list_double_bool();
  ::feature_proto::ListDoubleBool* mutable_v_list_double_bool();
  void set_allocated_v_list_double_bool(::feature_proto::ListDoubleBool* v_list_double_bool);

  // .feature_proto.ListDoubleString v_list_double_string = 224;
  bool has_v_list_double_string() const;
  void clear_v_list_double_string();
  static const int kVListDoubleStringFieldNumber = 224;
  private:
  const ::feature_proto::ListDoubleString& _internal_v_list_double_string() const;
  public:
  const ::feature_proto::ListDoubleString& v_list_double_string() const;
  ::feature_proto::ListDoubleString* release_v_list_double_string();
  ::feature_proto::ListDoubleString* mutable_v_list_double_string();
  void set_allocated_v_list_double_string(::feature_proto::ListDoubleString* v_list_double_string);

  // .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
  bool has_v_list_double_bytes() const;
  void clear_v_list_double_bytes();
  static const int kVListDoubleBytesFieldNumber = 225;
  private:
  const ::feature_proto::ListDoubleBytes& _internal_v_list_double_bytes() const;
  public:
  const ::feature_proto::ListDoubleBytes& v_list_double_bytes() const;
  ::feature_proto::ListDoubleBytes* release_v_list_double_bytes();
  ::feature_proto::ListDoubleBytes* mutable_v_list_double_bytes();
  void set_allocated_v_list_double_bytes(::feature_proto::ListDoubleBytes* v_list_double_bytes);

  // .feature_proto.ListFloatDouble v_list_float_double = 226;
  bool has_v_list_float_double() const;
  void clear_v_list_float_double();
  static const int kVListFloatDoubleFieldNumber = 226;
  private:
  const ::feature_proto::ListFloatDouble& _internal_v_list_float_double() const;
  public:
  const ::feature_proto::ListFloatDouble& v_list_float_double() const;
  ::feature_proto::ListFloatDouble* release_v_list_float_double();
  ::feature_proto::ListFloatDouble* mutable_v_list_float_double();
  void set_allocated_v_list_float_double(::feature_proto::ListFloatDouble* v_list_float_double);

  // .feature_proto.ListFloatFloat v_list_float_float = 227;
  bool has_v_list_float_float() const;
  void clear_v_list_float_float();
  static const int kVListFloatFloatFieldNumber = 227;
  private:
  const ::feature_proto::ListFloatFloat& _internal_v_list_float_float() const;
  public:
  const ::feature_proto::ListFloatFloat& v_list_float_float() const;
  ::feature_proto::ListFloatFloat* release_v_list_float_float();
  ::feature_proto::ListFloatFloat* mutable_v_list_float_float();
  void set_allocated_v_list_float_float(::feature_proto::ListFloatFloat* v_list_float_float);

  // .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
  bool has_v_list_float_int32() const;
  void clear_v_list_float_int32();
  static const int kVListFloatInt32FieldNumber = 228;
  private:
  const ::feature_proto::ListFloatInt32& _internal_v_list_float_int32() const;
  public:
  const ::feature_proto::ListFloatInt32& v_list_float_int32() const;
  ::feature_proto::ListFloatInt32* release_v_list_float_int32();
  ::feature_proto::ListFloatInt32* mutable_v_list_float_int32();
  void set_allocated_v_list_float_int32(::feature_proto::ListFloatInt32* v_list_float_int32);

  // .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
  bool has_v_list_float_int64() const;
  void clear_v_list_float_int64();
  static const int kVListFloatInt64FieldNumber = 229;
  private:
  const ::feature_proto::ListFloatInt64& _internal_v_list_float_int64() const;
  public:
  const ::feature_proto::ListFloatInt64& v_list_float_int64() const;
  ::feature_proto::ListFloatInt64* release_v_list_float_int64();
  ::feature_proto::ListFloatInt64* mutable_v_list_float_int64();
  void set_allocated_v_list_float_int64(::feature_proto::ListFloatInt64* v_list_float_int64);

  // .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
  bool has_v_list_float_uint32() const;
  void clear_v_list_float_uint32();
  static const int kVListFloatUint32FieldNumber = 230;
  private:
  const ::feature_proto::ListFloatUint32& _internal_v_list_float_uint32() const;
  public:
  const ::feature_proto::ListFloatUint32& v_list_float_uint32() const;
  ::feature_proto::ListFloatUint32* release_v_list_float_uint32();
  ::feature_proto::ListFloatUint32* mutable_v_list_float_uint32();
  void set_allocated_v_list_float_uint32(::feature_proto::ListFloatUint32* v_list_float_uint32);

  // .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
  bool has_v_list_float_uint64() const;
  void clear_v_list_float_uint64();
  static const int kVListFloatUint64FieldNumber = 231;
  private:
  const ::feature_proto::ListFloatUint64& _internal_v_list_float_uint64() const;
  public:
  const ::feature_proto::ListFloatUint64& v_list_float_uint64() const;
  ::feature_proto::ListFloatUint64* release_v_list_float_uint64();
  ::feature_proto::ListFloatUint64* mutable_v_list_float_uint64();
  void set_allocated_v_list_float_uint64(::feature_proto::ListFloatUint64* v_list_float_uint64);

  // .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
  bool has_v_list_float_sint32() const;
  void clear_v_list_float_sint32();
  static const int kVListFloatSint32FieldNumber = 232;
  private:
  const ::feature_proto::ListFloatSint32& _internal_v_list_float_sint32() const;
  public:
  const ::feature_proto::ListFloatSint32& v_list_float_sint32() const;
  ::feature_proto::ListFloatSint32* release_v_list_float_sint32();
  ::feature_proto::ListFloatSint32* mutable_v_list_float_sint32();
  void set_allocated_v_list_float_sint32(::feature_proto::ListFloatSint32* v_list_float_sint32);

  // .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
  bool has_v_list_float_sint64() const;
  void clear_v_list_float_sint64();
  static const int kVListFloatSint64FieldNumber = 233;
  private:
  const ::feature_proto::ListFloatSint64& _internal_v_list_float_sint64() const;
  public:
  const ::feature_proto::ListFloatSint64& v_list_float_sint64() const;
  ::feature_proto::ListFloatSint64* release_v_list_float_sint64();
  ::feature_proto::ListFloatSint64* mutable_v_list_float_sint64();
  void set_allocated_v_list_float_sint64(::feature_proto::ListFloatSint64* v_list_float_sint64);

  // .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
  bool has_v_list_float_fixed32() const;
  void clear_v_list_float_fixed32();
  static const int kVListFloatFixed32FieldNumber = 234;
  private:
  const ::feature_proto::ListFloatFixed32& _internal_v_list_float_fixed32() const;
  public:
  const ::feature_proto::ListFloatFixed32& v_list_float_fixed32() const;
  ::feature_proto::ListFloatFixed32* release_v_list_float_fixed32();
  ::feature_proto::ListFloatFixed32* mutable_v_list_float_fixed32();
  void set_allocated_v_list_float_fixed32(::feature_proto::ListFloatFixed32* v_list_float_fixed32);

  // .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
  bool has_v_list_float_fixed64() const;
  void clear_v_list_float_fixed64();
  static const int kVListFloatFixed64FieldNumber = 235;
  private:
  const ::feature_proto::ListFloatFixed64& _internal_v_list_float_fixed64() const;
  public:
  const ::feature_proto::ListFloatFixed64& v_list_float_fixed64() const;
  ::feature_proto::ListFloatFixed64* release_v_list_float_fixed64();
  ::feature_proto::ListFloatFixed64* mutable_v_list_float_fixed64();
  void set_allocated_v_list_float_fixed64(::feature_proto::ListFloatFixed64* v_list_float_fixed64);

  // .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
  bool has_v_list_float_sfixed32() const;
  void clear_v_list_float_sfixed32();
  static const int kVListFloatSfixed32FieldNumber = 236;
  private:
  const ::feature_proto::ListFloatSfixed32& _internal_v_list_float_sfixed32() const;
  public:
  const ::feature_proto::ListFloatSfixed32& v_list_float_sfixed32() const;
  ::feature_proto::ListFloatSfixed32* release_v_list_float_sfixed32();
  ::feature_proto::ListFloatSfixed32* mutable_v_list_float_sfixed32();
  void set_allocated_v_list_float_sfixed32(::feature_proto::ListFloatSfixed32* v_list_float_sfixed32);

  // .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
  bool has_v_list_float_sfixed64() const;
  void clear_v_list_float_sfixed64();
  static const int kVListFloatSfixed64FieldNumber = 237;
  private:
  const ::feature_proto::ListFloatSfixed64& _internal_v_list_float_sfixed64() const;
  public:
  const ::feature_proto::ListFloatSfixed64& v_list_float_sfixed64() const;
  ::feature_proto::ListFloatSfixed64* release_v_list_float_sfixed64();
  ::feature_proto::ListFloatSfixed64* mutable_v_list_float_sfixed64();
  void set_allocated_v_list_float_sfixed64(::feature_proto::ListFloatSfixed64* v_list_float_sfixed64);

  // .feature_proto.ListFloatBool v_list_float_bool = 238;
  bool has_v_list_float_bool() const;
  void clear_v_list_float_bool();
  static const int kVListFloatBoolFieldNumber = 238;
  private:
  const ::feature_proto::ListFloatBool& _internal_v_list_float_bool() const;
  public:
  const ::feature_proto::ListFloatBool& v_list_float_bool() const;
  ::feature_proto::ListFloatBool* release_v_list_float_bool();
  ::feature_proto::ListFloatBool* mutable_v_list_float_bool();
  void set_allocated_v_list_float_bool(::feature_proto::ListFloatBool* v_list_float_bool);

  // .feature_proto.ListFloatString v_list_float_string = 239;
  bool has_v_list_float_string() const;
  void clear_v_list_float_string();
  static const int kVListFloatStringFieldNumber = 239;
  private:
  const ::feature_proto::ListFloatString& _internal_v_list_float_string() const;
  public:
  const ::feature_proto::ListFloatString& v_list_float_string() const;
  ::feature_proto::ListFloatString* release_v_list_float_string();
  ::feature_proto::ListFloatString* mutable_v_list_float_string();
  void set_allocated_v_list_float_string(::feature_proto::ListFloatString* v_list_float_string);

  // .feature_proto.ListFloatBytes v_list_float_bytes = 240;
  bool has_v_list_float_bytes() const;
  void clear_v_list_float_bytes();
  static const int kVListFloatBytesFieldNumber = 240;
  private:
  const ::feature_proto::ListFloatBytes& _internal_v_list_float_bytes() const;
  public:
  const ::feature_proto::ListFloatBytes& v_list_float_bytes() const;
  ::feature_proto::ListFloatBytes* release_v_list_float_bytes();
  ::feature_proto::ListFloatBytes* mutable_v_list_float_bytes();
  void set_allocated_v_list_float_bytes(::feature_proto::ListFloatBytes* v_list_float_bytes);

  // .feature_proto.ListBoolDouble v_list_bool_double = 241;
  bool has_v_list_bool_double() const;
  void clear_v_list_bool_double();
  static const int kVListBoolDoubleFieldNumber = 241;
  private:
  const ::feature_proto::ListBoolDouble& _internal_v_list_bool_double() const;
  public:
  const ::feature_proto::ListBoolDouble& v_list_bool_double() const;
  ::feature_proto::ListBoolDouble* release_v_list_bool_double();
  ::feature_proto::ListBoolDouble* mutable_v_list_bool_double();
  void set_allocated_v_list_bool_double(::feature_proto::ListBoolDouble* v_list_bool_double);

  // .feature_proto.ListBoolFloat v_list_bool_float = 242;
  bool has_v_list_bool_float() const;
  void clear_v_list_bool_float();
  static const int kVListBoolFloatFieldNumber = 242;
  private:
  const ::feature_proto::ListBoolFloat& _internal_v_list_bool_float() const;
  public:
  const ::feature_proto::ListBoolFloat& v_list_bool_float() const;
  ::feature_proto::ListBoolFloat* release_v_list_bool_float();
  ::feature_proto::ListBoolFloat* mutable_v_list_bool_float();
  void set_allocated_v_list_bool_float(::feature_proto::ListBoolFloat* v_list_bool_float);

  // .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
  bool has_v_list_bool_int32() const;
  void clear_v_list_bool_int32();
  static const int kVListBoolInt32FieldNumber = 243;
  private:
  const ::feature_proto::ListBoolInt32& _internal_v_list_bool_int32() const;
  public:
  const ::feature_proto::ListBoolInt32& v_list_bool_int32() const;
  ::feature_proto::ListBoolInt32* release_v_list_bool_int32();
  ::feature_proto::ListBoolInt32* mutable_v_list_bool_int32();
  void set_allocated_v_list_bool_int32(::feature_proto::ListBoolInt32* v_list_bool_int32);

  // .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
  bool has_v_list_bool_int64() const;
  void clear_v_list_bool_int64();
  static const int kVListBoolInt64FieldNumber = 244;
  private:
  const ::feature_proto::ListBoolInt64& _internal_v_list_bool_int64() const;
  public:
  const ::feature_proto::ListBoolInt64& v_list_bool_int64() const;
  ::feature_proto::ListBoolInt64* release_v_list_bool_int64();
  ::feature_proto::ListBoolInt64* mutable_v_list_bool_int64();
  void set_allocated_v_list_bool_int64(::feature_proto::ListBoolInt64* v_list_bool_int64);

  // .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
  bool has_v_list_bool_uint32() const;
  void clear_v_list_bool_uint32();
  static const int kVListBoolUint32FieldNumber = 245;
  private:
  const ::feature_proto::ListBoolUint32& _internal_v_list_bool_uint32() const;
  public:
  const ::feature_proto::ListBoolUint32& v_list_bool_uint32() const;
  ::feature_proto::ListBoolUint32* release_v_list_bool_uint32();
  ::feature_proto::ListBoolUint32* mutable_v_list_bool_uint32();
  void set_allocated_v_list_bool_uint32(::feature_proto::ListBoolUint32* v_list_bool_uint32);

  // .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
  bool has_v_list_bool_uint64() const;
  void clear_v_list_bool_uint64();
  static const int kVListBoolUint64FieldNumber = 246;
  private:
  const ::feature_proto::ListBoolUint64& _internal_v_list_bool_uint64() const;
  public:
  const ::feature_proto::ListBoolUint64& v_list_bool_uint64() const;
  ::feature_proto::ListBoolUint64* release_v_list_bool_uint64();
  ::feature_proto::ListBoolUint64* mutable_v_list_bool_uint64();
  void set_allocated_v_list_bool_uint64(::feature_proto::ListBoolUint64* v_list_bool_uint64);

  // .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
  bool has_v_list_bool_sint32() const;
  void clear_v_list_bool_sint32();
  static const int kVListBoolSint32FieldNumber = 247;
  private:
  const ::feature_proto::ListBoolSint32& _internal_v_list_bool_sint32() const;
  public:
  const ::feature_proto::ListBoolSint32& v_list_bool_sint32() const;
  ::feature_proto::ListBoolSint32* release_v_list_bool_sint32();
  ::feature_proto::ListBoolSint32* mutable_v_list_bool_sint32();
  void set_allocated_v_list_bool_sint32(::feature_proto::ListBoolSint32* v_list_bool_sint32);

  // .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
  bool has_v_list_bool_sint64() const;
  void clear_v_list_bool_sint64();
  static const int kVListBoolSint64FieldNumber = 248;
  private:
  const ::feature_proto::ListBoolSint64& _internal_v_list_bool_sint64() const;
  public:
  const ::feature_proto::ListBoolSint64& v_list_bool_sint64() const;
  ::feature_proto::ListBoolSint64* release_v_list_bool_sint64();
  ::feature_proto::ListBoolSint64* mutable_v_list_bool_sint64();
  void set_allocated_v_list_bool_sint64(::feature_proto::ListBoolSint64* v_list_bool_sint64);

  // .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
  bool has_v_list_bool_fixed32() const;
  void clear_v_list_bool_fixed32();
  static const int kVListBoolFixed32FieldNumber = 249;
  private:
  const ::feature_proto::ListBoolFixed32& _internal_v_list_bool_fixed32() const;
  public:
  const ::feature_proto::ListBoolFixed32& v_list_bool_fixed32() const;
  ::feature_proto::ListBoolFixed32* release_v_list_bool_fixed32();
  ::feature_proto::ListBoolFixed32* mutable_v_list_bool_fixed32();
  void set_allocated_v_list_bool_fixed32(::feature_proto::ListBoolFixed32* v_list_bool_fixed32);

  // .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
  bool has_v_list_bool_fixed64() const;
  void clear_v_list_bool_fixed64();
  static const int kVListBoolFixed64FieldNumber = 250;
  private:
  const ::feature_proto::ListBoolFixed64& _internal_v_list_bool_fixed64() const;
  public:
  const ::feature_proto::ListBoolFixed64& v_list_bool_fixed64() const;
  ::feature_proto::ListBoolFixed64* release_v_list_bool_fixed64();
  ::feature_proto::ListBoolFixed64* mutable_v_list_bool_fixed64();
  void set_allocated_v_list_bool_fixed64(::feature_proto::ListBoolFixed64* v_list_bool_fixed64);

  // .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
  bool has_v_list_bool_sfixed32() const;
  void clear_v_list_bool_sfixed32();
  static const int kVListBoolSfixed32FieldNumber = 251;
  private:
  const ::feature_proto::ListBoolSfixed32& _internal_v_list_bool_sfixed32() const;
  public:
  const ::feature_proto::ListBoolSfixed32& v_list_bool_sfixed32() const;
  ::feature_proto::ListBoolSfixed32* release_v_list_bool_sfixed32();
  ::feature_proto::ListBoolSfixed32* mutable_v_list_bool_sfixed32();
  void set_allocated_v_list_bool_sfixed32(::feature_proto::ListBoolSfixed32* v_list_bool_sfixed32);

  // .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
  bool has_v_list_bool_sfixed64() const;
  void clear_v_list_bool_sfixed64();
  static const int kVListBoolSfixed64FieldNumber = 252;
  private:
  const ::feature_proto::ListBoolSfixed64& _internal_v_list_bool_sfixed64() const;
  public:
  const ::feature_proto::ListBoolSfixed64& v_list_bool_sfixed64() const;
  ::feature_proto::ListBoolSfixed64* release_v_list_bool_sfixed64();
  ::feature_proto::ListBoolSfixed64* mutable_v_list_bool_sfixed64();
  void set_allocated_v_list_bool_sfixed64(::feature_proto::ListBoolSfixed64* v_list_bool_sfixed64);

  // .feature_proto.ListBoolBool v_list_bool_bool = 253;
  bool has_v_list_bool_bool() const;
  void clear_v_list_bool_bool();
  static const int kVListBoolBoolFieldNumber = 253;
  private:
  const ::feature_proto::ListBoolBool& _internal_v_list_bool_bool() const;
  public:
  const ::feature_proto::ListBoolBool& v_list_bool_bool() const;
  ::feature_proto::ListBoolBool* release_v_list_bool_bool();
  ::feature_proto::ListBoolBool* mutable_v_list_bool_bool();
  void set_allocated_v_list_bool_bool(::feature_proto::ListBoolBool* v_list_bool_bool);

  // .feature_proto.ListBoolString v_list_bool_string = 254;
  bool has_v_list_bool_string() const;
  void clear_v_list_bool_string();
  static const int kVListBoolStringFieldNumber = 254;
  private:
  const ::feature_proto::ListBoolString& _internal_v_list_bool_string() const;
  public:
  const ::feature_proto::ListBoolString& v_list_bool_string() const;
  ::feature_proto::ListBoolString* release_v_list_bool_string();
  ::feature_proto::ListBoolString* mutable_v_list_bool_string();
  void set_allocated_v_list_bool_string(::feature_proto::ListBoolString* v_list_bool_string);

  // .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
  bool has_v_list_bool_bytes() const;
  void clear_v_list_bool_bytes();
  static const int kVListBoolBytesFieldNumber = 255;
  private:
  const ::feature_proto::ListBoolBytes& _internal_v_list_bool_bytes() const;
  public:
  const ::feature_proto::ListBoolBytes& v_list_bool_bytes() const;
  ::feature_proto::ListBoolBytes* release_v_list_bool_bytes();
  ::feature_proto::ListBoolBytes* mutable_v_list_bool_bytes();
  void set_allocated_v_list_bool_bytes(::feature_proto::ListBoolBytes* v_list_bool_bytes);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:feature_proto.Feature)
 private:
  void set_has_v_double();
  void set_has_v_float();
  void set_has_v_int32();
  void set_has_v_int64();
  void set_has_v_uint32();
  void set_has_v_uint64();
  void set_has_v_sint32();
  void set_has_v_sint64();
  void set_has_v_fixed32();
  void set_has_v_fixed64();
  void set_has_v_sfixed32();
  void set_has_v_sfixed64();
  void set_has_v_bool();
  void set_has_v_string();
  void set_has_v_bytes();
  void set_has_v_list_double();
  void set_has_v_list_float();
  void set_has_v_list_int32();
  void set_has_v_list_int64();
  void set_has_v_list_uint32();
  void set_has_v_list_uint64();
  void set_has_v_list_sint32();
  void set_has_v_list_sint64();
  void set_has_v_list_fixed32();
  void set_has_v_list_fixed64();
  void set_has_v_list_sfixed32();
  void set_has_v_list_sfixed64();
  void set_has_v_list_bool();
  void set_has_v_list_string();
  void set_has_v_list_bytes();
  void set_has_v_list_string_double();
  void set_has_v_list_string_float();
  void set_has_v_list_string_int32();
  void set_has_v_list_string_int64();
  void set_has_v_list_string_uint32();
  void set_has_v_list_string_uint64();
  void set_has_v_list_string_sint32();
  void set_has_v_list_string_sint64();
  void set_has_v_list_string_fixed32();
  void set_has_v_list_string_fixed64();
  void set_has_v_list_string_sfixed32();
  void set_has_v_list_string_sfixed64();
  void set_has_v_list_string_bool();
  void set_has_v_list_string_string();
  void set_has_v_list_string_bytes();
  void set_has_v_list_bytes_double();
  void set_has_v_list_bytes_float();
  void set_has_v_list_bytes_int32();
  void set_has_v_list_bytes_int64();
  void set_has_v_list_bytes_uint32();
  void set_has_v_list_bytes_uint64();
  void set_has_v_list_bytes_sint32();
  void set_has_v_list_bytes_sint64();
  void set_has_v_list_bytes_fixed32();
  void set_has_v_list_bytes_fixed64();
  void set_has_v_list_bytes_sfixed32();
  void set_has_v_list_bytes_sfixed64();
  void set_has_v_list_bytes_bool();
  void set_has_v_list_bytes_string();
  void set_has_v_list_bytes_bytes();
  void set_has_v_list_int32_double();
  void set_has_v_list_int32_float();
  void set_has_v_list_int32_int32();
  void set_has_v_list_int32_int64();
  void set_has_v_list_int32_uint32();
  void set_has_v_list_int32_uint64();
  void set_has_v_list_int32_sint32();
  void set_has_v_list_int32_sint64();
  void set_has_v_list_int32_fixed32();
  void set_has_v_list_int32_fixed64();
  void set_has_v_list_int32_sfixed32();
  void set_has_v_list_int32_sfixed64();
  void set_has_v_list_int32_bool();
  void set_has_v_list_int32_string();
  void set_has_v_list_int32_bytes();
  void set_has_v_list_int64_double();
  void set_has_v_list_int64_float();
  void set_has_v_list_int64_int32();
  void set_has_v_list_int64_int64();
  void set_has_v_list_int64_uint32();
  void set_has_v_list_int64_uint64();
  void set_has_v_list_int64_sint32();
  void set_has_v_list_int64_sint64();
  void set_has_v_list_int64_fixed32();
  void set_has_v_list_int64_fixed64();
  void set_has_v_list_int64_sfixed32();
  void set_has_v_list_int64_sfixed64();
  void set_has_v_list_int64_bool();
  void set_has_v_list_int64_string();
  void set_has_v_list_int64_bytes();
  void set_has_v_list_uint32_double();
  void set_has_v_list_uint32_float();
  void set_has_v_list_uint32_int32();
  void set_has_v_list_uint32_int64();
  void set_has_v_list_uint32_uint32();
  void set_has_v_list_uint32_uint64();
  void set_has_v_list_uint32_sint32();
  void set_has_v_list_uint32_sint64();
  void set_has_v_list_uint32_fixed32();
  void set_has_v_list_uint32_fixed64();
  void set_has_v_list_uint32_sfixed32();
  void set_has_v_list_uint32_sfixed64();
  void set_has_v_list_uint32_bool();
  void set_has_v_list_uint32_string();
  void set_has_v_list_uint32_bytes();
  void set_has_v_list_uint64_double();
  void set_has_v_list_uint64_float();
  void set_has_v_list_uint64_int32();
  void set_has_v_list_uint64_int64();
  void set_has_v_list_uint64_uint32();
  void set_has_v_list_uint64_uint64();
  void set_has_v_list_uint64_sint32();
  void set_has_v_list_uint64_sint64();
  void set_has_v_list_uint64_fixed32();
  void set_has_v_list_uint64_fixed64();
  void set_has_v_list_uint64_sfixed32();
  void set_has_v_list_uint64_sfixed64();
  void set_has_v_list_uint64_bool();
  void set_has_v_list_uint64_string();
  void set_has_v_list_uint64_bytes();
  void set_has_v_list_sint32_double();
  void set_has_v_list_sint32_float();
  void set_has_v_list_sint32_int32();
  void set_has_v_list_sint32_int64();
  void set_has_v_list_sint32_uint32();
  void set_has_v_list_sint32_uint64();
  void set_has_v_list_sint32_sint32();
  void set_has_v_list_sint32_sint64();
  void set_has_v_list_sint32_fixed32();
  void set_has_v_list_sint32_fixed64();
  void set_has_v_list_sint32_sfixed32();
  void set_has_v_list_sint32_sfixed64();
  void set_has_v_list_sint32_bool();
  void set_has_v_list_sint32_string();
  void set_has_v_list_sint32_bytes();
  void set_has_v_list_sint64_double();
  void set_has_v_list_sint64_float();
  void set_has_v_list_sint64_int32();
  void set_has_v_list_sint64_int64();
  void set_has_v_list_sint64_uint32();
  void set_has_v_list_sint64_uint64();
  void set_has_v_list_sint64_sint32();
  void set_has_v_list_sint64_sint64();
  void set_has_v_list_sint64_fixed32();
  void set_has_v_list_sint64_fixed64();
  void set_has_v_list_sint64_sfixed32();
  void set_has_v_list_sint64_sfixed64();
  void set_has_v_list_sint64_bool();
  void set_has_v_list_sint64_string();
  void set_has_v_list_sint64_bytes();
  void set_has_v_list_fixed32_double();
  void set_has_v_list_fixed32_float();
  void set_has_v_list_fixed32_int32();
  void set_has_v_list_fixed32_int64();
  void set_has_v_list_fixed32_uint32();
  void set_has_v_list_fixed32_uint64();
  void set_has_v_list_fixed32_sint32();
  void set_has_v_list_fixed32_sint64();
  void set_has_v_list_fixed32_fixed32();
  void set_has_v_list_fixed32_fixed64();
  void set_has_v_list_fixed32_sfixed32();
  void set_has_v_list_fixed32_sfixed64();
  void set_has_v_list_fixed32_bool();
  void set_has_v_list_fixed32_string();
  void set_has_v_list_fixed32_bytes();
  void set_has_v_list_fixed64_double();
  void set_has_v_list_fixed64_float();
  void set_has_v_list_fixed64_int32();
  void set_has_v_list_fixed64_int64();
  void set_has_v_list_fixed64_uint32();
  void set_has_v_list_fixed64_uint64();
  void set_has_v_list_fixed64_sint32();
  void set_has_v_list_fixed64_sint64();
  void set_has_v_list_fixed64_fixed32();
  void set_has_v_list_fixed64_fixed64();
  void set_has_v_list_fixed64_sfixed32();
  void set_has_v_list_fixed64_sfixed64();
  void set_has_v_list_fixed64_bool();
  void set_has_v_list_fixed64_string();
  void set_has_v_list_fixed64_bytes();
  void set_has_v_list_sfixed32_double();
  void set_has_v_list_sfixed32_float();
  void set_has_v_list_sfixed32_int32();
  void set_has_v_list_sfixed32_int64();
  void set_has_v_list_sfixed32_uint32();
  void set_has_v_list_sfixed32_uint64();
  void set_has_v_list_sfixed32_sint32();
  void set_has_v_list_sfixed32_sint64();
  void set_has_v_list_sfixed32_fixed32();
  void set_has_v_list_sfixed32_fixed64();
  void set_has_v_list_sfixed32_sfixed32();
  void set_has_v_list_sfixed32_sfixed64();
  void set_has_v_list_sfixed32_bool();
  void set_has_v_list_sfixed32_string();
  void set_has_v_list_sfixed32_bytes();
  void set_has_v_list_sfixed64_double();
  void set_has_v_list_sfixed64_float();
  void set_has_v_list_sfixed64_int32();
  void set_has_v_list_sfixed64_int64();
  void set_has_v_list_sfixed64_uint32();
  void set_has_v_list_sfixed64_uint64();
  void set_has_v_list_sfixed64_sint32();
  void set_has_v_list_sfixed64_sint64();
  void set_has_v_list_sfixed64_fixed32();
  void set_has_v_list_sfixed64_fixed64();
  void set_has_v_list_sfixed64_sfixed32();
  void set_has_v_list_sfixed64_sfixed64();
  void set_has_v_list_sfixed64_bool();
  void set_has_v_list_sfixed64_string();
  void set_has_v_list_sfixed64_bytes();
  void set_has_v_list_double_double();
  void set_has_v_list_double_float();
  void set_has_v_list_double_int32();
  void set_has_v_list_double_int64();
  void set_has_v_list_double_uint32();
  void set_has_v_list_double_uint64();
  void set_has_v_list_double_sint32();
  void set_has_v_list_double_sint64();
  void set_has_v_list_double_fixed32();
  void set_has_v_list_double_fixed64();
  void set_has_v_list_double_sfixed32();
  void set_has_v_list_double_sfixed64();
  void set_has_v_list_double_bool();
  void set_has_v_list_double_string();
  void set_has_v_list_double_bytes();
  void set_has_v_list_float_double();
  void set_has_v_list_float_float();
  void set_has_v_list_float_int32();
  void set_has_v_list_float_int64();
  void set_has_v_list_float_uint32();
  void set_has_v_list_float_uint64();
  void set_has_v_list_float_sint32();
  void set_has_v_list_float_sint64();
  void set_has_v_list_float_fixed32();
  void set_has_v_list_float_fixed64();
  void set_has_v_list_float_sfixed32();
  void set_has_v_list_float_sfixed64();
  void set_has_v_list_float_bool();
  void set_has_v_list_float_string();
  void set_has_v_list_float_bytes();
  void set_has_v_list_bool_double();
  void set_has_v_list_bool_float();
  void set_has_v_list_bool_int32();
  void set_has_v_list_bool_int64();
  void set_has_v_list_bool_uint32();
  void set_has_v_list_bool_uint64();
  void set_has_v_list_bool_sint32();
  void set_has_v_list_bool_sint64();
  void set_has_v_list_bool_fixed32();
  void set_has_v_list_bool_fixed64();
  void set_has_v_list_bool_sfixed32();
  void set_has_v_list_bool_sfixed64();
  void set_has_v_list_bool_bool();
  void set_has_v_list_bool_string();
  void set_has_v_list_bool_bytes();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union KindUnion {
    KindUnion() {}
    double v_double_;
    float v_float_;
    ::google::protobuf::int32 v_int32_;
    ::google::protobuf::int64 v_int64_;
    ::google::protobuf::uint32 v_uint32_;
    ::google::protobuf::uint64 v_uint64_;
    ::google::protobuf::int32 v_sint32_;
    ::google::protobuf::int64 v_sint64_;
    ::google::protobuf::uint32 v_fixed32_;
    ::google::protobuf::uint64 v_fixed64_;
    ::google::protobuf::int32 v_sfixed32_;
    ::google::protobuf::int64 v_sfixed64_;
    bool v_bool_;
    ::google::protobuf::internal::ArenaStringPtr v_string_;
    ::google::protobuf::internal::ArenaStringPtr v_bytes_;
    ::feature_proto::ListDouble* v_list_double_;
    ::feature_proto::ListFloat* v_list_float_;
    ::feature_proto::ListInt32* v_list_int32_;
    ::feature_proto::ListInt64* v_list_int64_;
    ::feature_proto::ListUint32* v_list_uint32_;
    ::feature_proto::ListUint64* v_list_uint64_;
    ::feature_proto::ListSint32* v_list_sint32_;
    ::feature_proto::ListSint64* v_list_sint64_;
    ::feature_proto::ListFixed32* v_list_fixed32_;
    ::feature_proto::ListFixed64* v_list_fixed64_;
    ::feature_proto::ListSfixed32* v_list_sfixed32_;
    ::feature_proto::ListSfixed64* v_list_sfixed64_;
    ::feature_proto::ListBool* v_list_bool_;
    ::feature_proto::ListString* v_list_string_;
    ::feature_proto::ListBytes* v_list_bytes_;
    ::feature_proto::ListStringDouble* v_list_string_double_;
    ::feature_proto::ListStringFloat* v_list_string_float_;
    ::feature_proto::ListStringInt32* v_list_string_int32_;
    ::feature_proto::ListStringInt64* v_list_string_int64_;
    ::feature_proto::ListStringUint32* v_list_string_uint32_;
    ::feature_proto::ListStringUint64* v_list_string_uint64_;
    ::feature_proto::ListStringSint32* v_list_string_sint32_;
    ::feature_proto::ListStringSint64* v_list_string_sint64_;
    ::feature_proto::ListStringFixed32* v_list_string_fixed32_;
    ::feature_proto::ListStringFixed64* v_list_string_fixed64_;
    ::feature_proto::ListStringSfixed32* v_list_string_sfixed32_;
    ::feature_proto::ListStringSfixed64* v_list_string_sfixed64_;
    ::feature_proto::ListStringBool* v_list_string_bool_;
    ::feature_proto::ListStringString* v_list_string_string_;
    ::feature_proto::ListStringBytes* v_list_string_bytes_;
    ::feature_proto::ListBytesDouble* v_list_bytes_double_;
    ::feature_proto::ListBytesFloat* v_list_bytes_float_;
    ::feature_proto::ListBytesInt32* v_list_bytes_int32_;
    ::feature_proto::ListBytesInt64* v_list_bytes_int64_;
    ::feature_proto::ListBytesUint32* v_list_bytes_uint32_;
    ::feature_proto::ListBytesUint64* v_list_bytes_uint64_;
    ::feature_proto::ListBytesSint32* v_list_bytes_sint32_;
    ::feature_proto::ListBytesSint64* v_list_bytes_sint64_;
    ::feature_proto::ListBytesFixed32* v_list_bytes_fixed32_;
    ::feature_proto::ListBytesFixed64* v_list_bytes_fixed64_;
    ::feature_proto::ListBytesSfixed32* v_list_bytes_sfixed32_;
    ::feature_proto::ListBytesSfixed64* v_list_bytes_sfixed64_;
    ::feature_proto::ListBytesBool* v_list_bytes_bool_;
    ::feature_proto::ListBytesString* v_list_bytes_string_;
    ::feature_proto::ListBytesBytes* v_list_bytes_bytes_;
    ::feature_proto::ListInt32Double* v_list_int32_double_;
    ::feature_proto::ListInt32Float* v_list_int32_float_;
    ::feature_proto::ListInt32Int32* v_list_int32_int32_;
    ::feature_proto::ListInt32Int64* v_list_int32_int64_;
    ::feature_proto::ListInt32Uint32* v_list_int32_uint32_;
    ::feature_proto::ListInt32Uint64* v_list_int32_uint64_;
    ::feature_proto::ListInt32Sint32* v_list_int32_sint32_;
    ::feature_proto::ListInt32Sint64* v_list_int32_sint64_;
    ::feature_proto::ListInt32Fixed32* v_list_int32_fixed32_;
    ::feature_proto::ListInt32Fixed64* v_list_int32_fixed64_;
    ::feature_proto::ListInt32Sfixed32* v_list_int32_sfixed32_;
    ::feature_proto::ListInt32Sfixed64* v_list_int32_sfixed64_;
    ::feature_proto::ListInt32Bool* v_list_int32_bool_;
    ::feature_proto::ListInt32String* v_list_int32_string_;
    ::feature_proto::ListInt32Bytes* v_list_int32_bytes_;
    ::feature_proto::ListInt64Double* v_list_int64_double_;
    ::feature_proto::ListInt64Float* v_list_int64_float_;
    ::feature_proto::ListInt64Int32* v_list_int64_int32_;
    ::feature_proto::ListInt64Int64* v_list_int64_int64_;
    ::feature_proto::ListInt64Uint32* v_list_int64_uint32_;
    ::feature_proto::ListInt64Uint64* v_list_int64_uint64_;
    ::feature_proto::ListInt64Sint32* v_list_int64_sint32_;
    ::feature_proto::ListInt64Sint64* v_list_int64_sint64_;
    ::feature_proto::ListInt64Fixed32* v_list_int64_fixed32_;
    ::feature_proto::ListInt64Fixed64* v_list_int64_fixed64_;
    ::feature_proto::ListInt64Sfixed32* v_list_int64_sfixed32_;
    ::feature_proto::ListInt64Sfixed64* v_list_int64_sfixed64_;
    ::feature_proto::ListInt64Bool* v_list_int64_bool_;
    ::feature_proto::ListInt64String* v_list_int64_string_;
    ::feature_proto::ListInt64Bytes* v_list_int64_bytes_;
    ::feature_proto::ListUint32Double* v_list_uint32_double_;
    ::feature_proto::ListUint32Float* v_list_uint32_float_;
    ::feature_proto::ListUint32Int32* v_list_uint32_int32_;
    ::feature_proto::ListUint32Int64* v_list_uint32_int64_;
    ::feature_proto::ListUint32Uint32* v_list_uint32_uint32_;
    ::feature_proto::ListUint32Uint64* v_list_uint32_uint64_;
    ::feature_proto::ListUint32Sint32* v_list_uint32_sint32_;
    ::feature_proto::ListUint32Sint64* v_list_uint32_sint64_;
    ::feature_proto::ListUint32Fixed32* v_list_uint32_fixed32_;
    ::feature_proto::ListUint32Fixed64* v_list_uint32_fixed64_;
    ::feature_proto::ListUint32Sfixed32* v_list_uint32_sfixed32_;
    ::feature_proto::ListUint32Sfixed64* v_list_uint32_sfixed64_;
    ::feature_proto::ListUint32Bool* v_list_uint32_bool_;
    ::feature_proto::ListUint32String* v_list_uint32_string_;
    ::feature_proto::ListUint32Bytes* v_list_uint32_bytes_;
    ::feature_proto::ListUint64Double* v_list_uint64_double_;
    ::feature_proto::ListUint64Float* v_list_uint64_float_;
    ::feature_proto::ListUint64Int32* v_list_uint64_int32_;
    ::feature_proto::ListUint64Int64* v_list_uint64_int64_;
    ::feature_proto::ListUint64Uint32* v_list_uint64_uint32_;
    ::feature_proto::ListUint64Uint64* v_list_uint64_uint64_;
    ::feature_proto::ListUint64Sint32* v_list_uint64_sint32_;
    ::feature_proto::ListUint64Sint64* v_list_uint64_sint64_;
    ::feature_proto::ListUint64Fixed32* v_list_uint64_fixed32_;
    ::feature_proto::ListUint64Fixed64* v_list_uint64_fixed64_;
    ::feature_proto::ListUint64Sfixed32* v_list_uint64_sfixed32_;
    ::feature_proto::ListUint64Sfixed64* v_list_uint64_sfixed64_;
    ::feature_proto::ListUint64Bool* v_list_uint64_bool_;
    ::feature_proto::ListUint64String* v_list_uint64_string_;
    ::feature_proto::ListUint64Bytes* v_list_uint64_bytes_;
    ::feature_proto::ListSint32Double* v_list_sint32_double_;
    ::feature_proto::ListSint32Float* v_list_sint32_float_;
    ::feature_proto::ListSint32Int32* v_list_sint32_int32_;
    ::feature_proto::ListSint32Int64* v_list_sint32_int64_;
    ::feature_proto::ListSint32Uint32* v_list_sint32_uint32_;
    ::feature_proto::ListSint32Uint64* v_list_sint32_uint64_;
    ::feature_proto::ListSint32Sint32* v_list_sint32_sint32_;
    ::feature_proto::ListSint32Sint64* v_list_sint32_sint64_;
    ::feature_proto::ListSint32Fixed32* v_list_sint32_fixed32_;
    ::feature_proto::ListSint32Fixed64* v_list_sint32_fixed64_;
    ::feature_proto::ListSint32Sfixed32* v_list_sint32_sfixed32_;
    ::feature_proto::ListSint32Sfixed64* v_list_sint32_sfixed64_;
    ::feature_proto::ListSint32Bool* v_list_sint32_bool_;
    ::feature_proto::ListSint32String* v_list_sint32_string_;
    ::feature_proto::ListSint32Bytes* v_list_sint32_bytes_;
    ::feature_proto::ListSint64Double* v_list_sint64_double_;
    ::feature_proto::ListSint64Float* v_list_sint64_float_;
    ::feature_proto::ListSint64Int32* v_list_sint64_int32_;
    ::feature_proto::ListSint64Int64* v_list_sint64_int64_;
    ::feature_proto::ListSint64Uint32* v_list_sint64_uint32_;
    ::feature_proto::ListSint64Uint64* v_list_sint64_uint64_;
    ::feature_proto::ListSint64Sint32* v_list_sint64_sint32_;
    ::feature_proto::ListSint64Sint64* v_list_sint64_sint64_;
    ::feature_proto::ListSint64Fixed32* v_list_sint64_fixed32_;
    ::feature_proto::ListSint64Fixed64* v_list_sint64_fixed64_;
    ::feature_proto::ListSint64Sfixed32* v_list_sint64_sfixed32_;
    ::feature_proto::ListSint64Sfixed64* v_list_sint64_sfixed64_;
    ::feature_proto::ListSint64Bool* v_list_sint64_bool_;
    ::feature_proto::ListSint64String* v_list_sint64_string_;
    ::feature_proto::ListSint64Bytes* v_list_sint64_bytes_;
    ::feature_proto::ListFixed32Double* v_list_fixed32_double_;
    ::feature_proto::ListFixed32Float* v_list_fixed32_float_;
    ::feature_proto::ListFixed32Int32* v_list_fixed32_int32_;
    ::feature_proto::ListFixed32Int64* v_list_fixed32_int64_;
    ::feature_proto::ListFixed32Uint32* v_list_fixed32_uint32_;
    ::feature_proto::ListFixed32Uint64* v_list_fixed32_uint64_;
    ::feature_proto::ListFixed32Sint32* v_list_fixed32_sint32_;
    ::feature_proto::ListFixed32Sint64* v_list_fixed32_sint64_;
    ::feature_proto::ListFixed32Fixed32* v_list_fixed32_fixed32_;
    ::feature_proto::ListFixed32Fixed64* v_list_fixed32_fixed64_;
    ::feature_proto::ListFixed32Sfixed32* v_list_fixed32_sfixed32_;
    ::feature_proto::ListFixed32Sfixed64* v_list_fixed32_sfixed64_;
    ::feature_proto::ListFixed32Bool* v_list_fixed32_bool_;
    ::feature_proto::ListFixed32String* v_list_fixed32_string_;
    ::feature_proto::ListFixed32Bytes* v_list_fixed32_bytes_;
    ::feature_proto::ListFixed64Double* v_list_fixed64_double_;
    ::feature_proto::ListFixed64Float* v_list_fixed64_float_;
    ::feature_proto::ListFixed64Int32* v_list_fixed64_int32_;
    ::feature_proto::ListFixed64Int64* v_list_fixed64_int64_;
    ::feature_proto::ListFixed64Uint32* v_list_fixed64_uint32_;
    ::feature_proto::ListFixed64Uint64* v_list_fixed64_uint64_;
    ::feature_proto::ListFixed64Sint32* v_list_fixed64_sint32_;
    ::feature_proto::ListFixed64Sint64* v_list_fixed64_sint64_;
    ::feature_proto::ListFixed64Fixed32* v_list_fixed64_fixed32_;
    ::feature_proto::ListFixed64Fixed64* v_list_fixed64_fixed64_;
    ::feature_proto::ListFixed64Sfixed32* v_list_fixed64_sfixed32_;
    ::feature_proto::ListFixed64Sfixed64* v_list_fixed64_sfixed64_;
    ::feature_proto::ListFixed64Bool* v_list_fixed64_bool_;
    ::feature_proto::ListFixed64String* v_list_fixed64_string_;
    ::feature_proto::ListFixed64Bytes* v_list_fixed64_bytes_;
    ::feature_proto::ListSfixed32Double* v_list_sfixed32_double_;
    ::feature_proto::ListSfixed32Float* v_list_sfixed32_float_;
    ::feature_proto::ListSfixed32Int32* v_list_sfixed32_int32_;
    ::feature_proto::ListSfixed32Int64* v_list_sfixed32_int64_;
    ::feature_proto::ListSfixed32Uint32* v_list_sfixed32_uint32_;
    ::feature_proto::ListSfixed32Uint64* v_list_sfixed32_uint64_;
    ::feature_proto::ListSfixed32Sint32* v_list_sfixed32_sint32_;
    ::feature_proto::ListSfixed32Sint64* v_list_sfixed32_sint64_;
    ::feature_proto::ListSfixed32Fixed32* v_list_sfixed32_fixed32_;
    ::feature_proto::ListSfixed32Fixed64* v_list_sfixed32_fixed64_;
    ::feature_proto::ListSfixed32Sfixed32* v_list_sfixed32_sfixed32_;
    ::feature_proto::ListSfixed32Sfixed64* v_list_sfixed32_sfixed64_;
    ::feature_proto::ListSfixed32Bool* v_list_sfixed32_bool_;
    ::feature_proto::ListSfixed32String* v_list_sfixed32_string_;
    ::feature_proto::ListSfixed32Bytes* v_list_sfixed32_bytes_;
    ::feature_proto::ListSfixed64Double* v_list_sfixed64_double_;
    ::feature_proto::ListSfixed64Float* v_list_sfixed64_float_;
    ::feature_proto::ListSfixed64Int32* v_list_sfixed64_int32_;
    ::feature_proto::ListSfixed64Int64* v_list_sfixed64_int64_;
    ::feature_proto::ListSfixed64Uint32* v_list_sfixed64_uint32_;
    ::feature_proto::ListSfixed64Uint64* v_list_sfixed64_uint64_;
    ::feature_proto::ListSfixed64Sint32* v_list_sfixed64_sint32_;
    ::feature_proto::ListSfixed64Sint64* v_list_sfixed64_sint64_;
    ::feature_proto::ListSfixed64Fixed32* v_list_sfixed64_fixed32_;
    ::feature_proto::ListSfixed64Fixed64* v_list_sfixed64_fixed64_;
    ::feature_proto::ListSfixed64Sfixed32* v_list_sfixed64_sfixed32_;
    ::feature_proto::ListSfixed64Sfixed64* v_list_sfixed64_sfixed64_;
    ::feature_proto::ListSfixed64Bool* v_list_sfixed64_bool_;
    ::feature_proto::ListSfixed64String* v_list_sfixed64_string_;
    ::feature_proto::ListSfixed64Bytes* v_list_sfixed64_bytes_;
    ::feature_proto::ListDoubleDouble* v_list_double_double_;
    ::feature_proto::ListDoubleFloat* v_list_double_float_;
    ::feature_proto::ListDoubleInt32* v_list_double_int32_;
    ::feature_proto::ListDoubleInt64* v_list_double_int64_;
    ::feature_proto::ListDoubleUint32* v_list_double_uint32_;
    ::feature_proto::ListDoubleUint64* v_list_double_uint64_;
    ::feature_proto::ListDoubleSint32* v_list_double_sint32_;
    ::feature_proto::ListDoubleSint64* v_list_double_sint64_;
    ::feature_proto::ListDoubleFixed32* v_list_double_fixed32_;
    ::feature_proto::ListDoubleFixed64* v_list_double_fixed64_;
    ::feature_proto::ListDoubleSfixed32* v_list_double_sfixed32_;
    ::feature_proto::ListDoubleSfixed64* v_list_double_sfixed64_;
    ::feature_proto::ListDoubleBool* v_list_double_bool_;
    ::feature_proto::ListDoubleString* v_list_double_string_;
    ::feature_proto::ListDoubleBytes* v_list_double_bytes_;
    ::feature_proto::ListFloatDouble* v_list_float_double_;
    ::feature_proto::ListFloatFloat* v_list_float_float_;
    ::feature_proto::ListFloatInt32* v_list_float_int32_;
    ::feature_proto::ListFloatInt64* v_list_float_int64_;
    ::feature_proto::ListFloatUint32* v_list_float_uint32_;
    ::feature_proto::ListFloatUint64* v_list_float_uint64_;
    ::feature_proto::ListFloatSint32* v_list_float_sint32_;
    ::feature_proto::ListFloatSint64* v_list_float_sint64_;
    ::feature_proto::ListFloatFixed32* v_list_float_fixed32_;
    ::feature_proto::ListFloatFixed64* v_list_float_fixed64_;
    ::feature_proto::ListFloatSfixed32* v_list_float_sfixed32_;
    ::feature_proto::ListFloatSfixed64* v_list_float_sfixed64_;
    ::feature_proto::ListFloatBool* v_list_float_bool_;
    ::feature_proto::ListFloatString* v_list_float_string_;
    ::feature_proto::ListFloatBytes* v_list_float_bytes_;
    ::feature_proto::ListBoolDouble* v_list_bool_double_;
    ::feature_proto::ListBoolFloat* v_list_bool_float_;
    ::feature_proto::ListBoolInt32* v_list_bool_int32_;
    ::feature_proto::ListBoolInt64* v_list_bool_int64_;
    ::feature_proto::ListBoolUint32* v_list_bool_uint32_;
    ::feature_proto::ListBoolUint64* v_list_bool_uint64_;
    ::feature_proto::ListBoolSint32* v_list_bool_sint32_;
    ::feature_proto::ListBoolSint64* v_list_bool_sint64_;
    ::feature_proto::ListBoolFixed32* v_list_bool_fixed32_;
    ::feature_proto::ListBoolFixed64* v_list_bool_fixed64_;
    ::feature_proto::ListBoolSfixed32* v_list_bool_sfixed32_;
    ::feature_proto::ListBoolSfixed64* v_list_bool_sfixed64_;
    ::feature_proto::ListBoolBool* v_list_bool_bool_;
    ::feature_proto::ListBoolString* v_list_bool_string_;
    ::feature_proto::ListBoolBytes* v_list_bool_bytes_;
  } kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Features : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.Features) */ {
 public:
  Features();
  virtual ~Features();

  Features(const Features& from);

  inline Features& operator=(const Features& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Features(Features&& from) noexcept
    : Features() {
    *this = ::std::move(from);
  }

  inline Features& operator=(Features&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Features& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Features* internal_default_instance() {
    return reinterpret_cast<const Features*>(
               &_Features_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    241;

  void Swap(Features* other);
  friend void swap(Features& a, Features& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Features* New() const final {
    return CreateMaybeMessage<Features>(NULL);
  }

  Features* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Features>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Features& from);
  void MergeFrom(const Features& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Features* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_proto.Feature f = 1;
  int f_size() const;
  void clear_f();
  static const int kFFieldNumber = 1;
  ::feature_proto::Feature* mutable_f(int index);
  ::google::protobuf::RepeatedPtrField< ::feature_proto::Feature >*
      mutable_f();
  const ::feature_proto::Feature& f(int index) const;
  ::feature_proto::Feature* add_f();
  const ::google::protobuf::RepeatedPtrField< ::feature_proto::Feature >&
      f() const;

  // @@protoc_insertion_point(class_scope:feature_proto.Features)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::feature_proto::Feature > f_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeaturesMap_FEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<FeaturesMap_FEntry_DoNotUse, 
    ::google::protobuf::int32, ::feature_proto::Feature,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<FeaturesMap_FEntry_DoNotUse, 
    ::google::protobuf::int32, ::feature_proto::Feature,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  FeaturesMap_FEntry_DoNotUse();
  FeaturesMap_FEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const FeaturesMap_FEntry_DoNotUse& other);
  static const FeaturesMap_FEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const FeaturesMap_FEntry_DoNotUse*>(&_FeaturesMap_FEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class FeaturesMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.FeaturesMap) */ {
 public:
  FeaturesMap();
  virtual ~FeaturesMap();

  FeaturesMap(const FeaturesMap& from);

  inline FeaturesMap& operator=(const FeaturesMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeaturesMap(FeaturesMap&& from) noexcept
    : FeaturesMap() {
    *this = ::std::move(from);
  }

  inline FeaturesMap& operator=(FeaturesMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FeaturesMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FeaturesMap* internal_default_instance() {
    return reinterpret_cast<const FeaturesMap*>(
               &_FeaturesMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    243;

  void Swap(FeaturesMap* other);
  friend void swap(FeaturesMap& a, FeaturesMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeaturesMap* New() const final {
    return CreateMaybeMessage<FeaturesMap>(NULL);
  }

  FeaturesMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FeaturesMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FeaturesMap& from);
  void MergeFrom(const FeaturesMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FeaturesMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .feature_proto.Feature> f = 1;
  int f_size() const;
  void clear_f();
  static const int kFFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >&
      f() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >*
      mutable_f();

  // @@protoc_insertion_point(class_scope:feature_proto.FeaturesMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      FeaturesMap_FEntry_DoNotUse,
      ::google::protobuf::int32, ::feature_proto::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > f_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FeaturesList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:feature_proto.FeaturesList) */ {
 public:
  FeaturesList();
  virtual ~FeaturesList();

  FeaturesList(const FeaturesList& from);

  inline FeaturesList& operator=(const FeaturesList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeaturesList(FeaturesList&& from) noexcept
    : FeaturesList() {
    *this = ::std::move(from);
  }

  inline FeaturesList& operator=(FeaturesList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FeaturesList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FeaturesList* internal_default_instance() {
    return reinterpret_cast<const FeaturesList*>(
               &_FeaturesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    244;

  void Swap(FeaturesList* other);
  friend void swap(FeaturesList& a, FeaturesList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeaturesList* New() const final {
    return CreateMaybeMessage<FeaturesList>(NULL);
  }

  FeaturesList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FeaturesList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FeaturesList& from);
  void MergeFrom(const FeaturesList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FeaturesList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .feature_proto.FeaturesMap features = 1;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 1;
  ::feature_proto::FeaturesMap* mutable_features(int index);
  ::google::protobuf::RepeatedPtrField< ::feature_proto::FeaturesMap >*
      mutable_features();
  const ::feature_proto::FeaturesMap& features(int index) const;
  ::feature_proto::FeaturesMap* add_features();
  const ::google::protobuf::RepeatedPtrField< ::feature_proto::FeaturesMap >&
      features() const;

  // @@protoc_insertion_point(class_scope:feature_proto.FeaturesList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::feature_proto::FeaturesMap > features_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_feature_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ListDouble

// repeated double k = 1;
inline int ListDouble::k_size() const {
  return k_.size();
}
inline void ListDouble::clear_k() {
  k_.Clear();
}
inline double ListDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDouble.k)
  return k_.Get(index);
}
inline void ListDouble::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDouble.k)
}
inline void ListDouble::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDouble.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDouble.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListFloat

// repeated float k = 1;
inline int ListFloat::k_size() const {
  return k_.size();
}
inline void ListFloat::clear_k() {
  k_.Clear();
}
inline float ListFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloat.k)
  return k_.Get(index);
}
inline void ListFloat::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloat.k)
}
inline void ListFloat::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloat.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloat.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListInt32

// repeated int32 k = 1;
inline int ListInt32::k_size() const {
  return k_.size();
}
inline void ListInt32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32.k)
  return k_.Get(index);
}
inline void ListInt32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32.k)
}
inline void ListInt32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListInt64

// repeated int64 k = 1;
inline int ListInt64::k_size() const {
  return k_.size();
}
inline void ListInt64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64.k)
  return k_.Get(index);
}
inline void ListInt64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64.k)
}
inline void ListInt64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListUint32

// repeated uint32 k = 1;
inline int ListUint32::k_size() const {
  return k_.size();
}
inline void ListUint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32.k)
  return k_.Get(index);
}
inline void ListUint32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32.k)
}
inline void ListUint32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListUint64

// repeated uint64 k = 1;
inline int ListUint64::k_size() const {
  return k_.size();
}
inline void ListUint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64.k)
  return k_.Get(index);
}
inline void ListUint64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64.k)
}
inline void ListUint64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListSint32

// repeated sint32 k = 1;
inline int ListSint32::k_size() const {
  return k_.size();
}
inline void ListSint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32.k)
  return k_.Get(index);
}
inline void ListSint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32.k)
}
inline void ListSint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListSint64

// repeated sint64 k = 1;
inline int ListSint64::k_size() const {
  return k_.size();
}
inline void ListSint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64.k)
  return k_.Get(index);
}
inline void ListSint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64.k)
}
inline void ListSint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListFixed32

// repeated fixed32 k = 1;
inline int ListFixed32::k_size() const {
  return k_.size();
}
inline void ListFixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32.k)
  return k_.Get(index);
}
inline void ListFixed32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32.k)
}
inline void ListFixed32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListFixed64

// repeated fixed64 k = 1;
inline int ListFixed64::k_size() const {
  return k_.size();
}
inline void ListFixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64.k)
  return k_.Get(index);
}
inline void ListFixed64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64.k)
}
inline void ListFixed64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListSfixed32

// repeated sfixed32 k = 1;
inline int ListSfixed32::k_size() const {
  return k_.size();
}
inline void ListSfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32.k)
  return k_.Get(index);
}
inline void ListSfixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32.k)
}
inline void ListSfixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListSfixed64

// repeated sfixed64 k = 1;
inline int ListSfixed64::k_size() const {
  return k_.size();
}
inline void ListSfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64.k)
  return k_.Get(index);
}
inline void ListSfixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64.k)
}
inline void ListSfixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListBool

// repeated bool k = 1;
inline int ListBool::k_size() const {
  return k_.size();
}
inline void ListBool::clear_k() {
  k_.Clear();
}
inline bool ListBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBool.k)
  return k_.Get(index);
}
inline void ListBool::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBool.k)
}
inline void ListBool::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBool.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBool.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListString

// repeated string k = 1;
inline int ListString::k_size() const {
  return k_.size();
}
inline void ListString::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListString.k)
  return k_.Get(index);
}
inline ::std::string* ListString::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListString.k)
  return k_.Mutable(index);
}
inline void ListString::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListString.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListString::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListString.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListString::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListString.k)
}
inline void ListString::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListString.k)
}
inline ::std::string* ListString::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListString.k)
  return k_.Add();
}
inline void ListString::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListString.k)
}
#if LANG_CXX11
inline void ListString::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListString.k)
}
#endif
inline void ListString::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListString.k)
}
inline void ListString::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListString.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListString.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListString.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListBytes

// repeated bytes k = 1;
inline int ListBytes::k_size() const {
  return k_.size();
}
inline void ListBytes::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytes.k)
  return k_.Get(index);
}
inline ::std::string* ListBytes::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytes.k)
  return k_.Mutable(index);
}
inline void ListBytes::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytes.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytes::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytes.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytes::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytes.k)
}
inline void ListBytes::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytes.k)
}
inline ::std::string* ListBytes::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytes.k)
  return k_.Add();
}
inline void ListBytes::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytes.k)
}
#if LANG_CXX11
inline void ListBytes::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytes.k)
}
#endif
inline void ListBytes::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytes.k)
}
inline void ListBytes::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytes.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytes.k)
  return &k_;
}

// -------------------------------------------------------------------

// ListStringDouble

// repeated string k = 1;
inline int ListStringDouble::k_size() const {
  return k_.size();
}
inline void ListStringDouble::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringDouble.k)
  return k_.Get(index);
}
inline ::std::string* ListStringDouble::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringDouble.k)
  return k_.Mutable(index);
}
inline void ListStringDouble::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringDouble.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringDouble::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringDouble.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringDouble::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringDouble.k)
}
inline void ListStringDouble::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringDouble.k)
}
inline ::std::string* ListStringDouble::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringDouble.k)
  return k_.Add();
}
inline void ListStringDouble::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringDouble.k)
}
#if LANG_CXX11
inline void ListStringDouble::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringDouble.k)
}
#endif
inline void ListStringDouble::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringDouble.k)
}
inline void ListStringDouble::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringDouble.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringDouble.k)
  return &k_;
}

// repeated double w = 2;
inline int ListStringDouble::w_size() const {
  return w_.size();
}
inline void ListStringDouble::clear_w() {
  w_.Clear();
}
inline double ListStringDouble::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringDouble.w)
  return w_.Get(index);
}
inline void ListStringDouble::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringDouble.w)
}
inline void ListStringDouble::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringDouble.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListStringDouble::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringDouble.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListStringDouble::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringDouble.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringFloat

// repeated string k = 1;
inline int ListStringFloat::k_size() const {
  return k_.size();
}
inline void ListStringFloat::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFloat.k)
  return k_.Get(index);
}
inline ::std::string* ListStringFloat::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringFloat.k)
  return k_.Mutable(index);
}
inline void ListStringFloat::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFloat.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringFloat::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFloat.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringFloat::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringFloat.k)
}
inline void ListStringFloat::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringFloat.k)
}
inline ::std::string* ListStringFloat::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringFloat.k)
  return k_.Add();
}
inline void ListStringFloat::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFloat.k)
}
#if LANG_CXX11
inline void ListStringFloat::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFloat.k)
}
#endif
inline void ListStringFloat::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringFloat.k)
}
inline void ListStringFloat::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringFloat.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFloat.k)
  return &k_;
}

// repeated float w = 2;
inline int ListStringFloat::w_size() const {
  return w_.size();
}
inline void ListStringFloat::clear_w() {
  w_.Clear();
}
inline float ListStringFloat::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFloat.w)
  return w_.Get(index);
}
inline void ListStringFloat::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFloat.w)
}
inline void ListStringFloat::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFloat.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListStringFloat::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFloat.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListStringFloat::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFloat.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringInt32

// repeated string k = 1;
inline int ListStringInt32::k_size() const {
  return k_.size();
}
inline void ListStringInt32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringInt32.k)
  return k_.Get(index);
}
inline ::std::string* ListStringInt32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringInt32.k)
  return k_.Mutable(index);
}
inline void ListStringInt32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringInt32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringInt32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringInt32.k)
}
inline void ListStringInt32::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringInt32.k)
}
inline ::std::string* ListStringInt32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringInt32.k)
  return k_.Add();
}
inline void ListStringInt32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt32.k)
}
#if LANG_CXX11
inline void ListStringInt32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt32.k)
}
#endif
inline void ListStringInt32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringInt32.k)
}
inline void ListStringInt32::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringInt32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringInt32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListStringInt32::w_size() const {
  return w_.size();
}
inline void ListStringInt32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListStringInt32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringInt32.w)
  return w_.Get(index);
}
inline void ListStringInt32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt32.w)
}
inline void ListStringInt32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListStringInt32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringInt32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListStringInt32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringInt32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringInt64

// repeated string k = 1;
inline int ListStringInt64::k_size() const {
  return k_.size();
}
inline void ListStringInt64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringInt64.k)
  return k_.Get(index);
}
inline ::std::string* ListStringInt64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringInt64.k)
  return k_.Mutable(index);
}
inline void ListStringInt64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringInt64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringInt64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringInt64.k)
}
inline void ListStringInt64::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringInt64.k)
}
inline ::std::string* ListStringInt64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringInt64.k)
  return k_.Add();
}
inline void ListStringInt64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt64.k)
}
#if LANG_CXX11
inline void ListStringInt64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt64.k)
}
#endif
inline void ListStringInt64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringInt64.k)
}
inline void ListStringInt64::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringInt64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringInt64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListStringInt64::w_size() const {
  return w_.size();
}
inline void ListStringInt64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListStringInt64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringInt64.w)
  return w_.Get(index);
}
inline void ListStringInt64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringInt64.w)
}
inline void ListStringInt64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringInt64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListStringInt64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringInt64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListStringInt64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringInt64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringUint32

// repeated string k = 1;
inline int ListStringUint32::k_size() const {
  return k_.size();
}
inline void ListStringUint32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringUint32.k)
  return k_.Get(index);
}
inline ::std::string* ListStringUint32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringUint32.k)
  return k_.Mutable(index);
}
inline void ListStringUint32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringUint32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringUint32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringUint32.k)
}
inline void ListStringUint32::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringUint32.k)
}
inline ::std::string* ListStringUint32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringUint32.k)
  return k_.Add();
}
inline void ListStringUint32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint32.k)
}
#if LANG_CXX11
inline void ListStringUint32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint32.k)
}
#endif
inline void ListStringUint32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringUint32.k)
}
inline void ListStringUint32::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringUint32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringUint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListStringUint32::w_size() const {
  return w_.size();
}
inline void ListStringUint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListStringUint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringUint32.w)
  return w_.Get(index);
}
inline void ListStringUint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint32.w)
}
inline void ListStringUint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListStringUint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringUint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListStringUint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringUint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringUint64

// repeated string k = 1;
inline int ListStringUint64::k_size() const {
  return k_.size();
}
inline void ListStringUint64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringUint64.k)
  return k_.Get(index);
}
inline ::std::string* ListStringUint64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringUint64.k)
  return k_.Mutable(index);
}
inline void ListStringUint64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringUint64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringUint64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringUint64.k)
}
inline void ListStringUint64::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringUint64.k)
}
inline ::std::string* ListStringUint64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringUint64.k)
  return k_.Add();
}
inline void ListStringUint64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint64.k)
}
#if LANG_CXX11
inline void ListStringUint64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint64.k)
}
#endif
inline void ListStringUint64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringUint64.k)
}
inline void ListStringUint64::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringUint64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringUint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListStringUint64::w_size() const {
  return w_.size();
}
inline void ListStringUint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListStringUint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringUint64.w)
  return w_.Get(index);
}
inline void ListStringUint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringUint64.w)
}
inline void ListStringUint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringUint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListStringUint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringUint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListStringUint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringUint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringSint32

// repeated string k = 1;
inline int ListStringSint32::k_size() const {
  return k_.size();
}
inline void ListStringSint32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSint32.k)
  return k_.Get(index);
}
inline ::std::string* ListStringSint32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringSint32.k)
  return k_.Mutable(index);
}
inline void ListStringSint32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringSint32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringSint32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringSint32.k)
}
inline void ListStringSint32::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringSint32.k)
}
inline ::std::string* ListStringSint32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringSint32.k)
  return k_.Add();
}
inline void ListStringSint32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint32.k)
}
#if LANG_CXX11
inline void ListStringSint32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint32.k)
}
#endif
inline void ListStringSint32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringSint32.k)
}
inline void ListStringSint32::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringSint32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListStringSint32::w_size() const {
  return w_.size();
}
inline void ListStringSint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListStringSint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSint32.w)
  return w_.Get(index);
}
inline void ListStringSint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint32.w)
}
inline void ListStringSint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListStringSint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListStringSint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringSint64

// repeated string k = 1;
inline int ListStringSint64::k_size() const {
  return k_.size();
}
inline void ListStringSint64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSint64.k)
  return k_.Get(index);
}
inline ::std::string* ListStringSint64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringSint64.k)
  return k_.Mutable(index);
}
inline void ListStringSint64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringSint64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringSint64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringSint64.k)
}
inline void ListStringSint64::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringSint64.k)
}
inline ::std::string* ListStringSint64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringSint64.k)
  return k_.Add();
}
inline void ListStringSint64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint64.k)
}
#if LANG_CXX11
inline void ListStringSint64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint64.k)
}
#endif
inline void ListStringSint64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringSint64.k)
}
inline void ListStringSint64::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringSint64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListStringSint64::w_size() const {
  return w_.size();
}
inline void ListStringSint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListStringSint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSint64.w)
  return w_.Get(index);
}
inline void ListStringSint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSint64.w)
}
inline void ListStringSint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListStringSint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListStringSint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringFixed32

// repeated string k = 1;
inline int ListStringFixed32::k_size() const {
  return k_.size();
}
inline void ListStringFixed32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFixed32.k)
  return k_.Get(index);
}
inline ::std::string* ListStringFixed32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringFixed32.k)
  return k_.Mutable(index);
}
inline void ListStringFixed32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringFixed32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringFixed32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringFixed32.k)
}
inline void ListStringFixed32::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringFixed32.k)
}
inline ::std::string* ListStringFixed32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringFixed32.k)
  return k_.Add();
}
inline void ListStringFixed32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed32.k)
}
#if LANG_CXX11
inline void ListStringFixed32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed32.k)
}
#endif
inline void ListStringFixed32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringFixed32.k)
}
inline void ListStringFixed32::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringFixed32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListStringFixed32::w_size() const {
  return w_.size();
}
inline void ListStringFixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListStringFixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFixed32.w)
  return w_.Get(index);
}
inline void ListStringFixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed32.w)
}
inline void ListStringFixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListStringFixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListStringFixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringFixed64

// repeated string k = 1;
inline int ListStringFixed64::k_size() const {
  return k_.size();
}
inline void ListStringFixed64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFixed64.k)
  return k_.Get(index);
}
inline ::std::string* ListStringFixed64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringFixed64.k)
  return k_.Mutable(index);
}
inline void ListStringFixed64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringFixed64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringFixed64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringFixed64.k)
}
inline void ListStringFixed64::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringFixed64.k)
}
inline ::std::string* ListStringFixed64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringFixed64.k)
  return k_.Add();
}
inline void ListStringFixed64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed64.k)
}
#if LANG_CXX11
inline void ListStringFixed64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed64.k)
}
#endif
inline void ListStringFixed64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringFixed64.k)
}
inline void ListStringFixed64::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringFixed64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListStringFixed64::w_size() const {
  return w_.size();
}
inline void ListStringFixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListStringFixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringFixed64.w)
  return w_.Get(index);
}
inline void ListStringFixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringFixed64.w)
}
inline void ListStringFixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringFixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListStringFixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringFixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListStringFixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringFixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringSfixed32

// repeated string k = 1;
inline int ListStringSfixed32::k_size() const {
  return k_.size();
}
inline void ListStringSfixed32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSfixed32.k)
  return k_.Get(index);
}
inline ::std::string* ListStringSfixed32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringSfixed32.k)
  return k_.Mutable(index);
}
inline void ListStringSfixed32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringSfixed32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringSfixed32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringSfixed32.k)
}
inline void ListStringSfixed32::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringSfixed32.k)
}
inline ::std::string* ListStringSfixed32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringSfixed32.k)
  return k_.Add();
}
inline void ListStringSfixed32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed32.k)
}
#if LANG_CXX11
inline void ListStringSfixed32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed32.k)
}
#endif
inline void ListStringSfixed32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringSfixed32.k)
}
inline void ListStringSfixed32::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringSfixed32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListStringSfixed32::w_size() const {
  return w_.size();
}
inline void ListStringSfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListStringSfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSfixed32.w)
  return w_.Get(index);
}
inline void ListStringSfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed32.w)
}
inline void ListStringSfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListStringSfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListStringSfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringSfixed64

// repeated string k = 1;
inline int ListStringSfixed64::k_size() const {
  return k_.size();
}
inline void ListStringSfixed64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSfixed64.k)
  return k_.Get(index);
}
inline ::std::string* ListStringSfixed64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringSfixed64.k)
  return k_.Mutable(index);
}
inline void ListStringSfixed64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringSfixed64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringSfixed64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringSfixed64.k)
}
inline void ListStringSfixed64::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringSfixed64.k)
}
inline ::std::string* ListStringSfixed64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringSfixed64.k)
  return k_.Add();
}
inline void ListStringSfixed64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed64.k)
}
#if LANG_CXX11
inline void ListStringSfixed64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed64.k)
}
#endif
inline void ListStringSfixed64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringSfixed64.k)
}
inline void ListStringSfixed64::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringSfixed64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListStringSfixed64::w_size() const {
  return w_.size();
}
inline void ListStringSfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListStringSfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringSfixed64.w)
  return w_.Get(index);
}
inline void ListStringSfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringSfixed64.w)
}
inline void ListStringSfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringSfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListStringSfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringSfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListStringSfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringSfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringBool

// repeated string k = 1;
inline int ListStringBool::k_size() const {
  return k_.size();
}
inline void ListStringBool::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringBool.k)
  return k_.Get(index);
}
inline ::std::string* ListStringBool::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringBool.k)
  return k_.Mutable(index);
}
inline void ListStringBool::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBool.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringBool::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBool.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringBool::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringBool.k)
}
inline void ListStringBool::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringBool.k)
}
inline ::std::string* ListStringBool::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringBool.k)
  return k_.Add();
}
inline void ListStringBool::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBool.k)
}
#if LANG_CXX11
inline void ListStringBool::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBool.k)
}
#endif
inline void ListStringBool::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringBool.k)
}
inline void ListStringBool::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringBool.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringBool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListStringBool::w_size() const {
  return w_.size();
}
inline void ListStringBool::clear_w() {
  w_.Clear();
}
inline bool ListStringBool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringBool.w)
  return w_.Get(index);
}
inline void ListStringBool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBool.w)
}
inline void ListStringBool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListStringBool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringBool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListStringBool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringBool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringString

// repeated string k = 1;
inline int ListStringString::k_size() const {
  return k_.size();
}
inline void ListStringString::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringString.k)
  return k_.Get(index);
}
inline ::std::string* ListStringString::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringString.k)
  return k_.Mutable(index);
}
inline void ListStringString::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringString.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringString::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringString.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringString::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringString.k)
}
inline void ListStringString::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringString.k)
}
inline ::std::string* ListStringString::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringString.k)
  return k_.Add();
}
inline void ListStringString::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringString.k)
}
#if LANG_CXX11
inline void ListStringString::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringString.k)
}
#endif
inline void ListStringString::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringString.k)
}
inline void ListStringString::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringString.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringString.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringString.k)
  return &k_;
}

// repeated string w = 2;
inline int ListStringString::w_size() const {
  return w_.size();
}
inline void ListStringString::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListStringString::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringString.w)
  return w_.Get(index);
}
inline ::std::string* ListStringString::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringString.w)
  return w_.Mutable(index);
}
inline void ListStringString::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringString.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringString::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringString.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringString::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringString.w)
}
inline void ListStringString::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringString.w)
}
inline ::std::string* ListStringString::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringString.w)
  return w_.Add();
}
inline void ListStringString::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringString.w)
}
#if LANG_CXX11
inline void ListStringString::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringString.w)
}
#endif
inline void ListStringString::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringString.w)
}
inline void ListStringString::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringString.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringString::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringString.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringString::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringString.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListStringBytes

// repeated string k = 1;
inline int ListStringBytes::k_size() const {
  return k_.size();
}
inline void ListStringBytes::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListStringBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringBytes.k)
  return k_.Get(index);
}
inline ::std::string* ListStringBytes::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringBytes.k)
  return k_.Mutable(index);
}
inline void ListStringBytes::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBytes.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringBytes::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBytes.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringBytes::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringBytes.k)
}
inline void ListStringBytes::set_k(int index, const char* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringBytes.k)
}
inline ::std::string* ListStringBytes::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringBytes.k)
  return k_.Add();
}
inline void ListStringBytes::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBytes.k)
}
#if LANG_CXX11
inline void ListStringBytes::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBytes.k)
}
#endif
inline void ListStringBytes::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringBytes.k)
}
inline void ListStringBytes::add_k(const char* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringBytes.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringBytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListStringBytes::w_size() const {
  return w_.size();
}
inline void ListStringBytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListStringBytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListStringBytes.w)
  return w_.Get(index);
}
inline ::std::string* ListStringBytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListStringBytes.w)
  return w_.Mutable(index);
}
inline void ListStringBytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListStringBytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListStringBytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListStringBytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListStringBytes.w)
}
inline void ListStringBytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListStringBytes.w)
}
inline ::std::string* ListStringBytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListStringBytes.w)
  return w_.Add();
}
inline void ListStringBytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBytes.w)
}
#if LANG_CXX11
inline void ListStringBytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListStringBytes.w)
}
#endif
inline void ListStringBytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListStringBytes.w)
}
inline void ListStringBytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListStringBytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListStringBytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListStringBytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListStringBytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListStringBytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesDouble

// repeated bytes k = 1;
inline int ListBytesDouble::k_size() const {
  return k_.size();
}
inline void ListBytesDouble::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesDouble.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesDouble::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesDouble.k)
  return k_.Mutable(index);
}
inline void ListBytesDouble::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesDouble.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesDouble::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesDouble.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesDouble::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesDouble.k)
}
inline void ListBytesDouble::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesDouble.k)
}
inline ::std::string* ListBytesDouble::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesDouble.k)
  return k_.Add();
}
inline void ListBytesDouble::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesDouble.k)
}
#if LANG_CXX11
inline void ListBytesDouble::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesDouble.k)
}
#endif
inline void ListBytesDouble::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesDouble.k)
}
inline void ListBytesDouble::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesDouble.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesDouble.k)
  return &k_;
}

// repeated double w = 2;
inline int ListBytesDouble::w_size() const {
  return w_.size();
}
inline void ListBytesDouble::clear_w() {
  w_.Clear();
}
inline double ListBytesDouble::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesDouble.w)
  return w_.Get(index);
}
inline void ListBytesDouble::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesDouble.w)
}
inline void ListBytesDouble::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesDouble.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListBytesDouble::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesDouble.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListBytesDouble::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesDouble.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesFloat

// repeated bytes k = 1;
inline int ListBytesFloat::k_size() const {
  return k_.size();
}
inline void ListBytesFloat::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFloat.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesFloat::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesFloat.k)
  return k_.Mutable(index);
}
inline void ListBytesFloat::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFloat.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesFloat::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFloat.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesFloat::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesFloat.k)
}
inline void ListBytesFloat::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesFloat.k)
}
inline ::std::string* ListBytesFloat::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesFloat.k)
  return k_.Add();
}
inline void ListBytesFloat::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFloat.k)
}
#if LANG_CXX11
inline void ListBytesFloat::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFloat.k)
}
#endif
inline void ListBytesFloat::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesFloat.k)
}
inline void ListBytesFloat::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesFloat.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFloat.k)
  return &k_;
}

// repeated float w = 2;
inline int ListBytesFloat::w_size() const {
  return w_.size();
}
inline void ListBytesFloat::clear_w() {
  w_.Clear();
}
inline float ListBytesFloat::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFloat.w)
  return w_.Get(index);
}
inline void ListBytesFloat::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFloat.w)
}
inline void ListBytesFloat::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFloat.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListBytesFloat::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFloat.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListBytesFloat::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFloat.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesInt32

// repeated bytes k = 1;
inline int ListBytesInt32::k_size() const {
  return k_.size();
}
inline void ListBytesInt32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesInt32.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesInt32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesInt32.k)
  return k_.Mutable(index);
}
inline void ListBytesInt32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesInt32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesInt32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesInt32.k)
}
inline void ListBytesInt32::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesInt32.k)
}
inline ::std::string* ListBytesInt32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesInt32.k)
  return k_.Add();
}
inline void ListBytesInt32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt32.k)
}
#if LANG_CXX11
inline void ListBytesInt32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt32.k)
}
#endif
inline void ListBytesInt32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesInt32.k)
}
inline void ListBytesInt32::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesInt32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesInt32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListBytesInt32::w_size() const {
  return w_.size();
}
inline void ListBytesInt32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBytesInt32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesInt32.w)
  return w_.Get(index);
}
inline void ListBytesInt32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt32.w)
}
inline void ListBytesInt32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBytesInt32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesInt32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBytesInt32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesInt32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesInt64

// repeated bytes k = 1;
inline int ListBytesInt64::k_size() const {
  return k_.size();
}
inline void ListBytesInt64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesInt64.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesInt64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesInt64.k)
  return k_.Mutable(index);
}
inline void ListBytesInt64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesInt64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesInt64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesInt64.k)
}
inline void ListBytesInt64::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesInt64.k)
}
inline ::std::string* ListBytesInt64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesInt64.k)
  return k_.Add();
}
inline void ListBytesInt64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt64.k)
}
#if LANG_CXX11
inline void ListBytesInt64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt64.k)
}
#endif
inline void ListBytesInt64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesInt64.k)
}
inline void ListBytesInt64::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesInt64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesInt64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListBytesInt64::w_size() const {
  return w_.size();
}
inline void ListBytesInt64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBytesInt64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesInt64.w)
  return w_.Get(index);
}
inline void ListBytesInt64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesInt64.w)
}
inline void ListBytesInt64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesInt64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBytesInt64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesInt64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBytesInt64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesInt64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesUint32

// repeated bytes k = 1;
inline int ListBytesUint32::k_size() const {
  return k_.size();
}
inline void ListBytesUint32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesUint32.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesUint32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesUint32.k)
  return k_.Mutable(index);
}
inline void ListBytesUint32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesUint32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesUint32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesUint32.k)
}
inline void ListBytesUint32::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesUint32.k)
}
inline ::std::string* ListBytesUint32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesUint32.k)
  return k_.Add();
}
inline void ListBytesUint32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint32.k)
}
#if LANG_CXX11
inline void ListBytesUint32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint32.k)
}
#endif
inline void ListBytesUint32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesUint32.k)
}
inline void ListBytesUint32::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesUint32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesUint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListBytesUint32::w_size() const {
  return w_.size();
}
inline void ListBytesUint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListBytesUint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesUint32.w)
  return w_.Get(index);
}
inline void ListBytesUint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint32.w)
}
inline void ListBytesUint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListBytesUint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesUint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListBytesUint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesUint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesUint64

// repeated bytes k = 1;
inline int ListBytesUint64::k_size() const {
  return k_.size();
}
inline void ListBytesUint64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesUint64.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesUint64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesUint64.k)
  return k_.Mutable(index);
}
inline void ListBytesUint64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesUint64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesUint64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesUint64.k)
}
inline void ListBytesUint64::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesUint64.k)
}
inline ::std::string* ListBytesUint64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesUint64.k)
  return k_.Add();
}
inline void ListBytesUint64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint64.k)
}
#if LANG_CXX11
inline void ListBytesUint64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint64.k)
}
#endif
inline void ListBytesUint64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesUint64.k)
}
inline void ListBytesUint64::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesUint64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesUint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListBytesUint64::w_size() const {
  return w_.size();
}
inline void ListBytesUint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListBytesUint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesUint64.w)
  return w_.Get(index);
}
inline void ListBytesUint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesUint64.w)
}
inline void ListBytesUint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesUint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListBytesUint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesUint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListBytesUint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesUint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesSint32

// repeated bytes k = 1;
inline int ListBytesSint32::k_size() const {
  return k_.size();
}
inline void ListBytesSint32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSint32.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesSint32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesSint32.k)
  return k_.Mutable(index);
}
inline void ListBytesSint32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesSint32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesSint32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesSint32.k)
}
inline void ListBytesSint32::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesSint32.k)
}
inline ::std::string* ListBytesSint32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesSint32.k)
  return k_.Add();
}
inline void ListBytesSint32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint32.k)
}
#if LANG_CXX11
inline void ListBytesSint32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint32.k)
}
#endif
inline void ListBytesSint32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesSint32.k)
}
inline void ListBytesSint32::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesSint32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListBytesSint32::w_size() const {
  return w_.size();
}
inline void ListBytesSint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBytesSint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSint32.w)
  return w_.Get(index);
}
inline void ListBytesSint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint32.w)
}
inline void ListBytesSint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBytesSint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBytesSint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesSint64

// repeated bytes k = 1;
inline int ListBytesSint64::k_size() const {
  return k_.size();
}
inline void ListBytesSint64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSint64.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesSint64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesSint64.k)
  return k_.Mutable(index);
}
inline void ListBytesSint64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesSint64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesSint64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesSint64.k)
}
inline void ListBytesSint64::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesSint64.k)
}
inline ::std::string* ListBytesSint64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesSint64.k)
  return k_.Add();
}
inline void ListBytesSint64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint64.k)
}
#if LANG_CXX11
inline void ListBytesSint64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint64.k)
}
#endif
inline void ListBytesSint64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesSint64.k)
}
inline void ListBytesSint64::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesSint64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListBytesSint64::w_size() const {
  return w_.size();
}
inline void ListBytesSint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBytesSint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSint64.w)
  return w_.Get(index);
}
inline void ListBytesSint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSint64.w)
}
inline void ListBytesSint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBytesSint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBytesSint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesFixed32

// repeated bytes k = 1;
inline int ListBytesFixed32::k_size() const {
  return k_.size();
}
inline void ListBytesFixed32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFixed32.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesFixed32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesFixed32.k)
  return k_.Mutable(index);
}
inline void ListBytesFixed32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesFixed32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesFixed32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesFixed32.k)
}
inline void ListBytesFixed32::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesFixed32.k)
}
inline ::std::string* ListBytesFixed32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesFixed32.k)
  return k_.Add();
}
inline void ListBytesFixed32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed32.k)
}
#if LANG_CXX11
inline void ListBytesFixed32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed32.k)
}
#endif
inline void ListBytesFixed32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesFixed32.k)
}
inline void ListBytesFixed32::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesFixed32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListBytesFixed32::w_size() const {
  return w_.size();
}
inline void ListBytesFixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListBytesFixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFixed32.w)
  return w_.Get(index);
}
inline void ListBytesFixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed32.w)
}
inline void ListBytesFixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListBytesFixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListBytesFixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesFixed64

// repeated bytes k = 1;
inline int ListBytesFixed64::k_size() const {
  return k_.size();
}
inline void ListBytesFixed64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFixed64.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesFixed64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesFixed64.k)
  return k_.Mutable(index);
}
inline void ListBytesFixed64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesFixed64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesFixed64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesFixed64.k)
}
inline void ListBytesFixed64::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesFixed64.k)
}
inline ::std::string* ListBytesFixed64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesFixed64.k)
  return k_.Add();
}
inline void ListBytesFixed64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed64.k)
}
#if LANG_CXX11
inline void ListBytesFixed64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed64.k)
}
#endif
inline void ListBytesFixed64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesFixed64.k)
}
inline void ListBytesFixed64::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesFixed64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListBytesFixed64::w_size() const {
  return w_.size();
}
inline void ListBytesFixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListBytesFixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesFixed64.w)
  return w_.Get(index);
}
inline void ListBytesFixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesFixed64.w)
}
inline void ListBytesFixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesFixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListBytesFixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesFixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListBytesFixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesFixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesSfixed32

// repeated bytes k = 1;
inline int ListBytesSfixed32::k_size() const {
  return k_.size();
}
inline void ListBytesSfixed32::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSfixed32.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesSfixed32::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesSfixed32.k)
  return k_.Mutable(index);
}
inline void ListBytesSfixed32::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed32.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesSfixed32::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed32.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesSfixed32::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesSfixed32.k)
}
inline void ListBytesSfixed32::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesSfixed32.k)
}
inline ::std::string* ListBytesSfixed32::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesSfixed32.k)
  return k_.Add();
}
inline void ListBytesSfixed32::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed32.k)
}
#if LANG_CXX11
inline void ListBytesSfixed32::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed32.k)
}
#endif
inline void ListBytesSfixed32::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesSfixed32.k)
}
inline void ListBytesSfixed32::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesSfixed32.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListBytesSfixed32::w_size() const {
  return w_.size();
}
inline void ListBytesSfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBytesSfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSfixed32.w)
  return w_.Get(index);
}
inline void ListBytesSfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed32.w)
}
inline void ListBytesSfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBytesSfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBytesSfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesSfixed64

// repeated bytes k = 1;
inline int ListBytesSfixed64::k_size() const {
  return k_.size();
}
inline void ListBytesSfixed64::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSfixed64.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesSfixed64::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesSfixed64.k)
  return k_.Mutable(index);
}
inline void ListBytesSfixed64::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed64.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesSfixed64::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed64.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesSfixed64::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesSfixed64.k)
}
inline void ListBytesSfixed64::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesSfixed64.k)
}
inline ::std::string* ListBytesSfixed64::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesSfixed64.k)
  return k_.Add();
}
inline void ListBytesSfixed64::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed64.k)
}
#if LANG_CXX11
inline void ListBytesSfixed64::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed64.k)
}
#endif
inline void ListBytesSfixed64::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesSfixed64.k)
}
inline void ListBytesSfixed64::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesSfixed64.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListBytesSfixed64::w_size() const {
  return w_.size();
}
inline void ListBytesSfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBytesSfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesSfixed64.w)
  return w_.Get(index);
}
inline void ListBytesSfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesSfixed64.w)
}
inline void ListBytesSfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesSfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBytesSfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesSfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBytesSfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesSfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesBool

// repeated bytes k = 1;
inline int ListBytesBool::k_size() const {
  return k_.size();
}
inline void ListBytesBool::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesBool.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesBool::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesBool.k)
  return k_.Mutable(index);
}
inline void ListBytesBool::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBool.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesBool::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBool.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesBool::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesBool.k)
}
inline void ListBytesBool::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesBool.k)
}
inline ::std::string* ListBytesBool::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesBool.k)
  return k_.Add();
}
inline void ListBytesBool::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBool.k)
}
#if LANG_CXX11
inline void ListBytesBool::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBool.k)
}
#endif
inline void ListBytesBool::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesBool.k)
}
inline void ListBytesBool::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesBool.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesBool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListBytesBool::w_size() const {
  return w_.size();
}
inline void ListBytesBool::clear_w() {
  w_.Clear();
}
inline bool ListBytesBool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesBool.w)
  return w_.Get(index);
}
inline void ListBytesBool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBool.w)
}
inline void ListBytesBool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBytesBool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesBool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBytesBool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesBool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesString

// repeated bytes k = 1;
inline int ListBytesString::k_size() const {
  return k_.size();
}
inline void ListBytesString::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesString.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesString::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesString.k)
  return k_.Mutable(index);
}
inline void ListBytesString::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesString.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesString::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesString.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesString::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesString.k)
}
inline void ListBytesString::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesString.k)
}
inline ::std::string* ListBytesString::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesString.k)
  return k_.Add();
}
inline void ListBytesString::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesString.k)
}
#if LANG_CXX11
inline void ListBytesString::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesString.k)
}
#endif
inline void ListBytesString::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesString.k)
}
inline void ListBytesString::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesString.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesString.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesString.k)
  return &k_;
}

// repeated string w = 2;
inline int ListBytesString::w_size() const {
  return w_.size();
}
inline void ListBytesString::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListBytesString::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesString.w)
  return w_.Get(index);
}
inline ::std::string* ListBytesString::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesString.w)
  return w_.Mutable(index);
}
inline void ListBytesString::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesString.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesString::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesString.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesString::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesString.w)
}
inline void ListBytesString::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesString.w)
}
inline ::std::string* ListBytesString::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesString.w)
  return w_.Add();
}
inline void ListBytesString::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesString.w)
}
#if LANG_CXX11
inline void ListBytesString::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesString.w)
}
#endif
inline void ListBytesString::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesString.w)
}
inline void ListBytesString::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesString.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesString::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesString.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesString::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesString.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBytesBytes

// repeated bytes k = 1;
inline int ListBytesBytes::k_size() const {
  return k_.size();
}
inline void ListBytesBytes::clear_k() {
  k_.Clear();
}
inline const ::std::string& ListBytesBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesBytes.k)
  return k_.Get(index);
}
inline ::std::string* ListBytesBytes::mutable_k(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesBytes.k)
  return k_.Mutable(index);
}
inline void ListBytesBytes::set_k(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBytes.k)
  k_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesBytes::set_k(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBytes.k)
  k_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesBytes::set_k(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesBytes.k)
}
inline void ListBytesBytes::set_k(int index, const void* value, size_t size) {
  k_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesBytes.k)
}
inline ::std::string* ListBytesBytes::add_k() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesBytes.k)
  return k_.Add();
}
inline void ListBytesBytes::add_k(const ::std::string& value) {
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBytes.k)
}
#if LANG_CXX11
inline void ListBytesBytes::add_k(::std::string&& value) {
  k_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBytes.k)
}
#endif
inline void ListBytesBytes::add_k(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  k_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesBytes.k)
}
inline void ListBytesBytes::add_k(const void* value, size_t size) {
  k_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesBytes.k)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesBytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListBytesBytes::w_size() const {
  return w_.size();
}
inline void ListBytesBytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListBytesBytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBytesBytes.w)
  return w_.Get(index);
}
inline ::std::string* ListBytesBytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBytesBytes.w)
  return w_.Mutable(index);
}
inline void ListBytesBytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBytesBytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBytesBytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBytesBytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBytesBytes.w)
}
inline void ListBytesBytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBytesBytes.w)
}
inline ::std::string* ListBytesBytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBytesBytes.w)
  return w_.Add();
}
inline void ListBytesBytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBytes.w)
}
#if LANG_CXX11
inline void ListBytesBytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBytesBytes.w)
}
#endif
inline void ListBytesBytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBytesBytes.w)
}
inline void ListBytesBytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBytesBytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBytesBytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBytesBytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBytesBytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBytesBytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Double

// repeated int32 k = 1;
inline int ListInt32Double::k_size() const {
  return k_.size();
}
inline void ListInt32Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Double.k)
  return k_.Get(index);
}
inline void ListInt32Double::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Double.k)
}
inline void ListInt32Double::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListInt32Double::w_size() const {
  return w_.size();
}
inline void ListInt32Double::clear_w() {
  w_.Clear();
}
inline double ListInt32Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Double.w)
  return w_.Get(index);
}
inline void ListInt32Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Double.w)
}
inline void ListInt32Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListInt32Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListInt32Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Float

// repeated int32 k = 1;
inline int ListInt32Float::k_size() const {
  return k_.size();
}
inline void ListInt32Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Float.k)
  return k_.Get(index);
}
inline void ListInt32Float::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Float.k)
}
inline void ListInt32Float::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListInt32Float::w_size() const {
  return w_.size();
}
inline void ListInt32Float::clear_w() {
  w_.Clear();
}
inline float ListInt32Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Float.w)
  return w_.Get(index);
}
inline void ListInt32Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Float.w)
}
inline void ListInt32Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListInt32Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListInt32Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Int32

// repeated int32 k = 1;
inline int ListInt32Int32::k_size() const {
  return k_.size();
}
inline void ListInt32Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Int32.k)
  return k_.Get(index);
}
inline void ListInt32Int32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Int32.k)
}
inline void ListInt32Int32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListInt32Int32::w_size() const {
  return w_.size();
}
inline void ListInt32Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt32Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Int32.w)
  return w_.Get(index);
}
inline void ListInt32Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Int32.w)
}
inline void ListInt32Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Int64

// repeated int32 k = 1;
inline int ListInt32Int64::k_size() const {
  return k_.size();
}
inline void ListInt32Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Int64.k)
  return k_.Get(index);
}
inline void ListInt32Int64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Int64.k)
}
inline void ListInt32Int64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListInt32Int64::w_size() const {
  return w_.size();
}
inline void ListInt32Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt32Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Int64.w)
  return w_.Get(index);
}
inline void ListInt32Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Int64.w)
}
inline void ListInt32Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt32Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt32Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Uint32

// repeated int32 k = 1;
inline int ListInt32Uint32::k_size() const {
  return k_.size();
}
inline void ListInt32Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Uint32.k)
  return k_.Get(index);
}
inline void ListInt32Uint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Uint32.k)
}
inline void ListInt32Uint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListInt32Uint32::w_size() const {
  return w_.size();
}
inline void ListInt32Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListInt32Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Uint32.w)
  return w_.Get(index);
}
inline void ListInt32Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Uint32.w)
}
inline void ListInt32Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListInt32Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListInt32Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Uint64

// repeated int32 k = 1;
inline int ListInt32Uint64::k_size() const {
  return k_.size();
}
inline void ListInt32Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Uint64.k)
  return k_.Get(index);
}
inline void ListInt32Uint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Uint64.k)
}
inline void ListInt32Uint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListInt32Uint64::w_size() const {
  return w_.size();
}
inline void ListInt32Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListInt32Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Uint64.w)
  return w_.Get(index);
}
inline void ListInt32Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Uint64.w)
}
inline void ListInt32Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListInt32Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListInt32Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Sint32

// repeated int32 k = 1;
inline int ListInt32Sint32::k_size() const {
  return k_.size();
}
inline void ListInt32Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sint32.k)
  return k_.Get(index);
}
inline void ListInt32Sint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sint32.k)
}
inline void ListInt32Sint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListInt32Sint32::w_size() const {
  return w_.size();
}
inline void ListInt32Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sint32.w)
  return w_.Get(index);
}
inline void ListInt32Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sint32.w)
}
inline void ListInt32Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Sint64

// repeated int32 k = 1;
inline int ListInt32Sint64::k_size() const {
  return k_.size();
}
inline void ListInt32Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sint64.k)
  return k_.Get(index);
}
inline void ListInt32Sint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sint64.k)
}
inline void ListInt32Sint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListInt32Sint64::w_size() const {
  return w_.size();
}
inline void ListInt32Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt32Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sint64.w)
  return w_.Get(index);
}
inline void ListInt32Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sint64.w)
}
inline void ListInt32Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt32Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt32Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Fixed32

// repeated int32 k = 1;
inline int ListInt32Fixed32::k_size() const {
  return k_.size();
}
inline void ListInt32Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Fixed32.k)
  return k_.Get(index);
}
inline void ListInt32Fixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Fixed32.k)
}
inline void ListInt32Fixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListInt32Fixed32::w_size() const {
  return w_.size();
}
inline void ListInt32Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListInt32Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Fixed32.w)
  return w_.Get(index);
}
inline void ListInt32Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Fixed32.w)
}
inline void ListInt32Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListInt32Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListInt32Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Fixed64

// repeated int32 k = 1;
inline int ListInt32Fixed64::k_size() const {
  return k_.size();
}
inline void ListInt32Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Fixed64.k)
  return k_.Get(index);
}
inline void ListInt32Fixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Fixed64.k)
}
inline void ListInt32Fixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListInt32Fixed64::w_size() const {
  return w_.size();
}
inline void ListInt32Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListInt32Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Fixed64.w)
  return w_.Get(index);
}
inline void ListInt32Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Fixed64.w)
}
inline void ListInt32Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListInt32Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListInt32Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Sfixed32

// repeated int32 k = 1;
inline int ListInt32Sfixed32::k_size() const {
  return k_.size();
}
inline void ListInt32Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sfixed32.k)
  return k_.Get(index);
}
inline void ListInt32Sfixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sfixed32.k)
}
inline void ListInt32Sfixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListInt32Sfixed32::w_size() const {
  return w_.size();
}
inline void ListInt32Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sfixed32.w)
  return w_.Get(index);
}
inline void ListInt32Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sfixed32.w)
}
inline void ListInt32Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Sfixed64

// repeated int32 k = 1;
inline int ListInt32Sfixed64::k_size() const {
  return k_.size();
}
inline void ListInt32Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sfixed64.k)
  return k_.Get(index);
}
inline void ListInt32Sfixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sfixed64.k)
}
inline void ListInt32Sfixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListInt32Sfixed64::w_size() const {
  return w_.size();
}
inline void ListInt32Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt32Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Sfixed64.w)
  return w_.Get(index);
}
inline void ListInt32Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Sfixed64.w)
}
inline void ListInt32Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt32Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt32Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Bool

// repeated int32 k = 1;
inline int ListInt32Bool::k_size() const {
  return k_.size();
}
inline void ListInt32Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Bool.k)
  return k_.Get(index);
}
inline void ListInt32Bool::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Bool.k)
}
inline void ListInt32Bool::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListInt32Bool::w_size() const {
  return w_.size();
}
inline void ListInt32Bool::clear_w() {
  w_.Clear();
}
inline bool ListInt32Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Bool.w)
  return w_.Get(index);
}
inline void ListInt32Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Bool.w)
}
inline void ListInt32Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListInt32Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListInt32Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32String

// repeated int32 k = 1;
inline int ListInt32String::k_size() const {
  return k_.size();
}
inline void ListInt32String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32String.k)
  return k_.Get(index);
}
inline void ListInt32String::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32String.k)
}
inline void ListInt32String::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListInt32String::w_size() const {
  return w_.size();
}
inline void ListInt32String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListInt32String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32String.w)
  return w_.Get(index);
}
inline ::std::string* ListInt32String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListInt32String.w)
  return w_.Mutable(index);
}
inline void ListInt32String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListInt32String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListInt32String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListInt32String.w)
}
inline void ListInt32String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListInt32String.w)
}
inline ::std::string* ListInt32String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListInt32String.w)
  return w_.Add();
}
inline void ListInt32String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32String.w)
}
#if LANG_CXX11
inline void ListInt32String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32String.w)
}
#endif
inline void ListInt32String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListInt32String.w)
}
inline void ListInt32String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListInt32String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInt32String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListInt32String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt32Bytes

// repeated int32 k = 1;
inline int ListInt32Bytes::k_size() const {
  return k_.size();
}
inline void ListInt32Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListInt32Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Bytes.k)
  return k_.Get(index);
}
inline void ListInt32Bytes::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Bytes.k)
}
inline void ListInt32Bytes::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt32Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt32Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListInt32Bytes::w_size() const {
  return w_.size();
}
inline void ListInt32Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListInt32Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt32Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListInt32Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListInt32Bytes.w)
  return w_.Mutable(index);
}
inline void ListInt32Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListInt32Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt32Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListInt32Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListInt32Bytes.w)
}
inline void ListInt32Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListInt32Bytes.w)
}
inline ::std::string* ListInt32Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListInt32Bytes.w)
  return w_.Add();
}
inline void ListInt32Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Bytes.w)
}
#if LANG_CXX11
inline void ListInt32Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListInt32Bytes.w)
}
#endif
inline void ListInt32Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListInt32Bytes.w)
}
inline void ListInt32Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListInt32Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInt32Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt32Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListInt32Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt32Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Double

// repeated int64 k = 1;
inline int ListInt64Double::k_size() const {
  return k_.size();
}
inline void ListInt64Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Double.k)
  return k_.Get(index);
}
inline void ListInt64Double::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Double.k)
}
inline void ListInt64Double::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListInt64Double::w_size() const {
  return w_.size();
}
inline void ListInt64Double::clear_w() {
  w_.Clear();
}
inline double ListInt64Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Double.w)
  return w_.Get(index);
}
inline void ListInt64Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Double.w)
}
inline void ListInt64Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListInt64Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListInt64Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Float

// repeated int64 k = 1;
inline int ListInt64Float::k_size() const {
  return k_.size();
}
inline void ListInt64Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Float.k)
  return k_.Get(index);
}
inline void ListInt64Float::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Float.k)
}
inline void ListInt64Float::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListInt64Float::w_size() const {
  return w_.size();
}
inline void ListInt64Float::clear_w() {
  w_.Clear();
}
inline float ListInt64Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Float.w)
  return w_.Get(index);
}
inline void ListInt64Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Float.w)
}
inline void ListInt64Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListInt64Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListInt64Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Int32

// repeated int64 k = 1;
inline int ListInt64Int32::k_size() const {
  return k_.size();
}
inline void ListInt64Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Int32.k)
  return k_.Get(index);
}
inline void ListInt64Int32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Int32.k)
}
inline void ListInt64Int32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListInt64Int32::w_size() const {
  return w_.size();
}
inline void ListInt64Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt64Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Int32.w)
  return w_.Get(index);
}
inline void ListInt64Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Int32.w)
}
inline void ListInt64Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt64Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt64Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Int64

// repeated int64 k = 1;
inline int ListInt64Int64::k_size() const {
  return k_.size();
}
inline void ListInt64Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Int64.k)
  return k_.Get(index);
}
inline void ListInt64Int64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Int64.k)
}
inline void ListInt64Int64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListInt64Int64::w_size() const {
  return w_.size();
}
inline void ListInt64Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt64Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Int64.w)
  return w_.Get(index);
}
inline void ListInt64Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Int64.w)
}
inline void ListInt64Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Uint32

// repeated int64 k = 1;
inline int ListInt64Uint32::k_size() const {
  return k_.size();
}
inline void ListInt64Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Uint32.k)
  return k_.Get(index);
}
inline void ListInt64Uint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Uint32.k)
}
inline void ListInt64Uint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListInt64Uint32::w_size() const {
  return w_.size();
}
inline void ListInt64Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListInt64Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Uint32.w)
  return w_.Get(index);
}
inline void ListInt64Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Uint32.w)
}
inline void ListInt64Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListInt64Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListInt64Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Uint64

// repeated int64 k = 1;
inline int ListInt64Uint64::k_size() const {
  return k_.size();
}
inline void ListInt64Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Uint64.k)
  return k_.Get(index);
}
inline void ListInt64Uint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Uint64.k)
}
inline void ListInt64Uint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListInt64Uint64::w_size() const {
  return w_.size();
}
inline void ListInt64Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListInt64Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Uint64.w)
  return w_.Get(index);
}
inline void ListInt64Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Uint64.w)
}
inline void ListInt64Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListInt64Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListInt64Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Sint32

// repeated int64 k = 1;
inline int ListInt64Sint32::k_size() const {
  return k_.size();
}
inline void ListInt64Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sint32.k)
  return k_.Get(index);
}
inline void ListInt64Sint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sint32.k)
}
inline void ListInt64Sint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListInt64Sint32::w_size() const {
  return w_.size();
}
inline void ListInt64Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt64Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sint32.w)
  return w_.Get(index);
}
inline void ListInt64Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sint32.w)
}
inline void ListInt64Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt64Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt64Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Sint64

// repeated int64 k = 1;
inline int ListInt64Sint64::k_size() const {
  return k_.size();
}
inline void ListInt64Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sint64.k)
  return k_.Get(index);
}
inline void ListInt64Sint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sint64.k)
}
inline void ListInt64Sint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListInt64Sint64::w_size() const {
  return w_.size();
}
inline void ListInt64Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sint64.w)
  return w_.Get(index);
}
inline void ListInt64Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sint64.w)
}
inline void ListInt64Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Fixed32

// repeated int64 k = 1;
inline int ListInt64Fixed32::k_size() const {
  return k_.size();
}
inline void ListInt64Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Fixed32.k)
  return k_.Get(index);
}
inline void ListInt64Fixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Fixed32.k)
}
inline void ListInt64Fixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListInt64Fixed32::w_size() const {
  return w_.size();
}
inline void ListInt64Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListInt64Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Fixed32.w)
  return w_.Get(index);
}
inline void ListInt64Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Fixed32.w)
}
inline void ListInt64Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListInt64Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListInt64Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Fixed64

// repeated int64 k = 1;
inline int ListInt64Fixed64::k_size() const {
  return k_.size();
}
inline void ListInt64Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Fixed64.k)
  return k_.Get(index);
}
inline void ListInt64Fixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Fixed64.k)
}
inline void ListInt64Fixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListInt64Fixed64::w_size() const {
  return w_.size();
}
inline void ListInt64Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListInt64Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Fixed64.w)
  return w_.Get(index);
}
inline void ListInt64Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Fixed64.w)
}
inline void ListInt64Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListInt64Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListInt64Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Sfixed32

// repeated int64 k = 1;
inline int ListInt64Sfixed32::k_size() const {
  return k_.size();
}
inline void ListInt64Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sfixed32.k)
  return k_.Get(index);
}
inline void ListInt64Sfixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sfixed32.k)
}
inline void ListInt64Sfixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListInt64Sfixed32::w_size() const {
  return w_.size();
}
inline void ListInt64Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListInt64Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sfixed32.w)
  return w_.Get(index);
}
inline void ListInt64Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sfixed32.w)
}
inline void ListInt64Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListInt64Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListInt64Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Sfixed64

// repeated int64 k = 1;
inline int ListInt64Sfixed64::k_size() const {
  return k_.size();
}
inline void ListInt64Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sfixed64.k)
  return k_.Get(index);
}
inline void ListInt64Sfixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sfixed64.k)
}
inline void ListInt64Sfixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListInt64Sfixed64::w_size() const {
  return w_.size();
}
inline void ListInt64Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListInt64Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Sfixed64.w)
  return w_.Get(index);
}
inline void ListInt64Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Sfixed64.w)
}
inline void ListInt64Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Bool

// repeated int64 k = 1;
inline int ListInt64Bool::k_size() const {
  return k_.size();
}
inline void ListInt64Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Bool.k)
  return k_.Get(index);
}
inline void ListInt64Bool::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Bool.k)
}
inline void ListInt64Bool::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListInt64Bool::w_size() const {
  return w_.size();
}
inline void ListInt64Bool::clear_w() {
  w_.Clear();
}
inline bool ListInt64Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Bool.w)
  return w_.Get(index);
}
inline void ListInt64Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Bool.w)
}
inline void ListInt64Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListInt64Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListInt64Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64String

// repeated int64 k = 1;
inline int ListInt64String::k_size() const {
  return k_.size();
}
inline void ListInt64String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64String.k)
  return k_.Get(index);
}
inline void ListInt64String::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64String.k)
}
inline void ListInt64String::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListInt64String::w_size() const {
  return w_.size();
}
inline void ListInt64String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListInt64String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64String.w)
  return w_.Get(index);
}
inline ::std::string* ListInt64String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListInt64String.w)
  return w_.Mutable(index);
}
inline void ListInt64String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListInt64String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListInt64String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListInt64String.w)
}
inline void ListInt64String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListInt64String.w)
}
inline ::std::string* ListInt64String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListInt64String.w)
  return w_.Add();
}
inline void ListInt64String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64String.w)
}
#if LANG_CXX11
inline void ListInt64String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64String.w)
}
#endif
inline void ListInt64String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListInt64String.w)
}
inline void ListInt64String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListInt64String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInt64String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListInt64String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListInt64Bytes

// repeated int64 k = 1;
inline int ListInt64Bytes::k_size() const {
  return k_.size();
}
inline void ListInt64Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListInt64Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Bytes.k)
  return k_.Get(index);
}
inline void ListInt64Bytes::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Bytes.k)
}
inline void ListInt64Bytes::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListInt64Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListInt64Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListInt64Bytes::w_size() const {
  return w_.size();
}
inline void ListInt64Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListInt64Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListInt64Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListInt64Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListInt64Bytes.w)
  return w_.Mutable(index);
}
inline void ListInt64Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListInt64Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListInt64Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListInt64Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListInt64Bytes.w)
}
inline void ListInt64Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListInt64Bytes.w)
}
inline ::std::string* ListInt64Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListInt64Bytes.w)
  return w_.Add();
}
inline void ListInt64Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Bytes.w)
}
#if LANG_CXX11
inline void ListInt64Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListInt64Bytes.w)
}
#endif
inline void ListInt64Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListInt64Bytes.w)
}
inline void ListInt64Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListInt64Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInt64Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListInt64Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListInt64Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListInt64Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Double

// repeated uint32 k = 1;
inline int ListUint32Double::k_size() const {
  return k_.size();
}
inline void ListUint32Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Double.k)
  return k_.Get(index);
}
inline void ListUint32Double::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Double.k)
}
inline void ListUint32Double::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListUint32Double::w_size() const {
  return w_.size();
}
inline void ListUint32Double::clear_w() {
  w_.Clear();
}
inline double ListUint32Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Double.w)
  return w_.Get(index);
}
inline void ListUint32Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Double.w)
}
inline void ListUint32Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListUint32Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListUint32Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Float

// repeated uint32 k = 1;
inline int ListUint32Float::k_size() const {
  return k_.size();
}
inline void ListUint32Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Float.k)
  return k_.Get(index);
}
inline void ListUint32Float::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Float.k)
}
inline void ListUint32Float::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListUint32Float::w_size() const {
  return w_.size();
}
inline void ListUint32Float::clear_w() {
  w_.Clear();
}
inline float ListUint32Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Float.w)
  return w_.Get(index);
}
inline void ListUint32Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Float.w)
}
inline void ListUint32Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListUint32Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListUint32Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Int32

// repeated uint32 k = 1;
inline int ListUint32Int32::k_size() const {
  return k_.size();
}
inline void ListUint32Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Int32.k)
  return k_.Get(index);
}
inline void ListUint32Int32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Int32.k)
}
inline void ListUint32Int32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListUint32Int32::w_size() const {
  return w_.size();
}
inline void ListUint32Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint32Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Int32.w)
  return w_.Get(index);
}
inline void ListUint32Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Int32.w)
}
inline void ListUint32Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint32Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint32Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Int64

// repeated uint32 k = 1;
inline int ListUint32Int64::k_size() const {
  return k_.size();
}
inline void ListUint32Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Int64.k)
  return k_.Get(index);
}
inline void ListUint32Int64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Int64.k)
}
inline void ListUint32Int64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListUint32Int64::w_size() const {
  return w_.size();
}
inline void ListUint32Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint32Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Int64.w)
  return w_.Get(index);
}
inline void ListUint32Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Int64.w)
}
inline void ListUint32Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint32Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint32Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Uint32

// repeated uint32 k = 1;
inline int ListUint32Uint32::k_size() const {
  return k_.size();
}
inline void ListUint32Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Uint32.k)
  return k_.Get(index);
}
inline void ListUint32Uint32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Uint32.k)
}
inline void ListUint32Uint32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListUint32Uint32::w_size() const {
  return w_.size();
}
inline void ListUint32Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Uint32.w)
  return w_.Get(index);
}
inline void ListUint32Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Uint32.w)
}
inline void ListUint32Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Uint64

// repeated uint32 k = 1;
inline int ListUint32Uint64::k_size() const {
  return k_.size();
}
inline void ListUint32Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Uint64.k)
  return k_.Get(index);
}
inline void ListUint32Uint64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Uint64.k)
}
inline void ListUint32Uint64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListUint32Uint64::w_size() const {
  return w_.size();
}
inline void ListUint32Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListUint32Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Uint64.w)
  return w_.Get(index);
}
inline void ListUint32Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Uint64.w)
}
inline void ListUint32Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint32Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint32Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Sint32

// repeated uint32 k = 1;
inline int ListUint32Sint32::k_size() const {
  return k_.size();
}
inline void ListUint32Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sint32.k)
  return k_.Get(index);
}
inline void ListUint32Sint32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sint32.k)
}
inline void ListUint32Sint32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListUint32Sint32::w_size() const {
  return w_.size();
}
inline void ListUint32Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint32Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sint32.w)
  return w_.Get(index);
}
inline void ListUint32Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sint32.w)
}
inline void ListUint32Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint32Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint32Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Sint64

// repeated uint32 k = 1;
inline int ListUint32Sint64::k_size() const {
  return k_.size();
}
inline void ListUint32Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sint64.k)
  return k_.Get(index);
}
inline void ListUint32Sint64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sint64.k)
}
inline void ListUint32Sint64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListUint32Sint64::w_size() const {
  return w_.size();
}
inline void ListUint32Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint32Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sint64.w)
  return w_.Get(index);
}
inline void ListUint32Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sint64.w)
}
inline void ListUint32Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint32Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint32Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Fixed32

// repeated uint32 k = 1;
inline int ListUint32Fixed32::k_size() const {
  return k_.size();
}
inline void ListUint32Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Fixed32.k)
  return k_.Get(index);
}
inline void ListUint32Fixed32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Fixed32.k)
}
inline void ListUint32Fixed32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListUint32Fixed32::w_size() const {
  return w_.size();
}
inline void ListUint32Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Fixed32.w)
  return w_.Get(index);
}
inline void ListUint32Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Fixed32.w)
}
inline void ListUint32Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Fixed64

// repeated uint32 k = 1;
inline int ListUint32Fixed64::k_size() const {
  return k_.size();
}
inline void ListUint32Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Fixed64.k)
  return k_.Get(index);
}
inline void ListUint32Fixed64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Fixed64.k)
}
inline void ListUint32Fixed64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListUint32Fixed64::w_size() const {
  return w_.size();
}
inline void ListUint32Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListUint32Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Fixed64.w)
  return w_.Get(index);
}
inline void ListUint32Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Fixed64.w)
}
inline void ListUint32Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint32Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint32Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Sfixed32

// repeated uint32 k = 1;
inline int ListUint32Sfixed32::k_size() const {
  return k_.size();
}
inline void ListUint32Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sfixed32.k)
  return k_.Get(index);
}
inline void ListUint32Sfixed32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sfixed32.k)
}
inline void ListUint32Sfixed32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListUint32Sfixed32::w_size() const {
  return w_.size();
}
inline void ListUint32Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint32Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sfixed32.w)
  return w_.Get(index);
}
inline void ListUint32Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sfixed32.w)
}
inline void ListUint32Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint32Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint32Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Sfixed64

// repeated uint32 k = 1;
inline int ListUint32Sfixed64::k_size() const {
  return k_.size();
}
inline void ListUint32Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sfixed64.k)
  return k_.Get(index);
}
inline void ListUint32Sfixed64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sfixed64.k)
}
inline void ListUint32Sfixed64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListUint32Sfixed64::w_size() const {
  return w_.size();
}
inline void ListUint32Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint32Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Sfixed64.w)
  return w_.Get(index);
}
inline void ListUint32Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Sfixed64.w)
}
inline void ListUint32Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint32Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint32Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Bool

// repeated uint32 k = 1;
inline int ListUint32Bool::k_size() const {
  return k_.size();
}
inline void ListUint32Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Bool.k)
  return k_.Get(index);
}
inline void ListUint32Bool::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Bool.k)
}
inline void ListUint32Bool::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListUint32Bool::w_size() const {
  return w_.size();
}
inline void ListUint32Bool::clear_w() {
  w_.Clear();
}
inline bool ListUint32Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Bool.w)
  return w_.Get(index);
}
inline void ListUint32Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Bool.w)
}
inline void ListUint32Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListUint32Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListUint32Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32String

// repeated uint32 k = 1;
inline int ListUint32String::k_size() const {
  return k_.size();
}
inline void ListUint32String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32String.k)
  return k_.Get(index);
}
inline void ListUint32String::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32String.k)
}
inline void ListUint32String::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListUint32String::w_size() const {
  return w_.size();
}
inline void ListUint32String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListUint32String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32String.w)
  return w_.Get(index);
}
inline ::std::string* ListUint32String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListUint32String.w)
  return w_.Mutable(index);
}
inline void ListUint32String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListUint32String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListUint32String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListUint32String.w)
}
inline void ListUint32String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListUint32String.w)
}
inline ::std::string* ListUint32String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListUint32String.w)
  return w_.Add();
}
inline void ListUint32String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32String.w)
}
#if LANG_CXX11
inline void ListUint32String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32String.w)
}
#endif
inline void ListUint32String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListUint32String.w)
}
inline void ListUint32String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListUint32String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListUint32String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListUint32String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint32Bytes

// repeated uint32 k = 1;
inline int ListUint32Bytes::k_size() const {
  return k_.size();
}
inline void ListUint32Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListUint32Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Bytes.k)
  return k_.Get(index);
}
inline void ListUint32Bytes::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Bytes.k)
}
inline void ListUint32Bytes::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint32Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint32Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListUint32Bytes::w_size() const {
  return w_.size();
}
inline void ListUint32Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListUint32Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint32Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListUint32Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListUint32Bytes.w)
  return w_.Mutable(index);
}
inline void ListUint32Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListUint32Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint32Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListUint32Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListUint32Bytes.w)
}
inline void ListUint32Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListUint32Bytes.w)
}
inline ::std::string* ListUint32Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListUint32Bytes.w)
  return w_.Add();
}
inline void ListUint32Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Bytes.w)
}
#if LANG_CXX11
inline void ListUint32Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListUint32Bytes.w)
}
#endif
inline void ListUint32Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListUint32Bytes.w)
}
inline void ListUint32Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListUint32Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListUint32Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint32Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListUint32Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint32Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Double

// repeated uint64 k = 1;
inline int ListUint64Double::k_size() const {
  return k_.size();
}
inline void ListUint64Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Double.k)
  return k_.Get(index);
}
inline void ListUint64Double::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Double.k)
}
inline void ListUint64Double::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListUint64Double::w_size() const {
  return w_.size();
}
inline void ListUint64Double::clear_w() {
  w_.Clear();
}
inline double ListUint64Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Double.w)
  return w_.Get(index);
}
inline void ListUint64Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Double.w)
}
inline void ListUint64Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListUint64Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListUint64Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Float

// repeated uint64 k = 1;
inline int ListUint64Float::k_size() const {
  return k_.size();
}
inline void ListUint64Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Float.k)
  return k_.Get(index);
}
inline void ListUint64Float::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Float.k)
}
inline void ListUint64Float::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListUint64Float::w_size() const {
  return w_.size();
}
inline void ListUint64Float::clear_w() {
  w_.Clear();
}
inline float ListUint64Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Float.w)
  return w_.Get(index);
}
inline void ListUint64Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Float.w)
}
inline void ListUint64Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListUint64Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListUint64Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Int32

// repeated uint64 k = 1;
inline int ListUint64Int32::k_size() const {
  return k_.size();
}
inline void ListUint64Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Int32.k)
  return k_.Get(index);
}
inline void ListUint64Int32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Int32.k)
}
inline void ListUint64Int32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListUint64Int32::w_size() const {
  return w_.size();
}
inline void ListUint64Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint64Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Int32.w)
  return w_.Get(index);
}
inline void ListUint64Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Int32.w)
}
inline void ListUint64Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint64Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint64Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Int64

// repeated uint64 k = 1;
inline int ListUint64Int64::k_size() const {
  return k_.size();
}
inline void ListUint64Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Int64.k)
  return k_.Get(index);
}
inline void ListUint64Int64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Int64.k)
}
inline void ListUint64Int64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListUint64Int64::w_size() const {
  return w_.size();
}
inline void ListUint64Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint64Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Int64.w)
  return w_.Get(index);
}
inline void ListUint64Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Int64.w)
}
inline void ListUint64Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint64Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint64Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Uint32

// repeated uint64 k = 1;
inline int ListUint64Uint32::k_size() const {
  return k_.size();
}
inline void ListUint64Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Uint32.k)
  return k_.Get(index);
}
inline void ListUint64Uint32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Uint32.k)
}
inline void ListUint64Uint32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListUint64Uint32::w_size() const {
  return w_.size();
}
inline void ListUint64Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListUint64Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Uint32.w)
  return w_.Get(index);
}
inline void ListUint64Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Uint32.w)
}
inline void ListUint64Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint64Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint64Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Uint64

// repeated uint64 k = 1;
inline int ListUint64Uint64::k_size() const {
  return k_.size();
}
inline void ListUint64Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Uint64.k)
  return k_.Get(index);
}
inline void ListUint64Uint64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Uint64.k)
}
inline void ListUint64Uint64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListUint64Uint64::w_size() const {
  return w_.size();
}
inline void ListUint64Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Uint64.w)
  return w_.Get(index);
}
inline void ListUint64Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Uint64.w)
}
inline void ListUint64Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Sint32

// repeated uint64 k = 1;
inline int ListUint64Sint32::k_size() const {
  return k_.size();
}
inline void ListUint64Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sint32.k)
  return k_.Get(index);
}
inline void ListUint64Sint32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sint32.k)
}
inline void ListUint64Sint32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListUint64Sint32::w_size() const {
  return w_.size();
}
inline void ListUint64Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint64Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sint32.w)
  return w_.Get(index);
}
inline void ListUint64Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sint32.w)
}
inline void ListUint64Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint64Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint64Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Sint64

// repeated uint64 k = 1;
inline int ListUint64Sint64::k_size() const {
  return k_.size();
}
inline void ListUint64Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sint64.k)
  return k_.Get(index);
}
inline void ListUint64Sint64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sint64.k)
}
inline void ListUint64Sint64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListUint64Sint64::w_size() const {
  return w_.size();
}
inline void ListUint64Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint64Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sint64.w)
  return w_.Get(index);
}
inline void ListUint64Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sint64.w)
}
inline void ListUint64Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint64Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint64Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Fixed32

// repeated uint64 k = 1;
inline int ListUint64Fixed32::k_size() const {
  return k_.size();
}
inline void ListUint64Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Fixed32.k)
  return k_.Get(index);
}
inline void ListUint64Fixed32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Fixed32.k)
}
inline void ListUint64Fixed32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListUint64Fixed32::w_size() const {
  return w_.size();
}
inline void ListUint64Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListUint64Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Fixed32.w)
  return w_.Get(index);
}
inline void ListUint64Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Fixed32.w)
}
inline void ListUint64Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListUint64Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListUint64Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Fixed64

// repeated uint64 k = 1;
inline int ListUint64Fixed64::k_size() const {
  return k_.size();
}
inline void ListUint64Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Fixed64.k)
  return k_.Get(index);
}
inline void ListUint64Fixed64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Fixed64.k)
}
inline void ListUint64Fixed64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListUint64Fixed64::w_size() const {
  return w_.size();
}
inline void ListUint64Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Fixed64.w)
  return w_.Get(index);
}
inline void ListUint64Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Fixed64.w)
}
inline void ListUint64Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Sfixed32

// repeated uint64 k = 1;
inline int ListUint64Sfixed32::k_size() const {
  return k_.size();
}
inline void ListUint64Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sfixed32.k)
  return k_.Get(index);
}
inline void ListUint64Sfixed32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sfixed32.k)
}
inline void ListUint64Sfixed32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListUint64Sfixed32::w_size() const {
  return w_.size();
}
inline void ListUint64Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListUint64Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sfixed32.w)
  return w_.Get(index);
}
inline void ListUint64Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sfixed32.w)
}
inline void ListUint64Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListUint64Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListUint64Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Sfixed64

// repeated uint64 k = 1;
inline int ListUint64Sfixed64::k_size() const {
  return k_.size();
}
inline void ListUint64Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sfixed64.k)
  return k_.Get(index);
}
inline void ListUint64Sfixed64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sfixed64.k)
}
inline void ListUint64Sfixed64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListUint64Sfixed64::w_size() const {
  return w_.size();
}
inline void ListUint64Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListUint64Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Sfixed64.w)
  return w_.Get(index);
}
inline void ListUint64Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Sfixed64.w)
}
inline void ListUint64Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListUint64Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListUint64Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Bool

// repeated uint64 k = 1;
inline int ListUint64Bool::k_size() const {
  return k_.size();
}
inline void ListUint64Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Bool.k)
  return k_.Get(index);
}
inline void ListUint64Bool::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Bool.k)
}
inline void ListUint64Bool::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListUint64Bool::w_size() const {
  return w_.size();
}
inline void ListUint64Bool::clear_w() {
  w_.Clear();
}
inline bool ListUint64Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Bool.w)
  return w_.Get(index);
}
inline void ListUint64Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Bool.w)
}
inline void ListUint64Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListUint64Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListUint64Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64String

// repeated uint64 k = 1;
inline int ListUint64String::k_size() const {
  return k_.size();
}
inline void ListUint64String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64String.k)
  return k_.Get(index);
}
inline void ListUint64String::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64String.k)
}
inline void ListUint64String::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListUint64String::w_size() const {
  return w_.size();
}
inline void ListUint64String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListUint64String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64String.w)
  return w_.Get(index);
}
inline ::std::string* ListUint64String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListUint64String.w)
  return w_.Mutable(index);
}
inline void ListUint64String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListUint64String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListUint64String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListUint64String.w)
}
inline void ListUint64String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListUint64String.w)
}
inline ::std::string* ListUint64String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListUint64String.w)
  return w_.Add();
}
inline void ListUint64String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64String.w)
}
#if LANG_CXX11
inline void ListUint64String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64String.w)
}
#endif
inline void ListUint64String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListUint64String.w)
}
inline void ListUint64String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListUint64String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListUint64String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListUint64String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListUint64Bytes

// repeated uint64 k = 1;
inline int ListUint64Bytes::k_size() const {
  return k_.size();
}
inline void ListUint64Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListUint64Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Bytes.k)
  return k_.Get(index);
}
inline void ListUint64Bytes::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Bytes.k)
}
inline void ListUint64Bytes::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListUint64Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListUint64Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListUint64Bytes::w_size() const {
  return w_.size();
}
inline void ListUint64Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListUint64Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListUint64Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListUint64Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListUint64Bytes.w)
  return w_.Mutable(index);
}
inline void ListUint64Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListUint64Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListUint64Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListUint64Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListUint64Bytes.w)
}
inline void ListUint64Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListUint64Bytes.w)
}
inline ::std::string* ListUint64Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListUint64Bytes.w)
  return w_.Add();
}
inline void ListUint64Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Bytes.w)
}
#if LANG_CXX11
inline void ListUint64Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListUint64Bytes.w)
}
#endif
inline void ListUint64Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListUint64Bytes.w)
}
inline void ListUint64Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListUint64Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListUint64Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListUint64Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListUint64Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListUint64Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Double

// repeated sint32 k = 1;
inline int ListSint32Double::k_size() const {
  return k_.size();
}
inline void ListSint32Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Double.k)
  return k_.Get(index);
}
inline void ListSint32Double::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Double.k)
}
inline void ListSint32Double::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListSint32Double::w_size() const {
  return w_.size();
}
inline void ListSint32Double::clear_w() {
  w_.Clear();
}
inline double ListSint32Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Double.w)
  return w_.Get(index);
}
inline void ListSint32Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Double.w)
}
inline void ListSint32Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListSint32Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListSint32Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Float

// repeated sint32 k = 1;
inline int ListSint32Float::k_size() const {
  return k_.size();
}
inline void ListSint32Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Float.k)
  return k_.Get(index);
}
inline void ListSint32Float::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Float.k)
}
inline void ListSint32Float::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListSint32Float::w_size() const {
  return w_.size();
}
inline void ListSint32Float::clear_w() {
  w_.Clear();
}
inline float ListSint32Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Float.w)
  return w_.Get(index);
}
inline void ListSint32Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Float.w)
}
inline void ListSint32Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListSint32Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListSint32Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Int32

// repeated sint32 k = 1;
inline int ListSint32Int32::k_size() const {
  return k_.size();
}
inline void ListSint32Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Int32.k)
  return k_.Get(index);
}
inline void ListSint32Int32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Int32.k)
}
inline void ListSint32Int32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListSint32Int32::w_size() const {
  return w_.size();
}
inline void ListSint32Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint32Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Int32.w)
  return w_.Get(index);
}
inline void ListSint32Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Int32.w)
}
inline void ListSint32Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Int64

// repeated sint32 k = 1;
inline int ListSint32Int64::k_size() const {
  return k_.size();
}
inline void ListSint32Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Int64.k)
  return k_.Get(index);
}
inline void ListSint32Int64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Int64.k)
}
inline void ListSint32Int64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListSint32Int64::w_size() const {
  return w_.size();
}
inline void ListSint32Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint32Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Int64.w)
  return w_.Get(index);
}
inline void ListSint32Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Int64.w)
}
inline void ListSint32Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint32Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint32Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Uint32

// repeated sint32 k = 1;
inline int ListSint32Uint32::k_size() const {
  return k_.size();
}
inline void ListSint32Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Uint32.k)
  return k_.Get(index);
}
inline void ListSint32Uint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Uint32.k)
}
inline void ListSint32Uint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListSint32Uint32::w_size() const {
  return w_.size();
}
inline void ListSint32Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSint32Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Uint32.w)
  return w_.Get(index);
}
inline void ListSint32Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Uint32.w)
}
inline void ListSint32Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSint32Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSint32Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Uint64

// repeated sint32 k = 1;
inline int ListSint32Uint64::k_size() const {
  return k_.size();
}
inline void ListSint32Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Uint64.k)
  return k_.Get(index);
}
inline void ListSint32Uint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Uint64.k)
}
inline void ListSint32Uint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListSint32Uint64::w_size() const {
  return w_.size();
}
inline void ListSint32Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSint32Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Uint64.w)
  return w_.Get(index);
}
inline void ListSint32Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Uint64.w)
}
inline void ListSint32Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSint32Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSint32Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Sint32

// repeated sint32 k = 1;
inline int ListSint32Sint32::k_size() const {
  return k_.size();
}
inline void ListSint32Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sint32.k)
  return k_.Get(index);
}
inline void ListSint32Sint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sint32.k)
}
inline void ListSint32Sint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListSint32Sint32::w_size() const {
  return w_.size();
}
inline void ListSint32Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sint32.w)
  return w_.Get(index);
}
inline void ListSint32Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sint32.w)
}
inline void ListSint32Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Sint64

// repeated sint32 k = 1;
inline int ListSint32Sint64::k_size() const {
  return k_.size();
}
inline void ListSint32Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sint64.k)
  return k_.Get(index);
}
inline void ListSint32Sint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sint64.k)
}
inline void ListSint32Sint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListSint32Sint64::w_size() const {
  return w_.size();
}
inline void ListSint32Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint32Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sint64.w)
  return w_.Get(index);
}
inline void ListSint32Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sint64.w)
}
inline void ListSint32Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint32Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint32Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Fixed32

// repeated sint32 k = 1;
inline int ListSint32Fixed32::k_size() const {
  return k_.size();
}
inline void ListSint32Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Fixed32.k)
  return k_.Get(index);
}
inline void ListSint32Fixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Fixed32.k)
}
inline void ListSint32Fixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListSint32Fixed32::w_size() const {
  return w_.size();
}
inline void ListSint32Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSint32Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Fixed32.w)
  return w_.Get(index);
}
inline void ListSint32Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Fixed32.w)
}
inline void ListSint32Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSint32Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSint32Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Fixed64

// repeated sint32 k = 1;
inline int ListSint32Fixed64::k_size() const {
  return k_.size();
}
inline void ListSint32Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Fixed64.k)
  return k_.Get(index);
}
inline void ListSint32Fixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Fixed64.k)
}
inline void ListSint32Fixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListSint32Fixed64::w_size() const {
  return w_.size();
}
inline void ListSint32Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSint32Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Fixed64.w)
  return w_.Get(index);
}
inline void ListSint32Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Fixed64.w)
}
inline void ListSint32Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSint32Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSint32Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Sfixed32

// repeated sint32 k = 1;
inline int ListSint32Sfixed32::k_size() const {
  return k_.size();
}
inline void ListSint32Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sfixed32.k)
  return k_.Get(index);
}
inline void ListSint32Sfixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sfixed32.k)
}
inline void ListSint32Sfixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListSint32Sfixed32::w_size() const {
  return w_.size();
}
inline void ListSint32Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sfixed32.w)
  return w_.Get(index);
}
inline void ListSint32Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sfixed32.w)
}
inline void ListSint32Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Sfixed64

// repeated sint32 k = 1;
inline int ListSint32Sfixed64::k_size() const {
  return k_.size();
}
inline void ListSint32Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sfixed64.k)
  return k_.Get(index);
}
inline void ListSint32Sfixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sfixed64.k)
}
inline void ListSint32Sfixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListSint32Sfixed64::w_size() const {
  return w_.size();
}
inline void ListSint32Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint32Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Sfixed64.w)
  return w_.Get(index);
}
inline void ListSint32Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Sfixed64.w)
}
inline void ListSint32Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint32Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint32Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Bool

// repeated sint32 k = 1;
inline int ListSint32Bool::k_size() const {
  return k_.size();
}
inline void ListSint32Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Bool.k)
  return k_.Get(index);
}
inline void ListSint32Bool::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Bool.k)
}
inline void ListSint32Bool::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListSint32Bool::w_size() const {
  return w_.size();
}
inline void ListSint32Bool::clear_w() {
  w_.Clear();
}
inline bool ListSint32Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Bool.w)
  return w_.Get(index);
}
inline void ListSint32Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Bool.w)
}
inline void ListSint32Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListSint32Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListSint32Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32String

// repeated sint32 k = 1;
inline int ListSint32String::k_size() const {
  return k_.size();
}
inline void ListSint32String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32String.k)
  return k_.Get(index);
}
inline void ListSint32String::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32String.k)
}
inline void ListSint32String::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListSint32String::w_size() const {
  return w_.size();
}
inline void ListSint32String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSint32String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32String.w)
  return w_.Get(index);
}
inline ::std::string* ListSint32String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSint32String.w)
  return w_.Mutable(index);
}
inline void ListSint32String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSint32String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSint32String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSint32String.w)
}
inline void ListSint32String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSint32String.w)
}
inline ::std::string* ListSint32String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSint32String.w)
  return w_.Add();
}
inline void ListSint32String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32String.w)
}
#if LANG_CXX11
inline void ListSint32String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32String.w)
}
#endif
inline void ListSint32String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSint32String.w)
}
inline void ListSint32String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSint32String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSint32String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSint32String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint32Bytes

// repeated sint32 k = 1;
inline int ListSint32Bytes::k_size() const {
  return k_.size();
}
inline void ListSint32Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSint32Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Bytes.k)
  return k_.Get(index);
}
inline void ListSint32Bytes::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Bytes.k)
}
inline void ListSint32Bytes::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint32Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint32Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListSint32Bytes::w_size() const {
  return w_.size();
}
inline void ListSint32Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSint32Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint32Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListSint32Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSint32Bytes.w)
  return w_.Mutable(index);
}
inline void ListSint32Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSint32Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint32Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSint32Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSint32Bytes.w)
}
inline void ListSint32Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSint32Bytes.w)
}
inline ::std::string* ListSint32Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSint32Bytes.w)
  return w_.Add();
}
inline void ListSint32Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Bytes.w)
}
#if LANG_CXX11
inline void ListSint32Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSint32Bytes.w)
}
#endif
inline void ListSint32Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSint32Bytes.w)
}
inline void ListSint32Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSint32Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSint32Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint32Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSint32Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint32Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Double

// repeated sint64 k = 1;
inline int ListSint64Double::k_size() const {
  return k_.size();
}
inline void ListSint64Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Double.k)
  return k_.Get(index);
}
inline void ListSint64Double::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Double.k)
}
inline void ListSint64Double::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListSint64Double::w_size() const {
  return w_.size();
}
inline void ListSint64Double::clear_w() {
  w_.Clear();
}
inline double ListSint64Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Double.w)
  return w_.Get(index);
}
inline void ListSint64Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Double.w)
}
inline void ListSint64Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListSint64Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListSint64Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Float

// repeated sint64 k = 1;
inline int ListSint64Float::k_size() const {
  return k_.size();
}
inline void ListSint64Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Float.k)
  return k_.Get(index);
}
inline void ListSint64Float::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Float.k)
}
inline void ListSint64Float::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListSint64Float::w_size() const {
  return w_.size();
}
inline void ListSint64Float::clear_w() {
  w_.Clear();
}
inline float ListSint64Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Float.w)
  return w_.Get(index);
}
inline void ListSint64Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Float.w)
}
inline void ListSint64Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListSint64Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListSint64Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Int32

// repeated sint64 k = 1;
inline int ListSint64Int32::k_size() const {
  return k_.size();
}
inline void ListSint64Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Int32.k)
  return k_.Get(index);
}
inline void ListSint64Int32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Int32.k)
}
inline void ListSint64Int32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListSint64Int32::w_size() const {
  return w_.size();
}
inline void ListSint64Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint64Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Int32.w)
  return w_.Get(index);
}
inline void ListSint64Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Int32.w)
}
inline void ListSint64Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint64Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint64Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Int64

// repeated sint64 k = 1;
inline int ListSint64Int64::k_size() const {
  return k_.size();
}
inline void ListSint64Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Int64.k)
  return k_.Get(index);
}
inline void ListSint64Int64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Int64.k)
}
inline void ListSint64Int64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListSint64Int64::w_size() const {
  return w_.size();
}
inline void ListSint64Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint64Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Int64.w)
  return w_.Get(index);
}
inline void ListSint64Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Int64.w)
}
inline void ListSint64Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Uint32

// repeated sint64 k = 1;
inline int ListSint64Uint32::k_size() const {
  return k_.size();
}
inline void ListSint64Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Uint32.k)
  return k_.Get(index);
}
inline void ListSint64Uint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Uint32.k)
}
inline void ListSint64Uint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListSint64Uint32::w_size() const {
  return w_.size();
}
inline void ListSint64Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSint64Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Uint32.w)
  return w_.Get(index);
}
inline void ListSint64Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Uint32.w)
}
inline void ListSint64Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSint64Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSint64Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Uint64

// repeated sint64 k = 1;
inline int ListSint64Uint64::k_size() const {
  return k_.size();
}
inline void ListSint64Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Uint64.k)
  return k_.Get(index);
}
inline void ListSint64Uint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Uint64.k)
}
inline void ListSint64Uint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListSint64Uint64::w_size() const {
  return w_.size();
}
inline void ListSint64Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSint64Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Uint64.w)
  return w_.Get(index);
}
inline void ListSint64Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Uint64.w)
}
inline void ListSint64Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSint64Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSint64Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Sint32

// repeated sint64 k = 1;
inline int ListSint64Sint32::k_size() const {
  return k_.size();
}
inline void ListSint64Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sint32.k)
  return k_.Get(index);
}
inline void ListSint64Sint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sint32.k)
}
inline void ListSint64Sint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListSint64Sint32::w_size() const {
  return w_.size();
}
inline void ListSint64Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint64Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sint32.w)
  return w_.Get(index);
}
inline void ListSint64Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sint32.w)
}
inline void ListSint64Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint64Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint64Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Sint64

// repeated sint64 k = 1;
inline int ListSint64Sint64::k_size() const {
  return k_.size();
}
inline void ListSint64Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sint64.k)
  return k_.Get(index);
}
inline void ListSint64Sint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sint64.k)
}
inline void ListSint64Sint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListSint64Sint64::w_size() const {
  return w_.size();
}
inline void ListSint64Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sint64.w)
  return w_.Get(index);
}
inline void ListSint64Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sint64.w)
}
inline void ListSint64Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Fixed32

// repeated sint64 k = 1;
inline int ListSint64Fixed32::k_size() const {
  return k_.size();
}
inline void ListSint64Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Fixed32.k)
  return k_.Get(index);
}
inline void ListSint64Fixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Fixed32.k)
}
inline void ListSint64Fixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListSint64Fixed32::w_size() const {
  return w_.size();
}
inline void ListSint64Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSint64Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Fixed32.w)
  return w_.Get(index);
}
inline void ListSint64Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Fixed32.w)
}
inline void ListSint64Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSint64Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSint64Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Fixed64

// repeated sint64 k = 1;
inline int ListSint64Fixed64::k_size() const {
  return k_.size();
}
inline void ListSint64Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Fixed64.k)
  return k_.Get(index);
}
inline void ListSint64Fixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Fixed64.k)
}
inline void ListSint64Fixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListSint64Fixed64::w_size() const {
  return w_.size();
}
inline void ListSint64Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSint64Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Fixed64.w)
  return w_.Get(index);
}
inline void ListSint64Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Fixed64.w)
}
inline void ListSint64Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSint64Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSint64Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Sfixed32

// repeated sint64 k = 1;
inline int ListSint64Sfixed32::k_size() const {
  return k_.size();
}
inline void ListSint64Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sfixed32.k)
  return k_.Get(index);
}
inline void ListSint64Sfixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sfixed32.k)
}
inline void ListSint64Sfixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListSint64Sfixed32::w_size() const {
  return w_.size();
}
inline void ListSint64Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSint64Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sfixed32.w)
  return w_.Get(index);
}
inline void ListSint64Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sfixed32.w)
}
inline void ListSint64Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSint64Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSint64Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Sfixed64

// repeated sint64 k = 1;
inline int ListSint64Sfixed64::k_size() const {
  return k_.size();
}
inline void ListSint64Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sfixed64.k)
  return k_.Get(index);
}
inline void ListSint64Sfixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sfixed64.k)
}
inline void ListSint64Sfixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListSint64Sfixed64::w_size() const {
  return w_.size();
}
inline void ListSint64Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSint64Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Sfixed64.w)
  return w_.Get(index);
}
inline void ListSint64Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Sfixed64.w)
}
inline void ListSint64Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Bool

// repeated sint64 k = 1;
inline int ListSint64Bool::k_size() const {
  return k_.size();
}
inline void ListSint64Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Bool.k)
  return k_.Get(index);
}
inline void ListSint64Bool::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Bool.k)
}
inline void ListSint64Bool::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListSint64Bool::w_size() const {
  return w_.size();
}
inline void ListSint64Bool::clear_w() {
  w_.Clear();
}
inline bool ListSint64Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Bool.w)
  return w_.Get(index);
}
inline void ListSint64Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Bool.w)
}
inline void ListSint64Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListSint64Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListSint64Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64String

// repeated sint64 k = 1;
inline int ListSint64String::k_size() const {
  return k_.size();
}
inline void ListSint64String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64String.k)
  return k_.Get(index);
}
inline void ListSint64String::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64String.k)
}
inline void ListSint64String::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListSint64String::w_size() const {
  return w_.size();
}
inline void ListSint64String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSint64String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64String.w)
  return w_.Get(index);
}
inline ::std::string* ListSint64String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSint64String.w)
  return w_.Mutable(index);
}
inline void ListSint64String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSint64String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSint64String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSint64String.w)
}
inline void ListSint64String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSint64String.w)
}
inline ::std::string* ListSint64String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSint64String.w)
  return w_.Add();
}
inline void ListSint64String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64String.w)
}
#if LANG_CXX11
inline void ListSint64String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64String.w)
}
#endif
inline void ListSint64String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSint64String.w)
}
inline void ListSint64String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSint64String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSint64String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSint64String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSint64Bytes

// repeated sint64 k = 1;
inline int ListSint64Bytes::k_size() const {
  return k_.size();
}
inline void ListSint64Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSint64Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Bytes.k)
  return k_.Get(index);
}
inline void ListSint64Bytes::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Bytes.k)
}
inline void ListSint64Bytes::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSint64Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSint64Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListSint64Bytes::w_size() const {
  return w_.size();
}
inline void ListSint64Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSint64Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSint64Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListSint64Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSint64Bytes.w)
  return w_.Mutable(index);
}
inline void ListSint64Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSint64Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSint64Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSint64Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSint64Bytes.w)
}
inline void ListSint64Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSint64Bytes.w)
}
inline ::std::string* ListSint64Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSint64Bytes.w)
  return w_.Add();
}
inline void ListSint64Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Bytes.w)
}
#if LANG_CXX11
inline void ListSint64Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSint64Bytes.w)
}
#endif
inline void ListSint64Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSint64Bytes.w)
}
inline void ListSint64Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSint64Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSint64Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSint64Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSint64Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSint64Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Double

// repeated fixed32 k = 1;
inline int ListFixed32Double::k_size() const {
  return k_.size();
}
inline void ListFixed32Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Double.k)
  return k_.Get(index);
}
inline void ListFixed32Double::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Double.k)
}
inline void ListFixed32Double::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListFixed32Double::w_size() const {
  return w_.size();
}
inline void ListFixed32Double::clear_w() {
  w_.Clear();
}
inline double ListFixed32Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Double.w)
  return w_.Get(index);
}
inline void ListFixed32Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Double.w)
}
inline void ListFixed32Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListFixed32Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListFixed32Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Float

// repeated fixed32 k = 1;
inline int ListFixed32Float::k_size() const {
  return k_.size();
}
inline void ListFixed32Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Float.k)
  return k_.Get(index);
}
inline void ListFixed32Float::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Float.k)
}
inline void ListFixed32Float::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListFixed32Float::w_size() const {
  return w_.size();
}
inline void ListFixed32Float::clear_w() {
  w_.Clear();
}
inline float ListFixed32Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Float.w)
  return w_.Get(index);
}
inline void ListFixed32Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Float.w)
}
inline void ListFixed32Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFixed32Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFixed32Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Int32

// repeated fixed32 k = 1;
inline int ListFixed32Int32::k_size() const {
  return k_.size();
}
inline void ListFixed32Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Int32.k)
  return k_.Get(index);
}
inline void ListFixed32Int32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Int32.k)
}
inline void ListFixed32Int32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListFixed32Int32::w_size() const {
  return w_.size();
}
inline void ListFixed32Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed32Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Int32.w)
  return w_.Get(index);
}
inline void ListFixed32Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Int32.w)
}
inline void ListFixed32Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed32Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed32Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Int64

// repeated fixed32 k = 1;
inline int ListFixed32Int64::k_size() const {
  return k_.size();
}
inline void ListFixed32Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Int64.k)
  return k_.Get(index);
}
inline void ListFixed32Int64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Int64.k)
}
inline void ListFixed32Int64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListFixed32Int64::w_size() const {
  return w_.size();
}
inline void ListFixed32Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed32Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Int64.w)
  return w_.Get(index);
}
inline void ListFixed32Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Int64.w)
}
inline void ListFixed32Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed32Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed32Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Uint32

// repeated fixed32 k = 1;
inline int ListFixed32Uint32::k_size() const {
  return k_.size();
}
inline void ListFixed32Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Uint32.k)
  return k_.Get(index);
}
inline void ListFixed32Uint32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Uint32.k)
}
inline void ListFixed32Uint32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListFixed32Uint32::w_size() const {
  return w_.size();
}
inline void ListFixed32Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Uint32.w)
  return w_.Get(index);
}
inline void ListFixed32Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Uint32.w)
}
inline void ListFixed32Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Uint64

// repeated fixed32 k = 1;
inline int ListFixed32Uint64::k_size() const {
  return k_.size();
}
inline void ListFixed32Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Uint64.k)
  return k_.Get(index);
}
inline void ListFixed32Uint64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Uint64.k)
}
inline void ListFixed32Uint64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListFixed32Uint64::w_size() const {
  return w_.size();
}
inline void ListFixed32Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFixed32Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Uint64.w)
  return w_.Get(index);
}
inline void ListFixed32Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Uint64.w)
}
inline void ListFixed32Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed32Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed32Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Sint32

// repeated fixed32 k = 1;
inline int ListFixed32Sint32::k_size() const {
  return k_.size();
}
inline void ListFixed32Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sint32.k)
  return k_.Get(index);
}
inline void ListFixed32Sint32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sint32.k)
}
inline void ListFixed32Sint32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListFixed32Sint32::w_size() const {
  return w_.size();
}
inline void ListFixed32Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed32Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sint32.w)
  return w_.Get(index);
}
inline void ListFixed32Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sint32.w)
}
inline void ListFixed32Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed32Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed32Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Sint64

// repeated fixed32 k = 1;
inline int ListFixed32Sint64::k_size() const {
  return k_.size();
}
inline void ListFixed32Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sint64.k)
  return k_.Get(index);
}
inline void ListFixed32Sint64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sint64.k)
}
inline void ListFixed32Sint64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListFixed32Sint64::w_size() const {
  return w_.size();
}
inline void ListFixed32Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed32Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sint64.w)
  return w_.Get(index);
}
inline void ListFixed32Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sint64.w)
}
inline void ListFixed32Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed32Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed32Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Fixed32

// repeated fixed32 k = 1;
inline int ListFixed32Fixed32::k_size() const {
  return k_.size();
}
inline void ListFixed32Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Fixed32.k)
  return k_.Get(index);
}
inline void ListFixed32Fixed32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Fixed32.k)
}
inline void ListFixed32Fixed32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListFixed32Fixed32::w_size() const {
  return w_.size();
}
inline void ListFixed32Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Fixed32.w)
  return w_.Get(index);
}
inline void ListFixed32Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Fixed32.w)
}
inline void ListFixed32Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Fixed64

// repeated fixed32 k = 1;
inline int ListFixed32Fixed64::k_size() const {
  return k_.size();
}
inline void ListFixed32Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Fixed64.k)
  return k_.Get(index);
}
inline void ListFixed32Fixed64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Fixed64.k)
}
inline void ListFixed32Fixed64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListFixed32Fixed64::w_size() const {
  return w_.size();
}
inline void ListFixed32Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFixed32Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Fixed64.w)
  return w_.Get(index);
}
inline void ListFixed32Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Fixed64.w)
}
inline void ListFixed32Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed32Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed32Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Sfixed32

// repeated fixed32 k = 1;
inline int ListFixed32Sfixed32::k_size() const {
  return k_.size();
}
inline void ListFixed32Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sfixed32.k)
  return k_.Get(index);
}
inline void ListFixed32Sfixed32::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sfixed32.k)
}
inline void ListFixed32Sfixed32::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListFixed32Sfixed32::w_size() const {
  return w_.size();
}
inline void ListFixed32Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed32Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sfixed32.w)
  return w_.Get(index);
}
inline void ListFixed32Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sfixed32.w)
}
inline void ListFixed32Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed32Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed32Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Sfixed64

// repeated fixed32 k = 1;
inline int ListFixed32Sfixed64::k_size() const {
  return k_.size();
}
inline void ListFixed32Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sfixed64.k)
  return k_.Get(index);
}
inline void ListFixed32Sfixed64::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sfixed64.k)
}
inline void ListFixed32Sfixed64::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListFixed32Sfixed64::w_size() const {
  return w_.size();
}
inline void ListFixed32Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed32Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Sfixed64.w)
  return w_.Get(index);
}
inline void ListFixed32Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Sfixed64.w)
}
inline void ListFixed32Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed32Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed32Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Bool

// repeated fixed32 k = 1;
inline int ListFixed32Bool::k_size() const {
  return k_.size();
}
inline void ListFixed32Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Bool.k)
  return k_.Get(index);
}
inline void ListFixed32Bool::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Bool.k)
}
inline void ListFixed32Bool::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListFixed32Bool::w_size() const {
  return w_.size();
}
inline void ListFixed32Bool::clear_w() {
  w_.Clear();
}
inline bool ListFixed32Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Bool.w)
  return w_.Get(index);
}
inline void ListFixed32Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Bool.w)
}
inline void ListFixed32Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListFixed32Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListFixed32Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32String

// repeated fixed32 k = 1;
inline int ListFixed32String::k_size() const {
  return k_.size();
}
inline void ListFixed32String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32String.k)
  return k_.Get(index);
}
inline void ListFixed32String::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32String.k)
}
inline void ListFixed32String::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListFixed32String::w_size() const {
  return w_.size();
}
inline void ListFixed32String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFixed32String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32String.w)
  return w_.Get(index);
}
inline ::std::string* ListFixed32String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFixed32String.w)
  return w_.Mutable(index);
}
inline void ListFixed32String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFixed32String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFixed32String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFixed32String.w)
}
inline void ListFixed32String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFixed32String.w)
}
inline ::std::string* ListFixed32String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFixed32String.w)
  return w_.Add();
}
inline void ListFixed32String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32String.w)
}
#if LANG_CXX11
inline void ListFixed32String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32String.w)
}
#endif
inline void ListFixed32String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFixed32String.w)
}
inline void ListFixed32String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFixed32String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFixed32String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFixed32String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed32Bytes

// repeated fixed32 k = 1;
inline int ListFixed32Bytes::k_size() const {
  return k_.size();
}
inline void ListFixed32Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint32 ListFixed32Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Bytes.k)
  return k_.Get(index);
}
inline void ListFixed32Bytes::set_k(int index, ::google::protobuf::uint32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Bytes.k)
}
inline void ListFixed32Bytes::add_k(::google::protobuf::uint32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed32Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed32Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListFixed32Bytes::w_size() const {
  return w_.size();
}
inline void ListFixed32Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFixed32Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed32Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListFixed32Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFixed32Bytes.w)
  return w_.Mutable(index);
}
inline void ListFixed32Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFixed32Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed32Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFixed32Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFixed32Bytes.w)
}
inline void ListFixed32Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFixed32Bytes.w)
}
inline ::std::string* ListFixed32Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFixed32Bytes.w)
  return w_.Add();
}
inline void ListFixed32Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Bytes.w)
}
#if LANG_CXX11
inline void ListFixed32Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed32Bytes.w)
}
#endif
inline void ListFixed32Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFixed32Bytes.w)
}
inline void ListFixed32Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFixed32Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFixed32Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed32Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFixed32Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed32Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Double

// repeated fixed64 k = 1;
inline int ListFixed64Double::k_size() const {
  return k_.size();
}
inline void ListFixed64Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Double.k)
  return k_.Get(index);
}
inline void ListFixed64Double::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Double.k)
}
inline void ListFixed64Double::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListFixed64Double::w_size() const {
  return w_.size();
}
inline void ListFixed64Double::clear_w() {
  w_.Clear();
}
inline double ListFixed64Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Double.w)
  return w_.Get(index);
}
inline void ListFixed64Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Double.w)
}
inline void ListFixed64Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListFixed64Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListFixed64Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Float

// repeated fixed64 k = 1;
inline int ListFixed64Float::k_size() const {
  return k_.size();
}
inline void ListFixed64Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Float.k)
  return k_.Get(index);
}
inline void ListFixed64Float::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Float.k)
}
inline void ListFixed64Float::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListFixed64Float::w_size() const {
  return w_.size();
}
inline void ListFixed64Float::clear_w() {
  w_.Clear();
}
inline float ListFixed64Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Float.w)
  return w_.Get(index);
}
inline void ListFixed64Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Float.w)
}
inline void ListFixed64Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFixed64Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFixed64Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Int32

// repeated fixed64 k = 1;
inline int ListFixed64Int32::k_size() const {
  return k_.size();
}
inline void ListFixed64Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Int32.k)
  return k_.Get(index);
}
inline void ListFixed64Int32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Int32.k)
}
inline void ListFixed64Int32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListFixed64Int32::w_size() const {
  return w_.size();
}
inline void ListFixed64Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed64Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Int32.w)
  return w_.Get(index);
}
inline void ListFixed64Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Int32.w)
}
inline void ListFixed64Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed64Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed64Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Int64

// repeated fixed64 k = 1;
inline int ListFixed64Int64::k_size() const {
  return k_.size();
}
inline void ListFixed64Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Int64.k)
  return k_.Get(index);
}
inline void ListFixed64Int64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Int64.k)
}
inline void ListFixed64Int64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListFixed64Int64::w_size() const {
  return w_.size();
}
inline void ListFixed64Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed64Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Int64.w)
  return w_.Get(index);
}
inline void ListFixed64Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Int64.w)
}
inline void ListFixed64Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed64Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed64Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Uint32

// repeated fixed64 k = 1;
inline int ListFixed64Uint32::k_size() const {
  return k_.size();
}
inline void ListFixed64Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Uint32.k)
  return k_.Get(index);
}
inline void ListFixed64Uint32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Uint32.k)
}
inline void ListFixed64Uint32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListFixed64Uint32::w_size() const {
  return w_.size();
}
inline void ListFixed64Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFixed64Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Uint32.w)
  return w_.Get(index);
}
inline void ListFixed64Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Uint32.w)
}
inline void ListFixed64Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed64Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed64Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Uint64

// repeated fixed64 k = 1;
inline int ListFixed64Uint64::k_size() const {
  return k_.size();
}
inline void ListFixed64Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Uint64.k)
  return k_.Get(index);
}
inline void ListFixed64Uint64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Uint64.k)
}
inline void ListFixed64Uint64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListFixed64Uint64::w_size() const {
  return w_.size();
}
inline void ListFixed64Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Uint64.w)
  return w_.Get(index);
}
inline void ListFixed64Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Uint64.w)
}
inline void ListFixed64Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Sint32

// repeated fixed64 k = 1;
inline int ListFixed64Sint32::k_size() const {
  return k_.size();
}
inline void ListFixed64Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sint32.k)
  return k_.Get(index);
}
inline void ListFixed64Sint32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sint32.k)
}
inline void ListFixed64Sint32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListFixed64Sint32::w_size() const {
  return w_.size();
}
inline void ListFixed64Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed64Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sint32.w)
  return w_.Get(index);
}
inline void ListFixed64Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sint32.w)
}
inline void ListFixed64Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed64Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed64Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Sint64

// repeated fixed64 k = 1;
inline int ListFixed64Sint64::k_size() const {
  return k_.size();
}
inline void ListFixed64Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sint64.k)
  return k_.Get(index);
}
inline void ListFixed64Sint64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sint64.k)
}
inline void ListFixed64Sint64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListFixed64Sint64::w_size() const {
  return w_.size();
}
inline void ListFixed64Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed64Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sint64.w)
  return w_.Get(index);
}
inline void ListFixed64Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sint64.w)
}
inline void ListFixed64Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed64Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed64Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Fixed32

// repeated fixed64 k = 1;
inline int ListFixed64Fixed32::k_size() const {
  return k_.size();
}
inline void ListFixed64Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Fixed32.k)
  return k_.Get(index);
}
inline void ListFixed64Fixed32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Fixed32.k)
}
inline void ListFixed64Fixed32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListFixed64Fixed32::w_size() const {
  return w_.size();
}
inline void ListFixed64Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFixed64Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Fixed32.w)
  return w_.Get(index);
}
inline void ListFixed64Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Fixed32.w)
}
inline void ListFixed64Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFixed64Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFixed64Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Fixed64

// repeated fixed64 k = 1;
inline int ListFixed64Fixed64::k_size() const {
  return k_.size();
}
inline void ListFixed64Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Fixed64.k)
  return k_.Get(index);
}
inline void ListFixed64Fixed64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Fixed64.k)
}
inline void ListFixed64Fixed64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListFixed64Fixed64::w_size() const {
  return w_.size();
}
inline void ListFixed64Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Fixed64.w)
  return w_.Get(index);
}
inline void ListFixed64Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Fixed64.w)
}
inline void ListFixed64Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Sfixed32

// repeated fixed64 k = 1;
inline int ListFixed64Sfixed32::k_size() const {
  return k_.size();
}
inline void ListFixed64Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sfixed32.k)
  return k_.Get(index);
}
inline void ListFixed64Sfixed32::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sfixed32.k)
}
inline void ListFixed64Sfixed32::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListFixed64Sfixed32::w_size() const {
  return w_.size();
}
inline void ListFixed64Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFixed64Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sfixed32.w)
  return w_.Get(index);
}
inline void ListFixed64Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sfixed32.w)
}
inline void ListFixed64Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFixed64Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFixed64Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Sfixed64

// repeated fixed64 k = 1;
inline int ListFixed64Sfixed64::k_size() const {
  return k_.size();
}
inline void ListFixed64Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sfixed64.k)
  return k_.Get(index);
}
inline void ListFixed64Sfixed64::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sfixed64.k)
}
inline void ListFixed64Sfixed64::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListFixed64Sfixed64::w_size() const {
  return w_.size();
}
inline void ListFixed64Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFixed64Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Sfixed64.w)
  return w_.Get(index);
}
inline void ListFixed64Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Sfixed64.w)
}
inline void ListFixed64Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFixed64Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFixed64Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Bool

// repeated fixed64 k = 1;
inline int ListFixed64Bool::k_size() const {
  return k_.size();
}
inline void ListFixed64Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Bool.k)
  return k_.Get(index);
}
inline void ListFixed64Bool::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Bool.k)
}
inline void ListFixed64Bool::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListFixed64Bool::w_size() const {
  return w_.size();
}
inline void ListFixed64Bool::clear_w() {
  w_.Clear();
}
inline bool ListFixed64Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Bool.w)
  return w_.Get(index);
}
inline void ListFixed64Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Bool.w)
}
inline void ListFixed64Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListFixed64Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListFixed64Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64String

// repeated fixed64 k = 1;
inline int ListFixed64String::k_size() const {
  return k_.size();
}
inline void ListFixed64String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64String.k)
  return k_.Get(index);
}
inline void ListFixed64String::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64String.k)
}
inline void ListFixed64String::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListFixed64String::w_size() const {
  return w_.size();
}
inline void ListFixed64String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFixed64String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64String.w)
  return w_.Get(index);
}
inline ::std::string* ListFixed64String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFixed64String.w)
  return w_.Mutable(index);
}
inline void ListFixed64String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFixed64String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFixed64String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFixed64String.w)
}
inline void ListFixed64String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFixed64String.w)
}
inline ::std::string* ListFixed64String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFixed64String.w)
  return w_.Add();
}
inline void ListFixed64String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64String.w)
}
#if LANG_CXX11
inline void ListFixed64String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64String.w)
}
#endif
inline void ListFixed64String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFixed64String.w)
}
inline void ListFixed64String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFixed64String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFixed64String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFixed64String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFixed64Bytes

// repeated fixed64 k = 1;
inline int ListFixed64Bytes::k_size() const {
  return k_.size();
}
inline void ListFixed64Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::uint64 ListFixed64Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Bytes.k)
  return k_.Get(index);
}
inline void ListFixed64Bytes::set_k(int index, ::google::protobuf::uint64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Bytes.k)
}
inline void ListFixed64Bytes::add_k(::google::protobuf::uint64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFixed64Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFixed64Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListFixed64Bytes::w_size() const {
  return w_.size();
}
inline void ListFixed64Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFixed64Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFixed64Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListFixed64Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFixed64Bytes.w)
  return w_.Mutable(index);
}
inline void ListFixed64Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFixed64Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFixed64Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFixed64Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFixed64Bytes.w)
}
inline void ListFixed64Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFixed64Bytes.w)
}
inline ::std::string* ListFixed64Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFixed64Bytes.w)
  return w_.Add();
}
inline void ListFixed64Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Bytes.w)
}
#if LANG_CXX11
inline void ListFixed64Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFixed64Bytes.w)
}
#endif
inline void ListFixed64Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFixed64Bytes.w)
}
inline void ListFixed64Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFixed64Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFixed64Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFixed64Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFixed64Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFixed64Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Double

// repeated sfixed32 k = 1;
inline int ListSfixed32Double::k_size() const {
  return k_.size();
}
inline void ListSfixed32Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Double.k)
  return k_.Get(index);
}
inline void ListSfixed32Double::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Double.k)
}
inline void ListSfixed32Double::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListSfixed32Double::w_size() const {
  return w_.size();
}
inline void ListSfixed32Double::clear_w() {
  w_.Clear();
}
inline double ListSfixed32Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Double.w)
  return w_.Get(index);
}
inline void ListSfixed32Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Double.w)
}
inline void ListSfixed32Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListSfixed32Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListSfixed32Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Float

// repeated sfixed32 k = 1;
inline int ListSfixed32Float::k_size() const {
  return k_.size();
}
inline void ListSfixed32Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Float.k)
  return k_.Get(index);
}
inline void ListSfixed32Float::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Float.k)
}
inline void ListSfixed32Float::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListSfixed32Float::w_size() const {
  return w_.size();
}
inline void ListSfixed32Float::clear_w() {
  w_.Clear();
}
inline float ListSfixed32Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Float.w)
  return w_.Get(index);
}
inline void ListSfixed32Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Float.w)
}
inline void ListSfixed32Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListSfixed32Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListSfixed32Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Int32

// repeated sfixed32 k = 1;
inline int ListSfixed32Int32::k_size() const {
  return k_.size();
}
inline void ListSfixed32Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Int32.k)
  return k_.Get(index);
}
inline void ListSfixed32Int32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Int32.k)
}
inline void ListSfixed32Int32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListSfixed32Int32::w_size() const {
  return w_.size();
}
inline void ListSfixed32Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Int32.w)
  return w_.Get(index);
}
inline void ListSfixed32Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Int32.w)
}
inline void ListSfixed32Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Int64

// repeated sfixed32 k = 1;
inline int ListSfixed32Int64::k_size() const {
  return k_.size();
}
inline void ListSfixed32Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Int64.k)
  return k_.Get(index);
}
inline void ListSfixed32Int64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Int64.k)
}
inline void ListSfixed32Int64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListSfixed32Int64::w_size() const {
  return w_.size();
}
inline void ListSfixed32Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed32Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Int64.w)
  return w_.Get(index);
}
inline void ListSfixed32Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Int64.w)
}
inline void ListSfixed32Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed32Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed32Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Uint32

// repeated sfixed32 k = 1;
inline int ListSfixed32Uint32::k_size() const {
  return k_.size();
}
inline void ListSfixed32Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Uint32.k)
  return k_.Get(index);
}
inline void ListSfixed32Uint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Uint32.k)
}
inline void ListSfixed32Uint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListSfixed32Uint32::w_size() const {
  return w_.size();
}
inline void ListSfixed32Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSfixed32Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Uint32.w)
  return w_.Get(index);
}
inline void ListSfixed32Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Uint32.w)
}
inline void ListSfixed32Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSfixed32Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSfixed32Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Uint64

// repeated sfixed32 k = 1;
inline int ListSfixed32Uint64::k_size() const {
  return k_.size();
}
inline void ListSfixed32Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Uint64.k)
  return k_.Get(index);
}
inline void ListSfixed32Uint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Uint64.k)
}
inline void ListSfixed32Uint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListSfixed32Uint64::w_size() const {
  return w_.size();
}
inline void ListSfixed32Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSfixed32Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Uint64.w)
  return w_.Get(index);
}
inline void ListSfixed32Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Uint64.w)
}
inline void ListSfixed32Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSfixed32Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSfixed32Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Sint32

// repeated sfixed32 k = 1;
inline int ListSfixed32Sint32::k_size() const {
  return k_.size();
}
inline void ListSfixed32Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sint32.k)
  return k_.Get(index);
}
inline void ListSfixed32Sint32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sint32.k)
}
inline void ListSfixed32Sint32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListSfixed32Sint32::w_size() const {
  return w_.size();
}
inline void ListSfixed32Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sint32.w)
  return w_.Get(index);
}
inline void ListSfixed32Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sint32.w)
}
inline void ListSfixed32Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Sint64

// repeated sfixed32 k = 1;
inline int ListSfixed32Sint64::k_size() const {
  return k_.size();
}
inline void ListSfixed32Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sint64.k)
  return k_.Get(index);
}
inline void ListSfixed32Sint64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sint64.k)
}
inline void ListSfixed32Sint64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListSfixed32Sint64::w_size() const {
  return w_.size();
}
inline void ListSfixed32Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed32Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sint64.w)
  return w_.Get(index);
}
inline void ListSfixed32Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sint64.w)
}
inline void ListSfixed32Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed32Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed32Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Fixed32

// repeated sfixed32 k = 1;
inline int ListSfixed32Fixed32::k_size() const {
  return k_.size();
}
inline void ListSfixed32Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Fixed32.k)
  return k_.Get(index);
}
inline void ListSfixed32Fixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Fixed32.k)
}
inline void ListSfixed32Fixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListSfixed32Fixed32::w_size() const {
  return w_.size();
}
inline void ListSfixed32Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSfixed32Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Fixed32.w)
  return w_.Get(index);
}
inline void ListSfixed32Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Fixed32.w)
}
inline void ListSfixed32Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSfixed32Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSfixed32Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Fixed64

// repeated sfixed32 k = 1;
inline int ListSfixed32Fixed64::k_size() const {
  return k_.size();
}
inline void ListSfixed32Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Fixed64.k)
  return k_.Get(index);
}
inline void ListSfixed32Fixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Fixed64.k)
}
inline void ListSfixed32Fixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListSfixed32Fixed64::w_size() const {
  return w_.size();
}
inline void ListSfixed32Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSfixed32Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Fixed64.w)
  return w_.Get(index);
}
inline void ListSfixed32Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Fixed64.w)
}
inline void ListSfixed32Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSfixed32Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSfixed32Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Sfixed32

// repeated sfixed32 k = 1;
inline int ListSfixed32Sfixed32::k_size() const {
  return k_.size();
}
inline void ListSfixed32Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sfixed32.k)
  return k_.Get(index);
}
inline void ListSfixed32Sfixed32::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sfixed32.k)
}
inline void ListSfixed32Sfixed32::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListSfixed32Sfixed32::w_size() const {
  return w_.size();
}
inline void ListSfixed32Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sfixed32.w)
  return w_.Get(index);
}
inline void ListSfixed32Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sfixed32.w)
}
inline void ListSfixed32Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Sfixed64

// repeated sfixed32 k = 1;
inline int ListSfixed32Sfixed64::k_size() const {
  return k_.size();
}
inline void ListSfixed32Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sfixed64.k)
  return k_.Get(index);
}
inline void ListSfixed32Sfixed64::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sfixed64.k)
}
inline void ListSfixed32Sfixed64::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListSfixed32Sfixed64::w_size() const {
  return w_.size();
}
inline void ListSfixed32Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed32Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Sfixed64.w)
  return w_.Get(index);
}
inline void ListSfixed32Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Sfixed64.w)
}
inline void ListSfixed32Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed32Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed32Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Bool

// repeated sfixed32 k = 1;
inline int ListSfixed32Bool::k_size() const {
  return k_.size();
}
inline void ListSfixed32Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Bool.k)
  return k_.Get(index);
}
inline void ListSfixed32Bool::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Bool.k)
}
inline void ListSfixed32Bool::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListSfixed32Bool::w_size() const {
  return w_.size();
}
inline void ListSfixed32Bool::clear_w() {
  w_.Clear();
}
inline bool ListSfixed32Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Bool.w)
  return w_.Get(index);
}
inline void ListSfixed32Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Bool.w)
}
inline void ListSfixed32Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListSfixed32Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListSfixed32Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32String

// repeated sfixed32 k = 1;
inline int ListSfixed32String::k_size() const {
  return k_.size();
}
inline void ListSfixed32String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32String.k)
  return k_.Get(index);
}
inline void ListSfixed32String::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32String.k)
}
inline void ListSfixed32String::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListSfixed32String::w_size() const {
  return w_.size();
}
inline void ListSfixed32String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSfixed32String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32String.w)
  return w_.Get(index);
}
inline ::std::string* ListSfixed32String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSfixed32String.w)
  return w_.Mutable(index);
}
inline void ListSfixed32String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSfixed32String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSfixed32String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSfixed32String.w)
}
inline void ListSfixed32String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSfixed32String.w)
}
inline ::std::string* ListSfixed32String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSfixed32String.w)
  return w_.Add();
}
inline void ListSfixed32String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32String.w)
}
#if LANG_CXX11
inline void ListSfixed32String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32String.w)
}
#endif
inline void ListSfixed32String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSfixed32String.w)
}
inline void ListSfixed32String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSfixed32String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSfixed32String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSfixed32String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed32Bytes

// repeated sfixed32 k = 1;
inline int ListSfixed32Bytes::k_size() const {
  return k_.size();
}
inline void ListSfixed32Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int32 ListSfixed32Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Bytes.k)
  return k_.Get(index);
}
inline void ListSfixed32Bytes::set_k(int index, ::google::protobuf::int32 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Bytes.k)
}
inline void ListSfixed32Bytes::add_k(::google::protobuf::int32 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed32Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed32Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListSfixed32Bytes::w_size() const {
  return w_.size();
}
inline void ListSfixed32Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSfixed32Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed32Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListSfixed32Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSfixed32Bytes.w)
  return w_.Mutable(index);
}
inline void ListSfixed32Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSfixed32Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed32Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSfixed32Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSfixed32Bytes.w)
}
inline void ListSfixed32Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSfixed32Bytes.w)
}
inline ::std::string* ListSfixed32Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSfixed32Bytes.w)
  return w_.Add();
}
inline void ListSfixed32Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Bytes.w)
}
#if LANG_CXX11
inline void ListSfixed32Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed32Bytes.w)
}
#endif
inline void ListSfixed32Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSfixed32Bytes.w)
}
inline void ListSfixed32Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSfixed32Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSfixed32Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed32Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSfixed32Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed32Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Double

// repeated sfixed64 k = 1;
inline int ListSfixed64Double::k_size() const {
  return k_.size();
}
inline void ListSfixed64Double::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Double::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Double.k)
  return k_.Get(index);
}
inline void ListSfixed64Double::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Double.k)
}
inline void ListSfixed64Double::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Double.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Double::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Double.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Double::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Double.k)
  return &k_;
}

// repeated double w = 2;
inline int ListSfixed64Double::w_size() const {
  return w_.size();
}
inline void ListSfixed64Double::clear_w() {
  w_.Clear();
}
inline double ListSfixed64Double::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Double.w)
  return w_.Get(index);
}
inline void ListSfixed64Double::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Double.w)
}
inline void ListSfixed64Double::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Double.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListSfixed64Double::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Double.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListSfixed64Double::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Double.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Float

// repeated sfixed64 k = 1;
inline int ListSfixed64Float::k_size() const {
  return k_.size();
}
inline void ListSfixed64Float::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Float::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Float.k)
  return k_.Get(index);
}
inline void ListSfixed64Float::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Float.k)
}
inline void ListSfixed64Float::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Float.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Float::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Float.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Float::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Float.k)
  return &k_;
}

// repeated float w = 2;
inline int ListSfixed64Float::w_size() const {
  return w_.size();
}
inline void ListSfixed64Float::clear_w() {
  w_.Clear();
}
inline float ListSfixed64Float::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Float.w)
  return w_.Get(index);
}
inline void ListSfixed64Float::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Float.w)
}
inline void ListSfixed64Float::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Float.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListSfixed64Float::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Float.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListSfixed64Float::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Float.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Int32

// repeated sfixed64 k = 1;
inline int ListSfixed64Int32::k_size() const {
  return k_.size();
}
inline void ListSfixed64Int32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Int32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Int32.k)
  return k_.Get(index);
}
inline void ListSfixed64Int32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Int32.k)
}
inline void ListSfixed64Int32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Int32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Int32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Int32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Int32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Int32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListSfixed64Int32::w_size() const {
  return w_.size();
}
inline void ListSfixed64Int32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed64Int32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Int32.w)
  return w_.Get(index);
}
inline void ListSfixed64Int32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Int32.w)
}
inline void ListSfixed64Int32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Int32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed64Int32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Int32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed64Int32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Int32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Int64

// repeated sfixed64 k = 1;
inline int ListSfixed64Int64::k_size() const {
  return k_.size();
}
inline void ListSfixed64Int64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Int64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Int64.k)
  return k_.Get(index);
}
inline void ListSfixed64Int64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Int64.k)
}
inline void ListSfixed64Int64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Int64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Int64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Int64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Int64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Int64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListSfixed64Int64::w_size() const {
  return w_.size();
}
inline void ListSfixed64Int64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Int64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Int64.w)
  return w_.Get(index);
}
inline void ListSfixed64Int64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Int64.w)
}
inline void ListSfixed64Int64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Int64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Int64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Int64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Int64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Int64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Uint32

// repeated sfixed64 k = 1;
inline int ListSfixed64Uint32::k_size() const {
  return k_.size();
}
inline void ListSfixed64Uint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Uint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Uint32.k)
  return k_.Get(index);
}
inline void ListSfixed64Uint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Uint32.k)
}
inline void ListSfixed64Uint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Uint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Uint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Uint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Uint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Uint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListSfixed64Uint32::w_size() const {
  return w_.size();
}
inline void ListSfixed64Uint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSfixed64Uint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Uint32.w)
  return w_.Get(index);
}
inline void ListSfixed64Uint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Uint32.w)
}
inline void ListSfixed64Uint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Uint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSfixed64Uint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Uint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSfixed64Uint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Uint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Uint64

// repeated sfixed64 k = 1;
inline int ListSfixed64Uint64::k_size() const {
  return k_.size();
}
inline void ListSfixed64Uint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Uint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Uint64.k)
  return k_.Get(index);
}
inline void ListSfixed64Uint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Uint64.k)
}
inline void ListSfixed64Uint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Uint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Uint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Uint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Uint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Uint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListSfixed64Uint64::w_size() const {
  return w_.size();
}
inline void ListSfixed64Uint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSfixed64Uint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Uint64.w)
  return w_.Get(index);
}
inline void ListSfixed64Uint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Uint64.w)
}
inline void ListSfixed64Uint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Uint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSfixed64Uint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Uint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSfixed64Uint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Uint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Sint32

// repeated sfixed64 k = 1;
inline int ListSfixed64Sint32::k_size() const {
  return k_.size();
}
inline void ListSfixed64Sint32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sint32.k)
  return k_.Get(index);
}
inline void ListSfixed64Sint32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sint32.k)
}
inline void ListSfixed64Sint32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sint32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListSfixed64Sint32::w_size() const {
  return w_.size();
}
inline void ListSfixed64Sint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed64Sint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sint32.w)
  return w_.Get(index);
}
inline void ListSfixed64Sint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sint32.w)
}
inline void ListSfixed64Sint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed64Sint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed64Sint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Sint64

// repeated sfixed64 k = 1;
inline int ListSfixed64Sint64::k_size() const {
  return k_.size();
}
inline void ListSfixed64Sint64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sint64.k)
  return k_.Get(index);
}
inline void ListSfixed64Sint64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sint64.k)
}
inline void ListSfixed64Sint64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sint64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListSfixed64Sint64::w_size() const {
  return w_.size();
}
inline void ListSfixed64Sint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sint64.w)
  return w_.Get(index);
}
inline void ListSfixed64Sint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sint64.w)
}
inline void ListSfixed64Sint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Fixed32

// repeated sfixed64 k = 1;
inline int ListSfixed64Fixed32::k_size() const {
  return k_.size();
}
inline void ListSfixed64Fixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Fixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Fixed32.k)
  return k_.Get(index);
}
inline void ListSfixed64Fixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Fixed32.k)
}
inline void ListSfixed64Fixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Fixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Fixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Fixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Fixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Fixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListSfixed64Fixed32::w_size() const {
  return w_.size();
}
inline void ListSfixed64Fixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListSfixed64Fixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Fixed32.w)
  return w_.Get(index);
}
inline void ListSfixed64Fixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Fixed32.w)
}
inline void ListSfixed64Fixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Fixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListSfixed64Fixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Fixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListSfixed64Fixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Fixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Fixed64

// repeated sfixed64 k = 1;
inline int ListSfixed64Fixed64::k_size() const {
  return k_.size();
}
inline void ListSfixed64Fixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Fixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Fixed64.k)
  return k_.Get(index);
}
inline void ListSfixed64Fixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Fixed64.k)
}
inline void ListSfixed64Fixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Fixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Fixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Fixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Fixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Fixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListSfixed64Fixed64::w_size() const {
  return w_.size();
}
inline void ListSfixed64Fixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListSfixed64Fixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Fixed64.w)
  return w_.Get(index);
}
inline void ListSfixed64Fixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Fixed64.w)
}
inline void ListSfixed64Fixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Fixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListSfixed64Fixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Fixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListSfixed64Fixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Fixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Sfixed32

// repeated sfixed64 k = 1;
inline int ListSfixed64Sfixed32::k_size() const {
  return k_.size();
}
inline void ListSfixed64Sfixed32::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sfixed32.k)
  return k_.Get(index);
}
inline void ListSfixed64Sfixed32::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sfixed32.k)
}
inline void ListSfixed64Sfixed32::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sfixed32.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListSfixed64Sfixed32::w_size() const {
  return w_.size();
}
inline void ListSfixed64Sfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListSfixed64Sfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sfixed32.w)
  return w_.Get(index);
}
inline void ListSfixed64Sfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sfixed32.w)
}
inline void ListSfixed64Sfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListSfixed64Sfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListSfixed64Sfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Sfixed64

// repeated sfixed64 k = 1;
inline int ListSfixed64Sfixed64::k_size() const {
  return k_.size();
}
inline void ListSfixed64Sfixed64::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sfixed64.k)
  return k_.Get(index);
}
inline void ListSfixed64Sfixed64::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sfixed64.k)
}
inline void ListSfixed64Sfixed64::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sfixed64.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListSfixed64Sfixed64::w_size() const {
  return w_.size();
}
inline void ListSfixed64Sfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Sfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Sfixed64.w)
  return w_.Get(index);
}
inline void ListSfixed64Sfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Sfixed64.w)
}
inline void ListSfixed64Sfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Sfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Sfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Sfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Sfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Sfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Bool

// repeated sfixed64 k = 1;
inline int ListSfixed64Bool::k_size() const {
  return k_.size();
}
inline void ListSfixed64Bool::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Bool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Bool.k)
  return k_.Get(index);
}
inline void ListSfixed64Bool::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Bool.k)
}
inline void ListSfixed64Bool::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Bool.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Bool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Bool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Bool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Bool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListSfixed64Bool::w_size() const {
  return w_.size();
}
inline void ListSfixed64Bool::clear_w() {
  w_.Clear();
}
inline bool ListSfixed64Bool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Bool.w)
  return w_.Get(index);
}
inline void ListSfixed64Bool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Bool.w)
}
inline void ListSfixed64Bool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Bool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListSfixed64Bool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Bool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListSfixed64Bool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Bool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64String

// repeated sfixed64 k = 1;
inline int ListSfixed64String::k_size() const {
  return k_.size();
}
inline void ListSfixed64String::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64String::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64String.k)
  return k_.Get(index);
}
inline void ListSfixed64String::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64String.k)
}
inline void ListSfixed64String::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64String.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64String::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64String.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64String::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64String.k)
  return &k_;
}

// repeated string w = 2;
inline int ListSfixed64String::w_size() const {
  return w_.size();
}
inline void ListSfixed64String::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSfixed64String::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64String.w)
  return w_.Get(index);
}
inline ::std::string* ListSfixed64String::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSfixed64String.w)
  return w_.Mutable(index);
}
inline void ListSfixed64String::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64String.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSfixed64String::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64String.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSfixed64String::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSfixed64String.w)
}
inline void ListSfixed64String::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSfixed64String.w)
}
inline ::std::string* ListSfixed64String::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSfixed64String.w)
  return w_.Add();
}
inline void ListSfixed64String::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64String.w)
}
#if LANG_CXX11
inline void ListSfixed64String::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64String.w)
}
#endif
inline void ListSfixed64String::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSfixed64String.w)
}
inline void ListSfixed64String::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSfixed64String.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSfixed64String::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64String.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSfixed64String::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64String.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListSfixed64Bytes

// repeated sfixed64 k = 1;
inline int ListSfixed64Bytes::k_size() const {
  return k_.size();
}
inline void ListSfixed64Bytes::clear_k() {
  k_.Clear();
}
inline ::google::protobuf::int64 ListSfixed64Bytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Bytes.k)
  return k_.Get(index);
}
inline void ListSfixed64Bytes::set_k(int index, ::google::protobuf::int64 value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Bytes.k)
}
inline void ListSfixed64Bytes::add_k(::google::protobuf::int64 value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Bytes.k)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListSfixed64Bytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Bytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListSfixed64Bytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Bytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListSfixed64Bytes::w_size() const {
  return w_.size();
}
inline void ListSfixed64Bytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListSfixed64Bytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListSfixed64Bytes.w)
  return w_.Get(index);
}
inline ::std::string* ListSfixed64Bytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListSfixed64Bytes.w)
  return w_.Mutable(index);
}
inline void ListSfixed64Bytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Bytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListSfixed64Bytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListSfixed64Bytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListSfixed64Bytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListSfixed64Bytes.w)
}
inline void ListSfixed64Bytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListSfixed64Bytes.w)
}
inline ::std::string* ListSfixed64Bytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListSfixed64Bytes.w)
  return w_.Add();
}
inline void ListSfixed64Bytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Bytes.w)
}
#if LANG_CXX11
inline void ListSfixed64Bytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListSfixed64Bytes.w)
}
#endif
inline void ListSfixed64Bytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListSfixed64Bytes.w)
}
inline void ListSfixed64Bytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListSfixed64Bytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListSfixed64Bytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListSfixed64Bytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListSfixed64Bytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListSfixed64Bytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleDouble

// repeated double k = 1;
inline int ListDoubleDouble::k_size() const {
  return k_.size();
}
inline void ListDoubleDouble::clear_k() {
  k_.Clear();
}
inline double ListDoubleDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleDouble.k)
  return k_.Get(index);
}
inline void ListDoubleDouble::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleDouble.k)
}
inline void ListDoubleDouble::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleDouble.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleDouble.k)
  return &k_;
}

// repeated double w = 2;
inline int ListDoubleDouble::w_size() const {
  return w_.size();
}
inline void ListDoubleDouble::clear_w() {
  w_.Clear();
}
inline double ListDoubleDouble::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleDouble.w)
  return w_.Get(index);
}
inline void ListDoubleDouble::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleDouble.w)
}
inline void ListDoubleDouble::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleDouble.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleDouble::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleDouble.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleDouble::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleDouble.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleFloat

// repeated double k = 1;
inline int ListDoubleFloat::k_size() const {
  return k_.size();
}
inline void ListDoubleFloat::clear_k() {
  k_.Clear();
}
inline double ListDoubleFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFloat.k)
  return k_.Get(index);
}
inline void ListDoubleFloat::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFloat.k)
}
inline void ListDoubleFloat::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFloat.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFloat.k)
  return &k_;
}

// repeated float w = 2;
inline int ListDoubleFloat::w_size() const {
  return w_.size();
}
inline void ListDoubleFloat::clear_w() {
  w_.Clear();
}
inline float ListDoubleFloat::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFloat.w)
  return w_.Get(index);
}
inline void ListDoubleFloat::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFloat.w)
}
inline void ListDoubleFloat::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFloat.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListDoubleFloat::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFloat.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListDoubleFloat::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFloat.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleInt32

// repeated double k = 1;
inline int ListDoubleInt32::k_size() const {
  return k_.size();
}
inline void ListDoubleInt32::clear_k() {
  k_.Clear();
}
inline double ListDoubleInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleInt32.k)
  return k_.Get(index);
}
inline void ListDoubleInt32::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleInt32.k)
}
inline void ListDoubleInt32::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleInt32.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleInt32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListDoubleInt32::w_size() const {
  return w_.size();
}
inline void ListDoubleInt32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListDoubleInt32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleInt32.w)
  return w_.Get(index);
}
inline void ListDoubleInt32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleInt32.w)
}
inline void ListDoubleInt32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleInt32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListDoubleInt32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleInt32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListDoubleInt32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleInt32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleInt64

// repeated double k = 1;
inline int ListDoubleInt64::k_size() const {
  return k_.size();
}
inline void ListDoubleInt64::clear_k() {
  k_.Clear();
}
inline double ListDoubleInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleInt64.k)
  return k_.Get(index);
}
inline void ListDoubleInt64::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleInt64.k)
}
inline void ListDoubleInt64::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleInt64.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleInt64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListDoubleInt64::w_size() const {
  return w_.size();
}
inline void ListDoubleInt64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListDoubleInt64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleInt64.w)
  return w_.Get(index);
}
inline void ListDoubleInt64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleInt64.w)
}
inline void ListDoubleInt64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleInt64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListDoubleInt64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleInt64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListDoubleInt64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleInt64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleUint32

// repeated double k = 1;
inline int ListDoubleUint32::k_size() const {
  return k_.size();
}
inline void ListDoubleUint32::clear_k() {
  k_.Clear();
}
inline double ListDoubleUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleUint32.k)
  return k_.Get(index);
}
inline void ListDoubleUint32::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleUint32.k)
}
inline void ListDoubleUint32::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleUint32.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleUint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListDoubleUint32::w_size() const {
  return w_.size();
}
inline void ListDoubleUint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListDoubleUint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleUint32.w)
  return w_.Get(index);
}
inline void ListDoubleUint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleUint32.w)
}
inline void ListDoubleUint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleUint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListDoubleUint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleUint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListDoubleUint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleUint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleUint64

// repeated double k = 1;
inline int ListDoubleUint64::k_size() const {
  return k_.size();
}
inline void ListDoubleUint64::clear_k() {
  k_.Clear();
}
inline double ListDoubleUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleUint64.k)
  return k_.Get(index);
}
inline void ListDoubleUint64::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleUint64.k)
}
inline void ListDoubleUint64::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleUint64.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleUint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListDoubleUint64::w_size() const {
  return w_.size();
}
inline void ListDoubleUint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListDoubleUint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleUint64.w)
  return w_.Get(index);
}
inline void ListDoubleUint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleUint64.w)
}
inline void ListDoubleUint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleUint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListDoubleUint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleUint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListDoubleUint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleUint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleSint32

// repeated double k = 1;
inline int ListDoubleSint32::k_size() const {
  return k_.size();
}
inline void ListDoubleSint32::clear_k() {
  k_.Clear();
}
inline double ListDoubleSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSint32.k)
  return k_.Get(index);
}
inline void ListDoubleSint32::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSint32.k)
}
inline void ListDoubleSint32::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSint32.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListDoubleSint32::w_size() const {
  return w_.size();
}
inline void ListDoubleSint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListDoubleSint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSint32.w)
  return w_.Get(index);
}
inline void ListDoubleSint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSint32.w)
}
inline void ListDoubleSint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListDoubleSint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListDoubleSint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleSint64

// repeated double k = 1;
inline int ListDoubleSint64::k_size() const {
  return k_.size();
}
inline void ListDoubleSint64::clear_k() {
  k_.Clear();
}
inline double ListDoubleSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSint64.k)
  return k_.Get(index);
}
inline void ListDoubleSint64::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSint64.k)
}
inline void ListDoubleSint64::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSint64.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListDoubleSint64::w_size() const {
  return w_.size();
}
inline void ListDoubleSint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListDoubleSint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSint64.w)
  return w_.Get(index);
}
inline void ListDoubleSint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSint64.w)
}
inline void ListDoubleSint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListDoubleSint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListDoubleSint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleFixed32

// repeated double k = 1;
inline int ListDoubleFixed32::k_size() const {
  return k_.size();
}
inline void ListDoubleFixed32::clear_k() {
  k_.Clear();
}
inline double ListDoubleFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFixed32.k)
  return k_.Get(index);
}
inline void ListDoubleFixed32::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFixed32.k)
}
inline void ListDoubleFixed32::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFixed32.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListDoubleFixed32::w_size() const {
  return w_.size();
}
inline void ListDoubleFixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListDoubleFixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFixed32.w)
  return w_.Get(index);
}
inline void ListDoubleFixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFixed32.w)
}
inline void ListDoubleFixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListDoubleFixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListDoubleFixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleFixed64

// repeated double k = 1;
inline int ListDoubleFixed64::k_size() const {
  return k_.size();
}
inline void ListDoubleFixed64::clear_k() {
  k_.Clear();
}
inline double ListDoubleFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFixed64.k)
  return k_.Get(index);
}
inline void ListDoubleFixed64::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFixed64.k)
}
inline void ListDoubleFixed64::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFixed64.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListDoubleFixed64::w_size() const {
  return w_.size();
}
inline void ListDoubleFixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListDoubleFixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleFixed64.w)
  return w_.Get(index);
}
inline void ListDoubleFixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleFixed64.w)
}
inline void ListDoubleFixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleFixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListDoubleFixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleFixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListDoubleFixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleFixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleSfixed32

// repeated double k = 1;
inline int ListDoubleSfixed32::k_size() const {
  return k_.size();
}
inline void ListDoubleSfixed32::clear_k() {
  k_.Clear();
}
inline double ListDoubleSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSfixed32.k)
  return k_.Get(index);
}
inline void ListDoubleSfixed32::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSfixed32.k)
}
inline void ListDoubleSfixed32::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSfixed32.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListDoubleSfixed32::w_size() const {
  return w_.size();
}
inline void ListDoubleSfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListDoubleSfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSfixed32.w)
  return w_.Get(index);
}
inline void ListDoubleSfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSfixed32.w)
}
inline void ListDoubleSfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListDoubleSfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListDoubleSfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleSfixed64

// repeated double k = 1;
inline int ListDoubleSfixed64::k_size() const {
  return k_.size();
}
inline void ListDoubleSfixed64::clear_k() {
  k_.Clear();
}
inline double ListDoubleSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSfixed64.k)
  return k_.Get(index);
}
inline void ListDoubleSfixed64::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSfixed64.k)
}
inline void ListDoubleSfixed64::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSfixed64.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListDoubleSfixed64::w_size() const {
  return w_.size();
}
inline void ListDoubleSfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListDoubleSfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleSfixed64.w)
  return w_.Get(index);
}
inline void ListDoubleSfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleSfixed64.w)
}
inline void ListDoubleSfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleSfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListDoubleSfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleSfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListDoubleSfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleSfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleBool

// repeated double k = 1;
inline int ListDoubleBool::k_size() const {
  return k_.size();
}
inline void ListDoubleBool::clear_k() {
  k_.Clear();
}
inline double ListDoubleBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleBool.k)
  return k_.Get(index);
}
inline void ListDoubleBool::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleBool.k)
}
inline void ListDoubleBool::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleBool.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleBool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListDoubleBool::w_size() const {
  return w_.size();
}
inline void ListDoubleBool::clear_w() {
  w_.Clear();
}
inline bool ListDoubleBool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleBool.w)
  return w_.Get(index);
}
inline void ListDoubleBool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleBool.w)
}
inline void ListDoubleBool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleBool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListDoubleBool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleBool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListDoubleBool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleBool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleString

// repeated double k = 1;
inline int ListDoubleString::k_size() const {
  return k_.size();
}
inline void ListDoubleString::clear_k() {
  k_.Clear();
}
inline double ListDoubleString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleString.k)
  return k_.Get(index);
}
inline void ListDoubleString::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleString.k)
}
inline void ListDoubleString::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleString.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleString.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleString.k)
  return &k_;
}

// repeated string w = 2;
inline int ListDoubleString::w_size() const {
  return w_.size();
}
inline void ListDoubleString::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListDoubleString::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleString.w)
  return w_.Get(index);
}
inline ::std::string* ListDoubleString::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListDoubleString.w)
  return w_.Mutable(index);
}
inline void ListDoubleString::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleString.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListDoubleString::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleString.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListDoubleString::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListDoubleString.w)
}
inline void ListDoubleString::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListDoubleString.w)
}
inline ::std::string* ListDoubleString::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListDoubleString.w)
  return w_.Add();
}
inline void ListDoubleString::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleString.w)
}
#if LANG_CXX11
inline void ListDoubleString::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleString.w)
}
#endif
inline void ListDoubleString::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListDoubleString.w)
}
inline void ListDoubleString::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListDoubleString.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListDoubleString::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleString.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListDoubleString::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleString.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListDoubleBytes

// repeated double k = 1;
inline int ListDoubleBytes::k_size() const {
  return k_.size();
}
inline void ListDoubleBytes::clear_k() {
  k_.Clear();
}
inline double ListDoubleBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleBytes.k)
  return k_.Get(index);
}
inline void ListDoubleBytes::set_k(int index, double value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleBytes.k)
}
inline void ListDoubleBytes::add_k(double value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleBytes.k)
}
inline const ::google::protobuf::RepeatedField< double >&
ListDoubleBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< double >*
ListDoubleBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleBytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListDoubleBytes::w_size() const {
  return w_.size();
}
inline void ListDoubleBytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListDoubleBytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListDoubleBytes.w)
  return w_.Get(index);
}
inline ::std::string* ListDoubleBytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListDoubleBytes.w)
  return w_.Mutable(index);
}
inline void ListDoubleBytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleBytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListDoubleBytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListDoubleBytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListDoubleBytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListDoubleBytes.w)
}
inline void ListDoubleBytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListDoubleBytes.w)
}
inline ::std::string* ListDoubleBytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListDoubleBytes.w)
  return w_.Add();
}
inline void ListDoubleBytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleBytes.w)
}
#if LANG_CXX11
inline void ListDoubleBytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListDoubleBytes.w)
}
#endif
inline void ListDoubleBytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListDoubleBytes.w)
}
inline void ListDoubleBytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListDoubleBytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListDoubleBytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListDoubleBytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListDoubleBytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListDoubleBytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatDouble

// repeated float k = 1;
inline int ListFloatDouble::k_size() const {
  return k_.size();
}
inline void ListFloatDouble::clear_k() {
  k_.Clear();
}
inline float ListFloatDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatDouble.k)
  return k_.Get(index);
}
inline void ListFloatDouble::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatDouble.k)
}
inline void ListFloatDouble::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatDouble.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatDouble.k)
  return &k_;
}

// repeated double w = 2;
inline int ListFloatDouble::w_size() const {
  return w_.size();
}
inline void ListFloatDouble::clear_w() {
  w_.Clear();
}
inline double ListFloatDouble::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatDouble.w)
  return w_.Get(index);
}
inline void ListFloatDouble::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatDouble.w)
}
inline void ListFloatDouble::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatDouble.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListFloatDouble::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatDouble.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListFloatDouble::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatDouble.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatFloat

// repeated float k = 1;
inline int ListFloatFloat::k_size() const {
  return k_.size();
}
inline void ListFloatFloat::clear_k() {
  k_.Clear();
}
inline float ListFloatFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFloat.k)
  return k_.Get(index);
}
inline void ListFloatFloat::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFloat.k)
}
inline void ListFloatFloat::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFloat.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFloat.k)
  return &k_;
}

// repeated float w = 2;
inline int ListFloatFloat::w_size() const {
  return w_.size();
}
inline void ListFloatFloat::clear_w() {
  w_.Clear();
}
inline float ListFloatFloat::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFloat.w)
  return w_.Get(index);
}
inline void ListFloatFloat::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFloat.w)
}
inline void ListFloatFloat::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFloat.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatFloat::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFloat.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatFloat::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFloat.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatInt32

// repeated float k = 1;
inline int ListFloatInt32::k_size() const {
  return k_.size();
}
inline void ListFloatInt32::clear_k() {
  k_.Clear();
}
inline float ListFloatInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatInt32.k)
  return k_.Get(index);
}
inline void ListFloatInt32::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatInt32.k)
}
inline void ListFloatInt32::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatInt32.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatInt32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListFloatInt32::w_size() const {
  return w_.size();
}
inline void ListFloatInt32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFloatInt32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatInt32.w)
  return w_.Get(index);
}
inline void ListFloatInt32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatInt32.w)
}
inline void ListFloatInt32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatInt32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFloatInt32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatInt32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFloatInt32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatInt32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatInt64

// repeated float k = 1;
inline int ListFloatInt64::k_size() const {
  return k_.size();
}
inline void ListFloatInt64::clear_k() {
  k_.Clear();
}
inline float ListFloatInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatInt64.k)
  return k_.Get(index);
}
inline void ListFloatInt64::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatInt64.k)
}
inline void ListFloatInt64::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatInt64.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatInt64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListFloatInt64::w_size() const {
  return w_.size();
}
inline void ListFloatInt64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFloatInt64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatInt64.w)
  return w_.Get(index);
}
inline void ListFloatInt64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatInt64.w)
}
inline void ListFloatInt64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatInt64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFloatInt64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatInt64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFloatInt64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatInt64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatUint32

// repeated float k = 1;
inline int ListFloatUint32::k_size() const {
  return k_.size();
}
inline void ListFloatUint32::clear_k() {
  k_.Clear();
}
inline float ListFloatUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatUint32.k)
  return k_.Get(index);
}
inline void ListFloatUint32::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatUint32.k)
}
inline void ListFloatUint32::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatUint32.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatUint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListFloatUint32::w_size() const {
  return w_.size();
}
inline void ListFloatUint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFloatUint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatUint32.w)
  return w_.Get(index);
}
inline void ListFloatUint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatUint32.w)
}
inline void ListFloatUint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatUint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFloatUint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatUint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFloatUint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatUint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatUint64

// repeated float k = 1;
inline int ListFloatUint64::k_size() const {
  return k_.size();
}
inline void ListFloatUint64::clear_k() {
  k_.Clear();
}
inline float ListFloatUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatUint64.k)
  return k_.Get(index);
}
inline void ListFloatUint64::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatUint64.k)
}
inline void ListFloatUint64::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatUint64.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatUint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListFloatUint64::w_size() const {
  return w_.size();
}
inline void ListFloatUint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFloatUint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatUint64.w)
  return w_.Get(index);
}
inline void ListFloatUint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatUint64.w)
}
inline void ListFloatUint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatUint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFloatUint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatUint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFloatUint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatUint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatSint32

// repeated float k = 1;
inline int ListFloatSint32::k_size() const {
  return k_.size();
}
inline void ListFloatSint32::clear_k() {
  k_.Clear();
}
inline float ListFloatSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSint32.k)
  return k_.Get(index);
}
inline void ListFloatSint32::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSint32.k)
}
inline void ListFloatSint32::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSint32.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListFloatSint32::w_size() const {
  return w_.size();
}
inline void ListFloatSint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFloatSint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSint32.w)
  return w_.Get(index);
}
inline void ListFloatSint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSint32.w)
}
inline void ListFloatSint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFloatSint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFloatSint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatSint64

// repeated float k = 1;
inline int ListFloatSint64::k_size() const {
  return k_.size();
}
inline void ListFloatSint64::clear_k() {
  k_.Clear();
}
inline float ListFloatSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSint64.k)
  return k_.Get(index);
}
inline void ListFloatSint64::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSint64.k)
}
inline void ListFloatSint64::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSint64.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListFloatSint64::w_size() const {
  return w_.size();
}
inline void ListFloatSint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFloatSint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSint64.w)
  return w_.Get(index);
}
inline void ListFloatSint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSint64.w)
}
inline void ListFloatSint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFloatSint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFloatSint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatFixed32

// repeated float k = 1;
inline int ListFloatFixed32::k_size() const {
  return k_.size();
}
inline void ListFloatFixed32::clear_k() {
  k_.Clear();
}
inline float ListFloatFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFixed32.k)
  return k_.Get(index);
}
inline void ListFloatFixed32::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFixed32.k)
}
inline void ListFloatFixed32::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFixed32.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListFloatFixed32::w_size() const {
  return w_.size();
}
inline void ListFloatFixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListFloatFixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFixed32.w)
  return w_.Get(index);
}
inline void ListFloatFixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFixed32.w)
}
inline void ListFloatFixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListFloatFixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListFloatFixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatFixed64

// repeated float k = 1;
inline int ListFloatFixed64::k_size() const {
  return k_.size();
}
inline void ListFloatFixed64::clear_k() {
  k_.Clear();
}
inline float ListFloatFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFixed64.k)
  return k_.Get(index);
}
inline void ListFloatFixed64::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFixed64.k)
}
inline void ListFloatFixed64::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFixed64.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListFloatFixed64::w_size() const {
  return w_.size();
}
inline void ListFloatFixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListFloatFixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatFixed64.w)
  return w_.Get(index);
}
inline void ListFloatFixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatFixed64.w)
}
inline void ListFloatFixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatFixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListFloatFixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatFixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListFloatFixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatFixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatSfixed32

// repeated float k = 1;
inline int ListFloatSfixed32::k_size() const {
  return k_.size();
}
inline void ListFloatSfixed32::clear_k() {
  k_.Clear();
}
inline float ListFloatSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSfixed32.k)
  return k_.Get(index);
}
inline void ListFloatSfixed32::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSfixed32.k)
}
inline void ListFloatSfixed32::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSfixed32.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListFloatSfixed32::w_size() const {
  return w_.size();
}
inline void ListFloatSfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListFloatSfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSfixed32.w)
  return w_.Get(index);
}
inline void ListFloatSfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSfixed32.w)
}
inline void ListFloatSfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListFloatSfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListFloatSfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatSfixed64

// repeated float k = 1;
inline int ListFloatSfixed64::k_size() const {
  return k_.size();
}
inline void ListFloatSfixed64::clear_k() {
  k_.Clear();
}
inline float ListFloatSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSfixed64.k)
  return k_.Get(index);
}
inline void ListFloatSfixed64::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSfixed64.k)
}
inline void ListFloatSfixed64::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSfixed64.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListFloatSfixed64::w_size() const {
  return w_.size();
}
inline void ListFloatSfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListFloatSfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatSfixed64.w)
  return w_.Get(index);
}
inline void ListFloatSfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatSfixed64.w)
}
inline void ListFloatSfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatSfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListFloatSfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatSfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListFloatSfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatSfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatBool

// repeated float k = 1;
inline int ListFloatBool::k_size() const {
  return k_.size();
}
inline void ListFloatBool::clear_k() {
  k_.Clear();
}
inline float ListFloatBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatBool.k)
  return k_.Get(index);
}
inline void ListFloatBool::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatBool.k)
}
inline void ListFloatBool::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatBool.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatBool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListFloatBool::w_size() const {
  return w_.size();
}
inline void ListFloatBool::clear_w() {
  w_.Clear();
}
inline bool ListFloatBool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatBool.w)
  return w_.Get(index);
}
inline void ListFloatBool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatBool.w)
}
inline void ListFloatBool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatBool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListFloatBool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatBool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListFloatBool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatBool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatString

// repeated float k = 1;
inline int ListFloatString::k_size() const {
  return k_.size();
}
inline void ListFloatString::clear_k() {
  k_.Clear();
}
inline float ListFloatString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatString.k)
  return k_.Get(index);
}
inline void ListFloatString::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatString.k)
}
inline void ListFloatString::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatString.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatString.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatString.k)
  return &k_;
}

// repeated string w = 2;
inline int ListFloatString::w_size() const {
  return w_.size();
}
inline void ListFloatString::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFloatString::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatString.w)
  return w_.Get(index);
}
inline ::std::string* ListFloatString::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFloatString.w)
  return w_.Mutable(index);
}
inline void ListFloatString::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatString.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFloatString::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatString.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFloatString::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFloatString.w)
}
inline void ListFloatString::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFloatString.w)
}
inline ::std::string* ListFloatString::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFloatString.w)
  return w_.Add();
}
inline void ListFloatString::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatString.w)
}
#if LANG_CXX11
inline void ListFloatString::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatString.w)
}
#endif
inline void ListFloatString::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFloatString.w)
}
inline void ListFloatString::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFloatString.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFloatString::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatString.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFloatString::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatString.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListFloatBytes

// repeated float k = 1;
inline int ListFloatBytes::k_size() const {
  return k_.size();
}
inline void ListFloatBytes::clear_k() {
  k_.Clear();
}
inline float ListFloatBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatBytes.k)
  return k_.Get(index);
}
inline void ListFloatBytes::set_k(int index, float value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatBytes.k)
}
inline void ListFloatBytes::add_k(float value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatBytes.k)
}
inline const ::google::protobuf::RepeatedField< float >&
ListFloatBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< float >*
ListFloatBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatBytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListFloatBytes::w_size() const {
  return w_.size();
}
inline void ListFloatBytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListFloatBytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListFloatBytes.w)
  return w_.Get(index);
}
inline ::std::string* ListFloatBytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListFloatBytes.w)
  return w_.Mutable(index);
}
inline void ListFloatBytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatBytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListFloatBytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListFloatBytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListFloatBytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListFloatBytes.w)
}
inline void ListFloatBytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListFloatBytes.w)
}
inline ::std::string* ListFloatBytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListFloatBytes.w)
  return w_.Add();
}
inline void ListFloatBytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatBytes.w)
}
#if LANG_CXX11
inline void ListFloatBytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListFloatBytes.w)
}
#endif
inline void ListFloatBytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListFloatBytes.w)
}
inline void ListFloatBytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListFloatBytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListFloatBytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListFloatBytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListFloatBytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListFloatBytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolDouble

// repeated bool k = 1;
inline int ListBoolDouble::k_size() const {
  return k_.size();
}
inline void ListBoolDouble::clear_k() {
  k_.Clear();
}
inline bool ListBoolDouble::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolDouble.k)
  return k_.Get(index);
}
inline void ListBoolDouble::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolDouble.k)
}
inline void ListBoolDouble::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolDouble.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolDouble::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolDouble.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolDouble::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolDouble.k)
  return &k_;
}

// repeated double w = 2;
inline int ListBoolDouble::w_size() const {
  return w_.size();
}
inline void ListBoolDouble::clear_w() {
  w_.Clear();
}
inline double ListBoolDouble::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolDouble.w)
  return w_.Get(index);
}
inline void ListBoolDouble::set_w(int index, double value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolDouble.w)
}
inline void ListBoolDouble::add_w(double value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolDouble.w)
}
inline const ::google::protobuf::RepeatedField< double >&
ListBoolDouble::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolDouble.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< double >*
ListBoolDouble::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolDouble.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolFloat

// repeated bool k = 1;
inline int ListBoolFloat::k_size() const {
  return k_.size();
}
inline void ListBoolFloat::clear_k() {
  k_.Clear();
}
inline bool ListBoolFloat::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFloat.k)
  return k_.Get(index);
}
inline void ListBoolFloat::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFloat.k)
}
inline void ListBoolFloat::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFloat.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolFloat::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFloat.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolFloat::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFloat.k)
  return &k_;
}

// repeated float w = 2;
inline int ListBoolFloat::w_size() const {
  return w_.size();
}
inline void ListBoolFloat::clear_w() {
  w_.Clear();
}
inline float ListBoolFloat::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFloat.w)
  return w_.Get(index);
}
inline void ListBoolFloat::set_w(int index, float value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFloat.w)
}
inline void ListBoolFloat::add_w(float value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFloat.w)
}
inline const ::google::protobuf::RepeatedField< float >&
ListBoolFloat::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFloat.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< float >*
ListBoolFloat::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFloat.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolInt32

// repeated bool k = 1;
inline int ListBoolInt32::k_size() const {
  return k_.size();
}
inline void ListBoolInt32::clear_k() {
  k_.Clear();
}
inline bool ListBoolInt32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolInt32.k)
  return k_.Get(index);
}
inline void ListBoolInt32::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolInt32.k)
}
inline void ListBoolInt32::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolInt32.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolInt32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolInt32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolInt32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolInt32.k)
  return &k_;
}

// repeated int32 w = 2;
inline int ListBoolInt32::w_size() const {
  return w_.size();
}
inline void ListBoolInt32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBoolInt32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolInt32.w)
  return w_.Get(index);
}
inline void ListBoolInt32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolInt32.w)
}
inline void ListBoolInt32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolInt32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBoolInt32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolInt32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBoolInt32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolInt32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolInt64

// repeated bool k = 1;
inline int ListBoolInt64::k_size() const {
  return k_.size();
}
inline void ListBoolInt64::clear_k() {
  k_.Clear();
}
inline bool ListBoolInt64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolInt64.k)
  return k_.Get(index);
}
inline void ListBoolInt64::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolInt64.k)
}
inline void ListBoolInt64::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolInt64.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolInt64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolInt64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolInt64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolInt64.k)
  return &k_;
}

// repeated int64 w = 2;
inline int ListBoolInt64::w_size() const {
  return w_.size();
}
inline void ListBoolInt64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBoolInt64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolInt64.w)
  return w_.Get(index);
}
inline void ListBoolInt64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolInt64.w)
}
inline void ListBoolInt64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolInt64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBoolInt64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolInt64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBoolInt64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolInt64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolUint32

// repeated bool k = 1;
inline int ListBoolUint32::k_size() const {
  return k_.size();
}
inline void ListBoolUint32::clear_k() {
  k_.Clear();
}
inline bool ListBoolUint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolUint32.k)
  return k_.Get(index);
}
inline void ListBoolUint32::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolUint32.k)
}
inline void ListBoolUint32::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolUint32.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolUint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolUint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolUint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolUint32.k)
  return &k_;
}

// repeated uint32 w = 2;
inline int ListBoolUint32::w_size() const {
  return w_.size();
}
inline void ListBoolUint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListBoolUint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolUint32.w)
  return w_.Get(index);
}
inline void ListBoolUint32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolUint32.w)
}
inline void ListBoolUint32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolUint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListBoolUint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolUint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListBoolUint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolUint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolUint64

// repeated bool k = 1;
inline int ListBoolUint64::k_size() const {
  return k_.size();
}
inline void ListBoolUint64::clear_k() {
  k_.Clear();
}
inline bool ListBoolUint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolUint64.k)
  return k_.Get(index);
}
inline void ListBoolUint64::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolUint64.k)
}
inline void ListBoolUint64::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolUint64.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolUint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolUint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolUint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolUint64.k)
  return &k_;
}

// repeated uint64 w = 2;
inline int ListBoolUint64::w_size() const {
  return w_.size();
}
inline void ListBoolUint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListBoolUint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolUint64.w)
  return w_.Get(index);
}
inline void ListBoolUint64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolUint64.w)
}
inline void ListBoolUint64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolUint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListBoolUint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolUint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListBoolUint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolUint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolSint32

// repeated bool k = 1;
inline int ListBoolSint32::k_size() const {
  return k_.size();
}
inline void ListBoolSint32::clear_k() {
  k_.Clear();
}
inline bool ListBoolSint32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSint32.k)
  return k_.Get(index);
}
inline void ListBoolSint32::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSint32.k)
}
inline void ListBoolSint32::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSint32.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolSint32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSint32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolSint32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSint32.k)
  return &k_;
}

// repeated sint32 w = 2;
inline int ListBoolSint32::w_size() const {
  return w_.size();
}
inline void ListBoolSint32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBoolSint32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSint32.w)
  return w_.Get(index);
}
inline void ListBoolSint32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSint32.w)
}
inline void ListBoolSint32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSint32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBoolSint32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSint32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBoolSint32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSint32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolSint64

// repeated bool k = 1;
inline int ListBoolSint64::k_size() const {
  return k_.size();
}
inline void ListBoolSint64::clear_k() {
  k_.Clear();
}
inline bool ListBoolSint64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSint64.k)
  return k_.Get(index);
}
inline void ListBoolSint64::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSint64.k)
}
inline void ListBoolSint64::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSint64.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolSint64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSint64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolSint64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSint64.k)
  return &k_;
}

// repeated sint64 w = 2;
inline int ListBoolSint64::w_size() const {
  return w_.size();
}
inline void ListBoolSint64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBoolSint64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSint64.w)
  return w_.Get(index);
}
inline void ListBoolSint64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSint64.w)
}
inline void ListBoolSint64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSint64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBoolSint64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSint64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBoolSint64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSint64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolFixed32

// repeated bool k = 1;
inline int ListBoolFixed32::k_size() const {
  return k_.size();
}
inline void ListBoolFixed32::clear_k() {
  k_.Clear();
}
inline bool ListBoolFixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFixed32.k)
  return k_.Get(index);
}
inline void ListBoolFixed32::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFixed32.k)
}
inline void ListBoolFixed32::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFixed32.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolFixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolFixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFixed32.k)
  return &k_;
}

// repeated fixed32 w = 2;
inline int ListBoolFixed32::w_size() const {
  return w_.size();
}
inline void ListBoolFixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint32 ListBoolFixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFixed32.w)
  return w_.Get(index);
}
inline void ListBoolFixed32::set_w(int index, ::google::protobuf::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFixed32.w)
}
inline void ListBoolFixed32::add_w(::google::protobuf::uint32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ListBoolFixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ListBoolFixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolFixed64

// repeated bool k = 1;
inline int ListBoolFixed64::k_size() const {
  return k_.size();
}
inline void ListBoolFixed64::clear_k() {
  k_.Clear();
}
inline bool ListBoolFixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFixed64.k)
  return k_.Get(index);
}
inline void ListBoolFixed64::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFixed64.k)
}
inline void ListBoolFixed64::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFixed64.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolFixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolFixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFixed64.k)
  return &k_;
}

// repeated fixed64 w = 2;
inline int ListBoolFixed64::w_size() const {
  return w_.size();
}
inline void ListBoolFixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::uint64 ListBoolFixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolFixed64.w)
  return w_.Get(index);
}
inline void ListBoolFixed64::set_w(int index, ::google::protobuf::uint64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolFixed64.w)
}
inline void ListBoolFixed64::add_w(::google::protobuf::uint64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolFixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ListBoolFixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolFixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ListBoolFixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolFixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolSfixed32

// repeated bool k = 1;
inline int ListBoolSfixed32::k_size() const {
  return k_.size();
}
inline void ListBoolSfixed32::clear_k() {
  k_.Clear();
}
inline bool ListBoolSfixed32::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSfixed32.k)
  return k_.Get(index);
}
inline void ListBoolSfixed32::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSfixed32.k)
}
inline void ListBoolSfixed32::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSfixed32.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolSfixed32::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSfixed32.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolSfixed32::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSfixed32.k)
  return &k_;
}

// repeated sfixed32 w = 2;
inline int ListBoolSfixed32::w_size() const {
  return w_.size();
}
inline void ListBoolSfixed32::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int32 ListBoolSfixed32::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSfixed32.w)
  return w_.Get(index);
}
inline void ListBoolSfixed32::set_w(int index, ::google::protobuf::int32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSfixed32.w)
}
inline void ListBoolSfixed32::add_w(::google::protobuf::int32 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSfixed32.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ListBoolSfixed32::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSfixed32.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ListBoolSfixed32::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSfixed32.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolSfixed64

// repeated bool k = 1;
inline int ListBoolSfixed64::k_size() const {
  return k_.size();
}
inline void ListBoolSfixed64::clear_k() {
  k_.Clear();
}
inline bool ListBoolSfixed64::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSfixed64.k)
  return k_.Get(index);
}
inline void ListBoolSfixed64::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSfixed64.k)
}
inline void ListBoolSfixed64::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSfixed64.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolSfixed64::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSfixed64.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolSfixed64::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSfixed64.k)
  return &k_;
}

// repeated sfixed64 w = 2;
inline int ListBoolSfixed64::w_size() const {
  return w_.size();
}
inline void ListBoolSfixed64::clear_w() {
  w_.Clear();
}
inline ::google::protobuf::int64 ListBoolSfixed64::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolSfixed64.w)
  return w_.Get(index);
}
inline void ListBoolSfixed64::set_w(int index, ::google::protobuf::int64 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolSfixed64.w)
}
inline void ListBoolSfixed64::add_w(::google::protobuf::int64 value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolSfixed64.w)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ListBoolSfixed64::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolSfixed64.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ListBoolSfixed64::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolSfixed64.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolBool

// repeated bool k = 1;
inline int ListBoolBool::k_size() const {
  return k_.size();
}
inline void ListBoolBool::clear_k() {
  k_.Clear();
}
inline bool ListBoolBool::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolBool.k)
  return k_.Get(index);
}
inline void ListBoolBool::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolBool.k)
}
inline void ListBoolBool::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolBool.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolBool::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolBool.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolBool::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolBool.k)
  return &k_;
}

// repeated bool w = 2;
inline int ListBoolBool::w_size() const {
  return w_.size();
}
inline void ListBoolBool::clear_w() {
  w_.Clear();
}
inline bool ListBoolBool::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolBool.w)
  return w_.Get(index);
}
inline void ListBoolBool::set_w(int index, bool value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolBool.w)
}
inline void ListBoolBool::add_w(bool value) {
  w_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolBool.w)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolBool::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolBool.w)
  return w_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolBool::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolBool.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolString

// repeated bool k = 1;
inline int ListBoolString::k_size() const {
  return k_.size();
}
inline void ListBoolString::clear_k() {
  k_.Clear();
}
inline bool ListBoolString::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolString.k)
  return k_.Get(index);
}
inline void ListBoolString::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolString.k)
}
inline void ListBoolString::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolString.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolString::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolString.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolString::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolString.k)
  return &k_;
}

// repeated string w = 2;
inline int ListBoolString::w_size() const {
  return w_.size();
}
inline void ListBoolString::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListBoolString::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolString.w)
  return w_.Get(index);
}
inline ::std::string* ListBoolString::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBoolString.w)
  return w_.Mutable(index);
}
inline void ListBoolString::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolString.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBoolString::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolString.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBoolString::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBoolString.w)
}
inline void ListBoolString::set_w(int index, const char* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBoolString.w)
}
inline ::std::string* ListBoolString::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBoolString.w)
  return w_.Add();
}
inline void ListBoolString::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolString.w)
}
#if LANG_CXX11
inline void ListBoolString::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolString.w)
}
#endif
inline void ListBoolString::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBoolString.w)
}
inline void ListBoolString::add_w(const char* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBoolString.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBoolString::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolString.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBoolString::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolString.w)
  return &w_;
}

// -------------------------------------------------------------------

// ListBoolBytes

// repeated bool k = 1;
inline int ListBoolBytes::k_size() const {
  return k_.size();
}
inline void ListBoolBytes::clear_k() {
  k_.Clear();
}
inline bool ListBoolBytes::k(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolBytes.k)
  return k_.Get(index);
}
inline void ListBoolBytes::set_k(int index, bool value) {
  k_.Set(index, value);
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolBytes.k)
}
inline void ListBoolBytes::add_k(bool value) {
  k_.Add(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolBytes.k)
}
inline const ::google::protobuf::RepeatedField< bool >&
ListBoolBytes::k() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolBytes.k)
  return k_;
}
inline ::google::protobuf::RepeatedField< bool >*
ListBoolBytes::mutable_k() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolBytes.k)
  return &k_;
}

// repeated bytes w = 2;
inline int ListBoolBytes::w_size() const {
  return w_.size();
}
inline void ListBoolBytes::clear_w() {
  w_.Clear();
}
inline const ::std::string& ListBoolBytes::w(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.ListBoolBytes.w)
  return w_.Get(index);
}
inline ::std::string* ListBoolBytes::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.ListBoolBytes.w)
  return w_.Mutable(index);
}
inline void ListBoolBytes::set_w(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolBytes.w)
  w_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListBoolBytes::set_w(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.ListBoolBytes.w)
  w_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListBoolBytes::set_w(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:feature_proto.ListBoolBytes.w)
}
inline void ListBoolBytes::set_w(int index, const void* value, size_t size) {
  w_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:feature_proto.ListBoolBytes.w)
}
inline ::std::string* ListBoolBytes::add_w() {
  // @@protoc_insertion_point(field_add_mutable:feature_proto.ListBoolBytes.w)
  return w_.Add();
}
inline void ListBoolBytes::add_w(const ::std::string& value) {
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolBytes.w)
}
#if LANG_CXX11
inline void ListBoolBytes::add_w(::std::string&& value) {
  w_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:feature_proto.ListBoolBytes.w)
}
#endif
inline void ListBoolBytes::add_w(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  w_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:feature_proto.ListBoolBytes.w)
}
inline void ListBoolBytes::add_w(const void* value, size_t size) {
  w_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:feature_proto.ListBoolBytes.w)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListBoolBytes::w() const {
  // @@protoc_insertion_point(field_list:feature_proto.ListBoolBytes.w)
  return w_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListBoolBytes::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.ListBoolBytes.w)
  return &w_;
}

// -------------------------------------------------------------------

// Feature

// double v_double = 1;
inline bool Feature::has_v_double() const {
  return kind_case() == kVDouble;
}
inline void Feature::set_has_v_double() {
  _oneof_case_[0] = kVDouble;
}
inline void Feature::clear_v_double() {
  if (has_v_double()) {
    kind_.v_double_ = 0;
    clear_has_kind();
  }
}
inline double Feature::v_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_double)
  if (has_v_double()) {
    return kind_.v_double_;
  }
  return 0;
}
inline void Feature::set_v_double(double value) {
  if (!has_v_double()) {
    clear_kind();
    set_has_v_double();
  }
  kind_.v_double_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_double)
}

// float v_float = 2;
inline bool Feature::has_v_float() const {
  return kind_case() == kVFloat;
}
inline void Feature::set_has_v_float() {
  _oneof_case_[0] = kVFloat;
}
inline void Feature::clear_v_float() {
  if (has_v_float()) {
    kind_.v_float_ = 0;
    clear_has_kind();
  }
}
inline float Feature::v_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_float)
  if (has_v_float()) {
    return kind_.v_float_;
  }
  return 0;
}
inline void Feature::set_v_float(float value) {
  if (!has_v_float()) {
    clear_kind();
    set_has_v_float();
  }
  kind_.v_float_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_float)
}

// int32 v_int32 = 3;
inline bool Feature::has_v_int32() const {
  return kind_case() == kVInt32;
}
inline void Feature::set_has_v_int32() {
  _oneof_case_[0] = kVInt32;
}
inline void Feature::clear_v_int32() {
  if (has_v_int32()) {
    kind_.v_int32_ = 0;
    clear_has_kind();
  }
}
inline ::google::protobuf::int32 Feature::v_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_int32)
  if (has_v_int32()) {
    return kind_.v_int32_;
  }
  return 0;
}
inline void Feature::set_v_int32(::google::protobuf::int32 value) {
  if (!has_v_int32()) {
    clear_kind();
    set_has_v_int32();
  }
  kind_.v_int32_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_int32)
}

// int64 v_int64 = 4;
inline bool Feature::has_v_int64() const {
  return kind_case() == kVInt64;
}
inline void Feature::set_has_v_int64() {
  _oneof_case_[0] = kVInt64;
}
inline void Feature::clear_v_int64() {
  if (has_v_int64()) {
    kind_.v_int64_ = GOOGLE_LONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::int64 Feature::v_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_int64)
  if (has_v_int64()) {
    return kind_.v_int64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Feature::set_v_int64(::google::protobuf::int64 value) {
  if (!has_v_int64()) {
    clear_kind();
    set_has_v_int64();
  }
  kind_.v_int64_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_int64)
}

// uint32 v_uint32 = 5;
inline bool Feature::has_v_uint32() const {
  return kind_case() == kVUint32;
}
inline void Feature::set_has_v_uint32() {
  _oneof_case_[0] = kVUint32;
}
inline void Feature::clear_v_uint32() {
  if (has_v_uint32()) {
    kind_.v_uint32_ = 0u;
    clear_has_kind();
  }
}
inline ::google::protobuf::uint32 Feature::v_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_uint32)
  if (has_v_uint32()) {
    return kind_.v_uint32_;
  }
  return 0u;
}
inline void Feature::set_v_uint32(::google::protobuf::uint32 value) {
  if (!has_v_uint32()) {
    clear_kind();
    set_has_v_uint32();
  }
  kind_.v_uint32_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_uint32)
}

// uint64 v_uint64 = 6;
inline bool Feature::has_v_uint64() const {
  return kind_case() == kVUint64;
}
inline void Feature::set_has_v_uint64() {
  _oneof_case_[0] = kVUint64;
}
inline void Feature::clear_v_uint64() {
  if (has_v_uint64()) {
    kind_.v_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::uint64 Feature::v_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_uint64)
  if (has_v_uint64()) {
    return kind_.v_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Feature::set_v_uint64(::google::protobuf::uint64 value) {
  if (!has_v_uint64()) {
    clear_kind();
    set_has_v_uint64();
  }
  kind_.v_uint64_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_uint64)
}

// sint32 v_sint32 = 7;
inline bool Feature::has_v_sint32() const {
  return kind_case() == kVSint32;
}
inline void Feature::set_has_v_sint32() {
  _oneof_case_[0] = kVSint32;
}
inline void Feature::clear_v_sint32() {
  if (has_v_sint32()) {
    kind_.v_sint32_ = 0;
    clear_has_kind();
  }
}
inline ::google::protobuf::int32 Feature::v_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_sint32)
  if (has_v_sint32()) {
    return kind_.v_sint32_;
  }
  return 0;
}
inline void Feature::set_v_sint32(::google::protobuf::int32 value) {
  if (!has_v_sint32()) {
    clear_kind();
    set_has_v_sint32();
  }
  kind_.v_sint32_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_sint32)
}

// sint64 v_sint64 = 8;
inline bool Feature::has_v_sint64() const {
  return kind_case() == kVSint64;
}
inline void Feature::set_has_v_sint64() {
  _oneof_case_[0] = kVSint64;
}
inline void Feature::clear_v_sint64() {
  if (has_v_sint64()) {
    kind_.v_sint64_ = GOOGLE_LONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::int64 Feature::v_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_sint64)
  if (has_v_sint64()) {
    return kind_.v_sint64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Feature::set_v_sint64(::google::protobuf::int64 value) {
  if (!has_v_sint64()) {
    clear_kind();
    set_has_v_sint64();
  }
  kind_.v_sint64_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_sint64)
}

// fixed32 v_fixed32 = 9;
inline bool Feature::has_v_fixed32() const {
  return kind_case() == kVFixed32;
}
inline void Feature::set_has_v_fixed32() {
  _oneof_case_[0] = kVFixed32;
}
inline void Feature::clear_v_fixed32() {
  if (has_v_fixed32()) {
    kind_.v_fixed32_ = 0u;
    clear_has_kind();
  }
}
inline ::google::protobuf::uint32 Feature::v_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_fixed32)
  if (has_v_fixed32()) {
    return kind_.v_fixed32_;
  }
  return 0u;
}
inline void Feature::set_v_fixed32(::google::protobuf::uint32 value) {
  if (!has_v_fixed32()) {
    clear_kind();
    set_has_v_fixed32();
  }
  kind_.v_fixed32_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_fixed32)
}

// fixed64 v_fixed64 = 10;
inline bool Feature::has_v_fixed64() const {
  return kind_case() == kVFixed64;
}
inline void Feature::set_has_v_fixed64() {
  _oneof_case_[0] = kVFixed64;
}
inline void Feature::clear_v_fixed64() {
  if (has_v_fixed64()) {
    kind_.v_fixed64_ = GOOGLE_ULONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::uint64 Feature::v_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_fixed64)
  if (has_v_fixed64()) {
    return kind_.v_fixed64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Feature::set_v_fixed64(::google::protobuf::uint64 value) {
  if (!has_v_fixed64()) {
    clear_kind();
    set_has_v_fixed64();
  }
  kind_.v_fixed64_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_fixed64)
}

// sfixed32 v_sfixed32 = 11;
inline bool Feature::has_v_sfixed32() const {
  return kind_case() == kVSfixed32;
}
inline void Feature::set_has_v_sfixed32() {
  _oneof_case_[0] = kVSfixed32;
}
inline void Feature::clear_v_sfixed32() {
  if (has_v_sfixed32()) {
    kind_.v_sfixed32_ = 0;
    clear_has_kind();
  }
}
inline ::google::protobuf::int32 Feature::v_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_sfixed32)
  if (has_v_sfixed32()) {
    return kind_.v_sfixed32_;
  }
  return 0;
}
inline void Feature::set_v_sfixed32(::google::protobuf::int32 value) {
  if (!has_v_sfixed32()) {
    clear_kind();
    set_has_v_sfixed32();
  }
  kind_.v_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_sfixed32)
}

// sfixed64 v_sfixed64 = 12;
inline bool Feature::has_v_sfixed64() const {
  return kind_case() == kVSfixed64;
}
inline void Feature::set_has_v_sfixed64() {
  _oneof_case_[0] = kVSfixed64;
}
inline void Feature::clear_v_sfixed64() {
  if (has_v_sfixed64()) {
    kind_.v_sfixed64_ = GOOGLE_LONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::int64 Feature::v_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_sfixed64)
  if (has_v_sfixed64()) {
    return kind_.v_sfixed64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Feature::set_v_sfixed64(::google::protobuf::int64 value) {
  if (!has_v_sfixed64()) {
    clear_kind();
    set_has_v_sfixed64();
  }
  kind_.v_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_sfixed64)
}

// bool v_bool = 13;
inline bool Feature::has_v_bool() const {
  return kind_case() == kVBool;
}
inline void Feature::set_has_v_bool() {
  _oneof_case_[0] = kVBool;
}
inline void Feature::clear_v_bool() {
  if (has_v_bool()) {
    kind_.v_bool_ = false;
    clear_has_kind();
  }
}
inline bool Feature::v_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_bool)
  if (has_v_bool()) {
    return kind_.v_bool_;
  }
  return false;
}
inline void Feature::set_v_bool(bool value) {
  if (!has_v_bool()) {
    clear_kind();
    set_has_v_bool();
  }
  kind_.v_bool_ = value;
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_bool)
}

// string v_string = 14;
inline bool Feature::has_v_string() const {
  return kind_case() == kVString;
}
inline void Feature::set_has_v_string() {
  _oneof_case_[0] = kVString;
}
inline void Feature::clear_v_string() {
  if (has_v_string()) {
    kind_.v_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_kind();
  }
}
inline const ::std::string& Feature::v_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_string)
  if (has_v_string()) {
    return kind_.v_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Feature::set_v_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_string)
  if (!has_v_string()) {
    clear_kind();
    set_has_v_string();
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_string)
}
#if LANG_CXX11
inline void Feature::set_v_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_string)
  if (!has_v_string()) {
    clear_kind();
    set_has_v_string();
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_proto.Feature.v_string)
}
#endif
inline void Feature::set_v_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_v_string()) {
    clear_kind();
    set_has_v_string();
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_proto.Feature.v_string)
}
inline void Feature::set_v_string(const char* value, size_t size) {
  if (!has_v_string()) {
    clear_kind();
    set_has_v_string();
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_proto.Feature.v_string)
}
inline ::std::string* Feature::mutable_v_string() {
  if (!has_v_string()) {
    clear_kind();
    set_has_v_string();
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_string)
  return kind_.v_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Feature::release_v_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_string)
  if (has_v_string()) {
    clear_has_kind();
    return kind_.v_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Feature::set_allocated_v_string(::std::string* v_string) {
  if (!has_v_string()) {
    kind_.v_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (v_string != NULL) {
    set_has_v_string();
    kind_.v_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v_string);
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_string)
}

// bytes v_bytes = 15;
inline bool Feature::has_v_bytes() const {
  return kind_case() == kVBytes;
}
inline void Feature::set_has_v_bytes() {
  _oneof_case_[0] = kVBytes;
}
inline void Feature::clear_v_bytes() {
  if (has_v_bytes()) {
    kind_.v_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_kind();
  }
}
inline const ::std::string& Feature::v_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_bytes)
  if (has_v_bytes()) {
    return kind_.v_bytes_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Feature::set_v_bytes(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_bytes)
  if (!has_v_bytes()) {
    clear_kind();
    set_has_v_bytes();
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_bytes)
}
#if LANG_CXX11
inline void Feature::set_v_bytes(::std::string&& value) {
  // @@protoc_insertion_point(field_set:feature_proto.Feature.v_bytes)
  if (!has_v_bytes()) {
    clear_kind();
    set_has_v_bytes();
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:feature_proto.Feature.v_bytes)
}
#endif
inline void Feature::set_v_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_v_bytes()) {
    clear_kind();
    set_has_v_bytes();
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:feature_proto.Feature.v_bytes)
}
inline void Feature::set_v_bytes(const void* value, size_t size) {
  if (!has_v_bytes()) {
    clear_kind();
    set_has_v_bytes();
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.v_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:feature_proto.Feature.v_bytes)
}
inline ::std::string* Feature::mutable_v_bytes() {
  if (!has_v_bytes()) {
    clear_kind();
    set_has_v_bytes();
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_bytes)
  return kind_.v_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Feature::release_v_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_bytes)
  if (has_v_bytes()) {
    clear_has_kind();
    return kind_.v_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Feature::set_allocated_v_bytes(::std::string* v_bytes) {
  if (!has_v_bytes()) {
    kind_.v_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (v_bytes != NULL) {
    set_has_v_bytes();
    kind_.v_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v_bytes);
  }
  // @@protoc_insertion_point(field_set_allocated:feature_proto.Feature.v_bytes)
}

// .feature_proto.ListDouble v_list_double = 16;
inline bool Feature::has_v_list_double() const {
  return kind_case() == kVListDouble;
}
inline void Feature::set_has_v_list_double() {
  _oneof_case_[0] = kVListDouble;
}
inline void Feature::clear_v_list_double() {
  if (has_v_list_double()) {
    delete kind_.v_list_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDouble& Feature::_internal_v_list_double() const {
  return *kind_.v_list_double_;
}
inline ::feature_proto::ListDouble* Feature::release_v_list_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double)
  if (has_v_list_double()) {
    clear_has_kind();
      ::feature_proto::ListDouble* temp = kind_.v_list_double_;
    kind_.v_list_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDouble& Feature::v_list_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double)
  return has_v_list_double()
      ? *kind_.v_list_double_
      : *reinterpret_cast< ::feature_proto::ListDouble*>(&::feature_proto::_ListDouble_default_instance_);
}
inline ::feature_proto::ListDouble* Feature::mutable_v_list_double() {
  if (!has_v_list_double()) {
    clear_kind();
    set_has_v_list_double();
    kind_.v_list_double_ = CreateMaybeMessage< ::feature_proto::ListDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double)
  return kind_.v_list_double_;
}

// .feature_proto.ListFloat v_list_float = 17;
inline bool Feature::has_v_list_float() const {
  return kind_case() == kVListFloat;
}
inline void Feature::set_has_v_list_float() {
  _oneof_case_[0] = kVListFloat;
}
inline void Feature::clear_v_list_float() {
  if (has_v_list_float()) {
    delete kind_.v_list_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloat& Feature::_internal_v_list_float() const {
  return *kind_.v_list_float_;
}
inline ::feature_proto::ListFloat* Feature::release_v_list_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float)
  if (has_v_list_float()) {
    clear_has_kind();
      ::feature_proto::ListFloat* temp = kind_.v_list_float_;
    kind_.v_list_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloat& Feature::v_list_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float)
  return has_v_list_float()
      ? *kind_.v_list_float_
      : *reinterpret_cast< ::feature_proto::ListFloat*>(&::feature_proto::_ListFloat_default_instance_);
}
inline ::feature_proto::ListFloat* Feature::mutable_v_list_float() {
  if (!has_v_list_float()) {
    clear_kind();
    set_has_v_list_float();
    kind_.v_list_float_ = CreateMaybeMessage< ::feature_proto::ListFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float)
  return kind_.v_list_float_;
}

// .feature_proto.ListInt32 v_list_int32 = 18;
inline bool Feature::has_v_list_int32() const {
  return kind_case() == kVListInt32;
}
inline void Feature::set_has_v_list_int32() {
  _oneof_case_[0] = kVListInt32;
}
inline void Feature::clear_v_list_int32() {
  if (has_v_list_int32()) {
    delete kind_.v_list_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32& Feature::_internal_v_list_int32() const {
  return *kind_.v_list_int32_;
}
inline ::feature_proto::ListInt32* Feature::release_v_list_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32)
  if (has_v_list_int32()) {
    clear_has_kind();
      ::feature_proto::ListInt32* temp = kind_.v_list_int32_;
    kind_.v_list_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32& Feature::v_list_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32)
  return has_v_list_int32()
      ? *kind_.v_list_int32_
      : *reinterpret_cast< ::feature_proto::ListInt32*>(&::feature_proto::_ListInt32_default_instance_);
}
inline ::feature_proto::ListInt32* Feature::mutable_v_list_int32() {
  if (!has_v_list_int32()) {
    clear_kind();
    set_has_v_list_int32();
    kind_.v_list_int32_ = CreateMaybeMessage< ::feature_proto::ListInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32)
  return kind_.v_list_int32_;
}

// .feature_proto.ListInt64 v_list_int64 = 19;
inline bool Feature::has_v_list_int64() const {
  return kind_case() == kVListInt64;
}
inline void Feature::set_has_v_list_int64() {
  _oneof_case_[0] = kVListInt64;
}
inline void Feature::clear_v_list_int64() {
  if (has_v_list_int64()) {
    delete kind_.v_list_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64& Feature::_internal_v_list_int64() const {
  return *kind_.v_list_int64_;
}
inline ::feature_proto::ListInt64* Feature::release_v_list_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64)
  if (has_v_list_int64()) {
    clear_has_kind();
      ::feature_proto::ListInt64* temp = kind_.v_list_int64_;
    kind_.v_list_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64& Feature::v_list_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64)
  return has_v_list_int64()
      ? *kind_.v_list_int64_
      : *reinterpret_cast< ::feature_proto::ListInt64*>(&::feature_proto::_ListInt64_default_instance_);
}
inline ::feature_proto::ListInt64* Feature::mutable_v_list_int64() {
  if (!has_v_list_int64()) {
    clear_kind();
    set_has_v_list_int64();
    kind_.v_list_int64_ = CreateMaybeMessage< ::feature_proto::ListInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64)
  return kind_.v_list_int64_;
}

// .feature_proto.ListUint32 v_list_uint32 = 20;
inline bool Feature::has_v_list_uint32() const {
  return kind_case() == kVListUint32;
}
inline void Feature::set_has_v_list_uint32() {
  _oneof_case_[0] = kVListUint32;
}
inline void Feature::clear_v_list_uint32() {
  if (has_v_list_uint32()) {
    delete kind_.v_list_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32& Feature::_internal_v_list_uint32() const {
  return *kind_.v_list_uint32_;
}
inline ::feature_proto::ListUint32* Feature::release_v_list_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32)
  if (has_v_list_uint32()) {
    clear_has_kind();
      ::feature_proto::ListUint32* temp = kind_.v_list_uint32_;
    kind_.v_list_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32& Feature::v_list_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32)
  return has_v_list_uint32()
      ? *kind_.v_list_uint32_
      : *reinterpret_cast< ::feature_proto::ListUint32*>(&::feature_proto::_ListUint32_default_instance_);
}
inline ::feature_proto::ListUint32* Feature::mutable_v_list_uint32() {
  if (!has_v_list_uint32()) {
    clear_kind();
    set_has_v_list_uint32();
    kind_.v_list_uint32_ = CreateMaybeMessage< ::feature_proto::ListUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32)
  return kind_.v_list_uint32_;
}

// .feature_proto.ListUint64 v_list_uint64 = 21;
inline bool Feature::has_v_list_uint64() const {
  return kind_case() == kVListUint64;
}
inline void Feature::set_has_v_list_uint64() {
  _oneof_case_[0] = kVListUint64;
}
inline void Feature::clear_v_list_uint64() {
  if (has_v_list_uint64()) {
    delete kind_.v_list_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64& Feature::_internal_v_list_uint64() const {
  return *kind_.v_list_uint64_;
}
inline ::feature_proto::ListUint64* Feature::release_v_list_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64)
  if (has_v_list_uint64()) {
    clear_has_kind();
      ::feature_proto::ListUint64* temp = kind_.v_list_uint64_;
    kind_.v_list_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64& Feature::v_list_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64)
  return has_v_list_uint64()
      ? *kind_.v_list_uint64_
      : *reinterpret_cast< ::feature_proto::ListUint64*>(&::feature_proto::_ListUint64_default_instance_);
}
inline ::feature_proto::ListUint64* Feature::mutable_v_list_uint64() {
  if (!has_v_list_uint64()) {
    clear_kind();
    set_has_v_list_uint64();
    kind_.v_list_uint64_ = CreateMaybeMessage< ::feature_proto::ListUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64)
  return kind_.v_list_uint64_;
}

// .feature_proto.ListSint32 v_list_sint32 = 22;
inline bool Feature::has_v_list_sint32() const {
  return kind_case() == kVListSint32;
}
inline void Feature::set_has_v_list_sint32() {
  _oneof_case_[0] = kVListSint32;
}
inline void Feature::clear_v_list_sint32() {
  if (has_v_list_sint32()) {
    delete kind_.v_list_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32& Feature::_internal_v_list_sint32() const {
  return *kind_.v_list_sint32_;
}
inline ::feature_proto::ListSint32* Feature::release_v_list_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32)
  if (has_v_list_sint32()) {
    clear_has_kind();
      ::feature_proto::ListSint32* temp = kind_.v_list_sint32_;
    kind_.v_list_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32& Feature::v_list_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32)
  return has_v_list_sint32()
      ? *kind_.v_list_sint32_
      : *reinterpret_cast< ::feature_proto::ListSint32*>(&::feature_proto::_ListSint32_default_instance_);
}
inline ::feature_proto::ListSint32* Feature::mutable_v_list_sint32() {
  if (!has_v_list_sint32()) {
    clear_kind();
    set_has_v_list_sint32();
    kind_.v_list_sint32_ = CreateMaybeMessage< ::feature_proto::ListSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32)
  return kind_.v_list_sint32_;
}

// .feature_proto.ListSint64 v_list_sint64 = 23;
inline bool Feature::has_v_list_sint64() const {
  return kind_case() == kVListSint64;
}
inline void Feature::set_has_v_list_sint64() {
  _oneof_case_[0] = kVListSint64;
}
inline void Feature::clear_v_list_sint64() {
  if (has_v_list_sint64()) {
    delete kind_.v_list_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64& Feature::_internal_v_list_sint64() const {
  return *kind_.v_list_sint64_;
}
inline ::feature_proto::ListSint64* Feature::release_v_list_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64)
  if (has_v_list_sint64()) {
    clear_has_kind();
      ::feature_proto::ListSint64* temp = kind_.v_list_sint64_;
    kind_.v_list_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64& Feature::v_list_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64)
  return has_v_list_sint64()
      ? *kind_.v_list_sint64_
      : *reinterpret_cast< ::feature_proto::ListSint64*>(&::feature_proto::_ListSint64_default_instance_);
}
inline ::feature_proto::ListSint64* Feature::mutable_v_list_sint64() {
  if (!has_v_list_sint64()) {
    clear_kind();
    set_has_v_list_sint64();
    kind_.v_list_sint64_ = CreateMaybeMessage< ::feature_proto::ListSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64)
  return kind_.v_list_sint64_;
}

// .feature_proto.ListFixed32 v_list_fixed32 = 24;
inline bool Feature::has_v_list_fixed32() const {
  return kind_case() == kVListFixed32;
}
inline void Feature::set_has_v_list_fixed32() {
  _oneof_case_[0] = kVListFixed32;
}
inline void Feature::clear_v_list_fixed32() {
  if (has_v_list_fixed32()) {
    delete kind_.v_list_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32& Feature::_internal_v_list_fixed32() const {
  return *kind_.v_list_fixed32_;
}
inline ::feature_proto::ListFixed32* Feature::release_v_list_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32)
  if (has_v_list_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32* temp = kind_.v_list_fixed32_;
    kind_.v_list_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32& Feature::v_list_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32)
  return has_v_list_fixed32()
      ? *kind_.v_list_fixed32_
      : *reinterpret_cast< ::feature_proto::ListFixed32*>(&::feature_proto::_ListFixed32_default_instance_);
}
inline ::feature_proto::ListFixed32* Feature::mutable_v_list_fixed32() {
  if (!has_v_list_fixed32()) {
    clear_kind();
    set_has_v_list_fixed32();
    kind_.v_list_fixed32_ = CreateMaybeMessage< ::feature_proto::ListFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32)
  return kind_.v_list_fixed32_;
}

// .feature_proto.ListFixed64 v_list_fixed64 = 25;
inline bool Feature::has_v_list_fixed64() const {
  return kind_case() == kVListFixed64;
}
inline void Feature::set_has_v_list_fixed64() {
  _oneof_case_[0] = kVListFixed64;
}
inline void Feature::clear_v_list_fixed64() {
  if (has_v_list_fixed64()) {
    delete kind_.v_list_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64& Feature::_internal_v_list_fixed64() const {
  return *kind_.v_list_fixed64_;
}
inline ::feature_proto::ListFixed64* Feature::release_v_list_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64)
  if (has_v_list_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64* temp = kind_.v_list_fixed64_;
    kind_.v_list_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64& Feature::v_list_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64)
  return has_v_list_fixed64()
      ? *kind_.v_list_fixed64_
      : *reinterpret_cast< ::feature_proto::ListFixed64*>(&::feature_proto::_ListFixed64_default_instance_);
}
inline ::feature_proto::ListFixed64* Feature::mutable_v_list_fixed64() {
  if (!has_v_list_fixed64()) {
    clear_kind();
    set_has_v_list_fixed64();
    kind_.v_list_fixed64_ = CreateMaybeMessage< ::feature_proto::ListFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64)
  return kind_.v_list_fixed64_;
}

// .feature_proto.ListSfixed32 v_list_sfixed32 = 26;
inline bool Feature::has_v_list_sfixed32() const {
  return kind_case() == kVListSfixed32;
}
inline void Feature::set_has_v_list_sfixed32() {
  _oneof_case_[0] = kVListSfixed32;
}
inline void Feature::clear_v_list_sfixed32() {
  if (has_v_list_sfixed32()) {
    delete kind_.v_list_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32& Feature::_internal_v_list_sfixed32() const {
  return *kind_.v_list_sfixed32_;
}
inline ::feature_proto::ListSfixed32* Feature::release_v_list_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32)
  if (has_v_list_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32* temp = kind_.v_list_sfixed32_;
    kind_.v_list_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32& Feature::v_list_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32)
  return has_v_list_sfixed32()
      ? *kind_.v_list_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32*>(&::feature_proto::_ListSfixed32_default_instance_);
}
inline ::feature_proto::ListSfixed32* Feature::mutable_v_list_sfixed32() {
  if (!has_v_list_sfixed32()) {
    clear_kind();
    set_has_v_list_sfixed32();
    kind_.v_list_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32)
  return kind_.v_list_sfixed32_;
}

// .feature_proto.ListSfixed64 v_list_sfixed64 = 27;
inline bool Feature::has_v_list_sfixed64() const {
  return kind_case() == kVListSfixed64;
}
inline void Feature::set_has_v_list_sfixed64() {
  _oneof_case_[0] = kVListSfixed64;
}
inline void Feature::clear_v_list_sfixed64() {
  if (has_v_list_sfixed64()) {
    delete kind_.v_list_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64& Feature::_internal_v_list_sfixed64() const {
  return *kind_.v_list_sfixed64_;
}
inline ::feature_proto::ListSfixed64* Feature::release_v_list_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64)
  if (has_v_list_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64* temp = kind_.v_list_sfixed64_;
    kind_.v_list_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64& Feature::v_list_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64)
  return has_v_list_sfixed64()
      ? *kind_.v_list_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64*>(&::feature_proto::_ListSfixed64_default_instance_);
}
inline ::feature_proto::ListSfixed64* Feature::mutable_v_list_sfixed64() {
  if (!has_v_list_sfixed64()) {
    clear_kind();
    set_has_v_list_sfixed64();
    kind_.v_list_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64)
  return kind_.v_list_sfixed64_;
}

// .feature_proto.ListBool v_list_bool = 28;
inline bool Feature::has_v_list_bool() const {
  return kind_case() == kVListBool;
}
inline void Feature::set_has_v_list_bool() {
  _oneof_case_[0] = kVListBool;
}
inline void Feature::clear_v_list_bool() {
  if (has_v_list_bool()) {
    delete kind_.v_list_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBool& Feature::_internal_v_list_bool() const {
  return *kind_.v_list_bool_;
}
inline ::feature_proto::ListBool* Feature::release_v_list_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool)
  if (has_v_list_bool()) {
    clear_has_kind();
      ::feature_proto::ListBool* temp = kind_.v_list_bool_;
    kind_.v_list_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBool& Feature::v_list_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool)
  return has_v_list_bool()
      ? *kind_.v_list_bool_
      : *reinterpret_cast< ::feature_proto::ListBool*>(&::feature_proto::_ListBool_default_instance_);
}
inline ::feature_proto::ListBool* Feature::mutable_v_list_bool() {
  if (!has_v_list_bool()) {
    clear_kind();
    set_has_v_list_bool();
    kind_.v_list_bool_ = CreateMaybeMessage< ::feature_proto::ListBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool)
  return kind_.v_list_bool_;
}

// .feature_proto.ListString v_list_string = 29;
inline bool Feature::has_v_list_string() const {
  return kind_case() == kVListString;
}
inline void Feature::set_has_v_list_string() {
  _oneof_case_[0] = kVListString;
}
inline void Feature::clear_v_list_string() {
  if (has_v_list_string()) {
    delete kind_.v_list_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListString& Feature::_internal_v_list_string() const {
  return *kind_.v_list_string_;
}
inline ::feature_proto::ListString* Feature::release_v_list_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string)
  if (has_v_list_string()) {
    clear_has_kind();
      ::feature_proto::ListString* temp = kind_.v_list_string_;
    kind_.v_list_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListString& Feature::v_list_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string)
  return has_v_list_string()
      ? *kind_.v_list_string_
      : *reinterpret_cast< ::feature_proto::ListString*>(&::feature_proto::_ListString_default_instance_);
}
inline ::feature_proto::ListString* Feature::mutable_v_list_string() {
  if (!has_v_list_string()) {
    clear_kind();
    set_has_v_list_string();
    kind_.v_list_string_ = CreateMaybeMessage< ::feature_proto::ListString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string)
  return kind_.v_list_string_;
}

// .feature_proto.ListBytes v_list_bytes = 30;
inline bool Feature::has_v_list_bytes() const {
  return kind_case() == kVListBytes;
}
inline void Feature::set_has_v_list_bytes() {
  _oneof_case_[0] = kVListBytes;
}
inline void Feature::clear_v_list_bytes() {
  if (has_v_list_bytes()) {
    delete kind_.v_list_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytes& Feature::_internal_v_list_bytes() const {
  return *kind_.v_list_bytes_;
}
inline ::feature_proto::ListBytes* Feature::release_v_list_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes)
  if (has_v_list_bytes()) {
    clear_has_kind();
      ::feature_proto::ListBytes* temp = kind_.v_list_bytes_;
    kind_.v_list_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytes& Feature::v_list_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes)
  return has_v_list_bytes()
      ? *kind_.v_list_bytes_
      : *reinterpret_cast< ::feature_proto::ListBytes*>(&::feature_proto::_ListBytes_default_instance_);
}
inline ::feature_proto::ListBytes* Feature::mutable_v_list_bytes() {
  if (!has_v_list_bytes()) {
    clear_kind();
    set_has_v_list_bytes();
    kind_.v_list_bytes_ = CreateMaybeMessage< ::feature_proto::ListBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes)
  return kind_.v_list_bytes_;
}

// .feature_proto.ListStringDouble v_list_string_double = 31;
inline bool Feature::has_v_list_string_double() const {
  return kind_case() == kVListStringDouble;
}
inline void Feature::set_has_v_list_string_double() {
  _oneof_case_[0] = kVListStringDouble;
}
inline void Feature::clear_v_list_string_double() {
  if (has_v_list_string_double()) {
    delete kind_.v_list_string_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringDouble& Feature::_internal_v_list_string_double() const {
  return *kind_.v_list_string_double_;
}
inline ::feature_proto::ListStringDouble* Feature::release_v_list_string_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_double)
  if (has_v_list_string_double()) {
    clear_has_kind();
      ::feature_proto::ListStringDouble* temp = kind_.v_list_string_double_;
    kind_.v_list_string_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringDouble& Feature::v_list_string_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_double)
  return has_v_list_string_double()
      ? *kind_.v_list_string_double_
      : *reinterpret_cast< ::feature_proto::ListStringDouble*>(&::feature_proto::_ListStringDouble_default_instance_);
}
inline ::feature_proto::ListStringDouble* Feature::mutable_v_list_string_double() {
  if (!has_v_list_string_double()) {
    clear_kind();
    set_has_v_list_string_double();
    kind_.v_list_string_double_ = CreateMaybeMessage< ::feature_proto::ListStringDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_double)
  return kind_.v_list_string_double_;
}

// .feature_proto.ListStringFloat v_list_string_float = 32;
inline bool Feature::has_v_list_string_float() const {
  return kind_case() == kVListStringFloat;
}
inline void Feature::set_has_v_list_string_float() {
  _oneof_case_[0] = kVListStringFloat;
}
inline void Feature::clear_v_list_string_float() {
  if (has_v_list_string_float()) {
    delete kind_.v_list_string_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringFloat& Feature::_internal_v_list_string_float() const {
  return *kind_.v_list_string_float_;
}
inline ::feature_proto::ListStringFloat* Feature::release_v_list_string_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_float)
  if (has_v_list_string_float()) {
    clear_has_kind();
      ::feature_proto::ListStringFloat* temp = kind_.v_list_string_float_;
    kind_.v_list_string_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringFloat& Feature::v_list_string_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_float)
  return has_v_list_string_float()
      ? *kind_.v_list_string_float_
      : *reinterpret_cast< ::feature_proto::ListStringFloat*>(&::feature_proto::_ListStringFloat_default_instance_);
}
inline ::feature_proto::ListStringFloat* Feature::mutable_v_list_string_float() {
  if (!has_v_list_string_float()) {
    clear_kind();
    set_has_v_list_string_float();
    kind_.v_list_string_float_ = CreateMaybeMessage< ::feature_proto::ListStringFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_float)
  return kind_.v_list_string_float_;
}

// .feature_proto.ListStringInt32 v_list_string_int32 = 33;
inline bool Feature::has_v_list_string_int32() const {
  return kind_case() == kVListStringInt32;
}
inline void Feature::set_has_v_list_string_int32() {
  _oneof_case_[0] = kVListStringInt32;
}
inline void Feature::clear_v_list_string_int32() {
  if (has_v_list_string_int32()) {
    delete kind_.v_list_string_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringInt32& Feature::_internal_v_list_string_int32() const {
  return *kind_.v_list_string_int32_;
}
inline ::feature_proto::ListStringInt32* Feature::release_v_list_string_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_int32)
  if (has_v_list_string_int32()) {
    clear_has_kind();
      ::feature_proto::ListStringInt32* temp = kind_.v_list_string_int32_;
    kind_.v_list_string_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringInt32& Feature::v_list_string_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_int32)
  return has_v_list_string_int32()
      ? *kind_.v_list_string_int32_
      : *reinterpret_cast< ::feature_proto::ListStringInt32*>(&::feature_proto::_ListStringInt32_default_instance_);
}
inline ::feature_proto::ListStringInt32* Feature::mutable_v_list_string_int32() {
  if (!has_v_list_string_int32()) {
    clear_kind();
    set_has_v_list_string_int32();
    kind_.v_list_string_int32_ = CreateMaybeMessage< ::feature_proto::ListStringInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_int32)
  return kind_.v_list_string_int32_;
}

// .feature_proto.ListStringInt64 v_list_string_int64 = 34;
inline bool Feature::has_v_list_string_int64() const {
  return kind_case() == kVListStringInt64;
}
inline void Feature::set_has_v_list_string_int64() {
  _oneof_case_[0] = kVListStringInt64;
}
inline void Feature::clear_v_list_string_int64() {
  if (has_v_list_string_int64()) {
    delete kind_.v_list_string_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringInt64& Feature::_internal_v_list_string_int64() const {
  return *kind_.v_list_string_int64_;
}
inline ::feature_proto::ListStringInt64* Feature::release_v_list_string_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_int64)
  if (has_v_list_string_int64()) {
    clear_has_kind();
      ::feature_proto::ListStringInt64* temp = kind_.v_list_string_int64_;
    kind_.v_list_string_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringInt64& Feature::v_list_string_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_int64)
  return has_v_list_string_int64()
      ? *kind_.v_list_string_int64_
      : *reinterpret_cast< ::feature_proto::ListStringInt64*>(&::feature_proto::_ListStringInt64_default_instance_);
}
inline ::feature_proto::ListStringInt64* Feature::mutable_v_list_string_int64() {
  if (!has_v_list_string_int64()) {
    clear_kind();
    set_has_v_list_string_int64();
    kind_.v_list_string_int64_ = CreateMaybeMessage< ::feature_proto::ListStringInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_int64)
  return kind_.v_list_string_int64_;
}

// .feature_proto.ListStringUint32 v_list_string_uint32 = 35;
inline bool Feature::has_v_list_string_uint32() const {
  return kind_case() == kVListStringUint32;
}
inline void Feature::set_has_v_list_string_uint32() {
  _oneof_case_[0] = kVListStringUint32;
}
inline void Feature::clear_v_list_string_uint32() {
  if (has_v_list_string_uint32()) {
    delete kind_.v_list_string_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringUint32& Feature::_internal_v_list_string_uint32() const {
  return *kind_.v_list_string_uint32_;
}
inline ::feature_proto::ListStringUint32* Feature::release_v_list_string_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_uint32)
  if (has_v_list_string_uint32()) {
    clear_has_kind();
      ::feature_proto::ListStringUint32* temp = kind_.v_list_string_uint32_;
    kind_.v_list_string_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringUint32& Feature::v_list_string_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_uint32)
  return has_v_list_string_uint32()
      ? *kind_.v_list_string_uint32_
      : *reinterpret_cast< ::feature_proto::ListStringUint32*>(&::feature_proto::_ListStringUint32_default_instance_);
}
inline ::feature_proto::ListStringUint32* Feature::mutable_v_list_string_uint32() {
  if (!has_v_list_string_uint32()) {
    clear_kind();
    set_has_v_list_string_uint32();
    kind_.v_list_string_uint32_ = CreateMaybeMessage< ::feature_proto::ListStringUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_uint32)
  return kind_.v_list_string_uint32_;
}

// .feature_proto.ListStringUint64 v_list_string_uint64 = 36;
inline bool Feature::has_v_list_string_uint64() const {
  return kind_case() == kVListStringUint64;
}
inline void Feature::set_has_v_list_string_uint64() {
  _oneof_case_[0] = kVListStringUint64;
}
inline void Feature::clear_v_list_string_uint64() {
  if (has_v_list_string_uint64()) {
    delete kind_.v_list_string_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringUint64& Feature::_internal_v_list_string_uint64() const {
  return *kind_.v_list_string_uint64_;
}
inline ::feature_proto::ListStringUint64* Feature::release_v_list_string_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_uint64)
  if (has_v_list_string_uint64()) {
    clear_has_kind();
      ::feature_proto::ListStringUint64* temp = kind_.v_list_string_uint64_;
    kind_.v_list_string_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringUint64& Feature::v_list_string_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_uint64)
  return has_v_list_string_uint64()
      ? *kind_.v_list_string_uint64_
      : *reinterpret_cast< ::feature_proto::ListStringUint64*>(&::feature_proto::_ListStringUint64_default_instance_);
}
inline ::feature_proto::ListStringUint64* Feature::mutable_v_list_string_uint64() {
  if (!has_v_list_string_uint64()) {
    clear_kind();
    set_has_v_list_string_uint64();
    kind_.v_list_string_uint64_ = CreateMaybeMessage< ::feature_proto::ListStringUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_uint64)
  return kind_.v_list_string_uint64_;
}

// .feature_proto.ListStringSint32 v_list_string_sint32 = 37;
inline bool Feature::has_v_list_string_sint32() const {
  return kind_case() == kVListStringSint32;
}
inline void Feature::set_has_v_list_string_sint32() {
  _oneof_case_[0] = kVListStringSint32;
}
inline void Feature::clear_v_list_string_sint32() {
  if (has_v_list_string_sint32()) {
    delete kind_.v_list_string_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringSint32& Feature::_internal_v_list_string_sint32() const {
  return *kind_.v_list_string_sint32_;
}
inline ::feature_proto::ListStringSint32* Feature::release_v_list_string_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_sint32)
  if (has_v_list_string_sint32()) {
    clear_has_kind();
      ::feature_proto::ListStringSint32* temp = kind_.v_list_string_sint32_;
    kind_.v_list_string_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringSint32& Feature::v_list_string_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_sint32)
  return has_v_list_string_sint32()
      ? *kind_.v_list_string_sint32_
      : *reinterpret_cast< ::feature_proto::ListStringSint32*>(&::feature_proto::_ListStringSint32_default_instance_);
}
inline ::feature_proto::ListStringSint32* Feature::mutable_v_list_string_sint32() {
  if (!has_v_list_string_sint32()) {
    clear_kind();
    set_has_v_list_string_sint32();
    kind_.v_list_string_sint32_ = CreateMaybeMessage< ::feature_proto::ListStringSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_sint32)
  return kind_.v_list_string_sint32_;
}

// .feature_proto.ListStringSint64 v_list_string_sint64 = 38;
inline bool Feature::has_v_list_string_sint64() const {
  return kind_case() == kVListStringSint64;
}
inline void Feature::set_has_v_list_string_sint64() {
  _oneof_case_[0] = kVListStringSint64;
}
inline void Feature::clear_v_list_string_sint64() {
  if (has_v_list_string_sint64()) {
    delete kind_.v_list_string_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringSint64& Feature::_internal_v_list_string_sint64() const {
  return *kind_.v_list_string_sint64_;
}
inline ::feature_proto::ListStringSint64* Feature::release_v_list_string_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_sint64)
  if (has_v_list_string_sint64()) {
    clear_has_kind();
      ::feature_proto::ListStringSint64* temp = kind_.v_list_string_sint64_;
    kind_.v_list_string_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringSint64& Feature::v_list_string_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_sint64)
  return has_v_list_string_sint64()
      ? *kind_.v_list_string_sint64_
      : *reinterpret_cast< ::feature_proto::ListStringSint64*>(&::feature_proto::_ListStringSint64_default_instance_);
}
inline ::feature_proto::ListStringSint64* Feature::mutable_v_list_string_sint64() {
  if (!has_v_list_string_sint64()) {
    clear_kind();
    set_has_v_list_string_sint64();
    kind_.v_list_string_sint64_ = CreateMaybeMessage< ::feature_proto::ListStringSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_sint64)
  return kind_.v_list_string_sint64_;
}

// .feature_proto.ListStringFixed32 v_list_string_fixed32 = 39;
inline bool Feature::has_v_list_string_fixed32() const {
  return kind_case() == kVListStringFixed32;
}
inline void Feature::set_has_v_list_string_fixed32() {
  _oneof_case_[0] = kVListStringFixed32;
}
inline void Feature::clear_v_list_string_fixed32() {
  if (has_v_list_string_fixed32()) {
    delete kind_.v_list_string_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringFixed32& Feature::_internal_v_list_string_fixed32() const {
  return *kind_.v_list_string_fixed32_;
}
inline ::feature_proto::ListStringFixed32* Feature::release_v_list_string_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_fixed32)
  if (has_v_list_string_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListStringFixed32* temp = kind_.v_list_string_fixed32_;
    kind_.v_list_string_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringFixed32& Feature::v_list_string_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_fixed32)
  return has_v_list_string_fixed32()
      ? *kind_.v_list_string_fixed32_
      : *reinterpret_cast< ::feature_proto::ListStringFixed32*>(&::feature_proto::_ListStringFixed32_default_instance_);
}
inline ::feature_proto::ListStringFixed32* Feature::mutable_v_list_string_fixed32() {
  if (!has_v_list_string_fixed32()) {
    clear_kind();
    set_has_v_list_string_fixed32();
    kind_.v_list_string_fixed32_ = CreateMaybeMessage< ::feature_proto::ListStringFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_fixed32)
  return kind_.v_list_string_fixed32_;
}

// .feature_proto.ListStringFixed64 v_list_string_fixed64 = 40;
inline bool Feature::has_v_list_string_fixed64() const {
  return kind_case() == kVListStringFixed64;
}
inline void Feature::set_has_v_list_string_fixed64() {
  _oneof_case_[0] = kVListStringFixed64;
}
inline void Feature::clear_v_list_string_fixed64() {
  if (has_v_list_string_fixed64()) {
    delete kind_.v_list_string_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringFixed64& Feature::_internal_v_list_string_fixed64() const {
  return *kind_.v_list_string_fixed64_;
}
inline ::feature_proto::ListStringFixed64* Feature::release_v_list_string_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_fixed64)
  if (has_v_list_string_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListStringFixed64* temp = kind_.v_list_string_fixed64_;
    kind_.v_list_string_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringFixed64& Feature::v_list_string_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_fixed64)
  return has_v_list_string_fixed64()
      ? *kind_.v_list_string_fixed64_
      : *reinterpret_cast< ::feature_proto::ListStringFixed64*>(&::feature_proto::_ListStringFixed64_default_instance_);
}
inline ::feature_proto::ListStringFixed64* Feature::mutable_v_list_string_fixed64() {
  if (!has_v_list_string_fixed64()) {
    clear_kind();
    set_has_v_list_string_fixed64();
    kind_.v_list_string_fixed64_ = CreateMaybeMessage< ::feature_proto::ListStringFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_fixed64)
  return kind_.v_list_string_fixed64_;
}

// .feature_proto.ListStringSfixed32 v_list_string_sfixed32 = 41;
inline bool Feature::has_v_list_string_sfixed32() const {
  return kind_case() == kVListStringSfixed32;
}
inline void Feature::set_has_v_list_string_sfixed32() {
  _oneof_case_[0] = kVListStringSfixed32;
}
inline void Feature::clear_v_list_string_sfixed32() {
  if (has_v_list_string_sfixed32()) {
    delete kind_.v_list_string_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringSfixed32& Feature::_internal_v_list_string_sfixed32() const {
  return *kind_.v_list_string_sfixed32_;
}
inline ::feature_proto::ListStringSfixed32* Feature::release_v_list_string_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_sfixed32)
  if (has_v_list_string_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListStringSfixed32* temp = kind_.v_list_string_sfixed32_;
    kind_.v_list_string_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringSfixed32& Feature::v_list_string_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_sfixed32)
  return has_v_list_string_sfixed32()
      ? *kind_.v_list_string_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListStringSfixed32*>(&::feature_proto::_ListStringSfixed32_default_instance_);
}
inline ::feature_proto::ListStringSfixed32* Feature::mutable_v_list_string_sfixed32() {
  if (!has_v_list_string_sfixed32()) {
    clear_kind();
    set_has_v_list_string_sfixed32();
    kind_.v_list_string_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListStringSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_sfixed32)
  return kind_.v_list_string_sfixed32_;
}

// .feature_proto.ListStringSfixed64 v_list_string_sfixed64 = 42;
inline bool Feature::has_v_list_string_sfixed64() const {
  return kind_case() == kVListStringSfixed64;
}
inline void Feature::set_has_v_list_string_sfixed64() {
  _oneof_case_[0] = kVListStringSfixed64;
}
inline void Feature::clear_v_list_string_sfixed64() {
  if (has_v_list_string_sfixed64()) {
    delete kind_.v_list_string_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringSfixed64& Feature::_internal_v_list_string_sfixed64() const {
  return *kind_.v_list_string_sfixed64_;
}
inline ::feature_proto::ListStringSfixed64* Feature::release_v_list_string_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_sfixed64)
  if (has_v_list_string_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListStringSfixed64* temp = kind_.v_list_string_sfixed64_;
    kind_.v_list_string_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringSfixed64& Feature::v_list_string_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_sfixed64)
  return has_v_list_string_sfixed64()
      ? *kind_.v_list_string_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListStringSfixed64*>(&::feature_proto::_ListStringSfixed64_default_instance_);
}
inline ::feature_proto::ListStringSfixed64* Feature::mutable_v_list_string_sfixed64() {
  if (!has_v_list_string_sfixed64()) {
    clear_kind();
    set_has_v_list_string_sfixed64();
    kind_.v_list_string_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListStringSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_sfixed64)
  return kind_.v_list_string_sfixed64_;
}

// .feature_proto.ListStringBool v_list_string_bool = 43;
inline bool Feature::has_v_list_string_bool() const {
  return kind_case() == kVListStringBool;
}
inline void Feature::set_has_v_list_string_bool() {
  _oneof_case_[0] = kVListStringBool;
}
inline void Feature::clear_v_list_string_bool() {
  if (has_v_list_string_bool()) {
    delete kind_.v_list_string_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringBool& Feature::_internal_v_list_string_bool() const {
  return *kind_.v_list_string_bool_;
}
inline ::feature_proto::ListStringBool* Feature::release_v_list_string_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_bool)
  if (has_v_list_string_bool()) {
    clear_has_kind();
      ::feature_proto::ListStringBool* temp = kind_.v_list_string_bool_;
    kind_.v_list_string_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringBool& Feature::v_list_string_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_bool)
  return has_v_list_string_bool()
      ? *kind_.v_list_string_bool_
      : *reinterpret_cast< ::feature_proto::ListStringBool*>(&::feature_proto::_ListStringBool_default_instance_);
}
inline ::feature_proto::ListStringBool* Feature::mutable_v_list_string_bool() {
  if (!has_v_list_string_bool()) {
    clear_kind();
    set_has_v_list_string_bool();
    kind_.v_list_string_bool_ = CreateMaybeMessage< ::feature_proto::ListStringBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_bool)
  return kind_.v_list_string_bool_;
}

// .feature_proto.ListStringString v_list_string_string = 44;
inline bool Feature::has_v_list_string_string() const {
  return kind_case() == kVListStringString;
}
inline void Feature::set_has_v_list_string_string() {
  _oneof_case_[0] = kVListStringString;
}
inline void Feature::clear_v_list_string_string() {
  if (has_v_list_string_string()) {
    delete kind_.v_list_string_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringString& Feature::_internal_v_list_string_string() const {
  return *kind_.v_list_string_string_;
}
inline ::feature_proto::ListStringString* Feature::release_v_list_string_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_string)
  if (has_v_list_string_string()) {
    clear_has_kind();
      ::feature_proto::ListStringString* temp = kind_.v_list_string_string_;
    kind_.v_list_string_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringString& Feature::v_list_string_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_string)
  return has_v_list_string_string()
      ? *kind_.v_list_string_string_
      : *reinterpret_cast< ::feature_proto::ListStringString*>(&::feature_proto::_ListStringString_default_instance_);
}
inline ::feature_proto::ListStringString* Feature::mutable_v_list_string_string() {
  if (!has_v_list_string_string()) {
    clear_kind();
    set_has_v_list_string_string();
    kind_.v_list_string_string_ = CreateMaybeMessage< ::feature_proto::ListStringString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_string)
  return kind_.v_list_string_string_;
}

// .feature_proto.ListStringBytes v_list_string_bytes = 45;
inline bool Feature::has_v_list_string_bytes() const {
  return kind_case() == kVListStringBytes;
}
inline void Feature::set_has_v_list_string_bytes() {
  _oneof_case_[0] = kVListStringBytes;
}
inline void Feature::clear_v_list_string_bytes() {
  if (has_v_list_string_bytes()) {
    delete kind_.v_list_string_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListStringBytes& Feature::_internal_v_list_string_bytes() const {
  return *kind_.v_list_string_bytes_;
}
inline ::feature_proto::ListStringBytes* Feature::release_v_list_string_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_string_bytes)
  if (has_v_list_string_bytes()) {
    clear_has_kind();
      ::feature_proto::ListStringBytes* temp = kind_.v_list_string_bytes_;
    kind_.v_list_string_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListStringBytes& Feature::v_list_string_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_string_bytes)
  return has_v_list_string_bytes()
      ? *kind_.v_list_string_bytes_
      : *reinterpret_cast< ::feature_proto::ListStringBytes*>(&::feature_proto::_ListStringBytes_default_instance_);
}
inline ::feature_proto::ListStringBytes* Feature::mutable_v_list_string_bytes() {
  if (!has_v_list_string_bytes()) {
    clear_kind();
    set_has_v_list_string_bytes();
    kind_.v_list_string_bytes_ = CreateMaybeMessage< ::feature_proto::ListStringBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_string_bytes)
  return kind_.v_list_string_bytes_;
}

// .feature_proto.ListBytesDouble v_list_bytes_double = 46;
inline bool Feature::has_v_list_bytes_double() const {
  return kind_case() == kVListBytesDouble;
}
inline void Feature::set_has_v_list_bytes_double() {
  _oneof_case_[0] = kVListBytesDouble;
}
inline void Feature::clear_v_list_bytes_double() {
  if (has_v_list_bytes_double()) {
    delete kind_.v_list_bytes_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesDouble& Feature::_internal_v_list_bytes_double() const {
  return *kind_.v_list_bytes_double_;
}
inline ::feature_proto::ListBytesDouble* Feature::release_v_list_bytes_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_double)
  if (has_v_list_bytes_double()) {
    clear_has_kind();
      ::feature_proto::ListBytesDouble* temp = kind_.v_list_bytes_double_;
    kind_.v_list_bytes_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesDouble& Feature::v_list_bytes_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_double)
  return has_v_list_bytes_double()
      ? *kind_.v_list_bytes_double_
      : *reinterpret_cast< ::feature_proto::ListBytesDouble*>(&::feature_proto::_ListBytesDouble_default_instance_);
}
inline ::feature_proto::ListBytesDouble* Feature::mutable_v_list_bytes_double() {
  if (!has_v_list_bytes_double()) {
    clear_kind();
    set_has_v_list_bytes_double();
    kind_.v_list_bytes_double_ = CreateMaybeMessage< ::feature_proto::ListBytesDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_double)
  return kind_.v_list_bytes_double_;
}

// .feature_proto.ListBytesFloat v_list_bytes_float = 47;
inline bool Feature::has_v_list_bytes_float() const {
  return kind_case() == kVListBytesFloat;
}
inline void Feature::set_has_v_list_bytes_float() {
  _oneof_case_[0] = kVListBytesFloat;
}
inline void Feature::clear_v_list_bytes_float() {
  if (has_v_list_bytes_float()) {
    delete kind_.v_list_bytes_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesFloat& Feature::_internal_v_list_bytes_float() const {
  return *kind_.v_list_bytes_float_;
}
inline ::feature_proto::ListBytesFloat* Feature::release_v_list_bytes_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_float)
  if (has_v_list_bytes_float()) {
    clear_has_kind();
      ::feature_proto::ListBytesFloat* temp = kind_.v_list_bytes_float_;
    kind_.v_list_bytes_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesFloat& Feature::v_list_bytes_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_float)
  return has_v_list_bytes_float()
      ? *kind_.v_list_bytes_float_
      : *reinterpret_cast< ::feature_proto::ListBytesFloat*>(&::feature_proto::_ListBytesFloat_default_instance_);
}
inline ::feature_proto::ListBytesFloat* Feature::mutable_v_list_bytes_float() {
  if (!has_v_list_bytes_float()) {
    clear_kind();
    set_has_v_list_bytes_float();
    kind_.v_list_bytes_float_ = CreateMaybeMessage< ::feature_proto::ListBytesFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_float)
  return kind_.v_list_bytes_float_;
}

// .feature_proto.ListBytesInt32 v_list_bytes_int32 = 48;
inline bool Feature::has_v_list_bytes_int32() const {
  return kind_case() == kVListBytesInt32;
}
inline void Feature::set_has_v_list_bytes_int32() {
  _oneof_case_[0] = kVListBytesInt32;
}
inline void Feature::clear_v_list_bytes_int32() {
  if (has_v_list_bytes_int32()) {
    delete kind_.v_list_bytes_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesInt32& Feature::_internal_v_list_bytes_int32() const {
  return *kind_.v_list_bytes_int32_;
}
inline ::feature_proto::ListBytesInt32* Feature::release_v_list_bytes_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_int32)
  if (has_v_list_bytes_int32()) {
    clear_has_kind();
      ::feature_proto::ListBytesInt32* temp = kind_.v_list_bytes_int32_;
    kind_.v_list_bytes_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesInt32& Feature::v_list_bytes_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_int32)
  return has_v_list_bytes_int32()
      ? *kind_.v_list_bytes_int32_
      : *reinterpret_cast< ::feature_proto::ListBytesInt32*>(&::feature_proto::_ListBytesInt32_default_instance_);
}
inline ::feature_proto::ListBytesInt32* Feature::mutable_v_list_bytes_int32() {
  if (!has_v_list_bytes_int32()) {
    clear_kind();
    set_has_v_list_bytes_int32();
    kind_.v_list_bytes_int32_ = CreateMaybeMessage< ::feature_proto::ListBytesInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_int32)
  return kind_.v_list_bytes_int32_;
}

// .feature_proto.ListBytesInt64 v_list_bytes_int64 = 49;
inline bool Feature::has_v_list_bytes_int64() const {
  return kind_case() == kVListBytesInt64;
}
inline void Feature::set_has_v_list_bytes_int64() {
  _oneof_case_[0] = kVListBytesInt64;
}
inline void Feature::clear_v_list_bytes_int64() {
  if (has_v_list_bytes_int64()) {
    delete kind_.v_list_bytes_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesInt64& Feature::_internal_v_list_bytes_int64() const {
  return *kind_.v_list_bytes_int64_;
}
inline ::feature_proto::ListBytesInt64* Feature::release_v_list_bytes_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_int64)
  if (has_v_list_bytes_int64()) {
    clear_has_kind();
      ::feature_proto::ListBytesInt64* temp = kind_.v_list_bytes_int64_;
    kind_.v_list_bytes_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesInt64& Feature::v_list_bytes_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_int64)
  return has_v_list_bytes_int64()
      ? *kind_.v_list_bytes_int64_
      : *reinterpret_cast< ::feature_proto::ListBytesInt64*>(&::feature_proto::_ListBytesInt64_default_instance_);
}
inline ::feature_proto::ListBytesInt64* Feature::mutable_v_list_bytes_int64() {
  if (!has_v_list_bytes_int64()) {
    clear_kind();
    set_has_v_list_bytes_int64();
    kind_.v_list_bytes_int64_ = CreateMaybeMessage< ::feature_proto::ListBytesInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_int64)
  return kind_.v_list_bytes_int64_;
}

// .feature_proto.ListBytesUint32 v_list_bytes_uint32 = 50;
inline bool Feature::has_v_list_bytes_uint32() const {
  return kind_case() == kVListBytesUint32;
}
inline void Feature::set_has_v_list_bytes_uint32() {
  _oneof_case_[0] = kVListBytesUint32;
}
inline void Feature::clear_v_list_bytes_uint32() {
  if (has_v_list_bytes_uint32()) {
    delete kind_.v_list_bytes_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesUint32& Feature::_internal_v_list_bytes_uint32() const {
  return *kind_.v_list_bytes_uint32_;
}
inline ::feature_proto::ListBytesUint32* Feature::release_v_list_bytes_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_uint32)
  if (has_v_list_bytes_uint32()) {
    clear_has_kind();
      ::feature_proto::ListBytesUint32* temp = kind_.v_list_bytes_uint32_;
    kind_.v_list_bytes_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesUint32& Feature::v_list_bytes_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_uint32)
  return has_v_list_bytes_uint32()
      ? *kind_.v_list_bytes_uint32_
      : *reinterpret_cast< ::feature_proto::ListBytesUint32*>(&::feature_proto::_ListBytesUint32_default_instance_);
}
inline ::feature_proto::ListBytesUint32* Feature::mutable_v_list_bytes_uint32() {
  if (!has_v_list_bytes_uint32()) {
    clear_kind();
    set_has_v_list_bytes_uint32();
    kind_.v_list_bytes_uint32_ = CreateMaybeMessage< ::feature_proto::ListBytesUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_uint32)
  return kind_.v_list_bytes_uint32_;
}

// .feature_proto.ListBytesUint64 v_list_bytes_uint64 = 51;
inline bool Feature::has_v_list_bytes_uint64() const {
  return kind_case() == kVListBytesUint64;
}
inline void Feature::set_has_v_list_bytes_uint64() {
  _oneof_case_[0] = kVListBytesUint64;
}
inline void Feature::clear_v_list_bytes_uint64() {
  if (has_v_list_bytes_uint64()) {
    delete kind_.v_list_bytes_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesUint64& Feature::_internal_v_list_bytes_uint64() const {
  return *kind_.v_list_bytes_uint64_;
}
inline ::feature_proto::ListBytesUint64* Feature::release_v_list_bytes_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_uint64)
  if (has_v_list_bytes_uint64()) {
    clear_has_kind();
      ::feature_proto::ListBytesUint64* temp = kind_.v_list_bytes_uint64_;
    kind_.v_list_bytes_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesUint64& Feature::v_list_bytes_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_uint64)
  return has_v_list_bytes_uint64()
      ? *kind_.v_list_bytes_uint64_
      : *reinterpret_cast< ::feature_proto::ListBytesUint64*>(&::feature_proto::_ListBytesUint64_default_instance_);
}
inline ::feature_proto::ListBytesUint64* Feature::mutable_v_list_bytes_uint64() {
  if (!has_v_list_bytes_uint64()) {
    clear_kind();
    set_has_v_list_bytes_uint64();
    kind_.v_list_bytes_uint64_ = CreateMaybeMessage< ::feature_proto::ListBytesUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_uint64)
  return kind_.v_list_bytes_uint64_;
}

// .feature_proto.ListBytesSint32 v_list_bytes_sint32 = 52;
inline bool Feature::has_v_list_bytes_sint32() const {
  return kind_case() == kVListBytesSint32;
}
inline void Feature::set_has_v_list_bytes_sint32() {
  _oneof_case_[0] = kVListBytesSint32;
}
inline void Feature::clear_v_list_bytes_sint32() {
  if (has_v_list_bytes_sint32()) {
    delete kind_.v_list_bytes_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesSint32& Feature::_internal_v_list_bytes_sint32() const {
  return *kind_.v_list_bytes_sint32_;
}
inline ::feature_proto::ListBytesSint32* Feature::release_v_list_bytes_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_sint32)
  if (has_v_list_bytes_sint32()) {
    clear_has_kind();
      ::feature_proto::ListBytesSint32* temp = kind_.v_list_bytes_sint32_;
    kind_.v_list_bytes_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesSint32& Feature::v_list_bytes_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_sint32)
  return has_v_list_bytes_sint32()
      ? *kind_.v_list_bytes_sint32_
      : *reinterpret_cast< ::feature_proto::ListBytesSint32*>(&::feature_proto::_ListBytesSint32_default_instance_);
}
inline ::feature_proto::ListBytesSint32* Feature::mutable_v_list_bytes_sint32() {
  if (!has_v_list_bytes_sint32()) {
    clear_kind();
    set_has_v_list_bytes_sint32();
    kind_.v_list_bytes_sint32_ = CreateMaybeMessage< ::feature_proto::ListBytesSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_sint32)
  return kind_.v_list_bytes_sint32_;
}

// .feature_proto.ListBytesSint64 v_list_bytes_sint64 = 53;
inline bool Feature::has_v_list_bytes_sint64() const {
  return kind_case() == kVListBytesSint64;
}
inline void Feature::set_has_v_list_bytes_sint64() {
  _oneof_case_[0] = kVListBytesSint64;
}
inline void Feature::clear_v_list_bytes_sint64() {
  if (has_v_list_bytes_sint64()) {
    delete kind_.v_list_bytes_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesSint64& Feature::_internal_v_list_bytes_sint64() const {
  return *kind_.v_list_bytes_sint64_;
}
inline ::feature_proto::ListBytesSint64* Feature::release_v_list_bytes_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_sint64)
  if (has_v_list_bytes_sint64()) {
    clear_has_kind();
      ::feature_proto::ListBytesSint64* temp = kind_.v_list_bytes_sint64_;
    kind_.v_list_bytes_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesSint64& Feature::v_list_bytes_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_sint64)
  return has_v_list_bytes_sint64()
      ? *kind_.v_list_bytes_sint64_
      : *reinterpret_cast< ::feature_proto::ListBytesSint64*>(&::feature_proto::_ListBytesSint64_default_instance_);
}
inline ::feature_proto::ListBytesSint64* Feature::mutable_v_list_bytes_sint64() {
  if (!has_v_list_bytes_sint64()) {
    clear_kind();
    set_has_v_list_bytes_sint64();
    kind_.v_list_bytes_sint64_ = CreateMaybeMessage< ::feature_proto::ListBytesSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_sint64)
  return kind_.v_list_bytes_sint64_;
}

// .feature_proto.ListBytesFixed32 v_list_bytes_fixed32 = 54;
inline bool Feature::has_v_list_bytes_fixed32() const {
  return kind_case() == kVListBytesFixed32;
}
inline void Feature::set_has_v_list_bytes_fixed32() {
  _oneof_case_[0] = kVListBytesFixed32;
}
inline void Feature::clear_v_list_bytes_fixed32() {
  if (has_v_list_bytes_fixed32()) {
    delete kind_.v_list_bytes_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesFixed32& Feature::_internal_v_list_bytes_fixed32() const {
  return *kind_.v_list_bytes_fixed32_;
}
inline ::feature_proto::ListBytesFixed32* Feature::release_v_list_bytes_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_fixed32)
  if (has_v_list_bytes_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListBytesFixed32* temp = kind_.v_list_bytes_fixed32_;
    kind_.v_list_bytes_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesFixed32& Feature::v_list_bytes_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_fixed32)
  return has_v_list_bytes_fixed32()
      ? *kind_.v_list_bytes_fixed32_
      : *reinterpret_cast< ::feature_proto::ListBytesFixed32*>(&::feature_proto::_ListBytesFixed32_default_instance_);
}
inline ::feature_proto::ListBytesFixed32* Feature::mutable_v_list_bytes_fixed32() {
  if (!has_v_list_bytes_fixed32()) {
    clear_kind();
    set_has_v_list_bytes_fixed32();
    kind_.v_list_bytes_fixed32_ = CreateMaybeMessage< ::feature_proto::ListBytesFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_fixed32)
  return kind_.v_list_bytes_fixed32_;
}

// .feature_proto.ListBytesFixed64 v_list_bytes_fixed64 = 55;
inline bool Feature::has_v_list_bytes_fixed64() const {
  return kind_case() == kVListBytesFixed64;
}
inline void Feature::set_has_v_list_bytes_fixed64() {
  _oneof_case_[0] = kVListBytesFixed64;
}
inline void Feature::clear_v_list_bytes_fixed64() {
  if (has_v_list_bytes_fixed64()) {
    delete kind_.v_list_bytes_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesFixed64& Feature::_internal_v_list_bytes_fixed64() const {
  return *kind_.v_list_bytes_fixed64_;
}
inline ::feature_proto::ListBytesFixed64* Feature::release_v_list_bytes_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_fixed64)
  if (has_v_list_bytes_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListBytesFixed64* temp = kind_.v_list_bytes_fixed64_;
    kind_.v_list_bytes_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesFixed64& Feature::v_list_bytes_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_fixed64)
  return has_v_list_bytes_fixed64()
      ? *kind_.v_list_bytes_fixed64_
      : *reinterpret_cast< ::feature_proto::ListBytesFixed64*>(&::feature_proto::_ListBytesFixed64_default_instance_);
}
inline ::feature_proto::ListBytesFixed64* Feature::mutable_v_list_bytes_fixed64() {
  if (!has_v_list_bytes_fixed64()) {
    clear_kind();
    set_has_v_list_bytes_fixed64();
    kind_.v_list_bytes_fixed64_ = CreateMaybeMessage< ::feature_proto::ListBytesFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_fixed64)
  return kind_.v_list_bytes_fixed64_;
}

// .feature_proto.ListBytesSfixed32 v_list_bytes_sfixed32 = 56;
inline bool Feature::has_v_list_bytes_sfixed32() const {
  return kind_case() == kVListBytesSfixed32;
}
inline void Feature::set_has_v_list_bytes_sfixed32() {
  _oneof_case_[0] = kVListBytesSfixed32;
}
inline void Feature::clear_v_list_bytes_sfixed32() {
  if (has_v_list_bytes_sfixed32()) {
    delete kind_.v_list_bytes_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesSfixed32& Feature::_internal_v_list_bytes_sfixed32() const {
  return *kind_.v_list_bytes_sfixed32_;
}
inline ::feature_proto::ListBytesSfixed32* Feature::release_v_list_bytes_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_sfixed32)
  if (has_v_list_bytes_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListBytesSfixed32* temp = kind_.v_list_bytes_sfixed32_;
    kind_.v_list_bytes_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesSfixed32& Feature::v_list_bytes_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_sfixed32)
  return has_v_list_bytes_sfixed32()
      ? *kind_.v_list_bytes_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListBytesSfixed32*>(&::feature_proto::_ListBytesSfixed32_default_instance_);
}
inline ::feature_proto::ListBytesSfixed32* Feature::mutable_v_list_bytes_sfixed32() {
  if (!has_v_list_bytes_sfixed32()) {
    clear_kind();
    set_has_v_list_bytes_sfixed32();
    kind_.v_list_bytes_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListBytesSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_sfixed32)
  return kind_.v_list_bytes_sfixed32_;
}

// .feature_proto.ListBytesSfixed64 v_list_bytes_sfixed64 = 57;
inline bool Feature::has_v_list_bytes_sfixed64() const {
  return kind_case() == kVListBytesSfixed64;
}
inline void Feature::set_has_v_list_bytes_sfixed64() {
  _oneof_case_[0] = kVListBytesSfixed64;
}
inline void Feature::clear_v_list_bytes_sfixed64() {
  if (has_v_list_bytes_sfixed64()) {
    delete kind_.v_list_bytes_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesSfixed64& Feature::_internal_v_list_bytes_sfixed64() const {
  return *kind_.v_list_bytes_sfixed64_;
}
inline ::feature_proto::ListBytesSfixed64* Feature::release_v_list_bytes_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_sfixed64)
  if (has_v_list_bytes_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListBytesSfixed64* temp = kind_.v_list_bytes_sfixed64_;
    kind_.v_list_bytes_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesSfixed64& Feature::v_list_bytes_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_sfixed64)
  return has_v_list_bytes_sfixed64()
      ? *kind_.v_list_bytes_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListBytesSfixed64*>(&::feature_proto::_ListBytesSfixed64_default_instance_);
}
inline ::feature_proto::ListBytesSfixed64* Feature::mutable_v_list_bytes_sfixed64() {
  if (!has_v_list_bytes_sfixed64()) {
    clear_kind();
    set_has_v_list_bytes_sfixed64();
    kind_.v_list_bytes_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListBytesSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_sfixed64)
  return kind_.v_list_bytes_sfixed64_;
}

// .feature_proto.ListBytesBool v_list_bytes_bool = 58;
inline bool Feature::has_v_list_bytes_bool() const {
  return kind_case() == kVListBytesBool;
}
inline void Feature::set_has_v_list_bytes_bool() {
  _oneof_case_[0] = kVListBytesBool;
}
inline void Feature::clear_v_list_bytes_bool() {
  if (has_v_list_bytes_bool()) {
    delete kind_.v_list_bytes_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesBool& Feature::_internal_v_list_bytes_bool() const {
  return *kind_.v_list_bytes_bool_;
}
inline ::feature_proto::ListBytesBool* Feature::release_v_list_bytes_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_bool)
  if (has_v_list_bytes_bool()) {
    clear_has_kind();
      ::feature_proto::ListBytesBool* temp = kind_.v_list_bytes_bool_;
    kind_.v_list_bytes_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesBool& Feature::v_list_bytes_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_bool)
  return has_v_list_bytes_bool()
      ? *kind_.v_list_bytes_bool_
      : *reinterpret_cast< ::feature_proto::ListBytesBool*>(&::feature_proto::_ListBytesBool_default_instance_);
}
inline ::feature_proto::ListBytesBool* Feature::mutable_v_list_bytes_bool() {
  if (!has_v_list_bytes_bool()) {
    clear_kind();
    set_has_v_list_bytes_bool();
    kind_.v_list_bytes_bool_ = CreateMaybeMessage< ::feature_proto::ListBytesBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_bool)
  return kind_.v_list_bytes_bool_;
}

// .feature_proto.ListBytesString v_list_bytes_string = 59;
inline bool Feature::has_v_list_bytes_string() const {
  return kind_case() == kVListBytesString;
}
inline void Feature::set_has_v_list_bytes_string() {
  _oneof_case_[0] = kVListBytesString;
}
inline void Feature::clear_v_list_bytes_string() {
  if (has_v_list_bytes_string()) {
    delete kind_.v_list_bytes_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesString& Feature::_internal_v_list_bytes_string() const {
  return *kind_.v_list_bytes_string_;
}
inline ::feature_proto::ListBytesString* Feature::release_v_list_bytes_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_string)
  if (has_v_list_bytes_string()) {
    clear_has_kind();
      ::feature_proto::ListBytesString* temp = kind_.v_list_bytes_string_;
    kind_.v_list_bytes_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesString& Feature::v_list_bytes_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_string)
  return has_v_list_bytes_string()
      ? *kind_.v_list_bytes_string_
      : *reinterpret_cast< ::feature_proto::ListBytesString*>(&::feature_proto::_ListBytesString_default_instance_);
}
inline ::feature_proto::ListBytesString* Feature::mutable_v_list_bytes_string() {
  if (!has_v_list_bytes_string()) {
    clear_kind();
    set_has_v_list_bytes_string();
    kind_.v_list_bytes_string_ = CreateMaybeMessage< ::feature_proto::ListBytesString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_string)
  return kind_.v_list_bytes_string_;
}

// .feature_proto.ListBytesBytes v_list_bytes_bytes = 60;
inline bool Feature::has_v_list_bytes_bytes() const {
  return kind_case() == kVListBytesBytes;
}
inline void Feature::set_has_v_list_bytes_bytes() {
  _oneof_case_[0] = kVListBytesBytes;
}
inline void Feature::clear_v_list_bytes_bytes() {
  if (has_v_list_bytes_bytes()) {
    delete kind_.v_list_bytes_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBytesBytes& Feature::_internal_v_list_bytes_bytes() const {
  return *kind_.v_list_bytes_bytes_;
}
inline ::feature_proto::ListBytesBytes* Feature::release_v_list_bytes_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bytes_bytes)
  if (has_v_list_bytes_bytes()) {
    clear_has_kind();
      ::feature_proto::ListBytesBytes* temp = kind_.v_list_bytes_bytes_;
    kind_.v_list_bytes_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBytesBytes& Feature::v_list_bytes_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bytes_bytes)
  return has_v_list_bytes_bytes()
      ? *kind_.v_list_bytes_bytes_
      : *reinterpret_cast< ::feature_proto::ListBytesBytes*>(&::feature_proto::_ListBytesBytes_default_instance_);
}
inline ::feature_proto::ListBytesBytes* Feature::mutable_v_list_bytes_bytes() {
  if (!has_v_list_bytes_bytes()) {
    clear_kind();
    set_has_v_list_bytes_bytes();
    kind_.v_list_bytes_bytes_ = CreateMaybeMessage< ::feature_proto::ListBytesBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bytes_bytes)
  return kind_.v_list_bytes_bytes_;
}

// .feature_proto.ListInt32Double v_list_int32_double = 61;
inline bool Feature::has_v_list_int32_double() const {
  return kind_case() == kVListInt32Double;
}
inline void Feature::set_has_v_list_int32_double() {
  _oneof_case_[0] = kVListInt32Double;
}
inline void Feature::clear_v_list_int32_double() {
  if (has_v_list_int32_double()) {
    delete kind_.v_list_int32_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Double& Feature::_internal_v_list_int32_double() const {
  return *kind_.v_list_int32_double_;
}
inline ::feature_proto::ListInt32Double* Feature::release_v_list_int32_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_double)
  if (has_v_list_int32_double()) {
    clear_has_kind();
      ::feature_proto::ListInt32Double* temp = kind_.v_list_int32_double_;
    kind_.v_list_int32_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Double& Feature::v_list_int32_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_double)
  return has_v_list_int32_double()
      ? *kind_.v_list_int32_double_
      : *reinterpret_cast< ::feature_proto::ListInt32Double*>(&::feature_proto::_ListInt32Double_default_instance_);
}
inline ::feature_proto::ListInt32Double* Feature::mutable_v_list_int32_double() {
  if (!has_v_list_int32_double()) {
    clear_kind();
    set_has_v_list_int32_double();
    kind_.v_list_int32_double_ = CreateMaybeMessage< ::feature_proto::ListInt32Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_double)
  return kind_.v_list_int32_double_;
}

// .feature_proto.ListInt32Float v_list_int32_float = 62;
inline bool Feature::has_v_list_int32_float() const {
  return kind_case() == kVListInt32Float;
}
inline void Feature::set_has_v_list_int32_float() {
  _oneof_case_[0] = kVListInt32Float;
}
inline void Feature::clear_v_list_int32_float() {
  if (has_v_list_int32_float()) {
    delete kind_.v_list_int32_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Float& Feature::_internal_v_list_int32_float() const {
  return *kind_.v_list_int32_float_;
}
inline ::feature_proto::ListInt32Float* Feature::release_v_list_int32_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_float)
  if (has_v_list_int32_float()) {
    clear_has_kind();
      ::feature_proto::ListInt32Float* temp = kind_.v_list_int32_float_;
    kind_.v_list_int32_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Float& Feature::v_list_int32_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_float)
  return has_v_list_int32_float()
      ? *kind_.v_list_int32_float_
      : *reinterpret_cast< ::feature_proto::ListInt32Float*>(&::feature_proto::_ListInt32Float_default_instance_);
}
inline ::feature_proto::ListInt32Float* Feature::mutable_v_list_int32_float() {
  if (!has_v_list_int32_float()) {
    clear_kind();
    set_has_v_list_int32_float();
    kind_.v_list_int32_float_ = CreateMaybeMessage< ::feature_proto::ListInt32Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_float)
  return kind_.v_list_int32_float_;
}

// .feature_proto.ListInt32Int32 v_list_int32_int32 = 63;
inline bool Feature::has_v_list_int32_int32() const {
  return kind_case() == kVListInt32Int32;
}
inline void Feature::set_has_v_list_int32_int32() {
  _oneof_case_[0] = kVListInt32Int32;
}
inline void Feature::clear_v_list_int32_int32() {
  if (has_v_list_int32_int32()) {
    delete kind_.v_list_int32_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Int32& Feature::_internal_v_list_int32_int32() const {
  return *kind_.v_list_int32_int32_;
}
inline ::feature_proto::ListInt32Int32* Feature::release_v_list_int32_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_int32)
  if (has_v_list_int32_int32()) {
    clear_has_kind();
      ::feature_proto::ListInt32Int32* temp = kind_.v_list_int32_int32_;
    kind_.v_list_int32_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Int32& Feature::v_list_int32_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_int32)
  return has_v_list_int32_int32()
      ? *kind_.v_list_int32_int32_
      : *reinterpret_cast< ::feature_proto::ListInt32Int32*>(&::feature_proto::_ListInt32Int32_default_instance_);
}
inline ::feature_proto::ListInt32Int32* Feature::mutable_v_list_int32_int32() {
  if (!has_v_list_int32_int32()) {
    clear_kind();
    set_has_v_list_int32_int32();
    kind_.v_list_int32_int32_ = CreateMaybeMessage< ::feature_proto::ListInt32Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_int32)
  return kind_.v_list_int32_int32_;
}

// .feature_proto.ListInt32Int64 v_list_int32_int64 = 64;
inline bool Feature::has_v_list_int32_int64() const {
  return kind_case() == kVListInt32Int64;
}
inline void Feature::set_has_v_list_int32_int64() {
  _oneof_case_[0] = kVListInt32Int64;
}
inline void Feature::clear_v_list_int32_int64() {
  if (has_v_list_int32_int64()) {
    delete kind_.v_list_int32_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Int64& Feature::_internal_v_list_int32_int64() const {
  return *kind_.v_list_int32_int64_;
}
inline ::feature_proto::ListInt32Int64* Feature::release_v_list_int32_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_int64)
  if (has_v_list_int32_int64()) {
    clear_has_kind();
      ::feature_proto::ListInt32Int64* temp = kind_.v_list_int32_int64_;
    kind_.v_list_int32_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Int64& Feature::v_list_int32_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_int64)
  return has_v_list_int32_int64()
      ? *kind_.v_list_int32_int64_
      : *reinterpret_cast< ::feature_proto::ListInt32Int64*>(&::feature_proto::_ListInt32Int64_default_instance_);
}
inline ::feature_proto::ListInt32Int64* Feature::mutable_v_list_int32_int64() {
  if (!has_v_list_int32_int64()) {
    clear_kind();
    set_has_v_list_int32_int64();
    kind_.v_list_int32_int64_ = CreateMaybeMessage< ::feature_proto::ListInt32Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_int64)
  return kind_.v_list_int32_int64_;
}

// .feature_proto.ListInt32Uint32 v_list_int32_uint32 = 65;
inline bool Feature::has_v_list_int32_uint32() const {
  return kind_case() == kVListInt32Uint32;
}
inline void Feature::set_has_v_list_int32_uint32() {
  _oneof_case_[0] = kVListInt32Uint32;
}
inline void Feature::clear_v_list_int32_uint32() {
  if (has_v_list_int32_uint32()) {
    delete kind_.v_list_int32_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Uint32& Feature::_internal_v_list_int32_uint32() const {
  return *kind_.v_list_int32_uint32_;
}
inline ::feature_proto::ListInt32Uint32* Feature::release_v_list_int32_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_uint32)
  if (has_v_list_int32_uint32()) {
    clear_has_kind();
      ::feature_proto::ListInt32Uint32* temp = kind_.v_list_int32_uint32_;
    kind_.v_list_int32_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Uint32& Feature::v_list_int32_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_uint32)
  return has_v_list_int32_uint32()
      ? *kind_.v_list_int32_uint32_
      : *reinterpret_cast< ::feature_proto::ListInt32Uint32*>(&::feature_proto::_ListInt32Uint32_default_instance_);
}
inline ::feature_proto::ListInt32Uint32* Feature::mutable_v_list_int32_uint32() {
  if (!has_v_list_int32_uint32()) {
    clear_kind();
    set_has_v_list_int32_uint32();
    kind_.v_list_int32_uint32_ = CreateMaybeMessage< ::feature_proto::ListInt32Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_uint32)
  return kind_.v_list_int32_uint32_;
}

// .feature_proto.ListInt32Uint64 v_list_int32_uint64 = 66;
inline bool Feature::has_v_list_int32_uint64() const {
  return kind_case() == kVListInt32Uint64;
}
inline void Feature::set_has_v_list_int32_uint64() {
  _oneof_case_[0] = kVListInt32Uint64;
}
inline void Feature::clear_v_list_int32_uint64() {
  if (has_v_list_int32_uint64()) {
    delete kind_.v_list_int32_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Uint64& Feature::_internal_v_list_int32_uint64() const {
  return *kind_.v_list_int32_uint64_;
}
inline ::feature_proto::ListInt32Uint64* Feature::release_v_list_int32_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_uint64)
  if (has_v_list_int32_uint64()) {
    clear_has_kind();
      ::feature_proto::ListInt32Uint64* temp = kind_.v_list_int32_uint64_;
    kind_.v_list_int32_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Uint64& Feature::v_list_int32_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_uint64)
  return has_v_list_int32_uint64()
      ? *kind_.v_list_int32_uint64_
      : *reinterpret_cast< ::feature_proto::ListInt32Uint64*>(&::feature_proto::_ListInt32Uint64_default_instance_);
}
inline ::feature_proto::ListInt32Uint64* Feature::mutable_v_list_int32_uint64() {
  if (!has_v_list_int32_uint64()) {
    clear_kind();
    set_has_v_list_int32_uint64();
    kind_.v_list_int32_uint64_ = CreateMaybeMessage< ::feature_proto::ListInt32Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_uint64)
  return kind_.v_list_int32_uint64_;
}

// .feature_proto.ListInt32Sint32 v_list_int32_sint32 = 67;
inline bool Feature::has_v_list_int32_sint32() const {
  return kind_case() == kVListInt32Sint32;
}
inline void Feature::set_has_v_list_int32_sint32() {
  _oneof_case_[0] = kVListInt32Sint32;
}
inline void Feature::clear_v_list_int32_sint32() {
  if (has_v_list_int32_sint32()) {
    delete kind_.v_list_int32_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Sint32& Feature::_internal_v_list_int32_sint32() const {
  return *kind_.v_list_int32_sint32_;
}
inline ::feature_proto::ListInt32Sint32* Feature::release_v_list_int32_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_sint32)
  if (has_v_list_int32_sint32()) {
    clear_has_kind();
      ::feature_proto::ListInt32Sint32* temp = kind_.v_list_int32_sint32_;
    kind_.v_list_int32_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Sint32& Feature::v_list_int32_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_sint32)
  return has_v_list_int32_sint32()
      ? *kind_.v_list_int32_sint32_
      : *reinterpret_cast< ::feature_proto::ListInt32Sint32*>(&::feature_proto::_ListInt32Sint32_default_instance_);
}
inline ::feature_proto::ListInt32Sint32* Feature::mutable_v_list_int32_sint32() {
  if (!has_v_list_int32_sint32()) {
    clear_kind();
    set_has_v_list_int32_sint32();
    kind_.v_list_int32_sint32_ = CreateMaybeMessage< ::feature_proto::ListInt32Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_sint32)
  return kind_.v_list_int32_sint32_;
}

// .feature_proto.ListInt32Sint64 v_list_int32_sint64 = 68;
inline bool Feature::has_v_list_int32_sint64() const {
  return kind_case() == kVListInt32Sint64;
}
inline void Feature::set_has_v_list_int32_sint64() {
  _oneof_case_[0] = kVListInt32Sint64;
}
inline void Feature::clear_v_list_int32_sint64() {
  if (has_v_list_int32_sint64()) {
    delete kind_.v_list_int32_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Sint64& Feature::_internal_v_list_int32_sint64() const {
  return *kind_.v_list_int32_sint64_;
}
inline ::feature_proto::ListInt32Sint64* Feature::release_v_list_int32_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_sint64)
  if (has_v_list_int32_sint64()) {
    clear_has_kind();
      ::feature_proto::ListInt32Sint64* temp = kind_.v_list_int32_sint64_;
    kind_.v_list_int32_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Sint64& Feature::v_list_int32_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_sint64)
  return has_v_list_int32_sint64()
      ? *kind_.v_list_int32_sint64_
      : *reinterpret_cast< ::feature_proto::ListInt32Sint64*>(&::feature_proto::_ListInt32Sint64_default_instance_);
}
inline ::feature_proto::ListInt32Sint64* Feature::mutable_v_list_int32_sint64() {
  if (!has_v_list_int32_sint64()) {
    clear_kind();
    set_has_v_list_int32_sint64();
    kind_.v_list_int32_sint64_ = CreateMaybeMessage< ::feature_proto::ListInt32Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_sint64)
  return kind_.v_list_int32_sint64_;
}

// .feature_proto.ListInt32Fixed32 v_list_int32_fixed32 = 69;
inline bool Feature::has_v_list_int32_fixed32() const {
  return kind_case() == kVListInt32Fixed32;
}
inline void Feature::set_has_v_list_int32_fixed32() {
  _oneof_case_[0] = kVListInt32Fixed32;
}
inline void Feature::clear_v_list_int32_fixed32() {
  if (has_v_list_int32_fixed32()) {
    delete kind_.v_list_int32_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Fixed32& Feature::_internal_v_list_int32_fixed32() const {
  return *kind_.v_list_int32_fixed32_;
}
inline ::feature_proto::ListInt32Fixed32* Feature::release_v_list_int32_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_fixed32)
  if (has_v_list_int32_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListInt32Fixed32* temp = kind_.v_list_int32_fixed32_;
    kind_.v_list_int32_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Fixed32& Feature::v_list_int32_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_fixed32)
  return has_v_list_int32_fixed32()
      ? *kind_.v_list_int32_fixed32_
      : *reinterpret_cast< ::feature_proto::ListInt32Fixed32*>(&::feature_proto::_ListInt32Fixed32_default_instance_);
}
inline ::feature_proto::ListInt32Fixed32* Feature::mutable_v_list_int32_fixed32() {
  if (!has_v_list_int32_fixed32()) {
    clear_kind();
    set_has_v_list_int32_fixed32();
    kind_.v_list_int32_fixed32_ = CreateMaybeMessage< ::feature_proto::ListInt32Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_fixed32)
  return kind_.v_list_int32_fixed32_;
}

// .feature_proto.ListInt32Fixed64 v_list_int32_fixed64 = 70;
inline bool Feature::has_v_list_int32_fixed64() const {
  return kind_case() == kVListInt32Fixed64;
}
inline void Feature::set_has_v_list_int32_fixed64() {
  _oneof_case_[0] = kVListInt32Fixed64;
}
inline void Feature::clear_v_list_int32_fixed64() {
  if (has_v_list_int32_fixed64()) {
    delete kind_.v_list_int32_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Fixed64& Feature::_internal_v_list_int32_fixed64() const {
  return *kind_.v_list_int32_fixed64_;
}
inline ::feature_proto::ListInt32Fixed64* Feature::release_v_list_int32_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_fixed64)
  if (has_v_list_int32_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListInt32Fixed64* temp = kind_.v_list_int32_fixed64_;
    kind_.v_list_int32_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Fixed64& Feature::v_list_int32_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_fixed64)
  return has_v_list_int32_fixed64()
      ? *kind_.v_list_int32_fixed64_
      : *reinterpret_cast< ::feature_proto::ListInt32Fixed64*>(&::feature_proto::_ListInt32Fixed64_default_instance_);
}
inline ::feature_proto::ListInt32Fixed64* Feature::mutable_v_list_int32_fixed64() {
  if (!has_v_list_int32_fixed64()) {
    clear_kind();
    set_has_v_list_int32_fixed64();
    kind_.v_list_int32_fixed64_ = CreateMaybeMessage< ::feature_proto::ListInt32Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_fixed64)
  return kind_.v_list_int32_fixed64_;
}

// .feature_proto.ListInt32Sfixed32 v_list_int32_sfixed32 = 71;
inline bool Feature::has_v_list_int32_sfixed32() const {
  return kind_case() == kVListInt32Sfixed32;
}
inline void Feature::set_has_v_list_int32_sfixed32() {
  _oneof_case_[0] = kVListInt32Sfixed32;
}
inline void Feature::clear_v_list_int32_sfixed32() {
  if (has_v_list_int32_sfixed32()) {
    delete kind_.v_list_int32_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Sfixed32& Feature::_internal_v_list_int32_sfixed32() const {
  return *kind_.v_list_int32_sfixed32_;
}
inline ::feature_proto::ListInt32Sfixed32* Feature::release_v_list_int32_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_sfixed32)
  if (has_v_list_int32_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListInt32Sfixed32* temp = kind_.v_list_int32_sfixed32_;
    kind_.v_list_int32_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Sfixed32& Feature::v_list_int32_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_sfixed32)
  return has_v_list_int32_sfixed32()
      ? *kind_.v_list_int32_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListInt32Sfixed32*>(&::feature_proto::_ListInt32Sfixed32_default_instance_);
}
inline ::feature_proto::ListInt32Sfixed32* Feature::mutable_v_list_int32_sfixed32() {
  if (!has_v_list_int32_sfixed32()) {
    clear_kind();
    set_has_v_list_int32_sfixed32();
    kind_.v_list_int32_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListInt32Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_sfixed32)
  return kind_.v_list_int32_sfixed32_;
}

// .feature_proto.ListInt32Sfixed64 v_list_int32_sfixed64 = 72;
inline bool Feature::has_v_list_int32_sfixed64() const {
  return kind_case() == kVListInt32Sfixed64;
}
inline void Feature::set_has_v_list_int32_sfixed64() {
  _oneof_case_[0] = kVListInt32Sfixed64;
}
inline void Feature::clear_v_list_int32_sfixed64() {
  if (has_v_list_int32_sfixed64()) {
    delete kind_.v_list_int32_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Sfixed64& Feature::_internal_v_list_int32_sfixed64() const {
  return *kind_.v_list_int32_sfixed64_;
}
inline ::feature_proto::ListInt32Sfixed64* Feature::release_v_list_int32_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_sfixed64)
  if (has_v_list_int32_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListInt32Sfixed64* temp = kind_.v_list_int32_sfixed64_;
    kind_.v_list_int32_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Sfixed64& Feature::v_list_int32_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_sfixed64)
  return has_v_list_int32_sfixed64()
      ? *kind_.v_list_int32_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListInt32Sfixed64*>(&::feature_proto::_ListInt32Sfixed64_default_instance_);
}
inline ::feature_proto::ListInt32Sfixed64* Feature::mutable_v_list_int32_sfixed64() {
  if (!has_v_list_int32_sfixed64()) {
    clear_kind();
    set_has_v_list_int32_sfixed64();
    kind_.v_list_int32_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListInt32Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_sfixed64)
  return kind_.v_list_int32_sfixed64_;
}

// .feature_proto.ListInt32Bool v_list_int32_bool = 73;
inline bool Feature::has_v_list_int32_bool() const {
  return kind_case() == kVListInt32Bool;
}
inline void Feature::set_has_v_list_int32_bool() {
  _oneof_case_[0] = kVListInt32Bool;
}
inline void Feature::clear_v_list_int32_bool() {
  if (has_v_list_int32_bool()) {
    delete kind_.v_list_int32_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Bool& Feature::_internal_v_list_int32_bool() const {
  return *kind_.v_list_int32_bool_;
}
inline ::feature_proto::ListInt32Bool* Feature::release_v_list_int32_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_bool)
  if (has_v_list_int32_bool()) {
    clear_has_kind();
      ::feature_proto::ListInt32Bool* temp = kind_.v_list_int32_bool_;
    kind_.v_list_int32_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Bool& Feature::v_list_int32_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_bool)
  return has_v_list_int32_bool()
      ? *kind_.v_list_int32_bool_
      : *reinterpret_cast< ::feature_proto::ListInt32Bool*>(&::feature_proto::_ListInt32Bool_default_instance_);
}
inline ::feature_proto::ListInt32Bool* Feature::mutable_v_list_int32_bool() {
  if (!has_v_list_int32_bool()) {
    clear_kind();
    set_has_v_list_int32_bool();
    kind_.v_list_int32_bool_ = CreateMaybeMessage< ::feature_proto::ListInt32Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_bool)
  return kind_.v_list_int32_bool_;
}

// .feature_proto.ListInt32String v_list_int32_string = 74;
inline bool Feature::has_v_list_int32_string() const {
  return kind_case() == kVListInt32String;
}
inline void Feature::set_has_v_list_int32_string() {
  _oneof_case_[0] = kVListInt32String;
}
inline void Feature::clear_v_list_int32_string() {
  if (has_v_list_int32_string()) {
    delete kind_.v_list_int32_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32String& Feature::_internal_v_list_int32_string() const {
  return *kind_.v_list_int32_string_;
}
inline ::feature_proto::ListInt32String* Feature::release_v_list_int32_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_string)
  if (has_v_list_int32_string()) {
    clear_has_kind();
      ::feature_proto::ListInt32String* temp = kind_.v_list_int32_string_;
    kind_.v_list_int32_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32String& Feature::v_list_int32_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_string)
  return has_v_list_int32_string()
      ? *kind_.v_list_int32_string_
      : *reinterpret_cast< ::feature_proto::ListInt32String*>(&::feature_proto::_ListInt32String_default_instance_);
}
inline ::feature_proto::ListInt32String* Feature::mutable_v_list_int32_string() {
  if (!has_v_list_int32_string()) {
    clear_kind();
    set_has_v_list_int32_string();
    kind_.v_list_int32_string_ = CreateMaybeMessage< ::feature_proto::ListInt32String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_string)
  return kind_.v_list_int32_string_;
}

// .feature_proto.ListInt32Bytes v_list_int32_bytes = 75;
inline bool Feature::has_v_list_int32_bytes() const {
  return kind_case() == kVListInt32Bytes;
}
inline void Feature::set_has_v_list_int32_bytes() {
  _oneof_case_[0] = kVListInt32Bytes;
}
inline void Feature::clear_v_list_int32_bytes() {
  if (has_v_list_int32_bytes()) {
    delete kind_.v_list_int32_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt32Bytes& Feature::_internal_v_list_int32_bytes() const {
  return *kind_.v_list_int32_bytes_;
}
inline ::feature_proto::ListInt32Bytes* Feature::release_v_list_int32_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int32_bytes)
  if (has_v_list_int32_bytes()) {
    clear_has_kind();
      ::feature_proto::ListInt32Bytes* temp = kind_.v_list_int32_bytes_;
    kind_.v_list_int32_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt32Bytes& Feature::v_list_int32_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int32_bytes)
  return has_v_list_int32_bytes()
      ? *kind_.v_list_int32_bytes_
      : *reinterpret_cast< ::feature_proto::ListInt32Bytes*>(&::feature_proto::_ListInt32Bytes_default_instance_);
}
inline ::feature_proto::ListInt32Bytes* Feature::mutable_v_list_int32_bytes() {
  if (!has_v_list_int32_bytes()) {
    clear_kind();
    set_has_v_list_int32_bytes();
    kind_.v_list_int32_bytes_ = CreateMaybeMessage< ::feature_proto::ListInt32Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int32_bytes)
  return kind_.v_list_int32_bytes_;
}

// .feature_proto.ListInt64Double v_list_int64_double = 76;
inline bool Feature::has_v_list_int64_double() const {
  return kind_case() == kVListInt64Double;
}
inline void Feature::set_has_v_list_int64_double() {
  _oneof_case_[0] = kVListInt64Double;
}
inline void Feature::clear_v_list_int64_double() {
  if (has_v_list_int64_double()) {
    delete kind_.v_list_int64_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Double& Feature::_internal_v_list_int64_double() const {
  return *kind_.v_list_int64_double_;
}
inline ::feature_proto::ListInt64Double* Feature::release_v_list_int64_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_double)
  if (has_v_list_int64_double()) {
    clear_has_kind();
      ::feature_proto::ListInt64Double* temp = kind_.v_list_int64_double_;
    kind_.v_list_int64_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Double& Feature::v_list_int64_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_double)
  return has_v_list_int64_double()
      ? *kind_.v_list_int64_double_
      : *reinterpret_cast< ::feature_proto::ListInt64Double*>(&::feature_proto::_ListInt64Double_default_instance_);
}
inline ::feature_proto::ListInt64Double* Feature::mutable_v_list_int64_double() {
  if (!has_v_list_int64_double()) {
    clear_kind();
    set_has_v_list_int64_double();
    kind_.v_list_int64_double_ = CreateMaybeMessage< ::feature_proto::ListInt64Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_double)
  return kind_.v_list_int64_double_;
}

// .feature_proto.ListInt64Float v_list_int64_float = 77;
inline bool Feature::has_v_list_int64_float() const {
  return kind_case() == kVListInt64Float;
}
inline void Feature::set_has_v_list_int64_float() {
  _oneof_case_[0] = kVListInt64Float;
}
inline void Feature::clear_v_list_int64_float() {
  if (has_v_list_int64_float()) {
    delete kind_.v_list_int64_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Float& Feature::_internal_v_list_int64_float() const {
  return *kind_.v_list_int64_float_;
}
inline ::feature_proto::ListInt64Float* Feature::release_v_list_int64_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_float)
  if (has_v_list_int64_float()) {
    clear_has_kind();
      ::feature_proto::ListInt64Float* temp = kind_.v_list_int64_float_;
    kind_.v_list_int64_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Float& Feature::v_list_int64_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_float)
  return has_v_list_int64_float()
      ? *kind_.v_list_int64_float_
      : *reinterpret_cast< ::feature_proto::ListInt64Float*>(&::feature_proto::_ListInt64Float_default_instance_);
}
inline ::feature_proto::ListInt64Float* Feature::mutable_v_list_int64_float() {
  if (!has_v_list_int64_float()) {
    clear_kind();
    set_has_v_list_int64_float();
    kind_.v_list_int64_float_ = CreateMaybeMessage< ::feature_proto::ListInt64Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_float)
  return kind_.v_list_int64_float_;
}

// .feature_proto.ListInt64Int32 v_list_int64_int32 = 78;
inline bool Feature::has_v_list_int64_int32() const {
  return kind_case() == kVListInt64Int32;
}
inline void Feature::set_has_v_list_int64_int32() {
  _oneof_case_[0] = kVListInt64Int32;
}
inline void Feature::clear_v_list_int64_int32() {
  if (has_v_list_int64_int32()) {
    delete kind_.v_list_int64_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Int32& Feature::_internal_v_list_int64_int32() const {
  return *kind_.v_list_int64_int32_;
}
inline ::feature_proto::ListInt64Int32* Feature::release_v_list_int64_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_int32)
  if (has_v_list_int64_int32()) {
    clear_has_kind();
      ::feature_proto::ListInt64Int32* temp = kind_.v_list_int64_int32_;
    kind_.v_list_int64_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Int32& Feature::v_list_int64_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_int32)
  return has_v_list_int64_int32()
      ? *kind_.v_list_int64_int32_
      : *reinterpret_cast< ::feature_proto::ListInt64Int32*>(&::feature_proto::_ListInt64Int32_default_instance_);
}
inline ::feature_proto::ListInt64Int32* Feature::mutable_v_list_int64_int32() {
  if (!has_v_list_int64_int32()) {
    clear_kind();
    set_has_v_list_int64_int32();
    kind_.v_list_int64_int32_ = CreateMaybeMessage< ::feature_proto::ListInt64Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_int32)
  return kind_.v_list_int64_int32_;
}

// .feature_proto.ListInt64Int64 v_list_int64_int64 = 79;
inline bool Feature::has_v_list_int64_int64() const {
  return kind_case() == kVListInt64Int64;
}
inline void Feature::set_has_v_list_int64_int64() {
  _oneof_case_[0] = kVListInt64Int64;
}
inline void Feature::clear_v_list_int64_int64() {
  if (has_v_list_int64_int64()) {
    delete kind_.v_list_int64_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Int64& Feature::_internal_v_list_int64_int64() const {
  return *kind_.v_list_int64_int64_;
}
inline ::feature_proto::ListInt64Int64* Feature::release_v_list_int64_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_int64)
  if (has_v_list_int64_int64()) {
    clear_has_kind();
      ::feature_proto::ListInt64Int64* temp = kind_.v_list_int64_int64_;
    kind_.v_list_int64_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Int64& Feature::v_list_int64_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_int64)
  return has_v_list_int64_int64()
      ? *kind_.v_list_int64_int64_
      : *reinterpret_cast< ::feature_proto::ListInt64Int64*>(&::feature_proto::_ListInt64Int64_default_instance_);
}
inline ::feature_proto::ListInt64Int64* Feature::mutable_v_list_int64_int64() {
  if (!has_v_list_int64_int64()) {
    clear_kind();
    set_has_v_list_int64_int64();
    kind_.v_list_int64_int64_ = CreateMaybeMessage< ::feature_proto::ListInt64Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_int64)
  return kind_.v_list_int64_int64_;
}

// .feature_proto.ListInt64Uint32 v_list_int64_uint32 = 80;
inline bool Feature::has_v_list_int64_uint32() const {
  return kind_case() == kVListInt64Uint32;
}
inline void Feature::set_has_v_list_int64_uint32() {
  _oneof_case_[0] = kVListInt64Uint32;
}
inline void Feature::clear_v_list_int64_uint32() {
  if (has_v_list_int64_uint32()) {
    delete kind_.v_list_int64_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Uint32& Feature::_internal_v_list_int64_uint32() const {
  return *kind_.v_list_int64_uint32_;
}
inline ::feature_proto::ListInt64Uint32* Feature::release_v_list_int64_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_uint32)
  if (has_v_list_int64_uint32()) {
    clear_has_kind();
      ::feature_proto::ListInt64Uint32* temp = kind_.v_list_int64_uint32_;
    kind_.v_list_int64_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Uint32& Feature::v_list_int64_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_uint32)
  return has_v_list_int64_uint32()
      ? *kind_.v_list_int64_uint32_
      : *reinterpret_cast< ::feature_proto::ListInt64Uint32*>(&::feature_proto::_ListInt64Uint32_default_instance_);
}
inline ::feature_proto::ListInt64Uint32* Feature::mutable_v_list_int64_uint32() {
  if (!has_v_list_int64_uint32()) {
    clear_kind();
    set_has_v_list_int64_uint32();
    kind_.v_list_int64_uint32_ = CreateMaybeMessage< ::feature_proto::ListInt64Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_uint32)
  return kind_.v_list_int64_uint32_;
}

// .feature_proto.ListInt64Uint64 v_list_int64_uint64 = 81;
inline bool Feature::has_v_list_int64_uint64() const {
  return kind_case() == kVListInt64Uint64;
}
inline void Feature::set_has_v_list_int64_uint64() {
  _oneof_case_[0] = kVListInt64Uint64;
}
inline void Feature::clear_v_list_int64_uint64() {
  if (has_v_list_int64_uint64()) {
    delete kind_.v_list_int64_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Uint64& Feature::_internal_v_list_int64_uint64() const {
  return *kind_.v_list_int64_uint64_;
}
inline ::feature_proto::ListInt64Uint64* Feature::release_v_list_int64_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_uint64)
  if (has_v_list_int64_uint64()) {
    clear_has_kind();
      ::feature_proto::ListInt64Uint64* temp = kind_.v_list_int64_uint64_;
    kind_.v_list_int64_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Uint64& Feature::v_list_int64_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_uint64)
  return has_v_list_int64_uint64()
      ? *kind_.v_list_int64_uint64_
      : *reinterpret_cast< ::feature_proto::ListInt64Uint64*>(&::feature_proto::_ListInt64Uint64_default_instance_);
}
inline ::feature_proto::ListInt64Uint64* Feature::mutable_v_list_int64_uint64() {
  if (!has_v_list_int64_uint64()) {
    clear_kind();
    set_has_v_list_int64_uint64();
    kind_.v_list_int64_uint64_ = CreateMaybeMessage< ::feature_proto::ListInt64Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_uint64)
  return kind_.v_list_int64_uint64_;
}

// .feature_proto.ListInt64Sint32 v_list_int64_sint32 = 82;
inline bool Feature::has_v_list_int64_sint32() const {
  return kind_case() == kVListInt64Sint32;
}
inline void Feature::set_has_v_list_int64_sint32() {
  _oneof_case_[0] = kVListInt64Sint32;
}
inline void Feature::clear_v_list_int64_sint32() {
  if (has_v_list_int64_sint32()) {
    delete kind_.v_list_int64_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Sint32& Feature::_internal_v_list_int64_sint32() const {
  return *kind_.v_list_int64_sint32_;
}
inline ::feature_proto::ListInt64Sint32* Feature::release_v_list_int64_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_sint32)
  if (has_v_list_int64_sint32()) {
    clear_has_kind();
      ::feature_proto::ListInt64Sint32* temp = kind_.v_list_int64_sint32_;
    kind_.v_list_int64_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Sint32& Feature::v_list_int64_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_sint32)
  return has_v_list_int64_sint32()
      ? *kind_.v_list_int64_sint32_
      : *reinterpret_cast< ::feature_proto::ListInt64Sint32*>(&::feature_proto::_ListInt64Sint32_default_instance_);
}
inline ::feature_proto::ListInt64Sint32* Feature::mutable_v_list_int64_sint32() {
  if (!has_v_list_int64_sint32()) {
    clear_kind();
    set_has_v_list_int64_sint32();
    kind_.v_list_int64_sint32_ = CreateMaybeMessage< ::feature_proto::ListInt64Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_sint32)
  return kind_.v_list_int64_sint32_;
}

// .feature_proto.ListInt64Sint64 v_list_int64_sint64 = 83;
inline bool Feature::has_v_list_int64_sint64() const {
  return kind_case() == kVListInt64Sint64;
}
inline void Feature::set_has_v_list_int64_sint64() {
  _oneof_case_[0] = kVListInt64Sint64;
}
inline void Feature::clear_v_list_int64_sint64() {
  if (has_v_list_int64_sint64()) {
    delete kind_.v_list_int64_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Sint64& Feature::_internal_v_list_int64_sint64() const {
  return *kind_.v_list_int64_sint64_;
}
inline ::feature_proto::ListInt64Sint64* Feature::release_v_list_int64_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_sint64)
  if (has_v_list_int64_sint64()) {
    clear_has_kind();
      ::feature_proto::ListInt64Sint64* temp = kind_.v_list_int64_sint64_;
    kind_.v_list_int64_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Sint64& Feature::v_list_int64_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_sint64)
  return has_v_list_int64_sint64()
      ? *kind_.v_list_int64_sint64_
      : *reinterpret_cast< ::feature_proto::ListInt64Sint64*>(&::feature_proto::_ListInt64Sint64_default_instance_);
}
inline ::feature_proto::ListInt64Sint64* Feature::mutable_v_list_int64_sint64() {
  if (!has_v_list_int64_sint64()) {
    clear_kind();
    set_has_v_list_int64_sint64();
    kind_.v_list_int64_sint64_ = CreateMaybeMessage< ::feature_proto::ListInt64Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_sint64)
  return kind_.v_list_int64_sint64_;
}

// .feature_proto.ListInt64Fixed32 v_list_int64_fixed32 = 84;
inline bool Feature::has_v_list_int64_fixed32() const {
  return kind_case() == kVListInt64Fixed32;
}
inline void Feature::set_has_v_list_int64_fixed32() {
  _oneof_case_[0] = kVListInt64Fixed32;
}
inline void Feature::clear_v_list_int64_fixed32() {
  if (has_v_list_int64_fixed32()) {
    delete kind_.v_list_int64_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Fixed32& Feature::_internal_v_list_int64_fixed32() const {
  return *kind_.v_list_int64_fixed32_;
}
inline ::feature_proto::ListInt64Fixed32* Feature::release_v_list_int64_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_fixed32)
  if (has_v_list_int64_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListInt64Fixed32* temp = kind_.v_list_int64_fixed32_;
    kind_.v_list_int64_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Fixed32& Feature::v_list_int64_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_fixed32)
  return has_v_list_int64_fixed32()
      ? *kind_.v_list_int64_fixed32_
      : *reinterpret_cast< ::feature_proto::ListInt64Fixed32*>(&::feature_proto::_ListInt64Fixed32_default_instance_);
}
inline ::feature_proto::ListInt64Fixed32* Feature::mutable_v_list_int64_fixed32() {
  if (!has_v_list_int64_fixed32()) {
    clear_kind();
    set_has_v_list_int64_fixed32();
    kind_.v_list_int64_fixed32_ = CreateMaybeMessage< ::feature_proto::ListInt64Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_fixed32)
  return kind_.v_list_int64_fixed32_;
}

// .feature_proto.ListInt64Fixed64 v_list_int64_fixed64 = 85;
inline bool Feature::has_v_list_int64_fixed64() const {
  return kind_case() == kVListInt64Fixed64;
}
inline void Feature::set_has_v_list_int64_fixed64() {
  _oneof_case_[0] = kVListInt64Fixed64;
}
inline void Feature::clear_v_list_int64_fixed64() {
  if (has_v_list_int64_fixed64()) {
    delete kind_.v_list_int64_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Fixed64& Feature::_internal_v_list_int64_fixed64() const {
  return *kind_.v_list_int64_fixed64_;
}
inline ::feature_proto::ListInt64Fixed64* Feature::release_v_list_int64_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_fixed64)
  if (has_v_list_int64_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListInt64Fixed64* temp = kind_.v_list_int64_fixed64_;
    kind_.v_list_int64_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Fixed64& Feature::v_list_int64_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_fixed64)
  return has_v_list_int64_fixed64()
      ? *kind_.v_list_int64_fixed64_
      : *reinterpret_cast< ::feature_proto::ListInt64Fixed64*>(&::feature_proto::_ListInt64Fixed64_default_instance_);
}
inline ::feature_proto::ListInt64Fixed64* Feature::mutable_v_list_int64_fixed64() {
  if (!has_v_list_int64_fixed64()) {
    clear_kind();
    set_has_v_list_int64_fixed64();
    kind_.v_list_int64_fixed64_ = CreateMaybeMessage< ::feature_proto::ListInt64Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_fixed64)
  return kind_.v_list_int64_fixed64_;
}

// .feature_proto.ListInt64Sfixed32 v_list_int64_sfixed32 = 86;
inline bool Feature::has_v_list_int64_sfixed32() const {
  return kind_case() == kVListInt64Sfixed32;
}
inline void Feature::set_has_v_list_int64_sfixed32() {
  _oneof_case_[0] = kVListInt64Sfixed32;
}
inline void Feature::clear_v_list_int64_sfixed32() {
  if (has_v_list_int64_sfixed32()) {
    delete kind_.v_list_int64_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Sfixed32& Feature::_internal_v_list_int64_sfixed32() const {
  return *kind_.v_list_int64_sfixed32_;
}
inline ::feature_proto::ListInt64Sfixed32* Feature::release_v_list_int64_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_sfixed32)
  if (has_v_list_int64_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListInt64Sfixed32* temp = kind_.v_list_int64_sfixed32_;
    kind_.v_list_int64_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Sfixed32& Feature::v_list_int64_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_sfixed32)
  return has_v_list_int64_sfixed32()
      ? *kind_.v_list_int64_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListInt64Sfixed32*>(&::feature_proto::_ListInt64Sfixed32_default_instance_);
}
inline ::feature_proto::ListInt64Sfixed32* Feature::mutable_v_list_int64_sfixed32() {
  if (!has_v_list_int64_sfixed32()) {
    clear_kind();
    set_has_v_list_int64_sfixed32();
    kind_.v_list_int64_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListInt64Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_sfixed32)
  return kind_.v_list_int64_sfixed32_;
}

// .feature_proto.ListInt64Sfixed64 v_list_int64_sfixed64 = 87;
inline bool Feature::has_v_list_int64_sfixed64() const {
  return kind_case() == kVListInt64Sfixed64;
}
inline void Feature::set_has_v_list_int64_sfixed64() {
  _oneof_case_[0] = kVListInt64Sfixed64;
}
inline void Feature::clear_v_list_int64_sfixed64() {
  if (has_v_list_int64_sfixed64()) {
    delete kind_.v_list_int64_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Sfixed64& Feature::_internal_v_list_int64_sfixed64() const {
  return *kind_.v_list_int64_sfixed64_;
}
inline ::feature_proto::ListInt64Sfixed64* Feature::release_v_list_int64_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_sfixed64)
  if (has_v_list_int64_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListInt64Sfixed64* temp = kind_.v_list_int64_sfixed64_;
    kind_.v_list_int64_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Sfixed64& Feature::v_list_int64_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_sfixed64)
  return has_v_list_int64_sfixed64()
      ? *kind_.v_list_int64_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListInt64Sfixed64*>(&::feature_proto::_ListInt64Sfixed64_default_instance_);
}
inline ::feature_proto::ListInt64Sfixed64* Feature::mutable_v_list_int64_sfixed64() {
  if (!has_v_list_int64_sfixed64()) {
    clear_kind();
    set_has_v_list_int64_sfixed64();
    kind_.v_list_int64_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListInt64Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_sfixed64)
  return kind_.v_list_int64_sfixed64_;
}

// .feature_proto.ListInt64Bool v_list_int64_bool = 88;
inline bool Feature::has_v_list_int64_bool() const {
  return kind_case() == kVListInt64Bool;
}
inline void Feature::set_has_v_list_int64_bool() {
  _oneof_case_[0] = kVListInt64Bool;
}
inline void Feature::clear_v_list_int64_bool() {
  if (has_v_list_int64_bool()) {
    delete kind_.v_list_int64_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Bool& Feature::_internal_v_list_int64_bool() const {
  return *kind_.v_list_int64_bool_;
}
inline ::feature_proto::ListInt64Bool* Feature::release_v_list_int64_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_bool)
  if (has_v_list_int64_bool()) {
    clear_has_kind();
      ::feature_proto::ListInt64Bool* temp = kind_.v_list_int64_bool_;
    kind_.v_list_int64_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Bool& Feature::v_list_int64_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_bool)
  return has_v_list_int64_bool()
      ? *kind_.v_list_int64_bool_
      : *reinterpret_cast< ::feature_proto::ListInt64Bool*>(&::feature_proto::_ListInt64Bool_default_instance_);
}
inline ::feature_proto::ListInt64Bool* Feature::mutable_v_list_int64_bool() {
  if (!has_v_list_int64_bool()) {
    clear_kind();
    set_has_v_list_int64_bool();
    kind_.v_list_int64_bool_ = CreateMaybeMessage< ::feature_proto::ListInt64Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_bool)
  return kind_.v_list_int64_bool_;
}

// .feature_proto.ListInt64String v_list_int64_string = 89;
inline bool Feature::has_v_list_int64_string() const {
  return kind_case() == kVListInt64String;
}
inline void Feature::set_has_v_list_int64_string() {
  _oneof_case_[0] = kVListInt64String;
}
inline void Feature::clear_v_list_int64_string() {
  if (has_v_list_int64_string()) {
    delete kind_.v_list_int64_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64String& Feature::_internal_v_list_int64_string() const {
  return *kind_.v_list_int64_string_;
}
inline ::feature_proto::ListInt64String* Feature::release_v_list_int64_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_string)
  if (has_v_list_int64_string()) {
    clear_has_kind();
      ::feature_proto::ListInt64String* temp = kind_.v_list_int64_string_;
    kind_.v_list_int64_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64String& Feature::v_list_int64_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_string)
  return has_v_list_int64_string()
      ? *kind_.v_list_int64_string_
      : *reinterpret_cast< ::feature_proto::ListInt64String*>(&::feature_proto::_ListInt64String_default_instance_);
}
inline ::feature_proto::ListInt64String* Feature::mutable_v_list_int64_string() {
  if (!has_v_list_int64_string()) {
    clear_kind();
    set_has_v_list_int64_string();
    kind_.v_list_int64_string_ = CreateMaybeMessage< ::feature_proto::ListInt64String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_string)
  return kind_.v_list_int64_string_;
}

// .feature_proto.ListInt64Bytes v_list_int64_bytes = 90;
inline bool Feature::has_v_list_int64_bytes() const {
  return kind_case() == kVListInt64Bytes;
}
inline void Feature::set_has_v_list_int64_bytes() {
  _oneof_case_[0] = kVListInt64Bytes;
}
inline void Feature::clear_v_list_int64_bytes() {
  if (has_v_list_int64_bytes()) {
    delete kind_.v_list_int64_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListInt64Bytes& Feature::_internal_v_list_int64_bytes() const {
  return *kind_.v_list_int64_bytes_;
}
inline ::feature_proto::ListInt64Bytes* Feature::release_v_list_int64_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_int64_bytes)
  if (has_v_list_int64_bytes()) {
    clear_has_kind();
      ::feature_proto::ListInt64Bytes* temp = kind_.v_list_int64_bytes_;
    kind_.v_list_int64_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListInt64Bytes& Feature::v_list_int64_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_int64_bytes)
  return has_v_list_int64_bytes()
      ? *kind_.v_list_int64_bytes_
      : *reinterpret_cast< ::feature_proto::ListInt64Bytes*>(&::feature_proto::_ListInt64Bytes_default_instance_);
}
inline ::feature_proto::ListInt64Bytes* Feature::mutable_v_list_int64_bytes() {
  if (!has_v_list_int64_bytes()) {
    clear_kind();
    set_has_v_list_int64_bytes();
    kind_.v_list_int64_bytes_ = CreateMaybeMessage< ::feature_proto::ListInt64Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_int64_bytes)
  return kind_.v_list_int64_bytes_;
}

// .feature_proto.ListUint32Double v_list_uint32_double = 91;
inline bool Feature::has_v_list_uint32_double() const {
  return kind_case() == kVListUint32Double;
}
inline void Feature::set_has_v_list_uint32_double() {
  _oneof_case_[0] = kVListUint32Double;
}
inline void Feature::clear_v_list_uint32_double() {
  if (has_v_list_uint32_double()) {
    delete kind_.v_list_uint32_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Double& Feature::_internal_v_list_uint32_double() const {
  return *kind_.v_list_uint32_double_;
}
inline ::feature_proto::ListUint32Double* Feature::release_v_list_uint32_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_double)
  if (has_v_list_uint32_double()) {
    clear_has_kind();
      ::feature_proto::ListUint32Double* temp = kind_.v_list_uint32_double_;
    kind_.v_list_uint32_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Double& Feature::v_list_uint32_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_double)
  return has_v_list_uint32_double()
      ? *kind_.v_list_uint32_double_
      : *reinterpret_cast< ::feature_proto::ListUint32Double*>(&::feature_proto::_ListUint32Double_default_instance_);
}
inline ::feature_proto::ListUint32Double* Feature::mutable_v_list_uint32_double() {
  if (!has_v_list_uint32_double()) {
    clear_kind();
    set_has_v_list_uint32_double();
    kind_.v_list_uint32_double_ = CreateMaybeMessage< ::feature_proto::ListUint32Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_double)
  return kind_.v_list_uint32_double_;
}

// .feature_proto.ListUint32Float v_list_uint32_float = 92;
inline bool Feature::has_v_list_uint32_float() const {
  return kind_case() == kVListUint32Float;
}
inline void Feature::set_has_v_list_uint32_float() {
  _oneof_case_[0] = kVListUint32Float;
}
inline void Feature::clear_v_list_uint32_float() {
  if (has_v_list_uint32_float()) {
    delete kind_.v_list_uint32_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Float& Feature::_internal_v_list_uint32_float() const {
  return *kind_.v_list_uint32_float_;
}
inline ::feature_proto::ListUint32Float* Feature::release_v_list_uint32_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_float)
  if (has_v_list_uint32_float()) {
    clear_has_kind();
      ::feature_proto::ListUint32Float* temp = kind_.v_list_uint32_float_;
    kind_.v_list_uint32_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Float& Feature::v_list_uint32_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_float)
  return has_v_list_uint32_float()
      ? *kind_.v_list_uint32_float_
      : *reinterpret_cast< ::feature_proto::ListUint32Float*>(&::feature_proto::_ListUint32Float_default_instance_);
}
inline ::feature_proto::ListUint32Float* Feature::mutable_v_list_uint32_float() {
  if (!has_v_list_uint32_float()) {
    clear_kind();
    set_has_v_list_uint32_float();
    kind_.v_list_uint32_float_ = CreateMaybeMessage< ::feature_proto::ListUint32Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_float)
  return kind_.v_list_uint32_float_;
}

// .feature_proto.ListUint32Int32 v_list_uint32_int32 = 93;
inline bool Feature::has_v_list_uint32_int32() const {
  return kind_case() == kVListUint32Int32;
}
inline void Feature::set_has_v_list_uint32_int32() {
  _oneof_case_[0] = kVListUint32Int32;
}
inline void Feature::clear_v_list_uint32_int32() {
  if (has_v_list_uint32_int32()) {
    delete kind_.v_list_uint32_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Int32& Feature::_internal_v_list_uint32_int32() const {
  return *kind_.v_list_uint32_int32_;
}
inline ::feature_proto::ListUint32Int32* Feature::release_v_list_uint32_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_int32)
  if (has_v_list_uint32_int32()) {
    clear_has_kind();
      ::feature_proto::ListUint32Int32* temp = kind_.v_list_uint32_int32_;
    kind_.v_list_uint32_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Int32& Feature::v_list_uint32_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_int32)
  return has_v_list_uint32_int32()
      ? *kind_.v_list_uint32_int32_
      : *reinterpret_cast< ::feature_proto::ListUint32Int32*>(&::feature_proto::_ListUint32Int32_default_instance_);
}
inline ::feature_proto::ListUint32Int32* Feature::mutable_v_list_uint32_int32() {
  if (!has_v_list_uint32_int32()) {
    clear_kind();
    set_has_v_list_uint32_int32();
    kind_.v_list_uint32_int32_ = CreateMaybeMessage< ::feature_proto::ListUint32Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_int32)
  return kind_.v_list_uint32_int32_;
}

// .feature_proto.ListUint32Int64 v_list_uint32_int64 = 94;
inline bool Feature::has_v_list_uint32_int64() const {
  return kind_case() == kVListUint32Int64;
}
inline void Feature::set_has_v_list_uint32_int64() {
  _oneof_case_[0] = kVListUint32Int64;
}
inline void Feature::clear_v_list_uint32_int64() {
  if (has_v_list_uint32_int64()) {
    delete kind_.v_list_uint32_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Int64& Feature::_internal_v_list_uint32_int64() const {
  return *kind_.v_list_uint32_int64_;
}
inline ::feature_proto::ListUint32Int64* Feature::release_v_list_uint32_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_int64)
  if (has_v_list_uint32_int64()) {
    clear_has_kind();
      ::feature_proto::ListUint32Int64* temp = kind_.v_list_uint32_int64_;
    kind_.v_list_uint32_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Int64& Feature::v_list_uint32_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_int64)
  return has_v_list_uint32_int64()
      ? *kind_.v_list_uint32_int64_
      : *reinterpret_cast< ::feature_proto::ListUint32Int64*>(&::feature_proto::_ListUint32Int64_default_instance_);
}
inline ::feature_proto::ListUint32Int64* Feature::mutable_v_list_uint32_int64() {
  if (!has_v_list_uint32_int64()) {
    clear_kind();
    set_has_v_list_uint32_int64();
    kind_.v_list_uint32_int64_ = CreateMaybeMessage< ::feature_proto::ListUint32Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_int64)
  return kind_.v_list_uint32_int64_;
}

// .feature_proto.ListUint32Uint32 v_list_uint32_uint32 = 95;
inline bool Feature::has_v_list_uint32_uint32() const {
  return kind_case() == kVListUint32Uint32;
}
inline void Feature::set_has_v_list_uint32_uint32() {
  _oneof_case_[0] = kVListUint32Uint32;
}
inline void Feature::clear_v_list_uint32_uint32() {
  if (has_v_list_uint32_uint32()) {
    delete kind_.v_list_uint32_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Uint32& Feature::_internal_v_list_uint32_uint32() const {
  return *kind_.v_list_uint32_uint32_;
}
inline ::feature_proto::ListUint32Uint32* Feature::release_v_list_uint32_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_uint32)
  if (has_v_list_uint32_uint32()) {
    clear_has_kind();
      ::feature_proto::ListUint32Uint32* temp = kind_.v_list_uint32_uint32_;
    kind_.v_list_uint32_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Uint32& Feature::v_list_uint32_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_uint32)
  return has_v_list_uint32_uint32()
      ? *kind_.v_list_uint32_uint32_
      : *reinterpret_cast< ::feature_proto::ListUint32Uint32*>(&::feature_proto::_ListUint32Uint32_default_instance_);
}
inline ::feature_proto::ListUint32Uint32* Feature::mutable_v_list_uint32_uint32() {
  if (!has_v_list_uint32_uint32()) {
    clear_kind();
    set_has_v_list_uint32_uint32();
    kind_.v_list_uint32_uint32_ = CreateMaybeMessage< ::feature_proto::ListUint32Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_uint32)
  return kind_.v_list_uint32_uint32_;
}

// .feature_proto.ListUint32Uint64 v_list_uint32_uint64 = 96;
inline bool Feature::has_v_list_uint32_uint64() const {
  return kind_case() == kVListUint32Uint64;
}
inline void Feature::set_has_v_list_uint32_uint64() {
  _oneof_case_[0] = kVListUint32Uint64;
}
inline void Feature::clear_v_list_uint32_uint64() {
  if (has_v_list_uint32_uint64()) {
    delete kind_.v_list_uint32_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Uint64& Feature::_internal_v_list_uint32_uint64() const {
  return *kind_.v_list_uint32_uint64_;
}
inline ::feature_proto::ListUint32Uint64* Feature::release_v_list_uint32_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_uint64)
  if (has_v_list_uint32_uint64()) {
    clear_has_kind();
      ::feature_proto::ListUint32Uint64* temp = kind_.v_list_uint32_uint64_;
    kind_.v_list_uint32_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Uint64& Feature::v_list_uint32_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_uint64)
  return has_v_list_uint32_uint64()
      ? *kind_.v_list_uint32_uint64_
      : *reinterpret_cast< ::feature_proto::ListUint32Uint64*>(&::feature_proto::_ListUint32Uint64_default_instance_);
}
inline ::feature_proto::ListUint32Uint64* Feature::mutable_v_list_uint32_uint64() {
  if (!has_v_list_uint32_uint64()) {
    clear_kind();
    set_has_v_list_uint32_uint64();
    kind_.v_list_uint32_uint64_ = CreateMaybeMessage< ::feature_proto::ListUint32Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_uint64)
  return kind_.v_list_uint32_uint64_;
}

// .feature_proto.ListUint32Sint32 v_list_uint32_sint32 = 97;
inline bool Feature::has_v_list_uint32_sint32() const {
  return kind_case() == kVListUint32Sint32;
}
inline void Feature::set_has_v_list_uint32_sint32() {
  _oneof_case_[0] = kVListUint32Sint32;
}
inline void Feature::clear_v_list_uint32_sint32() {
  if (has_v_list_uint32_sint32()) {
    delete kind_.v_list_uint32_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Sint32& Feature::_internal_v_list_uint32_sint32() const {
  return *kind_.v_list_uint32_sint32_;
}
inline ::feature_proto::ListUint32Sint32* Feature::release_v_list_uint32_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_sint32)
  if (has_v_list_uint32_sint32()) {
    clear_has_kind();
      ::feature_proto::ListUint32Sint32* temp = kind_.v_list_uint32_sint32_;
    kind_.v_list_uint32_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Sint32& Feature::v_list_uint32_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_sint32)
  return has_v_list_uint32_sint32()
      ? *kind_.v_list_uint32_sint32_
      : *reinterpret_cast< ::feature_proto::ListUint32Sint32*>(&::feature_proto::_ListUint32Sint32_default_instance_);
}
inline ::feature_proto::ListUint32Sint32* Feature::mutable_v_list_uint32_sint32() {
  if (!has_v_list_uint32_sint32()) {
    clear_kind();
    set_has_v_list_uint32_sint32();
    kind_.v_list_uint32_sint32_ = CreateMaybeMessage< ::feature_proto::ListUint32Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_sint32)
  return kind_.v_list_uint32_sint32_;
}

// .feature_proto.ListUint32Sint64 v_list_uint32_sint64 = 98;
inline bool Feature::has_v_list_uint32_sint64() const {
  return kind_case() == kVListUint32Sint64;
}
inline void Feature::set_has_v_list_uint32_sint64() {
  _oneof_case_[0] = kVListUint32Sint64;
}
inline void Feature::clear_v_list_uint32_sint64() {
  if (has_v_list_uint32_sint64()) {
    delete kind_.v_list_uint32_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Sint64& Feature::_internal_v_list_uint32_sint64() const {
  return *kind_.v_list_uint32_sint64_;
}
inline ::feature_proto::ListUint32Sint64* Feature::release_v_list_uint32_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_sint64)
  if (has_v_list_uint32_sint64()) {
    clear_has_kind();
      ::feature_proto::ListUint32Sint64* temp = kind_.v_list_uint32_sint64_;
    kind_.v_list_uint32_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Sint64& Feature::v_list_uint32_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_sint64)
  return has_v_list_uint32_sint64()
      ? *kind_.v_list_uint32_sint64_
      : *reinterpret_cast< ::feature_proto::ListUint32Sint64*>(&::feature_proto::_ListUint32Sint64_default_instance_);
}
inline ::feature_proto::ListUint32Sint64* Feature::mutable_v_list_uint32_sint64() {
  if (!has_v_list_uint32_sint64()) {
    clear_kind();
    set_has_v_list_uint32_sint64();
    kind_.v_list_uint32_sint64_ = CreateMaybeMessage< ::feature_proto::ListUint32Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_sint64)
  return kind_.v_list_uint32_sint64_;
}

// .feature_proto.ListUint32Fixed32 v_list_uint32_fixed32 = 99;
inline bool Feature::has_v_list_uint32_fixed32() const {
  return kind_case() == kVListUint32Fixed32;
}
inline void Feature::set_has_v_list_uint32_fixed32() {
  _oneof_case_[0] = kVListUint32Fixed32;
}
inline void Feature::clear_v_list_uint32_fixed32() {
  if (has_v_list_uint32_fixed32()) {
    delete kind_.v_list_uint32_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Fixed32& Feature::_internal_v_list_uint32_fixed32() const {
  return *kind_.v_list_uint32_fixed32_;
}
inline ::feature_proto::ListUint32Fixed32* Feature::release_v_list_uint32_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_fixed32)
  if (has_v_list_uint32_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListUint32Fixed32* temp = kind_.v_list_uint32_fixed32_;
    kind_.v_list_uint32_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Fixed32& Feature::v_list_uint32_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_fixed32)
  return has_v_list_uint32_fixed32()
      ? *kind_.v_list_uint32_fixed32_
      : *reinterpret_cast< ::feature_proto::ListUint32Fixed32*>(&::feature_proto::_ListUint32Fixed32_default_instance_);
}
inline ::feature_proto::ListUint32Fixed32* Feature::mutable_v_list_uint32_fixed32() {
  if (!has_v_list_uint32_fixed32()) {
    clear_kind();
    set_has_v_list_uint32_fixed32();
    kind_.v_list_uint32_fixed32_ = CreateMaybeMessage< ::feature_proto::ListUint32Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_fixed32)
  return kind_.v_list_uint32_fixed32_;
}

// .feature_proto.ListUint32Fixed64 v_list_uint32_fixed64 = 100;
inline bool Feature::has_v_list_uint32_fixed64() const {
  return kind_case() == kVListUint32Fixed64;
}
inline void Feature::set_has_v_list_uint32_fixed64() {
  _oneof_case_[0] = kVListUint32Fixed64;
}
inline void Feature::clear_v_list_uint32_fixed64() {
  if (has_v_list_uint32_fixed64()) {
    delete kind_.v_list_uint32_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Fixed64& Feature::_internal_v_list_uint32_fixed64() const {
  return *kind_.v_list_uint32_fixed64_;
}
inline ::feature_proto::ListUint32Fixed64* Feature::release_v_list_uint32_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_fixed64)
  if (has_v_list_uint32_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListUint32Fixed64* temp = kind_.v_list_uint32_fixed64_;
    kind_.v_list_uint32_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Fixed64& Feature::v_list_uint32_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_fixed64)
  return has_v_list_uint32_fixed64()
      ? *kind_.v_list_uint32_fixed64_
      : *reinterpret_cast< ::feature_proto::ListUint32Fixed64*>(&::feature_proto::_ListUint32Fixed64_default_instance_);
}
inline ::feature_proto::ListUint32Fixed64* Feature::mutable_v_list_uint32_fixed64() {
  if (!has_v_list_uint32_fixed64()) {
    clear_kind();
    set_has_v_list_uint32_fixed64();
    kind_.v_list_uint32_fixed64_ = CreateMaybeMessage< ::feature_proto::ListUint32Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_fixed64)
  return kind_.v_list_uint32_fixed64_;
}

// .feature_proto.ListUint32Sfixed32 v_list_uint32_sfixed32 = 101;
inline bool Feature::has_v_list_uint32_sfixed32() const {
  return kind_case() == kVListUint32Sfixed32;
}
inline void Feature::set_has_v_list_uint32_sfixed32() {
  _oneof_case_[0] = kVListUint32Sfixed32;
}
inline void Feature::clear_v_list_uint32_sfixed32() {
  if (has_v_list_uint32_sfixed32()) {
    delete kind_.v_list_uint32_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Sfixed32& Feature::_internal_v_list_uint32_sfixed32() const {
  return *kind_.v_list_uint32_sfixed32_;
}
inline ::feature_proto::ListUint32Sfixed32* Feature::release_v_list_uint32_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_sfixed32)
  if (has_v_list_uint32_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListUint32Sfixed32* temp = kind_.v_list_uint32_sfixed32_;
    kind_.v_list_uint32_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Sfixed32& Feature::v_list_uint32_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_sfixed32)
  return has_v_list_uint32_sfixed32()
      ? *kind_.v_list_uint32_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListUint32Sfixed32*>(&::feature_proto::_ListUint32Sfixed32_default_instance_);
}
inline ::feature_proto::ListUint32Sfixed32* Feature::mutable_v_list_uint32_sfixed32() {
  if (!has_v_list_uint32_sfixed32()) {
    clear_kind();
    set_has_v_list_uint32_sfixed32();
    kind_.v_list_uint32_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListUint32Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_sfixed32)
  return kind_.v_list_uint32_sfixed32_;
}

// .feature_proto.ListUint32Sfixed64 v_list_uint32_sfixed64 = 102;
inline bool Feature::has_v_list_uint32_sfixed64() const {
  return kind_case() == kVListUint32Sfixed64;
}
inline void Feature::set_has_v_list_uint32_sfixed64() {
  _oneof_case_[0] = kVListUint32Sfixed64;
}
inline void Feature::clear_v_list_uint32_sfixed64() {
  if (has_v_list_uint32_sfixed64()) {
    delete kind_.v_list_uint32_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Sfixed64& Feature::_internal_v_list_uint32_sfixed64() const {
  return *kind_.v_list_uint32_sfixed64_;
}
inline ::feature_proto::ListUint32Sfixed64* Feature::release_v_list_uint32_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_sfixed64)
  if (has_v_list_uint32_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListUint32Sfixed64* temp = kind_.v_list_uint32_sfixed64_;
    kind_.v_list_uint32_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Sfixed64& Feature::v_list_uint32_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_sfixed64)
  return has_v_list_uint32_sfixed64()
      ? *kind_.v_list_uint32_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListUint32Sfixed64*>(&::feature_proto::_ListUint32Sfixed64_default_instance_);
}
inline ::feature_proto::ListUint32Sfixed64* Feature::mutable_v_list_uint32_sfixed64() {
  if (!has_v_list_uint32_sfixed64()) {
    clear_kind();
    set_has_v_list_uint32_sfixed64();
    kind_.v_list_uint32_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListUint32Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_sfixed64)
  return kind_.v_list_uint32_sfixed64_;
}

// .feature_proto.ListUint32Bool v_list_uint32_bool = 103;
inline bool Feature::has_v_list_uint32_bool() const {
  return kind_case() == kVListUint32Bool;
}
inline void Feature::set_has_v_list_uint32_bool() {
  _oneof_case_[0] = kVListUint32Bool;
}
inline void Feature::clear_v_list_uint32_bool() {
  if (has_v_list_uint32_bool()) {
    delete kind_.v_list_uint32_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Bool& Feature::_internal_v_list_uint32_bool() const {
  return *kind_.v_list_uint32_bool_;
}
inline ::feature_proto::ListUint32Bool* Feature::release_v_list_uint32_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_bool)
  if (has_v_list_uint32_bool()) {
    clear_has_kind();
      ::feature_proto::ListUint32Bool* temp = kind_.v_list_uint32_bool_;
    kind_.v_list_uint32_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Bool& Feature::v_list_uint32_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_bool)
  return has_v_list_uint32_bool()
      ? *kind_.v_list_uint32_bool_
      : *reinterpret_cast< ::feature_proto::ListUint32Bool*>(&::feature_proto::_ListUint32Bool_default_instance_);
}
inline ::feature_proto::ListUint32Bool* Feature::mutable_v_list_uint32_bool() {
  if (!has_v_list_uint32_bool()) {
    clear_kind();
    set_has_v_list_uint32_bool();
    kind_.v_list_uint32_bool_ = CreateMaybeMessage< ::feature_proto::ListUint32Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_bool)
  return kind_.v_list_uint32_bool_;
}

// .feature_proto.ListUint32String v_list_uint32_string = 104;
inline bool Feature::has_v_list_uint32_string() const {
  return kind_case() == kVListUint32String;
}
inline void Feature::set_has_v_list_uint32_string() {
  _oneof_case_[0] = kVListUint32String;
}
inline void Feature::clear_v_list_uint32_string() {
  if (has_v_list_uint32_string()) {
    delete kind_.v_list_uint32_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32String& Feature::_internal_v_list_uint32_string() const {
  return *kind_.v_list_uint32_string_;
}
inline ::feature_proto::ListUint32String* Feature::release_v_list_uint32_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_string)
  if (has_v_list_uint32_string()) {
    clear_has_kind();
      ::feature_proto::ListUint32String* temp = kind_.v_list_uint32_string_;
    kind_.v_list_uint32_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32String& Feature::v_list_uint32_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_string)
  return has_v_list_uint32_string()
      ? *kind_.v_list_uint32_string_
      : *reinterpret_cast< ::feature_proto::ListUint32String*>(&::feature_proto::_ListUint32String_default_instance_);
}
inline ::feature_proto::ListUint32String* Feature::mutable_v_list_uint32_string() {
  if (!has_v_list_uint32_string()) {
    clear_kind();
    set_has_v_list_uint32_string();
    kind_.v_list_uint32_string_ = CreateMaybeMessage< ::feature_proto::ListUint32String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_string)
  return kind_.v_list_uint32_string_;
}

// .feature_proto.ListUint32Bytes v_list_uint32_bytes = 105;
inline bool Feature::has_v_list_uint32_bytes() const {
  return kind_case() == kVListUint32Bytes;
}
inline void Feature::set_has_v_list_uint32_bytes() {
  _oneof_case_[0] = kVListUint32Bytes;
}
inline void Feature::clear_v_list_uint32_bytes() {
  if (has_v_list_uint32_bytes()) {
    delete kind_.v_list_uint32_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint32Bytes& Feature::_internal_v_list_uint32_bytes() const {
  return *kind_.v_list_uint32_bytes_;
}
inline ::feature_proto::ListUint32Bytes* Feature::release_v_list_uint32_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint32_bytes)
  if (has_v_list_uint32_bytes()) {
    clear_has_kind();
      ::feature_proto::ListUint32Bytes* temp = kind_.v_list_uint32_bytes_;
    kind_.v_list_uint32_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint32Bytes& Feature::v_list_uint32_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint32_bytes)
  return has_v_list_uint32_bytes()
      ? *kind_.v_list_uint32_bytes_
      : *reinterpret_cast< ::feature_proto::ListUint32Bytes*>(&::feature_proto::_ListUint32Bytes_default_instance_);
}
inline ::feature_proto::ListUint32Bytes* Feature::mutable_v_list_uint32_bytes() {
  if (!has_v_list_uint32_bytes()) {
    clear_kind();
    set_has_v_list_uint32_bytes();
    kind_.v_list_uint32_bytes_ = CreateMaybeMessage< ::feature_proto::ListUint32Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint32_bytes)
  return kind_.v_list_uint32_bytes_;
}

// .feature_proto.ListUint64Double v_list_uint64_double = 106;
inline bool Feature::has_v_list_uint64_double() const {
  return kind_case() == kVListUint64Double;
}
inline void Feature::set_has_v_list_uint64_double() {
  _oneof_case_[0] = kVListUint64Double;
}
inline void Feature::clear_v_list_uint64_double() {
  if (has_v_list_uint64_double()) {
    delete kind_.v_list_uint64_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Double& Feature::_internal_v_list_uint64_double() const {
  return *kind_.v_list_uint64_double_;
}
inline ::feature_proto::ListUint64Double* Feature::release_v_list_uint64_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_double)
  if (has_v_list_uint64_double()) {
    clear_has_kind();
      ::feature_proto::ListUint64Double* temp = kind_.v_list_uint64_double_;
    kind_.v_list_uint64_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Double& Feature::v_list_uint64_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_double)
  return has_v_list_uint64_double()
      ? *kind_.v_list_uint64_double_
      : *reinterpret_cast< ::feature_proto::ListUint64Double*>(&::feature_proto::_ListUint64Double_default_instance_);
}
inline ::feature_proto::ListUint64Double* Feature::mutable_v_list_uint64_double() {
  if (!has_v_list_uint64_double()) {
    clear_kind();
    set_has_v_list_uint64_double();
    kind_.v_list_uint64_double_ = CreateMaybeMessage< ::feature_proto::ListUint64Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_double)
  return kind_.v_list_uint64_double_;
}

// .feature_proto.ListUint64Float v_list_uint64_float = 107;
inline bool Feature::has_v_list_uint64_float() const {
  return kind_case() == kVListUint64Float;
}
inline void Feature::set_has_v_list_uint64_float() {
  _oneof_case_[0] = kVListUint64Float;
}
inline void Feature::clear_v_list_uint64_float() {
  if (has_v_list_uint64_float()) {
    delete kind_.v_list_uint64_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Float& Feature::_internal_v_list_uint64_float() const {
  return *kind_.v_list_uint64_float_;
}
inline ::feature_proto::ListUint64Float* Feature::release_v_list_uint64_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_float)
  if (has_v_list_uint64_float()) {
    clear_has_kind();
      ::feature_proto::ListUint64Float* temp = kind_.v_list_uint64_float_;
    kind_.v_list_uint64_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Float& Feature::v_list_uint64_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_float)
  return has_v_list_uint64_float()
      ? *kind_.v_list_uint64_float_
      : *reinterpret_cast< ::feature_proto::ListUint64Float*>(&::feature_proto::_ListUint64Float_default_instance_);
}
inline ::feature_proto::ListUint64Float* Feature::mutable_v_list_uint64_float() {
  if (!has_v_list_uint64_float()) {
    clear_kind();
    set_has_v_list_uint64_float();
    kind_.v_list_uint64_float_ = CreateMaybeMessage< ::feature_proto::ListUint64Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_float)
  return kind_.v_list_uint64_float_;
}

// .feature_proto.ListUint64Int32 v_list_uint64_int32 = 108;
inline bool Feature::has_v_list_uint64_int32() const {
  return kind_case() == kVListUint64Int32;
}
inline void Feature::set_has_v_list_uint64_int32() {
  _oneof_case_[0] = kVListUint64Int32;
}
inline void Feature::clear_v_list_uint64_int32() {
  if (has_v_list_uint64_int32()) {
    delete kind_.v_list_uint64_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Int32& Feature::_internal_v_list_uint64_int32() const {
  return *kind_.v_list_uint64_int32_;
}
inline ::feature_proto::ListUint64Int32* Feature::release_v_list_uint64_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_int32)
  if (has_v_list_uint64_int32()) {
    clear_has_kind();
      ::feature_proto::ListUint64Int32* temp = kind_.v_list_uint64_int32_;
    kind_.v_list_uint64_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Int32& Feature::v_list_uint64_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_int32)
  return has_v_list_uint64_int32()
      ? *kind_.v_list_uint64_int32_
      : *reinterpret_cast< ::feature_proto::ListUint64Int32*>(&::feature_proto::_ListUint64Int32_default_instance_);
}
inline ::feature_proto::ListUint64Int32* Feature::mutable_v_list_uint64_int32() {
  if (!has_v_list_uint64_int32()) {
    clear_kind();
    set_has_v_list_uint64_int32();
    kind_.v_list_uint64_int32_ = CreateMaybeMessage< ::feature_proto::ListUint64Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_int32)
  return kind_.v_list_uint64_int32_;
}

// .feature_proto.ListUint64Int64 v_list_uint64_int64 = 109;
inline bool Feature::has_v_list_uint64_int64() const {
  return kind_case() == kVListUint64Int64;
}
inline void Feature::set_has_v_list_uint64_int64() {
  _oneof_case_[0] = kVListUint64Int64;
}
inline void Feature::clear_v_list_uint64_int64() {
  if (has_v_list_uint64_int64()) {
    delete kind_.v_list_uint64_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Int64& Feature::_internal_v_list_uint64_int64() const {
  return *kind_.v_list_uint64_int64_;
}
inline ::feature_proto::ListUint64Int64* Feature::release_v_list_uint64_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_int64)
  if (has_v_list_uint64_int64()) {
    clear_has_kind();
      ::feature_proto::ListUint64Int64* temp = kind_.v_list_uint64_int64_;
    kind_.v_list_uint64_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Int64& Feature::v_list_uint64_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_int64)
  return has_v_list_uint64_int64()
      ? *kind_.v_list_uint64_int64_
      : *reinterpret_cast< ::feature_proto::ListUint64Int64*>(&::feature_proto::_ListUint64Int64_default_instance_);
}
inline ::feature_proto::ListUint64Int64* Feature::mutable_v_list_uint64_int64() {
  if (!has_v_list_uint64_int64()) {
    clear_kind();
    set_has_v_list_uint64_int64();
    kind_.v_list_uint64_int64_ = CreateMaybeMessage< ::feature_proto::ListUint64Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_int64)
  return kind_.v_list_uint64_int64_;
}

// .feature_proto.ListUint64Uint32 v_list_uint64_uint32 = 110;
inline bool Feature::has_v_list_uint64_uint32() const {
  return kind_case() == kVListUint64Uint32;
}
inline void Feature::set_has_v_list_uint64_uint32() {
  _oneof_case_[0] = kVListUint64Uint32;
}
inline void Feature::clear_v_list_uint64_uint32() {
  if (has_v_list_uint64_uint32()) {
    delete kind_.v_list_uint64_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Uint32& Feature::_internal_v_list_uint64_uint32() const {
  return *kind_.v_list_uint64_uint32_;
}
inline ::feature_proto::ListUint64Uint32* Feature::release_v_list_uint64_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_uint32)
  if (has_v_list_uint64_uint32()) {
    clear_has_kind();
      ::feature_proto::ListUint64Uint32* temp = kind_.v_list_uint64_uint32_;
    kind_.v_list_uint64_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Uint32& Feature::v_list_uint64_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_uint32)
  return has_v_list_uint64_uint32()
      ? *kind_.v_list_uint64_uint32_
      : *reinterpret_cast< ::feature_proto::ListUint64Uint32*>(&::feature_proto::_ListUint64Uint32_default_instance_);
}
inline ::feature_proto::ListUint64Uint32* Feature::mutable_v_list_uint64_uint32() {
  if (!has_v_list_uint64_uint32()) {
    clear_kind();
    set_has_v_list_uint64_uint32();
    kind_.v_list_uint64_uint32_ = CreateMaybeMessage< ::feature_proto::ListUint64Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_uint32)
  return kind_.v_list_uint64_uint32_;
}

// .feature_proto.ListUint64Uint64 v_list_uint64_uint64 = 111;
inline bool Feature::has_v_list_uint64_uint64() const {
  return kind_case() == kVListUint64Uint64;
}
inline void Feature::set_has_v_list_uint64_uint64() {
  _oneof_case_[0] = kVListUint64Uint64;
}
inline void Feature::clear_v_list_uint64_uint64() {
  if (has_v_list_uint64_uint64()) {
    delete kind_.v_list_uint64_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Uint64& Feature::_internal_v_list_uint64_uint64() const {
  return *kind_.v_list_uint64_uint64_;
}
inline ::feature_proto::ListUint64Uint64* Feature::release_v_list_uint64_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_uint64)
  if (has_v_list_uint64_uint64()) {
    clear_has_kind();
      ::feature_proto::ListUint64Uint64* temp = kind_.v_list_uint64_uint64_;
    kind_.v_list_uint64_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Uint64& Feature::v_list_uint64_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_uint64)
  return has_v_list_uint64_uint64()
      ? *kind_.v_list_uint64_uint64_
      : *reinterpret_cast< ::feature_proto::ListUint64Uint64*>(&::feature_proto::_ListUint64Uint64_default_instance_);
}
inline ::feature_proto::ListUint64Uint64* Feature::mutable_v_list_uint64_uint64() {
  if (!has_v_list_uint64_uint64()) {
    clear_kind();
    set_has_v_list_uint64_uint64();
    kind_.v_list_uint64_uint64_ = CreateMaybeMessage< ::feature_proto::ListUint64Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_uint64)
  return kind_.v_list_uint64_uint64_;
}

// .feature_proto.ListUint64Sint32 v_list_uint64_sint32 = 112;
inline bool Feature::has_v_list_uint64_sint32() const {
  return kind_case() == kVListUint64Sint32;
}
inline void Feature::set_has_v_list_uint64_sint32() {
  _oneof_case_[0] = kVListUint64Sint32;
}
inline void Feature::clear_v_list_uint64_sint32() {
  if (has_v_list_uint64_sint32()) {
    delete kind_.v_list_uint64_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Sint32& Feature::_internal_v_list_uint64_sint32() const {
  return *kind_.v_list_uint64_sint32_;
}
inline ::feature_proto::ListUint64Sint32* Feature::release_v_list_uint64_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_sint32)
  if (has_v_list_uint64_sint32()) {
    clear_has_kind();
      ::feature_proto::ListUint64Sint32* temp = kind_.v_list_uint64_sint32_;
    kind_.v_list_uint64_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Sint32& Feature::v_list_uint64_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_sint32)
  return has_v_list_uint64_sint32()
      ? *kind_.v_list_uint64_sint32_
      : *reinterpret_cast< ::feature_proto::ListUint64Sint32*>(&::feature_proto::_ListUint64Sint32_default_instance_);
}
inline ::feature_proto::ListUint64Sint32* Feature::mutable_v_list_uint64_sint32() {
  if (!has_v_list_uint64_sint32()) {
    clear_kind();
    set_has_v_list_uint64_sint32();
    kind_.v_list_uint64_sint32_ = CreateMaybeMessage< ::feature_proto::ListUint64Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_sint32)
  return kind_.v_list_uint64_sint32_;
}

// .feature_proto.ListUint64Sint64 v_list_uint64_sint64 = 113;
inline bool Feature::has_v_list_uint64_sint64() const {
  return kind_case() == kVListUint64Sint64;
}
inline void Feature::set_has_v_list_uint64_sint64() {
  _oneof_case_[0] = kVListUint64Sint64;
}
inline void Feature::clear_v_list_uint64_sint64() {
  if (has_v_list_uint64_sint64()) {
    delete kind_.v_list_uint64_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Sint64& Feature::_internal_v_list_uint64_sint64() const {
  return *kind_.v_list_uint64_sint64_;
}
inline ::feature_proto::ListUint64Sint64* Feature::release_v_list_uint64_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_sint64)
  if (has_v_list_uint64_sint64()) {
    clear_has_kind();
      ::feature_proto::ListUint64Sint64* temp = kind_.v_list_uint64_sint64_;
    kind_.v_list_uint64_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Sint64& Feature::v_list_uint64_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_sint64)
  return has_v_list_uint64_sint64()
      ? *kind_.v_list_uint64_sint64_
      : *reinterpret_cast< ::feature_proto::ListUint64Sint64*>(&::feature_proto::_ListUint64Sint64_default_instance_);
}
inline ::feature_proto::ListUint64Sint64* Feature::mutable_v_list_uint64_sint64() {
  if (!has_v_list_uint64_sint64()) {
    clear_kind();
    set_has_v_list_uint64_sint64();
    kind_.v_list_uint64_sint64_ = CreateMaybeMessage< ::feature_proto::ListUint64Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_sint64)
  return kind_.v_list_uint64_sint64_;
}

// .feature_proto.ListUint64Fixed32 v_list_uint64_fixed32 = 114;
inline bool Feature::has_v_list_uint64_fixed32() const {
  return kind_case() == kVListUint64Fixed32;
}
inline void Feature::set_has_v_list_uint64_fixed32() {
  _oneof_case_[0] = kVListUint64Fixed32;
}
inline void Feature::clear_v_list_uint64_fixed32() {
  if (has_v_list_uint64_fixed32()) {
    delete kind_.v_list_uint64_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Fixed32& Feature::_internal_v_list_uint64_fixed32() const {
  return *kind_.v_list_uint64_fixed32_;
}
inline ::feature_proto::ListUint64Fixed32* Feature::release_v_list_uint64_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_fixed32)
  if (has_v_list_uint64_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListUint64Fixed32* temp = kind_.v_list_uint64_fixed32_;
    kind_.v_list_uint64_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Fixed32& Feature::v_list_uint64_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_fixed32)
  return has_v_list_uint64_fixed32()
      ? *kind_.v_list_uint64_fixed32_
      : *reinterpret_cast< ::feature_proto::ListUint64Fixed32*>(&::feature_proto::_ListUint64Fixed32_default_instance_);
}
inline ::feature_proto::ListUint64Fixed32* Feature::mutable_v_list_uint64_fixed32() {
  if (!has_v_list_uint64_fixed32()) {
    clear_kind();
    set_has_v_list_uint64_fixed32();
    kind_.v_list_uint64_fixed32_ = CreateMaybeMessage< ::feature_proto::ListUint64Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_fixed32)
  return kind_.v_list_uint64_fixed32_;
}

// .feature_proto.ListUint64Fixed64 v_list_uint64_fixed64 = 115;
inline bool Feature::has_v_list_uint64_fixed64() const {
  return kind_case() == kVListUint64Fixed64;
}
inline void Feature::set_has_v_list_uint64_fixed64() {
  _oneof_case_[0] = kVListUint64Fixed64;
}
inline void Feature::clear_v_list_uint64_fixed64() {
  if (has_v_list_uint64_fixed64()) {
    delete kind_.v_list_uint64_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Fixed64& Feature::_internal_v_list_uint64_fixed64() const {
  return *kind_.v_list_uint64_fixed64_;
}
inline ::feature_proto::ListUint64Fixed64* Feature::release_v_list_uint64_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_fixed64)
  if (has_v_list_uint64_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListUint64Fixed64* temp = kind_.v_list_uint64_fixed64_;
    kind_.v_list_uint64_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Fixed64& Feature::v_list_uint64_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_fixed64)
  return has_v_list_uint64_fixed64()
      ? *kind_.v_list_uint64_fixed64_
      : *reinterpret_cast< ::feature_proto::ListUint64Fixed64*>(&::feature_proto::_ListUint64Fixed64_default_instance_);
}
inline ::feature_proto::ListUint64Fixed64* Feature::mutable_v_list_uint64_fixed64() {
  if (!has_v_list_uint64_fixed64()) {
    clear_kind();
    set_has_v_list_uint64_fixed64();
    kind_.v_list_uint64_fixed64_ = CreateMaybeMessage< ::feature_proto::ListUint64Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_fixed64)
  return kind_.v_list_uint64_fixed64_;
}

// .feature_proto.ListUint64Sfixed32 v_list_uint64_sfixed32 = 116;
inline bool Feature::has_v_list_uint64_sfixed32() const {
  return kind_case() == kVListUint64Sfixed32;
}
inline void Feature::set_has_v_list_uint64_sfixed32() {
  _oneof_case_[0] = kVListUint64Sfixed32;
}
inline void Feature::clear_v_list_uint64_sfixed32() {
  if (has_v_list_uint64_sfixed32()) {
    delete kind_.v_list_uint64_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Sfixed32& Feature::_internal_v_list_uint64_sfixed32() const {
  return *kind_.v_list_uint64_sfixed32_;
}
inline ::feature_proto::ListUint64Sfixed32* Feature::release_v_list_uint64_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_sfixed32)
  if (has_v_list_uint64_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListUint64Sfixed32* temp = kind_.v_list_uint64_sfixed32_;
    kind_.v_list_uint64_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Sfixed32& Feature::v_list_uint64_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_sfixed32)
  return has_v_list_uint64_sfixed32()
      ? *kind_.v_list_uint64_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListUint64Sfixed32*>(&::feature_proto::_ListUint64Sfixed32_default_instance_);
}
inline ::feature_proto::ListUint64Sfixed32* Feature::mutable_v_list_uint64_sfixed32() {
  if (!has_v_list_uint64_sfixed32()) {
    clear_kind();
    set_has_v_list_uint64_sfixed32();
    kind_.v_list_uint64_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListUint64Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_sfixed32)
  return kind_.v_list_uint64_sfixed32_;
}

// .feature_proto.ListUint64Sfixed64 v_list_uint64_sfixed64 = 117;
inline bool Feature::has_v_list_uint64_sfixed64() const {
  return kind_case() == kVListUint64Sfixed64;
}
inline void Feature::set_has_v_list_uint64_sfixed64() {
  _oneof_case_[0] = kVListUint64Sfixed64;
}
inline void Feature::clear_v_list_uint64_sfixed64() {
  if (has_v_list_uint64_sfixed64()) {
    delete kind_.v_list_uint64_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Sfixed64& Feature::_internal_v_list_uint64_sfixed64() const {
  return *kind_.v_list_uint64_sfixed64_;
}
inline ::feature_proto::ListUint64Sfixed64* Feature::release_v_list_uint64_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_sfixed64)
  if (has_v_list_uint64_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListUint64Sfixed64* temp = kind_.v_list_uint64_sfixed64_;
    kind_.v_list_uint64_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Sfixed64& Feature::v_list_uint64_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_sfixed64)
  return has_v_list_uint64_sfixed64()
      ? *kind_.v_list_uint64_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListUint64Sfixed64*>(&::feature_proto::_ListUint64Sfixed64_default_instance_);
}
inline ::feature_proto::ListUint64Sfixed64* Feature::mutable_v_list_uint64_sfixed64() {
  if (!has_v_list_uint64_sfixed64()) {
    clear_kind();
    set_has_v_list_uint64_sfixed64();
    kind_.v_list_uint64_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListUint64Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_sfixed64)
  return kind_.v_list_uint64_sfixed64_;
}

// .feature_proto.ListUint64Bool v_list_uint64_bool = 118;
inline bool Feature::has_v_list_uint64_bool() const {
  return kind_case() == kVListUint64Bool;
}
inline void Feature::set_has_v_list_uint64_bool() {
  _oneof_case_[0] = kVListUint64Bool;
}
inline void Feature::clear_v_list_uint64_bool() {
  if (has_v_list_uint64_bool()) {
    delete kind_.v_list_uint64_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Bool& Feature::_internal_v_list_uint64_bool() const {
  return *kind_.v_list_uint64_bool_;
}
inline ::feature_proto::ListUint64Bool* Feature::release_v_list_uint64_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_bool)
  if (has_v_list_uint64_bool()) {
    clear_has_kind();
      ::feature_proto::ListUint64Bool* temp = kind_.v_list_uint64_bool_;
    kind_.v_list_uint64_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Bool& Feature::v_list_uint64_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_bool)
  return has_v_list_uint64_bool()
      ? *kind_.v_list_uint64_bool_
      : *reinterpret_cast< ::feature_proto::ListUint64Bool*>(&::feature_proto::_ListUint64Bool_default_instance_);
}
inline ::feature_proto::ListUint64Bool* Feature::mutable_v_list_uint64_bool() {
  if (!has_v_list_uint64_bool()) {
    clear_kind();
    set_has_v_list_uint64_bool();
    kind_.v_list_uint64_bool_ = CreateMaybeMessage< ::feature_proto::ListUint64Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_bool)
  return kind_.v_list_uint64_bool_;
}

// .feature_proto.ListUint64String v_list_uint64_string = 119;
inline bool Feature::has_v_list_uint64_string() const {
  return kind_case() == kVListUint64String;
}
inline void Feature::set_has_v_list_uint64_string() {
  _oneof_case_[0] = kVListUint64String;
}
inline void Feature::clear_v_list_uint64_string() {
  if (has_v_list_uint64_string()) {
    delete kind_.v_list_uint64_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64String& Feature::_internal_v_list_uint64_string() const {
  return *kind_.v_list_uint64_string_;
}
inline ::feature_proto::ListUint64String* Feature::release_v_list_uint64_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_string)
  if (has_v_list_uint64_string()) {
    clear_has_kind();
      ::feature_proto::ListUint64String* temp = kind_.v_list_uint64_string_;
    kind_.v_list_uint64_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64String& Feature::v_list_uint64_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_string)
  return has_v_list_uint64_string()
      ? *kind_.v_list_uint64_string_
      : *reinterpret_cast< ::feature_proto::ListUint64String*>(&::feature_proto::_ListUint64String_default_instance_);
}
inline ::feature_proto::ListUint64String* Feature::mutable_v_list_uint64_string() {
  if (!has_v_list_uint64_string()) {
    clear_kind();
    set_has_v_list_uint64_string();
    kind_.v_list_uint64_string_ = CreateMaybeMessage< ::feature_proto::ListUint64String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_string)
  return kind_.v_list_uint64_string_;
}

// .feature_proto.ListUint64Bytes v_list_uint64_bytes = 120;
inline bool Feature::has_v_list_uint64_bytes() const {
  return kind_case() == kVListUint64Bytes;
}
inline void Feature::set_has_v_list_uint64_bytes() {
  _oneof_case_[0] = kVListUint64Bytes;
}
inline void Feature::clear_v_list_uint64_bytes() {
  if (has_v_list_uint64_bytes()) {
    delete kind_.v_list_uint64_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListUint64Bytes& Feature::_internal_v_list_uint64_bytes() const {
  return *kind_.v_list_uint64_bytes_;
}
inline ::feature_proto::ListUint64Bytes* Feature::release_v_list_uint64_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_uint64_bytes)
  if (has_v_list_uint64_bytes()) {
    clear_has_kind();
      ::feature_proto::ListUint64Bytes* temp = kind_.v_list_uint64_bytes_;
    kind_.v_list_uint64_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListUint64Bytes& Feature::v_list_uint64_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_uint64_bytes)
  return has_v_list_uint64_bytes()
      ? *kind_.v_list_uint64_bytes_
      : *reinterpret_cast< ::feature_proto::ListUint64Bytes*>(&::feature_proto::_ListUint64Bytes_default_instance_);
}
inline ::feature_proto::ListUint64Bytes* Feature::mutable_v_list_uint64_bytes() {
  if (!has_v_list_uint64_bytes()) {
    clear_kind();
    set_has_v_list_uint64_bytes();
    kind_.v_list_uint64_bytes_ = CreateMaybeMessage< ::feature_proto::ListUint64Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_uint64_bytes)
  return kind_.v_list_uint64_bytes_;
}

// .feature_proto.ListSint32Double v_list_sint32_double = 121;
inline bool Feature::has_v_list_sint32_double() const {
  return kind_case() == kVListSint32Double;
}
inline void Feature::set_has_v_list_sint32_double() {
  _oneof_case_[0] = kVListSint32Double;
}
inline void Feature::clear_v_list_sint32_double() {
  if (has_v_list_sint32_double()) {
    delete kind_.v_list_sint32_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Double& Feature::_internal_v_list_sint32_double() const {
  return *kind_.v_list_sint32_double_;
}
inline ::feature_proto::ListSint32Double* Feature::release_v_list_sint32_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_double)
  if (has_v_list_sint32_double()) {
    clear_has_kind();
      ::feature_proto::ListSint32Double* temp = kind_.v_list_sint32_double_;
    kind_.v_list_sint32_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Double& Feature::v_list_sint32_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_double)
  return has_v_list_sint32_double()
      ? *kind_.v_list_sint32_double_
      : *reinterpret_cast< ::feature_proto::ListSint32Double*>(&::feature_proto::_ListSint32Double_default_instance_);
}
inline ::feature_proto::ListSint32Double* Feature::mutable_v_list_sint32_double() {
  if (!has_v_list_sint32_double()) {
    clear_kind();
    set_has_v_list_sint32_double();
    kind_.v_list_sint32_double_ = CreateMaybeMessage< ::feature_proto::ListSint32Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_double)
  return kind_.v_list_sint32_double_;
}

// .feature_proto.ListSint32Float v_list_sint32_float = 122;
inline bool Feature::has_v_list_sint32_float() const {
  return kind_case() == kVListSint32Float;
}
inline void Feature::set_has_v_list_sint32_float() {
  _oneof_case_[0] = kVListSint32Float;
}
inline void Feature::clear_v_list_sint32_float() {
  if (has_v_list_sint32_float()) {
    delete kind_.v_list_sint32_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Float& Feature::_internal_v_list_sint32_float() const {
  return *kind_.v_list_sint32_float_;
}
inline ::feature_proto::ListSint32Float* Feature::release_v_list_sint32_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_float)
  if (has_v_list_sint32_float()) {
    clear_has_kind();
      ::feature_proto::ListSint32Float* temp = kind_.v_list_sint32_float_;
    kind_.v_list_sint32_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Float& Feature::v_list_sint32_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_float)
  return has_v_list_sint32_float()
      ? *kind_.v_list_sint32_float_
      : *reinterpret_cast< ::feature_proto::ListSint32Float*>(&::feature_proto::_ListSint32Float_default_instance_);
}
inline ::feature_proto::ListSint32Float* Feature::mutable_v_list_sint32_float() {
  if (!has_v_list_sint32_float()) {
    clear_kind();
    set_has_v_list_sint32_float();
    kind_.v_list_sint32_float_ = CreateMaybeMessage< ::feature_proto::ListSint32Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_float)
  return kind_.v_list_sint32_float_;
}

// .feature_proto.ListSint32Int32 v_list_sint32_int32 = 123;
inline bool Feature::has_v_list_sint32_int32() const {
  return kind_case() == kVListSint32Int32;
}
inline void Feature::set_has_v_list_sint32_int32() {
  _oneof_case_[0] = kVListSint32Int32;
}
inline void Feature::clear_v_list_sint32_int32() {
  if (has_v_list_sint32_int32()) {
    delete kind_.v_list_sint32_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Int32& Feature::_internal_v_list_sint32_int32() const {
  return *kind_.v_list_sint32_int32_;
}
inline ::feature_proto::ListSint32Int32* Feature::release_v_list_sint32_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_int32)
  if (has_v_list_sint32_int32()) {
    clear_has_kind();
      ::feature_proto::ListSint32Int32* temp = kind_.v_list_sint32_int32_;
    kind_.v_list_sint32_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Int32& Feature::v_list_sint32_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_int32)
  return has_v_list_sint32_int32()
      ? *kind_.v_list_sint32_int32_
      : *reinterpret_cast< ::feature_proto::ListSint32Int32*>(&::feature_proto::_ListSint32Int32_default_instance_);
}
inline ::feature_proto::ListSint32Int32* Feature::mutable_v_list_sint32_int32() {
  if (!has_v_list_sint32_int32()) {
    clear_kind();
    set_has_v_list_sint32_int32();
    kind_.v_list_sint32_int32_ = CreateMaybeMessage< ::feature_proto::ListSint32Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_int32)
  return kind_.v_list_sint32_int32_;
}

// .feature_proto.ListSint32Int64 v_list_sint32_int64 = 124;
inline bool Feature::has_v_list_sint32_int64() const {
  return kind_case() == kVListSint32Int64;
}
inline void Feature::set_has_v_list_sint32_int64() {
  _oneof_case_[0] = kVListSint32Int64;
}
inline void Feature::clear_v_list_sint32_int64() {
  if (has_v_list_sint32_int64()) {
    delete kind_.v_list_sint32_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Int64& Feature::_internal_v_list_sint32_int64() const {
  return *kind_.v_list_sint32_int64_;
}
inline ::feature_proto::ListSint32Int64* Feature::release_v_list_sint32_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_int64)
  if (has_v_list_sint32_int64()) {
    clear_has_kind();
      ::feature_proto::ListSint32Int64* temp = kind_.v_list_sint32_int64_;
    kind_.v_list_sint32_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Int64& Feature::v_list_sint32_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_int64)
  return has_v_list_sint32_int64()
      ? *kind_.v_list_sint32_int64_
      : *reinterpret_cast< ::feature_proto::ListSint32Int64*>(&::feature_proto::_ListSint32Int64_default_instance_);
}
inline ::feature_proto::ListSint32Int64* Feature::mutable_v_list_sint32_int64() {
  if (!has_v_list_sint32_int64()) {
    clear_kind();
    set_has_v_list_sint32_int64();
    kind_.v_list_sint32_int64_ = CreateMaybeMessage< ::feature_proto::ListSint32Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_int64)
  return kind_.v_list_sint32_int64_;
}

// .feature_proto.ListSint32Uint32 v_list_sint32_uint32 = 125;
inline bool Feature::has_v_list_sint32_uint32() const {
  return kind_case() == kVListSint32Uint32;
}
inline void Feature::set_has_v_list_sint32_uint32() {
  _oneof_case_[0] = kVListSint32Uint32;
}
inline void Feature::clear_v_list_sint32_uint32() {
  if (has_v_list_sint32_uint32()) {
    delete kind_.v_list_sint32_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Uint32& Feature::_internal_v_list_sint32_uint32() const {
  return *kind_.v_list_sint32_uint32_;
}
inline ::feature_proto::ListSint32Uint32* Feature::release_v_list_sint32_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_uint32)
  if (has_v_list_sint32_uint32()) {
    clear_has_kind();
      ::feature_proto::ListSint32Uint32* temp = kind_.v_list_sint32_uint32_;
    kind_.v_list_sint32_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Uint32& Feature::v_list_sint32_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_uint32)
  return has_v_list_sint32_uint32()
      ? *kind_.v_list_sint32_uint32_
      : *reinterpret_cast< ::feature_proto::ListSint32Uint32*>(&::feature_proto::_ListSint32Uint32_default_instance_);
}
inline ::feature_proto::ListSint32Uint32* Feature::mutable_v_list_sint32_uint32() {
  if (!has_v_list_sint32_uint32()) {
    clear_kind();
    set_has_v_list_sint32_uint32();
    kind_.v_list_sint32_uint32_ = CreateMaybeMessage< ::feature_proto::ListSint32Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_uint32)
  return kind_.v_list_sint32_uint32_;
}

// .feature_proto.ListSint32Uint64 v_list_sint32_uint64 = 126;
inline bool Feature::has_v_list_sint32_uint64() const {
  return kind_case() == kVListSint32Uint64;
}
inline void Feature::set_has_v_list_sint32_uint64() {
  _oneof_case_[0] = kVListSint32Uint64;
}
inline void Feature::clear_v_list_sint32_uint64() {
  if (has_v_list_sint32_uint64()) {
    delete kind_.v_list_sint32_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Uint64& Feature::_internal_v_list_sint32_uint64() const {
  return *kind_.v_list_sint32_uint64_;
}
inline ::feature_proto::ListSint32Uint64* Feature::release_v_list_sint32_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_uint64)
  if (has_v_list_sint32_uint64()) {
    clear_has_kind();
      ::feature_proto::ListSint32Uint64* temp = kind_.v_list_sint32_uint64_;
    kind_.v_list_sint32_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Uint64& Feature::v_list_sint32_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_uint64)
  return has_v_list_sint32_uint64()
      ? *kind_.v_list_sint32_uint64_
      : *reinterpret_cast< ::feature_proto::ListSint32Uint64*>(&::feature_proto::_ListSint32Uint64_default_instance_);
}
inline ::feature_proto::ListSint32Uint64* Feature::mutable_v_list_sint32_uint64() {
  if (!has_v_list_sint32_uint64()) {
    clear_kind();
    set_has_v_list_sint32_uint64();
    kind_.v_list_sint32_uint64_ = CreateMaybeMessage< ::feature_proto::ListSint32Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_uint64)
  return kind_.v_list_sint32_uint64_;
}

// .feature_proto.ListSint32Sint32 v_list_sint32_sint32 = 127;
inline bool Feature::has_v_list_sint32_sint32() const {
  return kind_case() == kVListSint32Sint32;
}
inline void Feature::set_has_v_list_sint32_sint32() {
  _oneof_case_[0] = kVListSint32Sint32;
}
inline void Feature::clear_v_list_sint32_sint32() {
  if (has_v_list_sint32_sint32()) {
    delete kind_.v_list_sint32_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Sint32& Feature::_internal_v_list_sint32_sint32() const {
  return *kind_.v_list_sint32_sint32_;
}
inline ::feature_proto::ListSint32Sint32* Feature::release_v_list_sint32_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_sint32)
  if (has_v_list_sint32_sint32()) {
    clear_has_kind();
      ::feature_proto::ListSint32Sint32* temp = kind_.v_list_sint32_sint32_;
    kind_.v_list_sint32_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Sint32& Feature::v_list_sint32_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_sint32)
  return has_v_list_sint32_sint32()
      ? *kind_.v_list_sint32_sint32_
      : *reinterpret_cast< ::feature_proto::ListSint32Sint32*>(&::feature_proto::_ListSint32Sint32_default_instance_);
}
inline ::feature_proto::ListSint32Sint32* Feature::mutable_v_list_sint32_sint32() {
  if (!has_v_list_sint32_sint32()) {
    clear_kind();
    set_has_v_list_sint32_sint32();
    kind_.v_list_sint32_sint32_ = CreateMaybeMessage< ::feature_proto::ListSint32Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_sint32)
  return kind_.v_list_sint32_sint32_;
}

// .feature_proto.ListSint32Sint64 v_list_sint32_sint64 = 128;
inline bool Feature::has_v_list_sint32_sint64() const {
  return kind_case() == kVListSint32Sint64;
}
inline void Feature::set_has_v_list_sint32_sint64() {
  _oneof_case_[0] = kVListSint32Sint64;
}
inline void Feature::clear_v_list_sint32_sint64() {
  if (has_v_list_sint32_sint64()) {
    delete kind_.v_list_sint32_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Sint64& Feature::_internal_v_list_sint32_sint64() const {
  return *kind_.v_list_sint32_sint64_;
}
inline ::feature_proto::ListSint32Sint64* Feature::release_v_list_sint32_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_sint64)
  if (has_v_list_sint32_sint64()) {
    clear_has_kind();
      ::feature_proto::ListSint32Sint64* temp = kind_.v_list_sint32_sint64_;
    kind_.v_list_sint32_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Sint64& Feature::v_list_sint32_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_sint64)
  return has_v_list_sint32_sint64()
      ? *kind_.v_list_sint32_sint64_
      : *reinterpret_cast< ::feature_proto::ListSint32Sint64*>(&::feature_proto::_ListSint32Sint64_default_instance_);
}
inline ::feature_proto::ListSint32Sint64* Feature::mutable_v_list_sint32_sint64() {
  if (!has_v_list_sint32_sint64()) {
    clear_kind();
    set_has_v_list_sint32_sint64();
    kind_.v_list_sint32_sint64_ = CreateMaybeMessage< ::feature_proto::ListSint32Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_sint64)
  return kind_.v_list_sint32_sint64_;
}

// .feature_proto.ListSint32Fixed32 v_list_sint32_fixed32 = 129;
inline bool Feature::has_v_list_sint32_fixed32() const {
  return kind_case() == kVListSint32Fixed32;
}
inline void Feature::set_has_v_list_sint32_fixed32() {
  _oneof_case_[0] = kVListSint32Fixed32;
}
inline void Feature::clear_v_list_sint32_fixed32() {
  if (has_v_list_sint32_fixed32()) {
    delete kind_.v_list_sint32_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Fixed32& Feature::_internal_v_list_sint32_fixed32() const {
  return *kind_.v_list_sint32_fixed32_;
}
inline ::feature_proto::ListSint32Fixed32* Feature::release_v_list_sint32_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_fixed32)
  if (has_v_list_sint32_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListSint32Fixed32* temp = kind_.v_list_sint32_fixed32_;
    kind_.v_list_sint32_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Fixed32& Feature::v_list_sint32_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_fixed32)
  return has_v_list_sint32_fixed32()
      ? *kind_.v_list_sint32_fixed32_
      : *reinterpret_cast< ::feature_proto::ListSint32Fixed32*>(&::feature_proto::_ListSint32Fixed32_default_instance_);
}
inline ::feature_proto::ListSint32Fixed32* Feature::mutable_v_list_sint32_fixed32() {
  if (!has_v_list_sint32_fixed32()) {
    clear_kind();
    set_has_v_list_sint32_fixed32();
    kind_.v_list_sint32_fixed32_ = CreateMaybeMessage< ::feature_proto::ListSint32Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_fixed32)
  return kind_.v_list_sint32_fixed32_;
}

// .feature_proto.ListSint32Fixed64 v_list_sint32_fixed64 = 130;
inline bool Feature::has_v_list_sint32_fixed64() const {
  return kind_case() == kVListSint32Fixed64;
}
inline void Feature::set_has_v_list_sint32_fixed64() {
  _oneof_case_[0] = kVListSint32Fixed64;
}
inline void Feature::clear_v_list_sint32_fixed64() {
  if (has_v_list_sint32_fixed64()) {
    delete kind_.v_list_sint32_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Fixed64& Feature::_internal_v_list_sint32_fixed64() const {
  return *kind_.v_list_sint32_fixed64_;
}
inline ::feature_proto::ListSint32Fixed64* Feature::release_v_list_sint32_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_fixed64)
  if (has_v_list_sint32_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListSint32Fixed64* temp = kind_.v_list_sint32_fixed64_;
    kind_.v_list_sint32_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Fixed64& Feature::v_list_sint32_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_fixed64)
  return has_v_list_sint32_fixed64()
      ? *kind_.v_list_sint32_fixed64_
      : *reinterpret_cast< ::feature_proto::ListSint32Fixed64*>(&::feature_proto::_ListSint32Fixed64_default_instance_);
}
inline ::feature_proto::ListSint32Fixed64* Feature::mutable_v_list_sint32_fixed64() {
  if (!has_v_list_sint32_fixed64()) {
    clear_kind();
    set_has_v_list_sint32_fixed64();
    kind_.v_list_sint32_fixed64_ = CreateMaybeMessage< ::feature_proto::ListSint32Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_fixed64)
  return kind_.v_list_sint32_fixed64_;
}

// .feature_proto.ListSint32Sfixed32 v_list_sint32_sfixed32 = 131;
inline bool Feature::has_v_list_sint32_sfixed32() const {
  return kind_case() == kVListSint32Sfixed32;
}
inline void Feature::set_has_v_list_sint32_sfixed32() {
  _oneof_case_[0] = kVListSint32Sfixed32;
}
inline void Feature::clear_v_list_sint32_sfixed32() {
  if (has_v_list_sint32_sfixed32()) {
    delete kind_.v_list_sint32_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Sfixed32& Feature::_internal_v_list_sint32_sfixed32() const {
  return *kind_.v_list_sint32_sfixed32_;
}
inline ::feature_proto::ListSint32Sfixed32* Feature::release_v_list_sint32_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_sfixed32)
  if (has_v_list_sint32_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListSint32Sfixed32* temp = kind_.v_list_sint32_sfixed32_;
    kind_.v_list_sint32_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Sfixed32& Feature::v_list_sint32_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_sfixed32)
  return has_v_list_sint32_sfixed32()
      ? *kind_.v_list_sint32_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListSint32Sfixed32*>(&::feature_proto::_ListSint32Sfixed32_default_instance_);
}
inline ::feature_proto::ListSint32Sfixed32* Feature::mutable_v_list_sint32_sfixed32() {
  if (!has_v_list_sint32_sfixed32()) {
    clear_kind();
    set_has_v_list_sint32_sfixed32();
    kind_.v_list_sint32_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListSint32Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_sfixed32)
  return kind_.v_list_sint32_sfixed32_;
}

// .feature_proto.ListSint32Sfixed64 v_list_sint32_sfixed64 = 132;
inline bool Feature::has_v_list_sint32_sfixed64() const {
  return kind_case() == kVListSint32Sfixed64;
}
inline void Feature::set_has_v_list_sint32_sfixed64() {
  _oneof_case_[0] = kVListSint32Sfixed64;
}
inline void Feature::clear_v_list_sint32_sfixed64() {
  if (has_v_list_sint32_sfixed64()) {
    delete kind_.v_list_sint32_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Sfixed64& Feature::_internal_v_list_sint32_sfixed64() const {
  return *kind_.v_list_sint32_sfixed64_;
}
inline ::feature_proto::ListSint32Sfixed64* Feature::release_v_list_sint32_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_sfixed64)
  if (has_v_list_sint32_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListSint32Sfixed64* temp = kind_.v_list_sint32_sfixed64_;
    kind_.v_list_sint32_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Sfixed64& Feature::v_list_sint32_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_sfixed64)
  return has_v_list_sint32_sfixed64()
      ? *kind_.v_list_sint32_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListSint32Sfixed64*>(&::feature_proto::_ListSint32Sfixed64_default_instance_);
}
inline ::feature_proto::ListSint32Sfixed64* Feature::mutable_v_list_sint32_sfixed64() {
  if (!has_v_list_sint32_sfixed64()) {
    clear_kind();
    set_has_v_list_sint32_sfixed64();
    kind_.v_list_sint32_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListSint32Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_sfixed64)
  return kind_.v_list_sint32_sfixed64_;
}

// .feature_proto.ListSint32Bool v_list_sint32_bool = 133;
inline bool Feature::has_v_list_sint32_bool() const {
  return kind_case() == kVListSint32Bool;
}
inline void Feature::set_has_v_list_sint32_bool() {
  _oneof_case_[0] = kVListSint32Bool;
}
inline void Feature::clear_v_list_sint32_bool() {
  if (has_v_list_sint32_bool()) {
    delete kind_.v_list_sint32_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Bool& Feature::_internal_v_list_sint32_bool() const {
  return *kind_.v_list_sint32_bool_;
}
inline ::feature_proto::ListSint32Bool* Feature::release_v_list_sint32_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_bool)
  if (has_v_list_sint32_bool()) {
    clear_has_kind();
      ::feature_proto::ListSint32Bool* temp = kind_.v_list_sint32_bool_;
    kind_.v_list_sint32_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Bool& Feature::v_list_sint32_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_bool)
  return has_v_list_sint32_bool()
      ? *kind_.v_list_sint32_bool_
      : *reinterpret_cast< ::feature_proto::ListSint32Bool*>(&::feature_proto::_ListSint32Bool_default_instance_);
}
inline ::feature_proto::ListSint32Bool* Feature::mutable_v_list_sint32_bool() {
  if (!has_v_list_sint32_bool()) {
    clear_kind();
    set_has_v_list_sint32_bool();
    kind_.v_list_sint32_bool_ = CreateMaybeMessage< ::feature_proto::ListSint32Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_bool)
  return kind_.v_list_sint32_bool_;
}

// .feature_proto.ListSint32String v_list_sint32_string = 134;
inline bool Feature::has_v_list_sint32_string() const {
  return kind_case() == kVListSint32String;
}
inline void Feature::set_has_v_list_sint32_string() {
  _oneof_case_[0] = kVListSint32String;
}
inline void Feature::clear_v_list_sint32_string() {
  if (has_v_list_sint32_string()) {
    delete kind_.v_list_sint32_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32String& Feature::_internal_v_list_sint32_string() const {
  return *kind_.v_list_sint32_string_;
}
inline ::feature_proto::ListSint32String* Feature::release_v_list_sint32_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_string)
  if (has_v_list_sint32_string()) {
    clear_has_kind();
      ::feature_proto::ListSint32String* temp = kind_.v_list_sint32_string_;
    kind_.v_list_sint32_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32String& Feature::v_list_sint32_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_string)
  return has_v_list_sint32_string()
      ? *kind_.v_list_sint32_string_
      : *reinterpret_cast< ::feature_proto::ListSint32String*>(&::feature_proto::_ListSint32String_default_instance_);
}
inline ::feature_proto::ListSint32String* Feature::mutable_v_list_sint32_string() {
  if (!has_v_list_sint32_string()) {
    clear_kind();
    set_has_v_list_sint32_string();
    kind_.v_list_sint32_string_ = CreateMaybeMessage< ::feature_proto::ListSint32String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_string)
  return kind_.v_list_sint32_string_;
}

// .feature_proto.ListSint32Bytes v_list_sint32_bytes = 135;
inline bool Feature::has_v_list_sint32_bytes() const {
  return kind_case() == kVListSint32Bytes;
}
inline void Feature::set_has_v_list_sint32_bytes() {
  _oneof_case_[0] = kVListSint32Bytes;
}
inline void Feature::clear_v_list_sint32_bytes() {
  if (has_v_list_sint32_bytes()) {
    delete kind_.v_list_sint32_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint32Bytes& Feature::_internal_v_list_sint32_bytes() const {
  return *kind_.v_list_sint32_bytes_;
}
inline ::feature_proto::ListSint32Bytes* Feature::release_v_list_sint32_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint32_bytes)
  if (has_v_list_sint32_bytes()) {
    clear_has_kind();
      ::feature_proto::ListSint32Bytes* temp = kind_.v_list_sint32_bytes_;
    kind_.v_list_sint32_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint32Bytes& Feature::v_list_sint32_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint32_bytes)
  return has_v_list_sint32_bytes()
      ? *kind_.v_list_sint32_bytes_
      : *reinterpret_cast< ::feature_proto::ListSint32Bytes*>(&::feature_proto::_ListSint32Bytes_default_instance_);
}
inline ::feature_proto::ListSint32Bytes* Feature::mutable_v_list_sint32_bytes() {
  if (!has_v_list_sint32_bytes()) {
    clear_kind();
    set_has_v_list_sint32_bytes();
    kind_.v_list_sint32_bytes_ = CreateMaybeMessage< ::feature_proto::ListSint32Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint32_bytes)
  return kind_.v_list_sint32_bytes_;
}

// .feature_proto.ListSint64Double v_list_sint64_double = 136;
inline bool Feature::has_v_list_sint64_double() const {
  return kind_case() == kVListSint64Double;
}
inline void Feature::set_has_v_list_sint64_double() {
  _oneof_case_[0] = kVListSint64Double;
}
inline void Feature::clear_v_list_sint64_double() {
  if (has_v_list_sint64_double()) {
    delete kind_.v_list_sint64_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Double& Feature::_internal_v_list_sint64_double() const {
  return *kind_.v_list_sint64_double_;
}
inline ::feature_proto::ListSint64Double* Feature::release_v_list_sint64_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_double)
  if (has_v_list_sint64_double()) {
    clear_has_kind();
      ::feature_proto::ListSint64Double* temp = kind_.v_list_sint64_double_;
    kind_.v_list_sint64_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Double& Feature::v_list_sint64_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_double)
  return has_v_list_sint64_double()
      ? *kind_.v_list_sint64_double_
      : *reinterpret_cast< ::feature_proto::ListSint64Double*>(&::feature_proto::_ListSint64Double_default_instance_);
}
inline ::feature_proto::ListSint64Double* Feature::mutable_v_list_sint64_double() {
  if (!has_v_list_sint64_double()) {
    clear_kind();
    set_has_v_list_sint64_double();
    kind_.v_list_sint64_double_ = CreateMaybeMessage< ::feature_proto::ListSint64Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_double)
  return kind_.v_list_sint64_double_;
}

// .feature_proto.ListSint64Float v_list_sint64_float = 137;
inline bool Feature::has_v_list_sint64_float() const {
  return kind_case() == kVListSint64Float;
}
inline void Feature::set_has_v_list_sint64_float() {
  _oneof_case_[0] = kVListSint64Float;
}
inline void Feature::clear_v_list_sint64_float() {
  if (has_v_list_sint64_float()) {
    delete kind_.v_list_sint64_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Float& Feature::_internal_v_list_sint64_float() const {
  return *kind_.v_list_sint64_float_;
}
inline ::feature_proto::ListSint64Float* Feature::release_v_list_sint64_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_float)
  if (has_v_list_sint64_float()) {
    clear_has_kind();
      ::feature_proto::ListSint64Float* temp = kind_.v_list_sint64_float_;
    kind_.v_list_sint64_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Float& Feature::v_list_sint64_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_float)
  return has_v_list_sint64_float()
      ? *kind_.v_list_sint64_float_
      : *reinterpret_cast< ::feature_proto::ListSint64Float*>(&::feature_proto::_ListSint64Float_default_instance_);
}
inline ::feature_proto::ListSint64Float* Feature::mutable_v_list_sint64_float() {
  if (!has_v_list_sint64_float()) {
    clear_kind();
    set_has_v_list_sint64_float();
    kind_.v_list_sint64_float_ = CreateMaybeMessage< ::feature_proto::ListSint64Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_float)
  return kind_.v_list_sint64_float_;
}

// .feature_proto.ListSint64Int32 v_list_sint64_int32 = 138;
inline bool Feature::has_v_list_sint64_int32() const {
  return kind_case() == kVListSint64Int32;
}
inline void Feature::set_has_v_list_sint64_int32() {
  _oneof_case_[0] = kVListSint64Int32;
}
inline void Feature::clear_v_list_sint64_int32() {
  if (has_v_list_sint64_int32()) {
    delete kind_.v_list_sint64_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Int32& Feature::_internal_v_list_sint64_int32() const {
  return *kind_.v_list_sint64_int32_;
}
inline ::feature_proto::ListSint64Int32* Feature::release_v_list_sint64_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_int32)
  if (has_v_list_sint64_int32()) {
    clear_has_kind();
      ::feature_proto::ListSint64Int32* temp = kind_.v_list_sint64_int32_;
    kind_.v_list_sint64_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Int32& Feature::v_list_sint64_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_int32)
  return has_v_list_sint64_int32()
      ? *kind_.v_list_sint64_int32_
      : *reinterpret_cast< ::feature_proto::ListSint64Int32*>(&::feature_proto::_ListSint64Int32_default_instance_);
}
inline ::feature_proto::ListSint64Int32* Feature::mutable_v_list_sint64_int32() {
  if (!has_v_list_sint64_int32()) {
    clear_kind();
    set_has_v_list_sint64_int32();
    kind_.v_list_sint64_int32_ = CreateMaybeMessage< ::feature_proto::ListSint64Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_int32)
  return kind_.v_list_sint64_int32_;
}

// .feature_proto.ListSint64Int64 v_list_sint64_int64 = 139;
inline bool Feature::has_v_list_sint64_int64() const {
  return kind_case() == kVListSint64Int64;
}
inline void Feature::set_has_v_list_sint64_int64() {
  _oneof_case_[0] = kVListSint64Int64;
}
inline void Feature::clear_v_list_sint64_int64() {
  if (has_v_list_sint64_int64()) {
    delete kind_.v_list_sint64_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Int64& Feature::_internal_v_list_sint64_int64() const {
  return *kind_.v_list_sint64_int64_;
}
inline ::feature_proto::ListSint64Int64* Feature::release_v_list_sint64_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_int64)
  if (has_v_list_sint64_int64()) {
    clear_has_kind();
      ::feature_proto::ListSint64Int64* temp = kind_.v_list_sint64_int64_;
    kind_.v_list_sint64_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Int64& Feature::v_list_sint64_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_int64)
  return has_v_list_sint64_int64()
      ? *kind_.v_list_sint64_int64_
      : *reinterpret_cast< ::feature_proto::ListSint64Int64*>(&::feature_proto::_ListSint64Int64_default_instance_);
}
inline ::feature_proto::ListSint64Int64* Feature::mutable_v_list_sint64_int64() {
  if (!has_v_list_sint64_int64()) {
    clear_kind();
    set_has_v_list_sint64_int64();
    kind_.v_list_sint64_int64_ = CreateMaybeMessage< ::feature_proto::ListSint64Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_int64)
  return kind_.v_list_sint64_int64_;
}

// .feature_proto.ListSint64Uint32 v_list_sint64_uint32 = 140;
inline bool Feature::has_v_list_sint64_uint32() const {
  return kind_case() == kVListSint64Uint32;
}
inline void Feature::set_has_v_list_sint64_uint32() {
  _oneof_case_[0] = kVListSint64Uint32;
}
inline void Feature::clear_v_list_sint64_uint32() {
  if (has_v_list_sint64_uint32()) {
    delete kind_.v_list_sint64_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Uint32& Feature::_internal_v_list_sint64_uint32() const {
  return *kind_.v_list_sint64_uint32_;
}
inline ::feature_proto::ListSint64Uint32* Feature::release_v_list_sint64_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_uint32)
  if (has_v_list_sint64_uint32()) {
    clear_has_kind();
      ::feature_proto::ListSint64Uint32* temp = kind_.v_list_sint64_uint32_;
    kind_.v_list_sint64_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Uint32& Feature::v_list_sint64_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_uint32)
  return has_v_list_sint64_uint32()
      ? *kind_.v_list_sint64_uint32_
      : *reinterpret_cast< ::feature_proto::ListSint64Uint32*>(&::feature_proto::_ListSint64Uint32_default_instance_);
}
inline ::feature_proto::ListSint64Uint32* Feature::mutable_v_list_sint64_uint32() {
  if (!has_v_list_sint64_uint32()) {
    clear_kind();
    set_has_v_list_sint64_uint32();
    kind_.v_list_sint64_uint32_ = CreateMaybeMessage< ::feature_proto::ListSint64Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_uint32)
  return kind_.v_list_sint64_uint32_;
}

// .feature_proto.ListSint64Uint64 v_list_sint64_uint64 = 141;
inline bool Feature::has_v_list_sint64_uint64() const {
  return kind_case() == kVListSint64Uint64;
}
inline void Feature::set_has_v_list_sint64_uint64() {
  _oneof_case_[0] = kVListSint64Uint64;
}
inline void Feature::clear_v_list_sint64_uint64() {
  if (has_v_list_sint64_uint64()) {
    delete kind_.v_list_sint64_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Uint64& Feature::_internal_v_list_sint64_uint64() const {
  return *kind_.v_list_sint64_uint64_;
}
inline ::feature_proto::ListSint64Uint64* Feature::release_v_list_sint64_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_uint64)
  if (has_v_list_sint64_uint64()) {
    clear_has_kind();
      ::feature_proto::ListSint64Uint64* temp = kind_.v_list_sint64_uint64_;
    kind_.v_list_sint64_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Uint64& Feature::v_list_sint64_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_uint64)
  return has_v_list_sint64_uint64()
      ? *kind_.v_list_sint64_uint64_
      : *reinterpret_cast< ::feature_proto::ListSint64Uint64*>(&::feature_proto::_ListSint64Uint64_default_instance_);
}
inline ::feature_proto::ListSint64Uint64* Feature::mutable_v_list_sint64_uint64() {
  if (!has_v_list_sint64_uint64()) {
    clear_kind();
    set_has_v_list_sint64_uint64();
    kind_.v_list_sint64_uint64_ = CreateMaybeMessage< ::feature_proto::ListSint64Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_uint64)
  return kind_.v_list_sint64_uint64_;
}

// .feature_proto.ListSint64Sint32 v_list_sint64_sint32 = 142;
inline bool Feature::has_v_list_sint64_sint32() const {
  return kind_case() == kVListSint64Sint32;
}
inline void Feature::set_has_v_list_sint64_sint32() {
  _oneof_case_[0] = kVListSint64Sint32;
}
inline void Feature::clear_v_list_sint64_sint32() {
  if (has_v_list_sint64_sint32()) {
    delete kind_.v_list_sint64_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Sint32& Feature::_internal_v_list_sint64_sint32() const {
  return *kind_.v_list_sint64_sint32_;
}
inline ::feature_proto::ListSint64Sint32* Feature::release_v_list_sint64_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_sint32)
  if (has_v_list_sint64_sint32()) {
    clear_has_kind();
      ::feature_proto::ListSint64Sint32* temp = kind_.v_list_sint64_sint32_;
    kind_.v_list_sint64_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Sint32& Feature::v_list_sint64_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_sint32)
  return has_v_list_sint64_sint32()
      ? *kind_.v_list_sint64_sint32_
      : *reinterpret_cast< ::feature_proto::ListSint64Sint32*>(&::feature_proto::_ListSint64Sint32_default_instance_);
}
inline ::feature_proto::ListSint64Sint32* Feature::mutable_v_list_sint64_sint32() {
  if (!has_v_list_sint64_sint32()) {
    clear_kind();
    set_has_v_list_sint64_sint32();
    kind_.v_list_sint64_sint32_ = CreateMaybeMessage< ::feature_proto::ListSint64Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_sint32)
  return kind_.v_list_sint64_sint32_;
}

// .feature_proto.ListSint64Sint64 v_list_sint64_sint64 = 143;
inline bool Feature::has_v_list_sint64_sint64() const {
  return kind_case() == kVListSint64Sint64;
}
inline void Feature::set_has_v_list_sint64_sint64() {
  _oneof_case_[0] = kVListSint64Sint64;
}
inline void Feature::clear_v_list_sint64_sint64() {
  if (has_v_list_sint64_sint64()) {
    delete kind_.v_list_sint64_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Sint64& Feature::_internal_v_list_sint64_sint64() const {
  return *kind_.v_list_sint64_sint64_;
}
inline ::feature_proto::ListSint64Sint64* Feature::release_v_list_sint64_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_sint64)
  if (has_v_list_sint64_sint64()) {
    clear_has_kind();
      ::feature_proto::ListSint64Sint64* temp = kind_.v_list_sint64_sint64_;
    kind_.v_list_sint64_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Sint64& Feature::v_list_sint64_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_sint64)
  return has_v_list_sint64_sint64()
      ? *kind_.v_list_sint64_sint64_
      : *reinterpret_cast< ::feature_proto::ListSint64Sint64*>(&::feature_proto::_ListSint64Sint64_default_instance_);
}
inline ::feature_proto::ListSint64Sint64* Feature::mutable_v_list_sint64_sint64() {
  if (!has_v_list_sint64_sint64()) {
    clear_kind();
    set_has_v_list_sint64_sint64();
    kind_.v_list_sint64_sint64_ = CreateMaybeMessage< ::feature_proto::ListSint64Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_sint64)
  return kind_.v_list_sint64_sint64_;
}

// .feature_proto.ListSint64Fixed32 v_list_sint64_fixed32 = 144;
inline bool Feature::has_v_list_sint64_fixed32() const {
  return kind_case() == kVListSint64Fixed32;
}
inline void Feature::set_has_v_list_sint64_fixed32() {
  _oneof_case_[0] = kVListSint64Fixed32;
}
inline void Feature::clear_v_list_sint64_fixed32() {
  if (has_v_list_sint64_fixed32()) {
    delete kind_.v_list_sint64_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Fixed32& Feature::_internal_v_list_sint64_fixed32() const {
  return *kind_.v_list_sint64_fixed32_;
}
inline ::feature_proto::ListSint64Fixed32* Feature::release_v_list_sint64_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_fixed32)
  if (has_v_list_sint64_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListSint64Fixed32* temp = kind_.v_list_sint64_fixed32_;
    kind_.v_list_sint64_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Fixed32& Feature::v_list_sint64_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_fixed32)
  return has_v_list_sint64_fixed32()
      ? *kind_.v_list_sint64_fixed32_
      : *reinterpret_cast< ::feature_proto::ListSint64Fixed32*>(&::feature_proto::_ListSint64Fixed32_default_instance_);
}
inline ::feature_proto::ListSint64Fixed32* Feature::mutable_v_list_sint64_fixed32() {
  if (!has_v_list_sint64_fixed32()) {
    clear_kind();
    set_has_v_list_sint64_fixed32();
    kind_.v_list_sint64_fixed32_ = CreateMaybeMessage< ::feature_proto::ListSint64Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_fixed32)
  return kind_.v_list_sint64_fixed32_;
}

// .feature_proto.ListSint64Fixed64 v_list_sint64_fixed64 = 145;
inline bool Feature::has_v_list_sint64_fixed64() const {
  return kind_case() == kVListSint64Fixed64;
}
inline void Feature::set_has_v_list_sint64_fixed64() {
  _oneof_case_[0] = kVListSint64Fixed64;
}
inline void Feature::clear_v_list_sint64_fixed64() {
  if (has_v_list_sint64_fixed64()) {
    delete kind_.v_list_sint64_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Fixed64& Feature::_internal_v_list_sint64_fixed64() const {
  return *kind_.v_list_sint64_fixed64_;
}
inline ::feature_proto::ListSint64Fixed64* Feature::release_v_list_sint64_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_fixed64)
  if (has_v_list_sint64_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListSint64Fixed64* temp = kind_.v_list_sint64_fixed64_;
    kind_.v_list_sint64_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Fixed64& Feature::v_list_sint64_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_fixed64)
  return has_v_list_sint64_fixed64()
      ? *kind_.v_list_sint64_fixed64_
      : *reinterpret_cast< ::feature_proto::ListSint64Fixed64*>(&::feature_proto::_ListSint64Fixed64_default_instance_);
}
inline ::feature_proto::ListSint64Fixed64* Feature::mutable_v_list_sint64_fixed64() {
  if (!has_v_list_sint64_fixed64()) {
    clear_kind();
    set_has_v_list_sint64_fixed64();
    kind_.v_list_sint64_fixed64_ = CreateMaybeMessage< ::feature_proto::ListSint64Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_fixed64)
  return kind_.v_list_sint64_fixed64_;
}

// .feature_proto.ListSint64Sfixed32 v_list_sint64_sfixed32 = 146;
inline bool Feature::has_v_list_sint64_sfixed32() const {
  return kind_case() == kVListSint64Sfixed32;
}
inline void Feature::set_has_v_list_sint64_sfixed32() {
  _oneof_case_[0] = kVListSint64Sfixed32;
}
inline void Feature::clear_v_list_sint64_sfixed32() {
  if (has_v_list_sint64_sfixed32()) {
    delete kind_.v_list_sint64_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Sfixed32& Feature::_internal_v_list_sint64_sfixed32() const {
  return *kind_.v_list_sint64_sfixed32_;
}
inline ::feature_proto::ListSint64Sfixed32* Feature::release_v_list_sint64_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_sfixed32)
  if (has_v_list_sint64_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListSint64Sfixed32* temp = kind_.v_list_sint64_sfixed32_;
    kind_.v_list_sint64_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Sfixed32& Feature::v_list_sint64_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_sfixed32)
  return has_v_list_sint64_sfixed32()
      ? *kind_.v_list_sint64_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListSint64Sfixed32*>(&::feature_proto::_ListSint64Sfixed32_default_instance_);
}
inline ::feature_proto::ListSint64Sfixed32* Feature::mutable_v_list_sint64_sfixed32() {
  if (!has_v_list_sint64_sfixed32()) {
    clear_kind();
    set_has_v_list_sint64_sfixed32();
    kind_.v_list_sint64_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListSint64Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_sfixed32)
  return kind_.v_list_sint64_sfixed32_;
}

// .feature_proto.ListSint64Sfixed64 v_list_sint64_sfixed64 = 147;
inline bool Feature::has_v_list_sint64_sfixed64() const {
  return kind_case() == kVListSint64Sfixed64;
}
inline void Feature::set_has_v_list_sint64_sfixed64() {
  _oneof_case_[0] = kVListSint64Sfixed64;
}
inline void Feature::clear_v_list_sint64_sfixed64() {
  if (has_v_list_sint64_sfixed64()) {
    delete kind_.v_list_sint64_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Sfixed64& Feature::_internal_v_list_sint64_sfixed64() const {
  return *kind_.v_list_sint64_sfixed64_;
}
inline ::feature_proto::ListSint64Sfixed64* Feature::release_v_list_sint64_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_sfixed64)
  if (has_v_list_sint64_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListSint64Sfixed64* temp = kind_.v_list_sint64_sfixed64_;
    kind_.v_list_sint64_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Sfixed64& Feature::v_list_sint64_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_sfixed64)
  return has_v_list_sint64_sfixed64()
      ? *kind_.v_list_sint64_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListSint64Sfixed64*>(&::feature_proto::_ListSint64Sfixed64_default_instance_);
}
inline ::feature_proto::ListSint64Sfixed64* Feature::mutable_v_list_sint64_sfixed64() {
  if (!has_v_list_sint64_sfixed64()) {
    clear_kind();
    set_has_v_list_sint64_sfixed64();
    kind_.v_list_sint64_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListSint64Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_sfixed64)
  return kind_.v_list_sint64_sfixed64_;
}

// .feature_proto.ListSint64Bool v_list_sint64_bool = 148;
inline bool Feature::has_v_list_sint64_bool() const {
  return kind_case() == kVListSint64Bool;
}
inline void Feature::set_has_v_list_sint64_bool() {
  _oneof_case_[0] = kVListSint64Bool;
}
inline void Feature::clear_v_list_sint64_bool() {
  if (has_v_list_sint64_bool()) {
    delete kind_.v_list_sint64_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Bool& Feature::_internal_v_list_sint64_bool() const {
  return *kind_.v_list_sint64_bool_;
}
inline ::feature_proto::ListSint64Bool* Feature::release_v_list_sint64_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_bool)
  if (has_v_list_sint64_bool()) {
    clear_has_kind();
      ::feature_proto::ListSint64Bool* temp = kind_.v_list_sint64_bool_;
    kind_.v_list_sint64_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Bool& Feature::v_list_sint64_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_bool)
  return has_v_list_sint64_bool()
      ? *kind_.v_list_sint64_bool_
      : *reinterpret_cast< ::feature_proto::ListSint64Bool*>(&::feature_proto::_ListSint64Bool_default_instance_);
}
inline ::feature_proto::ListSint64Bool* Feature::mutable_v_list_sint64_bool() {
  if (!has_v_list_sint64_bool()) {
    clear_kind();
    set_has_v_list_sint64_bool();
    kind_.v_list_sint64_bool_ = CreateMaybeMessage< ::feature_proto::ListSint64Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_bool)
  return kind_.v_list_sint64_bool_;
}

// .feature_proto.ListSint64String v_list_sint64_string = 149;
inline bool Feature::has_v_list_sint64_string() const {
  return kind_case() == kVListSint64String;
}
inline void Feature::set_has_v_list_sint64_string() {
  _oneof_case_[0] = kVListSint64String;
}
inline void Feature::clear_v_list_sint64_string() {
  if (has_v_list_sint64_string()) {
    delete kind_.v_list_sint64_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64String& Feature::_internal_v_list_sint64_string() const {
  return *kind_.v_list_sint64_string_;
}
inline ::feature_proto::ListSint64String* Feature::release_v_list_sint64_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_string)
  if (has_v_list_sint64_string()) {
    clear_has_kind();
      ::feature_proto::ListSint64String* temp = kind_.v_list_sint64_string_;
    kind_.v_list_sint64_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64String& Feature::v_list_sint64_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_string)
  return has_v_list_sint64_string()
      ? *kind_.v_list_sint64_string_
      : *reinterpret_cast< ::feature_proto::ListSint64String*>(&::feature_proto::_ListSint64String_default_instance_);
}
inline ::feature_proto::ListSint64String* Feature::mutable_v_list_sint64_string() {
  if (!has_v_list_sint64_string()) {
    clear_kind();
    set_has_v_list_sint64_string();
    kind_.v_list_sint64_string_ = CreateMaybeMessage< ::feature_proto::ListSint64String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_string)
  return kind_.v_list_sint64_string_;
}

// .feature_proto.ListSint64Bytes v_list_sint64_bytes = 150;
inline bool Feature::has_v_list_sint64_bytes() const {
  return kind_case() == kVListSint64Bytes;
}
inline void Feature::set_has_v_list_sint64_bytes() {
  _oneof_case_[0] = kVListSint64Bytes;
}
inline void Feature::clear_v_list_sint64_bytes() {
  if (has_v_list_sint64_bytes()) {
    delete kind_.v_list_sint64_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSint64Bytes& Feature::_internal_v_list_sint64_bytes() const {
  return *kind_.v_list_sint64_bytes_;
}
inline ::feature_proto::ListSint64Bytes* Feature::release_v_list_sint64_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sint64_bytes)
  if (has_v_list_sint64_bytes()) {
    clear_has_kind();
      ::feature_proto::ListSint64Bytes* temp = kind_.v_list_sint64_bytes_;
    kind_.v_list_sint64_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSint64Bytes& Feature::v_list_sint64_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sint64_bytes)
  return has_v_list_sint64_bytes()
      ? *kind_.v_list_sint64_bytes_
      : *reinterpret_cast< ::feature_proto::ListSint64Bytes*>(&::feature_proto::_ListSint64Bytes_default_instance_);
}
inline ::feature_proto::ListSint64Bytes* Feature::mutable_v_list_sint64_bytes() {
  if (!has_v_list_sint64_bytes()) {
    clear_kind();
    set_has_v_list_sint64_bytes();
    kind_.v_list_sint64_bytes_ = CreateMaybeMessage< ::feature_proto::ListSint64Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sint64_bytes)
  return kind_.v_list_sint64_bytes_;
}

// .feature_proto.ListFixed32Double v_list_fixed32_double = 151;
inline bool Feature::has_v_list_fixed32_double() const {
  return kind_case() == kVListFixed32Double;
}
inline void Feature::set_has_v_list_fixed32_double() {
  _oneof_case_[0] = kVListFixed32Double;
}
inline void Feature::clear_v_list_fixed32_double() {
  if (has_v_list_fixed32_double()) {
    delete kind_.v_list_fixed32_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Double& Feature::_internal_v_list_fixed32_double() const {
  return *kind_.v_list_fixed32_double_;
}
inline ::feature_proto::ListFixed32Double* Feature::release_v_list_fixed32_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_double)
  if (has_v_list_fixed32_double()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Double* temp = kind_.v_list_fixed32_double_;
    kind_.v_list_fixed32_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Double& Feature::v_list_fixed32_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_double)
  return has_v_list_fixed32_double()
      ? *kind_.v_list_fixed32_double_
      : *reinterpret_cast< ::feature_proto::ListFixed32Double*>(&::feature_proto::_ListFixed32Double_default_instance_);
}
inline ::feature_proto::ListFixed32Double* Feature::mutable_v_list_fixed32_double() {
  if (!has_v_list_fixed32_double()) {
    clear_kind();
    set_has_v_list_fixed32_double();
    kind_.v_list_fixed32_double_ = CreateMaybeMessage< ::feature_proto::ListFixed32Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_double)
  return kind_.v_list_fixed32_double_;
}

// .feature_proto.ListFixed32Float v_list_fixed32_float = 152;
inline bool Feature::has_v_list_fixed32_float() const {
  return kind_case() == kVListFixed32Float;
}
inline void Feature::set_has_v_list_fixed32_float() {
  _oneof_case_[0] = kVListFixed32Float;
}
inline void Feature::clear_v_list_fixed32_float() {
  if (has_v_list_fixed32_float()) {
    delete kind_.v_list_fixed32_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Float& Feature::_internal_v_list_fixed32_float() const {
  return *kind_.v_list_fixed32_float_;
}
inline ::feature_proto::ListFixed32Float* Feature::release_v_list_fixed32_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_float)
  if (has_v_list_fixed32_float()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Float* temp = kind_.v_list_fixed32_float_;
    kind_.v_list_fixed32_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Float& Feature::v_list_fixed32_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_float)
  return has_v_list_fixed32_float()
      ? *kind_.v_list_fixed32_float_
      : *reinterpret_cast< ::feature_proto::ListFixed32Float*>(&::feature_proto::_ListFixed32Float_default_instance_);
}
inline ::feature_proto::ListFixed32Float* Feature::mutable_v_list_fixed32_float() {
  if (!has_v_list_fixed32_float()) {
    clear_kind();
    set_has_v_list_fixed32_float();
    kind_.v_list_fixed32_float_ = CreateMaybeMessage< ::feature_proto::ListFixed32Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_float)
  return kind_.v_list_fixed32_float_;
}

// .feature_proto.ListFixed32Int32 v_list_fixed32_int32 = 153;
inline bool Feature::has_v_list_fixed32_int32() const {
  return kind_case() == kVListFixed32Int32;
}
inline void Feature::set_has_v_list_fixed32_int32() {
  _oneof_case_[0] = kVListFixed32Int32;
}
inline void Feature::clear_v_list_fixed32_int32() {
  if (has_v_list_fixed32_int32()) {
    delete kind_.v_list_fixed32_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Int32& Feature::_internal_v_list_fixed32_int32() const {
  return *kind_.v_list_fixed32_int32_;
}
inline ::feature_proto::ListFixed32Int32* Feature::release_v_list_fixed32_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_int32)
  if (has_v_list_fixed32_int32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Int32* temp = kind_.v_list_fixed32_int32_;
    kind_.v_list_fixed32_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Int32& Feature::v_list_fixed32_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_int32)
  return has_v_list_fixed32_int32()
      ? *kind_.v_list_fixed32_int32_
      : *reinterpret_cast< ::feature_proto::ListFixed32Int32*>(&::feature_proto::_ListFixed32Int32_default_instance_);
}
inline ::feature_proto::ListFixed32Int32* Feature::mutable_v_list_fixed32_int32() {
  if (!has_v_list_fixed32_int32()) {
    clear_kind();
    set_has_v_list_fixed32_int32();
    kind_.v_list_fixed32_int32_ = CreateMaybeMessage< ::feature_proto::ListFixed32Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_int32)
  return kind_.v_list_fixed32_int32_;
}

// .feature_proto.ListFixed32Int64 v_list_fixed32_int64 = 154;
inline bool Feature::has_v_list_fixed32_int64() const {
  return kind_case() == kVListFixed32Int64;
}
inline void Feature::set_has_v_list_fixed32_int64() {
  _oneof_case_[0] = kVListFixed32Int64;
}
inline void Feature::clear_v_list_fixed32_int64() {
  if (has_v_list_fixed32_int64()) {
    delete kind_.v_list_fixed32_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Int64& Feature::_internal_v_list_fixed32_int64() const {
  return *kind_.v_list_fixed32_int64_;
}
inline ::feature_proto::ListFixed32Int64* Feature::release_v_list_fixed32_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_int64)
  if (has_v_list_fixed32_int64()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Int64* temp = kind_.v_list_fixed32_int64_;
    kind_.v_list_fixed32_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Int64& Feature::v_list_fixed32_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_int64)
  return has_v_list_fixed32_int64()
      ? *kind_.v_list_fixed32_int64_
      : *reinterpret_cast< ::feature_proto::ListFixed32Int64*>(&::feature_proto::_ListFixed32Int64_default_instance_);
}
inline ::feature_proto::ListFixed32Int64* Feature::mutable_v_list_fixed32_int64() {
  if (!has_v_list_fixed32_int64()) {
    clear_kind();
    set_has_v_list_fixed32_int64();
    kind_.v_list_fixed32_int64_ = CreateMaybeMessage< ::feature_proto::ListFixed32Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_int64)
  return kind_.v_list_fixed32_int64_;
}

// .feature_proto.ListFixed32Uint32 v_list_fixed32_uint32 = 155;
inline bool Feature::has_v_list_fixed32_uint32() const {
  return kind_case() == kVListFixed32Uint32;
}
inline void Feature::set_has_v_list_fixed32_uint32() {
  _oneof_case_[0] = kVListFixed32Uint32;
}
inline void Feature::clear_v_list_fixed32_uint32() {
  if (has_v_list_fixed32_uint32()) {
    delete kind_.v_list_fixed32_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Uint32& Feature::_internal_v_list_fixed32_uint32() const {
  return *kind_.v_list_fixed32_uint32_;
}
inline ::feature_proto::ListFixed32Uint32* Feature::release_v_list_fixed32_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_uint32)
  if (has_v_list_fixed32_uint32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Uint32* temp = kind_.v_list_fixed32_uint32_;
    kind_.v_list_fixed32_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Uint32& Feature::v_list_fixed32_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_uint32)
  return has_v_list_fixed32_uint32()
      ? *kind_.v_list_fixed32_uint32_
      : *reinterpret_cast< ::feature_proto::ListFixed32Uint32*>(&::feature_proto::_ListFixed32Uint32_default_instance_);
}
inline ::feature_proto::ListFixed32Uint32* Feature::mutable_v_list_fixed32_uint32() {
  if (!has_v_list_fixed32_uint32()) {
    clear_kind();
    set_has_v_list_fixed32_uint32();
    kind_.v_list_fixed32_uint32_ = CreateMaybeMessage< ::feature_proto::ListFixed32Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_uint32)
  return kind_.v_list_fixed32_uint32_;
}

// .feature_proto.ListFixed32Uint64 v_list_fixed32_uint64 = 156;
inline bool Feature::has_v_list_fixed32_uint64() const {
  return kind_case() == kVListFixed32Uint64;
}
inline void Feature::set_has_v_list_fixed32_uint64() {
  _oneof_case_[0] = kVListFixed32Uint64;
}
inline void Feature::clear_v_list_fixed32_uint64() {
  if (has_v_list_fixed32_uint64()) {
    delete kind_.v_list_fixed32_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Uint64& Feature::_internal_v_list_fixed32_uint64() const {
  return *kind_.v_list_fixed32_uint64_;
}
inline ::feature_proto::ListFixed32Uint64* Feature::release_v_list_fixed32_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_uint64)
  if (has_v_list_fixed32_uint64()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Uint64* temp = kind_.v_list_fixed32_uint64_;
    kind_.v_list_fixed32_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Uint64& Feature::v_list_fixed32_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_uint64)
  return has_v_list_fixed32_uint64()
      ? *kind_.v_list_fixed32_uint64_
      : *reinterpret_cast< ::feature_proto::ListFixed32Uint64*>(&::feature_proto::_ListFixed32Uint64_default_instance_);
}
inline ::feature_proto::ListFixed32Uint64* Feature::mutable_v_list_fixed32_uint64() {
  if (!has_v_list_fixed32_uint64()) {
    clear_kind();
    set_has_v_list_fixed32_uint64();
    kind_.v_list_fixed32_uint64_ = CreateMaybeMessage< ::feature_proto::ListFixed32Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_uint64)
  return kind_.v_list_fixed32_uint64_;
}

// .feature_proto.ListFixed32Sint32 v_list_fixed32_sint32 = 157;
inline bool Feature::has_v_list_fixed32_sint32() const {
  return kind_case() == kVListFixed32Sint32;
}
inline void Feature::set_has_v_list_fixed32_sint32() {
  _oneof_case_[0] = kVListFixed32Sint32;
}
inline void Feature::clear_v_list_fixed32_sint32() {
  if (has_v_list_fixed32_sint32()) {
    delete kind_.v_list_fixed32_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Sint32& Feature::_internal_v_list_fixed32_sint32() const {
  return *kind_.v_list_fixed32_sint32_;
}
inline ::feature_proto::ListFixed32Sint32* Feature::release_v_list_fixed32_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_sint32)
  if (has_v_list_fixed32_sint32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Sint32* temp = kind_.v_list_fixed32_sint32_;
    kind_.v_list_fixed32_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Sint32& Feature::v_list_fixed32_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_sint32)
  return has_v_list_fixed32_sint32()
      ? *kind_.v_list_fixed32_sint32_
      : *reinterpret_cast< ::feature_proto::ListFixed32Sint32*>(&::feature_proto::_ListFixed32Sint32_default_instance_);
}
inline ::feature_proto::ListFixed32Sint32* Feature::mutable_v_list_fixed32_sint32() {
  if (!has_v_list_fixed32_sint32()) {
    clear_kind();
    set_has_v_list_fixed32_sint32();
    kind_.v_list_fixed32_sint32_ = CreateMaybeMessage< ::feature_proto::ListFixed32Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_sint32)
  return kind_.v_list_fixed32_sint32_;
}

// .feature_proto.ListFixed32Sint64 v_list_fixed32_sint64 = 158;
inline bool Feature::has_v_list_fixed32_sint64() const {
  return kind_case() == kVListFixed32Sint64;
}
inline void Feature::set_has_v_list_fixed32_sint64() {
  _oneof_case_[0] = kVListFixed32Sint64;
}
inline void Feature::clear_v_list_fixed32_sint64() {
  if (has_v_list_fixed32_sint64()) {
    delete kind_.v_list_fixed32_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Sint64& Feature::_internal_v_list_fixed32_sint64() const {
  return *kind_.v_list_fixed32_sint64_;
}
inline ::feature_proto::ListFixed32Sint64* Feature::release_v_list_fixed32_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_sint64)
  if (has_v_list_fixed32_sint64()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Sint64* temp = kind_.v_list_fixed32_sint64_;
    kind_.v_list_fixed32_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Sint64& Feature::v_list_fixed32_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_sint64)
  return has_v_list_fixed32_sint64()
      ? *kind_.v_list_fixed32_sint64_
      : *reinterpret_cast< ::feature_proto::ListFixed32Sint64*>(&::feature_proto::_ListFixed32Sint64_default_instance_);
}
inline ::feature_proto::ListFixed32Sint64* Feature::mutable_v_list_fixed32_sint64() {
  if (!has_v_list_fixed32_sint64()) {
    clear_kind();
    set_has_v_list_fixed32_sint64();
    kind_.v_list_fixed32_sint64_ = CreateMaybeMessage< ::feature_proto::ListFixed32Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_sint64)
  return kind_.v_list_fixed32_sint64_;
}

// .feature_proto.ListFixed32Fixed32 v_list_fixed32_fixed32 = 159;
inline bool Feature::has_v_list_fixed32_fixed32() const {
  return kind_case() == kVListFixed32Fixed32;
}
inline void Feature::set_has_v_list_fixed32_fixed32() {
  _oneof_case_[0] = kVListFixed32Fixed32;
}
inline void Feature::clear_v_list_fixed32_fixed32() {
  if (has_v_list_fixed32_fixed32()) {
    delete kind_.v_list_fixed32_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Fixed32& Feature::_internal_v_list_fixed32_fixed32() const {
  return *kind_.v_list_fixed32_fixed32_;
}
inline ::feature_proto::ListFixed32Fixed32* Feature::release_v_list_fixed32_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_fixed32)
  if (has_v_list_fixed32_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Fixed32* temp = kind_.v_list_fixed32_fixed32_;
    kind_.v_list_fixed32_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Fixed32& Feature::v_list_fixed32_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_fixed32)
  return has_v_list_fixed32_fixed32()
      ? *kind_.v_list_fixed32_fixed32_
      : *reinterpret_cast< ::feature_proto::ListFixed32Fixed32*>(&::feature_proto::_ListFixed32Fixed32_default_instance_);
}
inline ::feature_proto::ListFixed32Fixed32* Feature::mutable_v_list_fixed32_fixed32() {
  if (!has_v_list_fixed32_fixed32()) {
    clear_kind();
    set_has_v_list_fixed32_fixed32();
    kind_.v_list_fixed32_fixed32_ = CreateMaybeMessage< ::feature_proto::ListFixed32Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_fixed32)
  return kind_.v_list_fixed32_fixed32_;
}

// .feature_proto.ListFixed32Fixed64 v_list_fixed32_fixed64 = 160;
inline bool Feature::has_v_list_fixed32_fixed64() const {
  return kind_case() == kVListFixed32Fixed64;
}
inline void Feature::set_has_v_list_fixed32_fixed64() {
  _oneof_case_[0] = kVListFixed32Fixed64;
}
inline void Feature::clear_v_list_fixed32_fixed64() {
  if (has_v_list_fixed32_fixed64()) {
    delete kind_.v_list_fixed32_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Fixed64& Feature::_internal_v_list_fixed32_fixed64() const {
  return *kind_.v_list_fixed32_fixed64_;
}
inline ::feature_proto::ListFixed32Fixed64* Feature::release_v_list_fixed32_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_fixed64)
  if (has_v_list_fixed32_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Fixed64* temp = kind_.v_list_fixed32_fixed64_;
    kind_.v_list_fixed32_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Fixed64& Feature::v_list_fixed32_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_fixed64)
  return has_v_list_fixed32_fixed64()
      ? *kind_.v_list_fixed32_fixed64_
      : *reinterpret_cast< ::feature_proto::ListFixed32Fixed64*>(&::feature_proto::_ListFixed32Fixed64_default_instance_);
}
inline ::feature_proto::ListFixed32Fixed64* Feature::mutable_v_list_fixed32_fixed64() {
  if (!has_v_list_fixed32_fixed64()) {
    clear_kind();
    set_has_v_list_fixed32_fixed64();
    kind_.v_list_fixed32_fixed64_ = CreateMaybeMessage< ::feature_proto::ListFixed32Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_fixed64)
  return kind_.v_list_fixed32_fixed64_;
}

// .feature_proto.ListFixed32Sfixed32 v_list_fixed32_sfixed32 = 161;
inline bool Feature::has_v_list_fixed32_sfixed32() const {
  return kind_case() == kVListFixed32Sfixed32;
}
inline void Feature::set_has_v_list_fixed32_sfixed32() {
  _oneof_case_[0] = kVListFixed32Sfixed32;
}
inline void Feature::clear_v_list_fixed32_sfixed32() {
  if (has_v_list_fixed32_sfixed32()) {
    delete kind_.v_list_fixed32_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Sfixed32& Feature::_internal_v_list_fixed32_sfixed32() const {
  return *kind_.v_list_fixed32_sfixed32_;
}
inline ::feature_proto::ListFixed32Sfixed32* Feature::release_v_list_fixed32_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_sfixed32)
  if (has_v_list_fixed32_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Sfixed32* temp = kind_.v_list_fixed32_sfixed32_;
    kind_.v_list_fixed32_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Sfixed32& Feature::v_list_fixed32_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_sfixed32)
  return has_v_list_fixed32_sfixed32()
      ? *kind_.v_list_fixed32_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListFixed32Sfixed32*>(&::feature_proto::_ListFixed32Sfixed32_default_instance_);
}
inline ::feature_proto::ListFixed32Sfixed32* Feature::mutable_v_list_fixed32_sfixed32() {
  if (!has_v_list_fixed32_sfixed32()) {
    clear_kind();
    set_has_v_list_fixed32_sfixed32();
    kind_.v_list_fixed32_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListFixed32Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_sfixed32)
  return kind_.v_list_fixed32_sfixed32_;
}

// .feature_proto.ListFixed32Sfixed64 v_list_fixed32_sfixed64 = 162;
inline bool Feature::has_v_list_fixed32_sfixed64() const {
  return kind_case() == kVListFixed32Sfixed64;
}
inline void Feature::set_has_v_list_fixed32_sfixed64() {
  _oneof_case_[0] = kVListFixed32Sfixed64;
}
inline void Feature::clear_v_list_fixed32_sfixed64() {
  if (has_v_list_fixed32_sfixed64()) {
    delete kind_.v_list_fixed32_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Sfixed64& Feature::_internal_v_list_fixed32_sfixed64() const {
  return *kind_.v_list_fixed32_sfixed64_;
}
inline ::feature_proto::ListFixed32Sfixed64* Feature::release_v_list_fixed32_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_sfixed64)
  if (has_v_list_fixed32_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Sfixed64* temp = kind_.v_list_fixed32_sfixed64_;
    kind_.v_list_fixed32_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Sfixed64& Feature::v_list_fixed32_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_sfixed64)
  return has_v_list_fixed32_sfixed64()
      ? *kind_.v_list_fixed32_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListFixed32Sfixed64*>(&::feature_proto::_ListFixed32Sfixed64_default_instance_);
}
inline ::feature_proto::ListFixed32Sfixed64* Feature::mutable_v_list_fixed32_sfixed64() {
  if (!has_v_list_fixed32_sfixed64()) {
    clear_kind();
    set_has_v_list_fixed32_sfixed64();
    kind_.v_list_fixed32_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListFixed32Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_sfixed64)
  return kind_.v_list_fixed32_sfixed64_;
}

// .feature_proto.ListFixed32Bool v_list_fixed32_bool = 163;
inline bool Feature::has_v_list_fixed32_bool() const {
  return kind_case() == kVListFixed32Bool;
}
inline void Feature::set_has_v_list_fixed32_bool() {
  _oneof_case_[0] = kVListFixed32Bool;
}
inline void Feature::clear_v_list_fixed32_bool() {
  if (has_v_list_fixed32_bool()) {
    delete kind_.v_list_fixed32_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Bool& Feature::_internal_v_list_fixed32_bool() const {
  return *kind_.v_list_fixed32_bool_;
}
inline ::feature_proto::ListFixed32Bool* Feature::release_v_list_fixed32_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_bool)
  if (has_v_list_fixed32_bool()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Bool* temp = kind_.v_list_fixed32_bool_;
    kind_.v_list_fixed32_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Bool& Feature::v_list_fixed32_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_bool)
  return has_v_list_fixed32_bool()
      ? *kind_.v_list_fixed32_bool_
      : *reinterpret_cast< ::feature_proto::ListFixed32Bool*>(&::feature_proto::_ListFixed32Bool_default_instance_);
}
inline ::feature_proto::ListFixed32Bool* Feature::mutable_v_list_fixed32_bool() {
  if (!has_v_list_fixed32_bool()) {
    clear_kind();
    set_has_v_list_fixed32_bool();
    kind_.v_list_fixed32_bool_ = CreateMaybeMessage< ::feature_proto::ListFixed32Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_bool)
  return kind_.v_list_fixed32_bool_;
}

// .feature_proto.ListFixed32String v_list_fixed32_string = 164;
inline bool Feature::has_v_list_fixed32_string() const {
  return kind_case() == kVListFixed32String;
}
inline void Feature::set_has_v_list_fixed32_string() {
  _oneof_case_[0] = kVListFixed32String;
}
inline void Feature::clear_v_list_fixed32_string() {
  if (has_v_list_fixed32_string()) {
    delete kind_.v_list_fixed32_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32String& Feature::_internal_v_list_fixed32_string() const {
  return *kind_.v_list_fixed32_string_;
}
inline ::feature_proto::ListFixed32String* Feature::release_v_list_fixed32_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_string)
  if (has_v_list_fixed32_string()) {
    clear_has_kind();
      ::feature_proto::ListFixed32String* temp = kind_.v_list_fixed32_string_;
    kind_.v_list_fixed32_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32String& Feature::v_list_fixed32_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_string)
  return has_v_list_fixed32_string()
      ? *kind_.v_list_fixed32_string_
      : *reinterpret_cast< ::feature_proto::ListFixed32String*>(&::feature_proto::_ListFixed32String_default_instance_);
}
inline ::feature_proto::ListFixed32String* Feature::mutable_v_list_fixed32_string() {
  if (!has_v_list_fixed32_string()) {
    clear_kind();
    set_has_v_list_fixed32_string();
    kind_.v_list_fixed32_string_ = CreateMaybeMessage< ::feature_proto::ListFixed32String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_string)
  return kind_.v_list_fixed32_string_;
}

// .feature_proto.ListFixed32Bytes v_list_fixed32_bytes = 165;
inline bool Feature::has_v_list_fixed32_bytes() const {
  return kind_case() == kVListFixed32Bytes;
}
inline void Feature::set_has_v_list_fixed32_bytes() {
  _oneof_case_[0] = kVListFixed32Bytes;
}
inline void Feature::clear_v_list_fixed32_bytes() {
  if (has_v_list_fixed32_bytes()) {
    delete kind_.v_list_fixed32_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed32Bytes& Feature::_internal_v_list_fixed32_bytes() const {
  return *kind_.v_list_fixed32_bytes_;
}
inline ::feature_proto::ListFixed32Bytes* Feature::release_v_list_fixed32_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed32_bytes)
  if (has_v_list_fixed32_bytes()) {
    clear_has_kind();
      ::feature_proto::ListFixed32Bytes* temp = kind_.v_list_fixed32_bytes_;
    kind_.v_list_fixed32_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed32Bytes& Feature::v_list_fixed32_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed32_bytes)
  return has_v_list_fixed32_bytes()
      ? *kind_.v_list_fixed32_bytes_
      : *reinterpret_cast< ::feature_proto::ListFixed32Bytes*>(&::feature_proto::_ListFixed32Bytes_default_instance_);
}
inline ::feature_proto::ListFixed32Bytes* Feature::mutable_v_list_fixed32_bytes() {
  if (!has_v_list_fixed32_bytes()) {
    clear_kind();
    set_has_v_list_fixed32_bytes();
    kind_.v_list_fixed32_bytes_ = CreateMaybeMessage< ::feature_proto::ListFixed32Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed32_bytes)
  return kind_.v_list_fixed32_bytes_;
}

// .feature_proto.ListFixed64Double v_list_fixed64_double = 166;
inline bool Feature::has_v_list_fixed64_double() const {
  return kind_case() == kVListFixed64Double;
}
inline void Feature::set_has_v_list_fixed64_double() {
  _oneof_case_[0] = kVListFixed64Double;
}
inline void Feature::clear_v_list_fixed64_double() {
  if (has_v_list_fixed64_double()) {
    delete kind_.v_list_fixed64_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Double& Feature::_internal_v_list_fixed64_double() const {
  return *kind_.v_list_fixed64_double_;
}
inline ::feature_proto::ListFixed64Double* Feature::release_v_list_fixed64_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_double)
  if (has_v_list_fixed64_double()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Double* temp = kind_.v_list_fixed64_double_;
    kind_.v_list_fixed64_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Double& Feature::v_list_fixed64_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_double)
  return has_v_list_fixed64_double()
      ? *kind_.v_list_fixed64_double_
      : *reinterpret_cast< ::feature_proto::ListFixed64Double*>(&::feature_proto::_ListFixed64Double_default_instance_);
}
inline ::feature_proto::ListFixed64Double* Feature::mutable_v_list_fixed64_double() {
  if (!has_v_list_fixed64_double()) {
    clear_kind();
    set_has_v_list_fixed64_double();
    kind_.v_list_fixed64_double_ = CreateMaybeMessage< ::feature_proto::ListFixed64Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_double)
  return kind_.v_list_fixed64_double_;
}

// .feature_proto.ListFixed64Float v_list_fixed64_float = 167;
inline bool Feature::has_v_list_fixed64_float() const {
  return kind_case() == kVListFixed64Float;
}
inline void Feature::set_has_v_list_fixed64_float() {
  _oneof_case_[0] = kVListFixed64Float;
}
inline void Feature::clear_v_list_fixed64_float() {
  if (has_v_list_fixed64_float()) {
    delete kind_.v_list_fixed64_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Float& Feature::_internal_v_list_fixed64_float() const {
  return *kind_.v_list_fixed64_float_;
}
inline ::feature_proto::ListFixed64Float* Feature::release_v_list_fixed64_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_float)
  if (has_v_list_fixed64_float()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Float* temp = kind_.v_list_fixed64_float_;
    kind_.v_list_fixed64_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Float& Feature::v_list_fixed64_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_float)
  return has_v_list_fixed64_float()
      ? *kind_.v_list_fixed64_float_
      : *reinterpret_cast< ::feature_proto::ListFixed64Float*>(&::feature_proto::_ListFixed64Float_default_instance_);
}
inline ::feature_proto::ListFixed64Float* Feature::mutable_v_list_fixed64_float() {
  if (!has_v_list_fixed64_float()) {
    clear_kind();
    set_has_v_list_fixed64_float();
    kind_.v_list_fixed64_float_ = CreateMaybeMessage< ::feature_proto::ListFixed64Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_float)
  return kind_.v_list_fixed64_float_;
}

// .feature_proto.ListFixed64Int32 v_list_fixed64_int32 = 168;
inline bool Feature::has_v_list_fixed64_int32() const {
  return kind_case() == kVListFixed64Int32;
}
inline void Feature::set_has_v_list_fixed64_int32() {
  _oneof_case_[0] = kVListFixed64Int32;
}
inline void Feature::clear_v_list_fixed64_int32() {
  if (has_v_list_fixed64_int32()) {
    delete kind_.v_list_fixed64_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Int32& Feature::_internal_v_list_fixed64_int32() const {
  return *kind_.v_list_fixed64_int32_;
}
inline ::feature_proto::ListFixed64Int32* Feature::release_v_list_fixed64_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_int32)
  if (has_v_list_fixed64_int32()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Int32* temp = kind_.v_list_fixed64_int32_;
    kind_.v_list_fixed64_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Int32& Feature::v_list_fixed64_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_int32)
  return has_v_list_fixed64_int32()
      ? *kind_.v_list_fixed64_int32_
      : *reinterpret_cast< ::feature_proto::ListFixed64Int32*>(&::feature_proto::_ListFixed64Int32_default_instance_);
}
inline ::feature_proto::ListFixed64Int32* Feature::mutable_v_list_fixed64_int32() {
  if (!has_v_list_fixed64_int32()) {
    clear_kind();
    set_has_v_list_fixed64_int32();
    kind_.v_list_fixed64_int32_ = CreateMaybeMessage< ::feature_proto::ListFixed64Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_int32)
  return kind_.v_list_fixed64_int32_;
}

// .feature_proto.ListFixed64Int64 v_list_fixed64_int64 = 169;
inline bool Feature::has_v_list_fixed64_int64() const {
  return kind_case() == kVListFixed64Int64;
}
inline void Feature::set_has_v_list_fixed64_int64() {
  _oneof_case_[0] = kVListFixed64Int64;
}
inline void Feature::clear_v_list_fixed64_int64() {
  if (has_v_list_fixed64_int64()) {
    delete kind_.v_list_fixed64_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Int64& Feature::_internal_v_list_fixed64_int64() const {
  return *kind_.v_list_fixed64_int64_;
}
inline ::feature_proto::ListFixed64Int64* Feature::release_v_list_fixed64_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_int64)
  if (has_v_list_fixed64_int64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Int64* temp = kind_.v_list_fixed64_int64_;
    kind_.v_list_fixed64_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Int64& Feature::v_list_fixed64_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_int64)
  return has_v_list_fixed64_int64()
      ? *kind_.v_list_fixed64_int64_
      : *reinterpret_cast< ::feature_proto::ListFixed64Int64*>(&::feature_proto::_ListFixed64Int64_default_instance_);
}
inline ::feature_proto::ListFixed64Int64* Feature::mutable_v_list_fixed64_int64() {
  if (!has_v_list_fixed64_int64()) {
    clear_kind();
    set_has_v_list_fixed64_int64();
    kind_.v_list_fixed64_int64_ = CreateMaybeMessage< ::feature_proto::ListFixed64Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_int64)
  return kind_.v_list_fixed64_int64_;
}

// .feature_proto.ListFixed64Uint32 v_list_fixed64_uint32 = 170;
inline bool Feature::has_v_list_fixed64_uint32() const {
  return kind_case() == kVListFixed64Uint32;
}
inline void Feature::set_has_v_list_fixed64_uint32() {
  _oneof_case_[0] = kVListFixed64Uint32;
}
inline void Feature::clear_v_list_fixed64_uint32() {
  if (has_v_list_fixed64_uint32()) {
    delete kind_.v_list_fixed64_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Uint32& Feature::_internal_v_list_fixed64_uint32() const {
  return *kind_.v_list_fixed64_uint32_;
}
inline ::feature_proto::ListFixed64Uint32* Feature::release_v_list_fixed64_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_uint32)
  if (has_v_list_fixed64_uint32()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Uint32* temp = kind_.v_list_fixed64_uint32_;
    kind_.v_list_fixed64_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Uint32& Feature::v_list_fixed64_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_uint32)
  return has_v_list_fixed64_uint32()
      ? *kind_.v_list_fixed64_uint32_
      : *reinterpret_cast< ::feature_proto::ListFixed64Uint32*>(&::feature_proto::_ListFixed64Uint32_default_instance_);
}
inline ::feature_proto::ListFixed64Uint32* Feature::mutable_v_list_fixed64_uint32() {
  if (!has_v_list_fixed64_uint32()) {
    clear_kind();
    set_has_v_list_fixed64_uint32();
    kind_.v_list_fixed64_uint32_ = CreateMaybeMessage< ::feature_proto::ListFixed64Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_uint32)
  return kind_.v_list_fixed64_uint32_;
}

// .feature_proto.ListFixed64Uint64 v_list_fixed64_uint64 = 171;
inline bool Feature::has_v_list_fixed64_uint64() const {
  return kind_case() == kVListFixed64Uint64;
}
inline void Feature::set_has_v_list_fixed64_uint64() {
  _oneof_case_[0] = kVListFixed64Uint64;
}
inline void Feature::clear_v_list_fixed64_uint64() {
  if (has_v_list_fixed64_uint64()) {
    delete kind_.v_list_fixed64_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Uint64& Feature::_internal_v_list_fixed64_uint64() const {
  return *kind_.v_list_fixed64_uint64_;
}
inline ::feature_proto::ListFixed64Uint64* Feature::release_v_list_fixed64_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_uint64)
  if (has_v_list_fixed64_uint64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Uint64* temp = kind_.v_list_fixed64_uint64_;
    kind_.v_list_fixed64_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Uint64& Feature::v_list_fixed64_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_uint64)
  return has_v_list_fixed64_uint64()
      ? *kind_.v_list_fixed64_uint64_
      : *reinterpret_cast< ::feature_proto::ListFixed64Uint64*>(&::feature_proto::_ListFixed64Uint64_default_instance_);
}
inline ::feature_proto::ListFixed64Uint64* Feature::mutable_v_list_fixed64_uint64() {
  if (!has_v_list_fixed64_uint64()) {
    clear_kind();
    set_has_v_list_fixed64_uint64();
    kind_.v_list_fixed64_uint64_ = CreateMaybeMessage< ::feature_proto::ListFixed64Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_uint64)
  return kind_.v_list_fixed64_uint64_;
}

// .feature_proto.ListFixed64Sint32 v_list_fixed64_sint32 = 172;
inline bool Feature::has_v_list_fixed64_sint32() const {
  return kind_case() == kVListFixed64Sint32;
}
inline void Feature::set_has_v_list_fixed64_sint32() {
  _oneof_case_[0] = kVListFixed64Sint32;
}
inline void Feature::clear_v_list_fixed64_sint32() {
  if (has_v_list_fixed64_sint32()) {
    delete kind_.v_list_fixed64_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Sint32& Feature::_internal_v_list_fixed64_sint32() const {
  return *kind_.v_list_fixed64_sint32_;
}
inline ::feature_proto::ListFixed64Sint32* Feature::release_v_list_fixed64_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_sint32)
  if (has_v_list_fixed64_sint32()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Sint32* temp = kind_.v_list_fixed64_sint32_;
    kind_.v_list_fixed64_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Sint32& Feature::v_list_fixed64_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_sint32)
  return has_v_list_fixed64_sint32()
      ? *kind_.v_list_fixed64_sint32_
      : *reinterpret_cast< ::feature_proto::ListFixed64Sint32*>(&::feature_proto::_ListFixed64Sint32_default_instance_);
}
inline ::feature_proto::ListFixed64Sint32* Feature::mutable_v_list_fixed64_sint32() {
  if (!has_v_list_fixed64_sint32()) {
    clear_kind();
    set_has_v_list_fixed64_sint32();
    kind_.v_list_fixed64_sint32_ = CreateMaybeMessage< ::feature_proto::ListFixed64Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_sint32)
  return kind_.v_list_fixed64_sint32_;
}

// .feature_proto.ListFixed64Sint64 v_list_fixed64_sint64 = 173;
inline bool Feature::has_v_list_fixed64_sint64() const {
  return kind_case() == kVListFixed64Sint64;
}
inline void Feature::set_has_v_list_fixed64_sint64() {
  _oneof_case_[0] = kVListFixed64Sint64;
}
inline void Feature::clear_v_list_fixed64_sint64() {
  if (has_v_list_fixed64_sint64()) {
    delete kind_.v_list_fixed64_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Sint64& Feature::_internal_v_list_fixed64_sint64() const {
  return *kind_.v_list_fixed64_sint64_;
}
inline ::feature_proto::ListFixed64Sint64* Feature::release_v_list_fixed64_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_sint64)
  if (has_v_list_fixed64_sint64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Sint64* temp = kind_.v_list_fixed64_sint64_;
    kind_.v_list_fixed64_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Sint64& Feature::v_list_fixed64_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_sint64)
  return has_v_list_fixed64_sint64()
      ? *kind_.v_list_fixed64_sint64_
      : *reinterpret_cast< ::feature_proto::ListFixed64Sint64*>(&::feature_proto::_ListFixed64Sint64_default_instance_);
}
inline ::feature_proto::ListFixed64Sint64* Feature::mutable_v_list_fixed64_sint64() {
  if (!has_v_list_fixed64_sint64()) {
    clear_kind();
    set_has_v_list_fixed64_sint64();
    kind_.v_list_fixed64_sint64_ = CreateMaybeMessage< ::feature_proto::ListFixed64Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_sint64)
  return kind_.v_list_fixed64_sint64_;
}

// .feature_proto.ListFixed64Fixed32 v_list_fixed64_fixed32 = 174;
inline bool Feature::has_v_list_fixed64_fixed32() const {
  return kind_case() == kVListFixed64Fixed32;
}
inline void Feature::set_has_v_list_fixed64_fixed32() {
  _oneof_case_[0] = kVListFixed64Fixed32;
}
inline void Feature::clear_v_list_fixed64_fixed32() {
  if (has_v_list_fixed64_fixed32()) {
    delete kind_.v_list_fixed64_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Fixed32& Feature::_internal_v_list_fixed64_fixed32() const {
  return *kind_.v_list_fixed64_fixed32_;
}
inline ::feature_proto::ListFixed64Fixed32* Feature::release_v_list_fixed64_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_fixed32)
  if (has_v_list_fixed64_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Fixed32* temp = kind_.v_list_fixed64_fixed32_;
    kind_.v_list_fixed64_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Fixed32& Feature::v_list_fixed64_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_fixed32)
  return has_v_list_fixed64_fixed32()
      ? *kind_.v_list_fixed64_fixed32_
      : *reinterpret_cast< ::feature_proto::ListFixed64Fixed32*>(&::feature_proto::_ListFixed64Fixed32_default_instance_);
}
inline ::feature_proto::ListFixed64Fixed32* Feature::mutable_v_list_fixed64_fixed32() {
  if (!has_v_list_fixed64_fixed32()) {
    clear_kind();
    set_has_v_list_fixed64_fixed32();
    kind_.v_list_fixed64_fixed32_ = CreateMaybeMessage< ::feature_proto::ListFixed64Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_fixed32)
  return kind_.v_list_fixed64_fixed32_;
}

// .feature_proto.ListFixed64Fixed64 v_list_fixed64_fixed64 = 175;
inline bool Feature::has_v_list_fixed64_fixed64() const {
  return kind_case() == kVListFixed64Fixed64;
}
inline void Feature::set_has_v_list_fixed64_fixed64() {
  _oneof_case_[0] = kVListFixed64Fixed64;
}
inline void Feature::clear_v_list_fixed64_fixed64() {
  if (has_v_list_fixed64_fixed64()) {
    delete kind_.v_list_fixed64_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Fixed64& Feature::_internal_v_list_fixed64_fixed64() const {
  return *kind_.v_list_fixed64_fixed64_;
}
inline ::feature_proto::ListFixed64Fixed64* Feature::release_v_list_fixed64_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_fixed64)
  if (has_v_list_fixed64_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Fixed64* temp = kind_.v_list_fixed64_fixed64_;
    kind_.v_list_fixed64_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Fixed64& Feature::v_list_fixed64_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_fixed64)
  return has_v_list_fixed64_fixed64()
      ? *kind_.v_list_fixed64_fixed64_
      : *reinterpret_cast< ::feature_proto::ListFixed64Fixed64*>(&::feature_proto::_ListFixed64Fixed64_default_instance_);
}
inline ::feature_proto::ListFixed64Fixed64* Feature::mutable_v_list_fixed64_fixed64() {
  if (!has_v_list_fixed64_fixed64()) {
    clear_kind();
    set_has_v_list_fixed64_fixed64();
    kind_.v_list_fixed64_fixed64_ = CreateMaybeMessage< ::feature_proto::ListFixed64Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_fixed64)
  return kind_.v_list_fixed64_fixed64_;
}

// .feature_proto.ListFixed64Sfixed32 v_list_fixed64_sfixed32 = 176;
inline bool Feature::has_v_list_fixed64_sfixed32() const {
  return kind_case() == kVListFixed64Sfixed32;
}
inline void Feature::set_has_v_list_fixed64_sfixed32() {
  _oneof_case_[0] = kVListFixed64Sfixed32;
}
inline void Feature::clear_v_list_fixed64_sfixed32() {
  if (has_v_list_fixed64_sfixed32()) {
    delete kind_.v_list_fixed64_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Sfixed32& Feature::_internal_v_list_fixed64_sfixed32() const {
  return *kind_.v_list_fixed64_sfixed32_;
}
inline ::feature_proto::ListFixed64Sfixed32* Feature::release_v_list_fixed64_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_sfixed32)
  if (has_v_list_fixed64_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Sfixed32* temp = kind_.v_list_fixed64_sfixed32_;
    kind_.v_list_fixed64_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Sfixed32& Feature::v_list_fixed64_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_sfixed32)
  return has_v_list_fixed64_sfixed32()
      ? *kind_.v_list_fixed64_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListFixed64Sfixed32*>(&::feature_proto::_ListFixed64Sfixed32_default_instance_);
}
inline ::feature_proto::ListFixed64Sfixed32* Feature::mutable_v_list_fixed64_sfixed32() {
  if (!has_v_list_fixed64_sfixed32()) {
    clear_kind();
    set_has_v_list_fixed64_sfixed32();
    kind_.v_list_fixed64_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListFixed64Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_sfixed32)
  return kind_.v_list_fixed64_sfixed32_;
}

// .feature_proto.ListFixed64Sfixed64 v_list_fixed64_sfixed64 = 177;
inline bool Feature::has_v_list_fixed64_sfixed64() const {
  return kind_case() == kVListFixed64Sfixed64;
}
inline void Feature::set_has_v_list_fixed64_sfixed64() {
  _oneof_case_[0] = kVListFixed64Sfixed64;
}
inline void Feature::clear_v_list_fixed64_sfixed64() {
  if (has_v_list_fixed64_sfixed64()) {
    delete kind_.v_list_fixed64_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Sfixed64& Feature::_internal_v_list_fixed64_sfixed64() const {
  return *kind_.v_list_fixed64_sfixed64_;
}
inline ::feature_proto::ListFixed64Sfixed64* Feature::release_v_list_fixed64_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_sfixed64)
  if (has_v_list_fixed64_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Sfixed64* temp = kind_.v_list_fixed64_sfixed64_;
    kind_.v_list_fixed64_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Sfixed64& Feature::v_list_fixed64_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_sfixed64)
  return has_v_list_fixed64_sfixed64()
      ? *kind_.v_list_fixed64_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListFixed64Sfixed64*>(&::feature_proto::_ListFixed64Sfixed64_default_instance_);
}
inline ::feature_proto::ListFixed64Sfixed64* Feature::mutable_v_list_fixed64_sfixed64() {
  if (!has_v_list_fixed64_sfixed64()) {
    clear_kind();
    set_has_v_list_fixed64_sfixed64();
    kind_.v_list_fixed64_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListFixed64Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_sfixed64)
  return kind_.v_list_fixed64_sfixed64_;
}

// .feature_proto.ListFixed64Bool v_list_fixed64_bool = 178;
inline bool Feature::has_v_list_fixed64_bool() const {
  return kind_case() == kVListFixed64Bool;
}
inline void Feature::set_has_v_list_fixed64_bool() {
  _oneof_case_[0] = kVListFixed64Bool;
}
inline void Feature::clear_v_list_fixed64_bool() {
  if (has_v_list_fixed64_bool()) {
    delete kind_.v_list_fixed64_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Bool& Feature::_internal_v_list_fixed64_bool() const {
  return *kind_.v_list_fixed64_bool_;
}
inline ::feature_proto::ListFixed64Bool* Feature::release_v_list_fixed64_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_bool)
  if (has_v_list_fixed64_bool()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Bool* temp = kind_.v_list_fixed64_bool_;
    kind_.v_list_fixed64_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Bool& Feature::v_list_fixed64_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_bool)
  return has_v_list_fixed64_bool()
      ? *kind_.v_list_fixed64_bool_
      : *reinterpret_cast< ::feature_proto::ListFixed64Bool*>(&::feature_proto::_ListFixed64Bool_default_instance_);
}
inline ::feature_proto::ListFixed64Bool* Feature::mutable_v_list_fixed64_bool() {
  if (!has_v_list_fixed64_bool()) {
    clear_kind();
    set_has_v_list_fixed64_bool();
    kind_.v_list_fixed64_bool_ = CreateMaybeMessage< ::feature_proto::ListFixed64Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_bool)
  return kind_.v_list_fixed64_bool_;
}

// .feature_proto.ListFixed64String v_list_fixed64_string = 179;
inline bool Feature::has_v_list_fixed64_string() const {
  return kind_case() == kVListFixed64String;
}
inline void Feature::set_has_v_list_fixed64_string() {
  _oneof_case_[0] = kVListFixed64String;
}
inline void Feature::clear_v_list_fixed64_string() {
  if (has_v_list_fixed64_string()) {
    delete kind_.v_list_fixed64_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64String& Feature::_internal_v_list_fixed64_string() const {
  return *kind_.v_list_fixed64_string_;
}
inline ::feature_proto::ListFixed64String* Feature::release_v_list_fixed64_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_string)
  if (has_v_list_fixed64_string()) {
    clear_has_kind();
      ::feature_proto::ListFixed64String* temp = kind_.v_list_fixed64_string_;
    kind_.v_list_fixed64_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64String& Feature::v_list_fixed64_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_string)
  return has_v_list_fixed64_string()
      ? *kind_.v_list_fixed64_string_
      : *reinterpret_cast< ::feature_proto::ListFixed64String*>(&::feature_proto::_ListFixed64String_default_instance_);
}
inline ::feature_proto::ListFixed64String* Feature::mutable_v_list_fixed64_string() {
  if (!has_v_list_fixed64_string()) {
    clear_kind();
    set_has_v_list_fixed64_string();
    kind_.v_list_fixed64_string_ = CreateMaybeMessage< ::feature_proto::ListFixed64String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_string)
  return kind_.v_list_fixed64_string_;
}

// .feature_proto.ListFixed64Bytes v_list_fixed64_bytes = 180;
inline bool Feature::has_v_list_fixed64_bytes() const {
  return kind_case() == kVListFixed64Bytes;
}
inline void Feature::set_has_v_list_fixed64_bytes() {
  _oneof_case_[0] = kVListFixed64Bytes;
}
inline void Feature::clear_v_list_fixed64_bytes() {
  if (has_v_list_fixed64_bytes()) {
    delete kind_.v_list_fixed64_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFixed64Bytes& Feature::_internal_v_list_fixed64_bytes() const {
  return *kind_.v_list_fixed64_bytes_;
}
inline ::feature_proto::ListFixed64Bytes* Feature::release_v_list_fixed64_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_fixed64_bytes)
  if (has_v_list_fixed64_bytes()) {
    clear_has_kind();
      ::feature_proto::ListFixed64Bytes* temp = kind_.v_list_fixed64_bytes_;
    kind_.v_list_fixed64_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFixed64Bytes& Feature::v_list_fixed64_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_fixed64_bytes)
  return has_v_list_fixed64_bytes()
      ? *kind_.v_list_fixed64_bytes_
      : *reinterpret_cast< ::feature_proto::ListFixed64Bytes*>(&::feature_proto::_ListFixed64Bytes_default_instance_);
}
inline ::feature_proto::ListFixed64Bytes* Feature::mutable_v_list_fixed64_bytes() {
  if (!has_v_list_fixed64_bytes()) {
    clear_kind();
    set_has_v_list_fixed64_bytes();
    kind_.v_list_fixed64_bytes_ = CreateMaybeMessage< ::feature_proto::ListFixed64Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_fixed64_bytes)
  return kind_.v_list_fixed64_bytes_;
}

// .feature_proto.ListSfixed32Double v_list_sfixed32_double = 181;
inline bool Feature::has_v_list_sfixed32_double() const {
  return kind_case() == kVListSfixed32Double;
}
inline void Feature::set_has_v_list_sfixed32_double() {
  _oneof_case_[0] = kVListSfixed32Double;
}
inline void Feature::clear_v_list_sfixed32_double() {
  if (has_v_list_sfixed32_double()) {
    delete kind_.v_list_sfixed32_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Double& Feature::_internal_v_list_sfixed32_double() const {
  return *kind_.v_list_sfixed32_double_;
}
inline ::feature_proto::ListSfixed32Double* Feature::release_v_list_sfixed32_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_double)
  if (has_v_list_sfixed32_double()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Double* temp = kind_.v_list_sfixed32_double_;
    kind_.v_list_sfixed32_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Double& Feature::v_list_sfixed32_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_double)
  return has_v_list_sfixed32_double()
      ? *kind_.v_list_sfixed32_double_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Double*>(&::feature_proto::_ListSfixed32Double_default_instance_);
}
inline ::feature_proto::ListSfixed32Double* Feature::mutable_v_list_sfixed32_double() {
  if (!has_v_list_sfixed32_double()) {
    clear_kind();
    set_has_v_list_sfixed32_double();
    kind_.v_list_sfixed32_double_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_double)
  return kind_.v_list_sfixed32_double_;
}

// .feature_proto.ListSfixed32Float v_list_sfixed32_float = 182;
inline bool Feature::has_v_list_sfixed32_float() const {
  return kind_case() == kVListSfixed32Float;
}
inline void Feature::set_has_v_list_sfixed32_float() {
  _oneof_case_[0] = kVListSfixed32Float;
}
inline void Feature::clear_v_list_sfixed32_float() {
  if (has_v_list_sfixed32_float()) {
    delete kind_.v_list_sfixed32_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Float& Feature::_internal_v_list_sfixed32_float() const {
  return *kind_.v_list_sfixed32_float_;
}
inline ::feature_proto::ListSfixed32Float* Feature::release_v_list_sfixed32_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_float)
  if (has_v_list_sfixed32_float()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Float* temp = kind_.v_list_sfixed32_float_;
    kind_.v_list_sfixed32_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Float& Feature::v_list_sfixed32_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_float)
  return has_v_list_sfixed32_float()
      ? *kind_.v_list_sfixed32_float_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Float*>(&::feature_proto::_ListSfixed32Float_default_instance_);
}
inline ::feature_proto::ListSfixed32Float* Feature::mutable_v_list_sfixed32_float() {
  if (!has_v_list_sfixed32_float()) {
    clear_kind();
    set_has_v_list_sfixed32_float();
    kind_.v_list_sfixed32_float_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_float)
  return kind_.v_list_sfixed32_float_;
}

// .feature_proto.ListSfixed32Int32 v_list_sfixed32_int32 = 183;
inline bool Feature::has_v_list_sfixed32_int32() const {
  return kind_case() == kVListSfixed32Int32;
}
inline void Feature::set_has_v_list_sfixed32_int32() {
  _oneof_case_[0] = kVListSfixed32Int32;
}
inline void Feature::clear_v_list_sfixed32_int32() {
  if (has_v_list_sfixed32_int32()) {
    delete kind_.v_list_sfixed32_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Int32& Feature::_internal_v_list_sfixed32_int32() const {
  return *kind_.v_list_sfixed32_int32_;
}
inline ::feature_proto::ListSfixed32Int32* Feature::release_v_list_sfixed32_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_int32)
  if (has_v_list_sfixed32_int32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Int32* temp = kind_.v_list_sfixed32_int32_;
    kind_.v_list_sfixed32_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Int32& Feature::v_list_sfixed32_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_int32)
  return has_v_list_sfixed32_int32()
      ? *kind_.v_list_sfixed32_int32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Int32*>(&::feature_proto::_ListSfixed32Int32_default_instance_);
}
inline ::feature_proto::ListSfixed32Int32* Feature::mutable_v_list_sfixed32_int32() {
  if (!has_v_list_sfixed32_int32()) {
    clear_kind();
    set_has_v_list_sfixed32_int32();
    kind_.v_list_sfixed32_int32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_int32)
  return kind_.v_list_sfixed32_int32_;
}

// .feature_proto.ListSfixed32Int64 v_list_sfixed32_int64 = 184;
inline bool Feature::has_v_list_sfixed32_int64() const {
  return kind_case() == kVListSfixed32Int64;
}
inline void Feature::set_has_v_list_sfixed32_int64() {
  _oneof_case_[0] = kVListSfixed32Int64;
}
inline void Feature::clear_v_list_sfixed32_int64() {
  if (has_v_list_sfixed32_int64()) {
    delete kind_.v_list_sfixed32_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Int64& Feature::_internal_v_list_sfixed32_int64() const {
  return *kind_.v_list_sfixed32_int64_;
}
inline ::feature_proto::ListSfixed32Int64* Feature::release_v_list_sfixed32_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_int64)
  if (has_v_list_sfixed32_int64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Int64* temp = kind_.v_list_sfixed32_int64_;
    kind_.v_list_sfixed32_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Int64& Feature::v_list_sfixed32_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_int64)
  return has_v_list_sfixed32_int64()
      ? *kind_.v_list_sfixed32_int64_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Int64*>(&::feature_proto::_ListSfixed32Int64_default_instance_);
}
inline ::feature_proto::ListSfixed32Int64* Feature::mutable_v_list_sfixed32_int64() {
  if (!has_v_list_sfixed32_int64()) {
    clear_kind();
    set_has_v_list_sfixed32_int64();
    kind_.v_list_sfixed32_int64_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_int64)
  return kind_.v_list_sfixed32_int64_;
}

// .feature_proto.ListSfixed32Uint32 v_list_sfixed32_uint32 = 185;
inline bool Feature::has_v_list_sfixed32_uint32() const {
  return kind_case() == kVListSfixed32Uint32;
}
inline void Feature::set_has_v_list_sfixed32_uint32() {
  _oneof_case_[0] = kVListSfixed32Uint32;
}
inline void Feature::clear_v_list_sfixed32_uint32() {
  if (has_v_list_sfixed32_uint32()) {
    delete kind_.v_list_sfixed32_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Uint32& Feature::_internal_v_list_sfixed32_uint32() const {
  return *kind_.v_list_sfixed32_uint32_;
}
inline ::feature_proto::ListSfixed32Uint32* Feature::release_v_list_sfixed32_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_uint32)
  if (has_v_list_sfixed32_uint32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Uint32* temp = kind_.v_list_sfixed32_uint32_;
    kind_.v_list_sfixed32_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Uint32& Feature::v_list_sfixed32_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_uint32)
  return has_v_list_sfixed32_uint32()
      ? *kind_.v_list_sfixed32_uint32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Uint32*>(&::feature_proto::_ListSfixed32Uint32_default_instance_);
}
inline ::feature_proto::ListSfixed32Uint32* Feature::mutable_v_list_sfixed32_uint32() {
  if (!has_v_list_sfixed32_uint32()) {
    clear_kind();
    set_has_v_list_sfixed32_uint32();
    kind_.v_list_sfixed32_uint32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_uint32)
  return kind_.v_list_sfixed32_uint32_;
}

// .feature_proto.ListSfixed32Uint64 v_list_sfixed32_uint64 = 186;
inline bool Feature::has_v_list_sfixed32_uint64() const {
  return kind_case() == kVListSfixed32Uint64;
}
inline void Feature::set_has_v_list_sfixed32_uint64() {
  _oneof_case_[0] = kVListSfixed32Uint64;
}
inline void Feature::clear_v_list_sfixed32_uint64() {
  if (has_v_list_sfixed32_uint64()) {
    delete kind_.v_list_sfixed32_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Uint64& Feature::_internal_v_list_sfixed32_uint64() const {
  return *kind_.v_list_sfixed32_uint64_;
}
inline ::feature_proto::ListSfixed32Uint64* Feature::release_v_list_sfixed32_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_uint64)
  if (has_v_list_sfixed32_uint64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Uint64* temp = kind_.v_list_sfixed32_uint64_;
    kind_.v_list_sfixed32_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Uint64& Feature::v_list_sfixed32_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_uint64)
  return has_v_list_sfixed32_uint64()
      ? *kind_.v_list_sfixed32_uint64_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Uint64*>(&::feature_proto::_ListSfixed32Uint64_default_instance_);
}
inline ::feature_proto::ListSfixed32Uint64* Feature::mutable_v_list_sfixed32_uint64() {
  if (!has_v_list_sfixed32_uint64()) {
    clear_kind();
    set_has_v_list_sfixed32_uint64();
    kind_.v_list_sfixed32_uint64_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_uint64)
  return kind_.v_list_sfixed32_uint64_;
}

// .feature_proto.ListSfixed32Sint32 v_list_sfixed32_sint32 = 187;
inline bool Feature::has_v_list_sfixed32_sint32() const {
  return kind_case() == kVListSfixed32Sint32;
}
inline void Feature::set_has_v_list_sfixed32_sint32() {
  _oneof_case_[0] = kVListSfixed32Sint32;
}
inline void Feature::clear_v_list_sfixed32_sint32() {
  if (has_v_list_sfixed32_sint32()) {
    delete kind_.v_list_sfixed32_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Sint32& Feature::_internal_v_list_sfixed32_sint32() const {
  return *kind_.v_list_sfixed32_sint32_;
}
inline ::feature_proto::ListSfixed32Sint32* Feature::release_v_list_sfixed32_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_sint32)
  if (has_v_list_sfixed32_sint32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Sint32* temp = kind_.v_list_sfixed32_sint32_;
    kind_.v_list_sfixed32_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Sint32& Feature::v_list_sfixed32_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_sint32)
  return has_v_list_sfixed32_sint32()
      ? *kind_.v_list_sfixed32_sint32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Sint32*>(&::feature_proto::_ListSfixed32Sint32_default_instance_);
}
inline ::feature_proto::ListSfixed32Sint32* Feature::mutable_v_list_sfixed32_sint32() {
  if (!has_v_list_sfixed32_sint32()) {
    clear_kind();
    set_has_v_list_sfixed32_sint32();
    kind_.v_list_sfixed32_sint32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_sint32)
  return kind_.v_list_sfixed32_sint32_;
}

// .feature_proto.ListSfixed32Sint64 v_list_sfixed32_sint64 = 188;
inline bool Feature::has_v_list_sfixed32_sint64() const {
  return kind_case() == kVListSfixed32Sint64;
}
inline void Feature::set_has_v_list_sfixed32_sint64() {
  _oneof_case_[0] = kVListSfixed32Sint64;
}
inline void Feature::clear_v_list_sfixed32_sint64() {
  if (has_v_list_sfixed32_sint64()) {
    delete kind_.v_list_sfixed32_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Sint64& Feature::_internal_v_list_sfixed32_sint64() const {
  return *kind_.v_list_sfixed32_sint64_;
}
inline ::feature_proto::ListSfixed32Sint64* Feature::release_v_list_sfixed32_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_sint64)
  if (has_v_list_sfixed32_sint64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Sint64* temp = kind_.v_list_sfixed32_sint64_;
    kind_.v_list_sfixed32_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Sint64& Feature::v_list_sfixed32_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_sint64)
  return has_v_list_sfixed32_sint64()
      ? *kind_.v_list_sfixed32_sint64_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Sint64*>(&::feature_proto::_ListSfixed32Sint64_default_instance_);
}
inline ::feature_proto::ListSfixed32Sint64* Feature::mutable_v_list_sfixed32_sint64() {
  if (!has_v_list_sfixed32_sint64()) {
    clear_kind();
    set_has_v_list_sfixed32_sint64();
    kind_.v_list_sfixed32_sint64_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_sint64)
  return kind_.v_list_sfixed32_sint64_;
}

// .feature_proto.ListSfixed32Fixed32 v_list_sfixed32_fixed32 = 189;
inline bool Feature::has_v_list_sfixed32_fixed32() const {
  return kind_case() == kVListSfixed32Fixed32;
}
inline void Feature::set_has_v_list_sfixed32_fixed32() {
  _oneof_case_[0] = kVListSfixed32Fixed32;
}
inline void Feature::clear_v_list_sfixed32_fixed32() {
  if (has_v_list_sfixed32_fixed32()) {
    delete kind_.v_list_sfixed32_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Fixed32& Feature::_internal_v_list_sfixed32_fixed32() const {
  return *kind_.v_list_sfixed32_fixed32_;
}
inline ::feature_proto::ListSfixed32Fixed32* Feature::release_v_list_sfixed32_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_fixed32)
  if (has_v_list_sfixed32_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Fixed32* temp = kind_.v_list_sfixed32_fixed32_;
    kind_.v_list_sfixed32_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Fixed32& Feature::v_list_sfixed32_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_fixed32)
  return has_v_list_sfixed32_fixed32()
      ? *kind_.v_list_sfixed32_fixed32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Fixed32*>(&::feature_proto::_ListSfixed32Fixed32_default_instance_);
}
inline ::feature_proto::ListSfixed32Fixed32* Feature::mutable_v_list_sfixed32_fixed32() {
  if (!has_v_list_sfixed32_fixed32()) {
    clear_kind();
    set_has_v_list_sfixed32_fixed32();
    kind_.v_list_sfixed32_fixed32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_fixed32)
  return kind_.v_list_sfixed32_fixed32_;
}

// .feature_proto.ListSfixed32Fixed64 v_list_sfixed32_fixed64 = 190;
inline bool Feature::has_v_list_sfixed32_fixed64() const {
  return kind_case() == kVListSfixed32Fixed64;
}
inline void Feature::set_has_v_list_sfixed32_fixed64() {
  _oneof_case_[0] = kVListSfixed32Fixed64;
}
inline void Feature::clear_v_list_sfixed32_fixed64() {
  if (has_v_list_sfixed32_fixed64()) {
    delete kind_.v_list_sfixed32_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Fixed64& Feature::_internal_v_list_sfixed32_fixed64() const {
  return *kind_.v_list_sfixed32_fixed64_;
}
inline ::feature_proto::ListSfixed32Fixed64* Feature::release_v_list_sfixed32_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_fixed64)
  if (has_v_list_sfixed32_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Fixed64* temp = kind_.v_list_sfixed32_fixed64_;
    kind_.v_list_sfixed32_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Fixed64& Feature::v_list_sfixed32_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_fixed64)
  return has_v_list_sfixed32_fixed64()
      ? *kind_.v_list_sfixed32_fixed64_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Fixed64*>(&::feature_proto::_ListSfixed32Fixed64_default_instance_);
}
inline ::feature_proto::ListSfixed32Fixed64* Feature::mutable_v_list_sfixed32_fixed64() {
  if (!has_v_list_sfixed32_fixed64()) {
    clear_kind();
    set_has_v_list_sfixed32_fixed64();
    kind_.v_list_sfixed32_fixed64_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_fixed64)
  return kind_.v_list_sfixed32_fixed64_;
}

// .feature_proto.ListSfixed32Sfixed32 v_list_sfixed32_sfixed32 = 191;
inline bool Feature::has_v_list_sfixed32_sfixed32() const {
  return kind_case() == kVListSfixed32Sfixed32;
}
inline void Feature::set_has_v_list_sfixed32_sfixed32() {
  _oneof_case_[0] = kVListSfixed32Sfixed32;
}
inline void Feature::clear_v_list_sfixed32_sfixed32() {
  if (has_v_list_sfixed32_sfixed32()) {
    delete kind_.v_list_sfixed32_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Sfixed32& Feature::_internal_v_list_sfixed32_sfixed32() const {
  return *kind_.v_list_sfixed32_sfixed32_;
}
inline ::feature_proto::ListSfixed32Sfixed32* Feature::release_v_list_sfixed32_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_sfixed32)
  if (has_v_list_sfixed32_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Sfixed32* temp = kind_.v_list_sfixed32_sfixed32_;
    kind_.v_list_sfixed32_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Sfixed32& Feature::v_list_sfixed32_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_sfixed32)
  return has_v_list_sfixed32_sfixed32()
      ? *kind_.v_list_sfixed32_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Sfixed32*>(&::feature_proto::_ListSfixed32Sfixed32_default_instance_);
}
inline ::feature_proto::ListSfixed32Sfixed32* Feature::mutable_v_list_sfixed32_sfixed32() {
  if (!has_v_list_sfixed32_sfixed32()) {
    clear_kind();
    set_has_v_list_sfixed32_sfixed32();
    kind_.v_list_sfixed32_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_sfixed32)
  return kind_.v_list_sfixed32_sfixed32_;
}

// .feature_proto.ListSfixed32Sfixed64 v_list_sfixed32_sfixed64 = 192;
inline bool Feature::has_v_list_sfixed32_sfixed64() const {
  return kind_case() == kVListSfixed32Sfixed64;
}
inline void Feature::set_has_v_list_sfixed32_sfixed64() {
  _oneof_case_[0] = kVListSfixed32Sfixed64;
}
inline void Feature::clear_v_list_sfixed32_sfixed64() {
  if (has_v_list_sfixed32_sfixed64()) {
    delete kind_.v_list_sfixed32_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Sfixed64& Feature::_internal_v_list_sfixed32_sfixed64() const {
  return *kind_.v_list_sfixed32_sfixed64_;
}
inline ::feature_proto::ListSfixed32Sfixed64* Feature::release_v_list_sfixed32_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_sfixed64)
  if (has_v_list_sfixed32_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Sfixed64* temp = kind_.v_list_sfixed32_sfixed64_;
    kind_.v_list_sfixed32_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Sfixed64& Feature::v_list_sfixed32_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_sfixed64)
  return has_v_list_sfixed32_sfixed64()
      ? *kind_.v_list_sfixed32_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Sfixed64*>(&::feature_proto::_ListSfixed32Sfixed64_default_instance_);
}
inline ::feature_proto::ListSfixed32Sfixed64* Feature::mutable_v_list_sfixed32_sfixed64() {
  if (!has_v_list_sfixed32_sfixed64()) {
    clear_kind();
    set_has_v_list_sfixed32_sfixed64();
    kind_.v_list_sfixed32_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_sfixed64)
  return kind_.v_list_sfixed32_sfixed64_;
}

// .feature_proto.ListSfixed32Bool v_list_sfixed32_bool = 193;
inline bool Feature::has_v_list_sfixed32_bool() const {
  return kind_case() == kVListSfixed32Bool;
}
inline void Feature::set_has_v_list_sfixed32_bool() {
  _oneof_case_[0] = kVListSfixed32Bool;
}
inline void Feature::clear_v_list_sfixed32_bool() {
  if (has_v_list_sfixed32_bool()) {
    delete kind_.v_list_sfixed32_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Bool& Feature::_internal_v_list_sfixed32_bool() const {
  return *kind_.v_list_sfixed32_bool_;
}
inline ::feature_proto::ListSfixed32Bool* Feature::release_v_list_sfixed32_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_bool)
  if (has_v_list_sfixed32_bool()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Bool* temp = kind_.v_list_sfixed32_bool_;
    kind_.v_list_sfixed32_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Bool& Feature::v_list_sfixed32_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_bool)
  return has_v_list_sfixed32_bool()
      ? *kind_.v_list_sfixed32_bool_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Bool*>(&::feature_proto::_ListSfixed32Bool_default_instance_);
}
inline ::feature_proto::ListSfixed32Bool* Feature::mutable_v_list_sfixed32_bool() {
  if (!has_v_list_sfixed32_bool()) {
    clear_kind();
    set_has_v_list_sfixed32_bool();
    kind_.v_list_sfixed32_bool_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_bool)
  return kind_.v_list_sfixed32_bool_;
}

// .feature_proto.ListSfixed32String v_list_sfixed32_string = 194;
inline bool Feature::has_v_list_sfixed32_string() const {
  return kind_case() == kVListSfixed32String;
}
inline void Feature::set_has_v_list_sfixed32_string() {
  _oneof_case_[0] = kVListSfixed32String;
}
inline void Feature::clear_v_list_sfixed32_string() {
  if (has_v_list_sfixed32_string()) {
    delete kind_.v_list_sfixed32_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32String& Feature::_internal_v_list_sfixed32_string() const {
  return *kind_.v_list_sfixed32_string_;
}
inline ::feature_proto::ListSfixed32String* Feature::release_v_list_sfixed32_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_string)
  if (has_v_list_sfixed32_string()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32String* temp = kind_.v_list_sfixed32_string_;
    kind_.v_list_sfixed32_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32String& Feature::v_list_sfixed32_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_string)
  return has_v_list_sfixed32_string()
      ? *kind_.v_list_sfixed32_string_
      : *reinterpret_cast< ::feature_proto::ListSfixed32String*>(&::feature_proto::_ListSfixed32String_default_instance_);
}
inline ::feature_proto::ListSfixed32String* Feature::mutable_v_list_sfixed32_string() {
  if (!has_v_list_sfixed32_string()) {
    clear_kind();
    set_has_v_list_sfixed32_string();
    kind_.v_list_sfixed32_string_ = CreateMaybeMessage< ::feature_proto::ListSfixed32String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_string)
  return kind_.v_list_sfixed32_string_;
}

// .feature_proto.ListSfixed32Bytes v_list_sfixed32_bytes = 195;
inline bool Feature::has_v_list_sfixed32_bytes() const {
  return kind_case() == kVListSfixed32Bytes;
}
inline void Feature::set_has_v_list_sfixed32_bytes() {
  _oneof_case_[0] = kVListSfixed32Bytes;
}
inline void Feature::clear_v_list_sfixed32_bytes() {
  if (has_v_list_sfixed32_bytes()) {
    delete kind_.v_list_sfixed32_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed32Bytes& Feature::_internal_v_list_sfixed32_bytes() const {
  return *kind_.v_list_sfixed32_bytes_;
}
inline ::feature_proto::ListSfixed32Bytes* Feature::release_v_list_sfixed32_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed32_bytes)
  if (has_v_list_sfixed32_bytes()) {
    clear_has_kind();
      ::feature_proto::ListSfixed32Bytes* temp = kind_.v_list_sfixed32_bytes_;
    kind_.v_list_sfixed32_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed32Bytes& Feature::v_list_sfixed32_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed32_bytes)
  return has_v_list_sfixed32_bytes()
      ? *kind_.v_list_sfixed32_bytes_
      : *reinterpret_cast< ::feature_proto::ListSfixed32Bytes*>(&::feature_proto::_ListSfixed32Bytes_default_instance_);
}
inline ::feature_proto::ListSfixed32Bytes* Feature::mutable_v_list_sfixed32_bytes() {
  if (!has_v_list_sfixed32_bytes()) {
    clear_kind();
    set_has_v_list_sfixed32_bytes();
    kind_.v_list_sfixed32_bytes_ = CreateMaybeMessage< ::feature_proto::ListSfixed32Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed32_bytes)
  return kind_.v_list_sfixed32_bytes_;
}

// .feature_proto.ListSfixed64Double v_list_sfixed64_double = 196;
inline bool Feature::has_v_list_sfixed64_double() const {
  return kind_case() == kVListSfixed64Double;
}
inline void Feature::set_has_v_list_sfixed64_double() {
  _oneof_case_[0] = kVListSfixed64Double;
}
inline void Feature::clear_v_list_sfixed64_double() {
  if (has_v_list_sfixed64_double()) {
    delete kind_.v_list_sfixed64_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Double& Feature::_internal_v_list_sfixed64_double() const {
  return *kind_.v_list_sfixed64_double_;
}
inline ::feature_proto::ListSfixed64Double* Feature::release_v_list_sfixed64_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_double)
  if (has_v_list_sfixed64_double()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Double* temp = kind_.v_list_sfixed64_double_;
    kind_.v_list_sfixed64_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Double& Feature::v_list_sfixed64_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_double)
  return has_v_list_sfixed64_double()
      ? *kind_.v_list_sfixed64_double_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Double*>(&::feature_proto::_ListSfixed64Double_default_instance_);
}
inline ::feature_proto::ListSfixed64Double* Feature::mutable_v_list_sfixed64_double() {
  if (!has_v_list_sfixed64_double()) {
    clear_kind();
    set_has_v_list_sfixed64_double();
    kind_.v_list_sfixed64_double_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Double >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_double)
  return kind_.v_list_sfixed64_double_;
}

// .feature_proto.ListSfixed64Float v_list_sfixed64_float = 197;
inline bool Feature::has_v_list_sfixed64_float() const {
  return kind_case() == kVListSfixed64Float;
}
inline void Feature::set_has_v_list_sfixed64_float() {
  _oneof_case_[0] = kVListSfixed64Float;
}
inline void Feature::clear_v_list_sfixed64_float() {
  if (has_v_list_sfixed64_float()) {
    delete kind_.v_list_sfixed64_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Float& Feature::_internal_v_list_sfixed64_float() const {
  return *kind_.v_list_sfixed64_float_;
}
inline ::feature_proto::ListSfixed64Float* Feature::release_v_list_sfixed64_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_float)
  if (has_v_list_sfixed64_float()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Float* temp = kind_.v_list_sfixed64_float_;
    kind_.v_list_sfixed64_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Float& Feature::v_list_sfixed64_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_float)
  return has_v_list_sfixed64_float()
      ? *kind_.v_list_sfixed64_float_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Float*>(&::feature_proto::_ListSfixed64Float_default_instance_);
}
inline ::feature_proto::ListSfixed64Float* Feature::mutable_v_list_sfixed64_float() {
  if (!has_v_list_sfixed64_float()) {
    clear_kind();
    set_has_v_list_sfixed64_float();
    kind_.v_list_sfixed64_float_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Float >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_float)
  return kind_.v_list_sfixed64_float_;
}

// .feature_proto.ListSfixed64Int32 v_list_sfixed64_int32 = 198;
inline bool Feature::has_v_list_sfixed64_int32() const {
  return kind_case() == kVListSfixed64Int32;
}
inline void Feature::set_has_v_list_sfixed64_int32() {
  _oneof_case_[0] = kVListSfixed64Int32;
}
inline void Feature::clear_v_list_sfixed64_int32() {
  if (has_v_list_sfixed64_int32()) {
    delete kind_.v_list_sfixed64_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Int32& Feature::_internal_v_list_sfixed64_int32() const {
  return *kind_.v_list_sfixed64_int32_;
}
inline ::feature_proto::ListSfixed64Int32* Feature::release_v_list_sfixed64_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_int32)
  if (has_v_list_sfixed64_int32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Int32* temp = kind_.v_list_sfixed64_int32_;
    kind_.v_list_sfixed64_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Int32& Feature::v_list_sfixed64_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_int32)
  return has_v_list_sfixed64_int32()
      ? *kind_.v_list_sfixed64_int32_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Int32*>(&::feature_proto::_ListSfixed64Int32_default_instance_);
}
inline ::feature_proto::ListSfixed64Int32* Feature::mutable_v_list_sfixed64_int32() {
  if (!has_v_list_sfixed64_int32()) {
    clear_kind();
    set_has_v_list_sfixed64_int32();
    kind_.v_list_sfixed64_int32_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Int32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_int32)
  return kind_.v_list_sfixed64_int32_;
}

// .feature_proto.ListSfixed64Int64 v_list_sfixed64_int64 = 199;
inline bool Feature::has_v_list_sfixed64_int64() const {
  return kind_case() == kVListSfixed64Int64;
}
inline void Feature::set_has_v_list_sfixed64_int64() {
  _oneof_case_[0] = kVListSfixed64Int64;
}
inline void Feature::clear_v_list_sfixed64_int64() {
  if (has_v_list_sfixed64_int64()) {
    delete kind_.v_list_sfixed64_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Int64& Feature::_internal_v_list_sfixed64_int64() const {
  return *kind_.v_list_sfixed64_int64_;
}
inline ::feature_proto::ListSfixed64Int64* Feature::release_v_list_sfixed64_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_int64)
  if (has_v_list_sfixed64_int64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Int64* temp = kind_.v_list_sfixed64_int64_;
    kind_.v_list_sfixed64_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Int64& Feature::v_list_sfixed64_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_int64)
  return has_v_list_sfixed64_int64()
      ? *kind_.v_list_sfixed64_int64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Int64*>(&::feature_proto::_ListSfixed64Int64_default_instance_);
}
inline ::feature_proto::ListSfixed64Int64* Feature::mutable_v_list_sfixed64_int64() {
  if (!has_v_list_sfixed64_int64()) {
    clear_kind();
    set_has_v_list_sfixed64_int64();
    kind_.v_list_sfixed64_int64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Int64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_int64)
  return kind_.v_list_sfixed64_int64_;
}

// .feature_proto.ListSfixed64Uint32 v_list_sfixed64_uint32 = 200;
inline bool Feature::has_v_list_sfixed64_uint32() const {
  return kind_case() == kVListSfixed64Uint32;
}
inline void Feature::set_has_v_list_sfixed64_uint32() {
  _oneof_case_[0] = kVListSfixed64Uint32;
}
inline void Feature::clear_v_list_sfixed64_uint32() {
  if (has_v_list_sfixed64_uint32()) {
    delete kind_.v_list_sfixed64_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Uint32& Feature::_internal_v_list_sfixed64_uint32() const {
  return *kind_.v_list_sfixed64_uint32_;
}
inline ::feature_proto::ListSfixed64Uint32* Feature::release_v_list_sfixed64_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_uint32)
  if (has_v_list_sfixed64_uint32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Uint32* temp = kind_.v_list_sfixed64_uint32_;
    kind_.v_list_sfixed64_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Uint32& Feature::v_list_sfixed64_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_uint32)
  return has_v_list_sfixed64_uint32()
      ? *kind_.v_list_sfixed64_uint32_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Uint32*>(&::feature_proto::_ListSfixed64Uint32_default_instance_);
}
inline ::feature_proto::ListSfixed64Uint32* Feature::mutable_v_list_sfixed64_uint32() {
  if (!has_v_list_sfixed64_uint32()) {
    clear_kind();
    set_has_v_list_sfixed64_uint32();
    kind_.v_list_sfixed64_uint32_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Uint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_uint32)
  return kind_.v_list_sfixed64_uint32_;
}

// .feature_proto.ListSfixed64Uint64 v_list_sfixed64_uint64 = 201;
inline bool Feature::has_v_list_sfixed64_uint64() const {
  return kind_case() == kVListSfixed64Uint64;
}
inline void Feature::set_has_v_list_sfixed64_uint64() {
  _oneof_case_[0] = kVListSfixed64Uint64;
}
inline void Feature::clear_v_list_sfixed64_uint64() {
  if (has_v_list_sfixed64_uint64()) {
    delete kind_.v_list_sfixed64_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Uint64& Feature::_internal_v_list_sfixed64_uint64() const {
  return *kind_.v_list_sfixed64_uint64_;
}
inline ::feature_proto::ListSfixed64Uint64* Feature::release_v_list_sfixed64_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_uint64)
  if (has_v_list_sfixed64_uint64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Uint64* temp = kind_.v_list_sfixed64_uint64_;
    kind_.v_list_sfixed64_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Uint64& Feature::v_list_sfixed64_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_uint64)
  return has_v_list_sfixed64_uint64()
      ? *kind_.v_list_sfixed64_uint64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Uint64*>(&::feature_proto::_ListSfixed64Uint64_default_instance_);
}
inline ::feature_proto::ListSfixed64Uint64* Feature::mutable_v_list_sfixed64_uint64() {
  if (!has_v_list_sfixed64_uint64()) {
    clear_kind();
    set_has_v_list_sfixed64_uint64();
    kind_.v_list_sfixed64_uint64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Uint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_uint64)
  return kind_.v_list_sfixed64_uint64_;
}

// .feature_proto.ListSfixed64Sint32 v_list_sfixed64_sint32 = 202;
inline bool Feature::has_v_list_sfixed64_sint32() const {
  return kind_case() == kVListSfixed64Sint32;
}
inline void Feature::set_has_v_list_sfixed64_sint32() {
  _oneof_case_[0] = kVListSfixed64Sint32;
}
inline void Feature::clear_v_list_sfixed64_sint32() {
  if (has_v_list_sfixed64_sint32()) {
    delete kind_.v_list_sfixed64_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Sint32& Feature::_internal_v_list_sfixed64_sint32() const {
  return *kind_.v_list_sfixed64_sint32_;
}
inline ::feature_proto::ListSfixed64Sint32* Feature::release_v_list_sfixed64_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_sint32)
  if (has_v_list_sfixed64_sint32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Sint32* temp = kind_.v_list_sfixed64_sint32_;
    kind_.v_list_sfixed64_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Sint32& Feature::v_list_sfixed64_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_sint32)
  return has_v_list_sfixed64_sint32()
      ? *kind_.v_list_sfixed64_sint32_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Sint32*>(&::feature_proto::_ListSfixed64Sint32_default_instance_);
}
inline ::feature_proto::ListSfixed64Sint32* Feature::mutable_v_list_sfixed64_sint32() {
  if (!has_v_list_sfixed64_sint32()) {
    clear_kind();
    set_has_v_list_sfixed64_sint32();
    kind_.v_list_sfixed64_sint32_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Sint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_sint32)
  return kind_.v_list_sfixed64_sint32_;
}

// .feature_proto.ListSfixed64Sint64 v_list_sfixed64_sint64 = 203;
inline bool Feature::has_v_list_sfixed64_sint64() const {
  return kind_case() == kVListSfixed64Sint64;
}
inline void Feature::set_has_v_list_sfixed64_sint64() {
  _oneof_case_[0] = kVListSfixed64Sint64;
}
inline void Feature::clear_v_list_sfixed64_sint64() {
  if (has_v_list_sfixed64_sint64()) {
    delete kind_.v_list_sfixed64_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Sint64& Feature::_internal_v_list_sfixed64_sint64() const {
  return *kind_.v_list_sfixed64_sint64_;
}
inline ::feature_proto::ListSfixed64Sint64* Feature::release_v_list_sfixed64_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_sint64)
  if (has_v_list_sfixed64_sint64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Sint64* temp = kind_.v_list_sfixed64_sint64_;
    kind_.v_list_sfixed64_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Sint64& Feature::v_list_sfixed64_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_sint64)
  return has_v_list_sfixed64_sint64()
      ? *kind_.v_list_sfixed64_sint64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Sint64*>(&::feature_proto::_ListSfixed64Sint64_default_instance_);
}
inline ::feature_proto::ListSfixed64Sint64* Feature::mutable_v_list_sfixed64_sint64() {
  if (!has_v_list_sfixed64_sint64()) {
    clear_kind();
    set_has_v_list_sfixed64_sint64();
    kind_.v_list_sfixed64_sint64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Sint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_sint64)
  return kind_.v_list_sfixed64_sint64_;
}

// .feature_proto.ListSfixed64Fixed32 v_list_sfixed64_fixed32 = 204;
inline bool Feature::has_v_list_sfixed64_fixed32() const {
  return kind_case() == kVListSfixed64Fixed32;
}
inline void Feature::set_has_v_list_sfixed64_fixed32() {
  _oneof_case_[0] = kVListSfixed64Fixed32;
}
inline void Feature::clear_v_list_sfixed64_fixed32() {
  if (has_v_list_sfixed64_fixed32()) {
    delete kind_.v_list_sfixed64_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Fixed32& Feature::_internal_v_list_sfixed64_fixed32() const {
  return *kind_.v_list_sfixed64_fixed32_;
}
inline ::feature_proto::ListSfixed64Fixed32* Feature::release_v_list_sfixed64_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_fixed32)
  if (has_v_list_sfixed64_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Fixed32* temp = kind_.v_list_sfixed64_fixed32_;
    kind_.v_list_sfixed64_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Fixed32& Feature::v_list_sfixed64_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_fixed32)
  return has_v_list_sfixed64_fixed32()
      ? *kind_.v_list_sfixed64_fixed32_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Fixed32*>(&::feature_proto::_ListSfixed64Fixed32_default_instance_);
}
inline ::feature_proto::ListSfixed64Fixed32* Feature::mutable_v_list_sfixed64_fixed32() {
  if (!has_v_list_sfixed64_fixed32()) {
    clear_kind();
    set_has_v_list_sfixed64_fixed32();
    kind_.v_list_sfixed64_fixed32_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Fixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_fixed32)
  return kind_.v_list_sfixed64_fixed32_;
}

// .feature_proto.ListSfixed64Fixed64 v_list_sfixed64_fixed64 = 205;
inline bool Feature::has_v_list_sfixed64_fixed64() const {
  return kind_case() == kVListSfixed64Fixed64;
}
inline void Feature::set_has_v_list_sfixed64_fixed64() {
  _oneof_case_[0] = kVListSfixed64Fixed64;
}
inline void Feature::clear_v_list_sfixed64_fixed64() {
  if (has_v_list_sfixed64_fixed64()) {
    delete kind_.v_list_sfixed64_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Fixed64& Feature::_internal_v_list_sfixed64_fixed64() const {
  return *kind_.v_list_sfixed64_fixed64_;
}
inline ::feature_proto::ListSfixed64Fixed64* Feature::release_v_list_sfixed64_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_fixed64)
  if (has_v_list_sfixed64_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Fixed64* temp = kind_.v_list_sfixed64_fixed64_;
    kind_.v_list_sfixed64_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Fixed64& Feature::v_list_sfixed64_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_fixed64)
  return has_v_list_sfixed64_fixed64()
      ? *kind_.v_list_sfixed64_fixed64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Fixed64*>(&::feature_proto::_ListSfixed64Fixed64_default_instance_);
}
inline ::feature_proto::ListSfixed64Fixed64* Feature::mutable_v_list_sfixed64_fixed64() {
  if (!has_v_list_sfixed64_fixed64()) {
    clear_kind();
    set_has_v_list_sfixed64_fixed64();
    kind_.v_list_sfixed64_fixed64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Fixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_fixed64)
  return kind_.v_list_sfixed64_fixed64_;
}

// .feature_proto.ListSfixed64Sfixed32 v_list_sfixed64_sfixed32 = 206;
inline bool Feature::has_v_list_sfixed64_sfixed32() const {
  return kind_case() == kVListSfixed64Sfixed32;
}
inline void Feature::set_has_v_list_sfixed64_sfixed32() {
  _oneof_case_[0] = kVListSfixed64Sfixed32;
}
inline void Feature::clear_v_list_sfixed64_sfixed32() {
  if (has_v_list_sfixed64_sfixed32()) {
    delete kind_.v_list_sfixed64_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Sfixed32& Feature::_internal_v_list_sfixed64_sfixed32() const {
  return *kind_.v_list_sfixed64_sfixed32_;
}
inline ::feature_proto::ListSfixed64Sfixed32* Feature::release_v_list_sfixed64_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_sfixed32)
  if (has_v_list_sfixed64_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Sfixed32* temp = kind_.v_list_sfixed64_sfixed32_;
    kind_.v_list_sfixed64_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Sfixed32& Feature::v_list_sfixed64_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_sfixed32)
  return has_v_list_sfixed64_sfixed32()
      ? *kind_.v_list_sfixed64_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Sfixed32*>(&::feature_proto::_ListSfixed64Sfixed32_default_instance_);
}
inline ::feature_proto::ListSfixed64Sfixed32* Feature::mutable_v_list_sfixed64_sfixed32() {
  if (!has_v_list_sfixed64_sfixed32()) {
    clear_kind();
    set_has_v_list_sfixed64_sfixed32();
    kind_.v_list_sfixed64_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Sfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_sfixed32)
  return kind_.v_list_sfixed64_sfixed32_;
}

// .feature_proto.ListSfixed64Sfixed64 v_list_sfixed64_sfixed64 = 207;
inline bool Feature::has_v_list_sfixed64_sfixed64() const {
  return kind_case() == kVListSfixed64Sfixed64;
}
inline void Feature::set_has_v_list_sfixed64_sfixed64() {
  _oneof_case_[0] = kVListSfixed64Sfixed64;
}
inline void Feature::clear_v_list_sfixed64_sfixed64() {
  if (has_v_list_sfixed64_sfixed64()) {
    delete kind_.v_list_sfixed64_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Sfixed64& Feature::_internal_v_list_sfixed64_sfixed64() const {
  return *kind_.v_list_sfixed64_sfixed64_;
}
inline ::feature_proto::ListSfixed64Sfixed64* Feature::release_v_list_sfixed64_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_sfixed64)
  if (has_v_list_sfixed64_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Sfixed64* temp = kind_.v_list_sfixed64_sfixed64_;
    kind_.v_list_sfixed64_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Sfixed64& Feature::v_list_sfixed64_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_sfixed64)
  return has_v_list_sfixed64_sfixed64()
      ? *kind_.v_list_sfixed64_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Sfixed64*>(&::feature_proto::_ListSfixed64Sfixed64_default_instance_);
}
inline ::feature_proto::ListSfixed64Sfixed64* Feature::mutable_v_list_sfixed64_sfixed64() {
  if (!has_v_list_sfixed64_sfixed64()) {
    clear_kind();
    set_has_v_list_sfixed64_sfixed64();
    kind_.v_list_sfixed64_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Sfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_sfixed64)
  return kind_.v_list_sfixed64_sfixed64_;
}

// .feature_proto.ListSfixed64Bool v_list_sfixed64_bool = 208;
inline bool Feature::has_v_list_sfixed64_bool() const {
  return kind_case() == kVListSfixed64Bool;
}
inline void Feature::set_has_v_list_sfixed64_bool() {
  _oneof_case_[0] = kVListSfixed64Bool;
}
inline void Feature::clear_v_list_sfixed64_bool() {
  if (has_v_list_sfixed64_bool()) {
    delete kind_.v_list_sfixed64_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Bool& Feature::_internal_v_list_sfixed64_bool() const {
  return *kind_.v_list_sfixed64_bool_;
}
inline ::feature_proto::ListSfixed64Bool* Feature::release_v_list_sfixed64_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_bool)
  if (has_v_list_sfixed64_bool()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Bool* temp = kind_.v_list_sfixed64_bool_;
    kind_.v_list_sfixed64_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Bool& Feature::v_list_sfixed64_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_bool)
  return has_v_list_sfixed64_bool()
      ? *kind_.v_list_sfixed64_bool_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Bool*>(&::feature_proto::_ListSfixed64Bool_default_instance_);
}
inline ::feature_proto::ListSfixed64Bool* Feature::mutable_v_list_sfixed64_bool() {
  if (!has_v_list_sfixed64_bool()) {
    clear_kind();
    set_has_v_list_sfixed64_bool();
    kind_.v_list_sfixed64_bool_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Bool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_bool)
  return kind_.v_list_sfixed64_bool_;
}

// .feature_proto.ListSfixed64String v_list_sfixed64_string = 209;
inline bool Feature::has_v_list_sfixed64_string() const {
  return kind_case() == kVListSfixed64String;
}
inline void Feature::set_has_v_list_sfixed64_string() {
  _oneof_case_[0] = kVListSfixed64String;
}
inline void Feature::clear_v_list_sfixed64_string() {
  if (has_v_list_sfixed64_string()) {
    delete kind_.v_list_sfixed64_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64String& Feature::_internal_v_list_sfixed64_string() const {
  return *kind_.v_list_sfixed64_string_;
}
inline ::feature_proto::ListSfixed64String* Feature::release_v_list_sfixed64_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_string)
  if (has_v_list_sfixed64_string()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64String* temp = kind_.v_list_sfixed64_string_;
    kind_.v_list_sfixed64_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64String& Feature::v_list_sfixed64_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_string)
  return has_v_list_sfixed64_string()
      ? *kind_.v_list_sfixed64_string_
      : *reinterpret_cast< ::feature_proto::ListSfixed64String*>(&::feature_proto::_ListSfixed64String_default_instance_);
}
inline ::feature_proto::ListSfixed64String* Feature::mutable_v_list_sfixed64_string() {
  if (!has_v_list_sfixed64_string()) {
    clear_kind();
    set_has_v_list_sfixed64_string();
    kind_.v_list_sfixed64_string_ = CreateMaybeMessage< ::feature_proto::ListSfixed64String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_string)
  return kind_.v_list_sfixed64_string_;
}

// .feature_proto.ListSfixed64Bytes v_list_sfixed64_bytes = 210;
inline bool Feature::has_v_list_sfixed64_bytes() const {
  return kind_case() == kVListSfixed64Bytes;
}
inline void Feature::set_has_v_list_sfixed64_bytes() {
  _oneof_case_[0] = kVListSfixed64Bytes;
}
inline void Feature::clear_v_list_sfixed64_bytes() {
  if (has_v_list_sfixed64_bytes()) {
    delete kind_.v_list_sfixed64_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListSfixed64Bytes& Feature::_internal_v_list_sfixed64_bytes() const {
  return *kind_.v_list_sfixed64_bytes_;
}
inline ::feature_proto::ListSfixed64Bytes* Feature::release_v_list_sfixed64_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_sfixed64_bytes)
  if (has_v_list_sfixed64_bytes()) {
    clear_has_kind();
      ::feature_proto::ListSfixed64Bytes* temp = kind_.v_list_sfixed64_bytes_;
    kind_.v_list_sfixed64_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListSfixed64Bytes& Feature::v_list_sfixed64_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_sfixed64_bytes)
  return has_v_list_sfixed64_bytes()
      ? *kind_.v_list_sfixed64_bytes_
      : *reinterpret_cast< ::feature_proto::ListSfixed64Bytes*>(&::feature_proto::_ListSfixed64Bytes_default_instance_);
}
inline ::feature_proto::ListSfixed64Bytes* Feature::mutable_v_list_sfixed64_bytes() {
  if (!has_v_list_sfixed64_bytes()) {
    clear_kind();
    set_has_v_list_sfixed64_bytes();
    kind_.v_list_sfixed64_bytes_ = CreateMaybeMessage< ::feature_proto::ListSfixed64Bytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_sfixed64_bytes)
  return kind_.v_list_sfixed64_bytes_;
}

// .feature_proto.ListDoubleDouble v_list_double_double = 211;
inline bool Feature::has_v_list_double_double() const {
  return kind_case() == kVListDoubleDouble;
}
inline void Feature::set_has_v_list_double_double() {
  _oneof_case_[0] = kVListDoubleDouble;
}
inline void Feature::clear_v_list_double_double() {
  if (has_v_list_double_double()) {
    delete kind_.v_list_double_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleDouble& Feature::_internal_v_list_double_double() const {
  return *kind_.v_list_double_double_;
}
inline ::feature_proto::ListDoubleDouble* Feature::release_v_list_double_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_double)
  if (has_v_list_double_double()) {
    clear_has_kind();
      ::feature_proto::ListDoubleDouble* temp = kind_.v_list_double_double_;
    kind_.v_list_double_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleDouble& Feature::v_list_double_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_double)
  return has_v_list_double_double()
      ? *kind_.v_list_double_double_
      : *reinterpret_cast< ::feature_proto::ListDoubleDouble*>(&::feature_proto::_ListDoubleDouble_default_instance_);
}
inline ::feature_proto::ListDoubleDouble* Feature::mutable_v_list_double_double() {
  if (!has_v_list_double_double()) {
    clear_kind();
    set_has_v_list_double_double();
    kind_.v_list_double_double_ = CreateMaybeMessage< ::feature_proto::ListDoubleDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_double)
  return kind_.v_list_double_double_;
}

// .feature_proto.ListDoubleFloat v_list_double_float = 212;
inline bool Feature::has_v_list_double_float() const {
  return kind_case() == kVListDoubleFloat;
}
inline void Feature::set_has_v_list_double_float() {
  _oneof_case_[0] = kVListDoubleFloat;
}
inline void Feature::clear_v_list_double_float() {
  if (has_v_list_double_float()) {
    delete kind_.v_list_double_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleFloat& Feature::_internal_v_list_double_float() const {
  return *kind_.v_list_double_float_;
}
inline ::feature_proto::ListDoubleFloat* Feature::release_v_list_double_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_float)
  if (has_v_list_double_float()) {
    clear_has_kind();
      ::feature_proto::ListDoubleFloat* temp = kind_.v_list_double_float_;
    kind_.v_list_double_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleFloat& Feature::v_list_double_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_float)
  return has_v_list_double_float()
      ? *kind_.v_list_double_float_
      : *reinterpret_cast< ::feature_proto::ListDoubleFloat*>(&::feature_proto::_ListDoubleFloat_default_instance_);
}
inline ::feature_proto::ListDoubleFloat* Feature::mutable_v_list_double_float() {
  if (!has_v_list_double_float()) {
    clear_kind();
    set_has_v_list_double_float();
    kind_.v_list_double_float_ = CreateMaybeMessage< ::feature_proto::ListDoubleFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_float)
  return kind_.v_list_double_float_;
}

// .feature_proto.ListDoubleInt32 v_list_double_int32 = 213;
inline bool Feature::has_v_list_double_int32() const {
  return kind_case() == kVListDoubleInt32;
}
inline void Feature::set_has_v_list_double_int32() {
  _oneof_case_[0] = kVListDoubleInt32;
}
inline void Feature::clear_v_list_double_int32() {
  if (has_v_list_double_int32()) {
    delete kind_.v_list_double_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleInt32& Feature::_internal_v_list_double_int32() const {
  return *kind_.v_list_double_int32_;
}
inline ::feature_proto::ListDoubleInt32* Feature::release_v_list_double_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_int32)
  if (has_v_list_double_int32()) {
    clear_has_kind();
      ::feature_proto::ListDoubleInt32* temp = kind_.v_list_double_int32_;
    kind_.v_list_double_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleInt32& Feature::v_list_double_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_int32)
  return has_v_list_double_int32()
      ? *kind_.v_list_double_int32_
      : *reinterpret_cast< ::feature_proto::ListDoubleInt32*>(&::feature_proto::_ListDoubleInt32_default_instance_);
}
inline ::feature_proto::ListDoubleInt32* Feature::mutable_v_list_double_int32() {
  if (!has_v_list_double_int32()) {
    clear_kind();
    set_has_v_list_double_int32();
    kind_.v_list_double_int32_ = CreateMaybeMessage< ::feature_proto::ListDoubleInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_int32)
  return kind_.v_list_double_int32_;
}

// .feature_proto.ListDoubleInt64 v_list_double_int64 = 214;
inline bool Feature::has_v_list_double_int64() const {
  return kind_case() == kVListDoubleInt64;
}
inline void Feature::set_has_v_list_double_int64() {
  _oneof_case_[0] = kVListDoubleInt64;
}
inline void Feature::clear_v_list_double_int64() {
  if (has_v_list_double_int64()) {
    delete kind_.v_list_double_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleInt64& Feature::_internal_v_list_double_int64() const {
  return *kind_.v_list_double_int64_;
}
inline ::feature_proto::ListDoubleInt64* Feature::release_v_list_double_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_int64)
  if (has_v_list_double_int64()) {
    clear_has_kind();
      ::feature_proto::ListDoubleInt64* temp = kind_.v_list_double_int64_;
    kind_.v_list_double_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleInt64& Feature::v_list_double_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_int64)
  return has_v_list_double_int64()
      ? *kind_.v_list_double_int64_
      : *reinterpret_cast< ::feature_proto::ListDoubleInt64*>(&::feature_proto::_ListDoubleInt64_default_instance_);
}
inline ::feature_proto::ListDoubleInt64* Feature::mutable_v_list_double_int64() {
  if (!has_v_list_double_int64()) {
    clear_kind();
    set_has_v_list_double_int64();
    kind_.v_list_double_int64_ = CreateMaybeMessage< ::feature_proto::ListDoubleInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_int64)
  return kind_.v_list_double_int64_;
}

// .feature_proto.ListDoubleUint32 v_list_double_uint32 = 215;
inline bool Feature::has_v_list_double_uint32() const {
  return kind_case() == kVListDoubleUint32;
}
inline void Feature::set_has_v_list_double_uint32() {
  _oneof_case_[0] = kVListDoubleUint32;
}
inline void Feature::clear_v_list_double_uint32() {
  if (has_v_list_double_uint32()) {
    delete kind_.v_list_double_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleUint32& Feature::_internal_v_list_double_uint32() const {
  return *kind_.v_list_double_uint32_;
}
inline ::feature_proto::ListDoubleUint32* Feature::release_v_list_double_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_uint32)
  if (has_v_list_double_uint32()) {
    clear_has_kind();
      ::feature_proto::ListDoubleUint32* temp = kind_.v_list_double_uint32_;
    kind_.v_list_double_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleUint32& Feature::v_list_double_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_uint32)
  return has_v_list_double_uint32()
      ? *kind_.v_list_double_uint32_
      : *reinterpret_cast< ::feature_proto::ListDoubleUint32*>(&::feature_proto::_ListDoubleUint32_default_instance_);
}
inline ::feature_proto::ListDoubleUint32* Feature::mutable_v_list_double_uint32() {
  if (!has_v_list_double_uint32()) {
    clear_kind();
    set_has_v_list_double_uint32();
    kind_.v_list_double_uint32_ = CreateMaybeMessage< ::feature_proto::ListDoubleUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_uint32)
  return kind_.v_list_double_uint32_;
}

// .feature_proto.ListDoubleUint64 v_list_double_uint64 = 216;
inline bool Feature::has_v_list_double_uint64() const {
  return kind_case() == kVListDoubleUint64;
}
inline void Feature::set_has_v_list_double_uint64() {
  _oneof_case_[0] = kVListDoubleUint64;
}
inline void Feature::clear_v_list_double_uint64() {
  if (has_v_list_double_uint64()) {
    delete kind_.v_list_double_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleUint64& Feature::_internal_v_list_double_uint64() const {
  return *kind_.v_list_double_uint64_;
}
inline ::feature_proto::ListDoubleUint64* Feature::release_v_list_double_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_uint64)
  if (has_v_list_double_uint64()) {
    clear_has_kind();
      ::feature_proto::ListDoubleUint64* temp = kind_.v_list_double_uint64_;
    kind_.v_list_double_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleUint64& Feature::v_list_double_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_uint64)
  return has_v_list_double_uint64()
      ? *kind_.v_list_double_uint64_
      : *reinterpret_cast< ::feature_proto::ListDoubleUint64*>(&::feature_proto::_ListDoubleUint64_default_instance_);
}
inline ::feature_proto::ListDoubleUint64* Feature::mutable_v_list_double_uint64() {
  if (!has_v_list_double_uint64()) {
    clear_kind();
    set_has_v_list_double_uint64();
    kind_.v_list_double_uint64_ = CreateMaybeMessage< ::feature_proto::ListDoubleUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_uint64)
  return kind_.v_list_double_uint64_;
}

// .feature_proto.ListDoubleSint32 v_list_double_sint32 = 217;
inline bool Feature::has_v_list_double_sint32() const {
  return kind_case() == kVListDoubleSint32;
}
inline void Feature::set_has_v_list_double_sint32() {
  _oneof_case_[0] = kVListDoubleSint32;
}
inline void Feature::clear_v_list_double_sint32() {
  if (has_v_list_double_sint32()) {
    delete kind_.v_list_double_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleSint32& Feature::_internal_v_list_double_sint32() const {
  return *kind_.v_list_double_sint32_;
}
inline ::feature_proto::ListDoubleSint32* Feature::release_v_list_double_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_sint32)
  if (has_v_list_double_sint32()) {
    clear_has_kind();
      ::feature_proto::ListDoubleSint32* temp = kind_.v_list_double_sint32_;
    kind_.v_list_double_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleSint32& Feature::v_list_double_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_sint32)
  return has_v_list_double_sint32()
      ? *kind_.v_list_double_sint32_
      : *reinterpret_cast< ::feature_proto::ListDoubleSint32*>(&::feature_proto::_ListDoubleSint32_default_instance_);
}
inline ::feature_proto::ListDoubleSint32* Feature::mutable_v_list_double_sint32() {
  if (!has_v_list_double_sint32()) {
    clear_kind();
    set_has_v_list_double_sint32();
    kind_.v_list_double_sint32_ = CreateMaybeMessage< ::feature_proto::ListDoubleSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_sint32)
  return kind_.v_list_double_sint32_;
}

// .feature_proto.ListDoubleSint64 v_list_double_sint64 = 218;
inline bool Feature::has_v_list_double_sint64() const {
  return kind_case() == kVListDoubleSint64;
}
inline void Feature::set_has_v_list_double_sint64() {
  _oneof_case_[0] = kVListDoubleSint64;
}
inline void Feature::clear_v_list_double_sint64() {
  if (has_v_list_double_sint64()) {
    delete kind_.v_list_double_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleSint64& Feature::_internal_v_list_double_sint64() const {
  return *kind_.v_list_double_sint64_;
}
inline ::feature_proto::ListDoubleSint64* Feature::release_v_list_double_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_sint64)
  if (has_v_list_double_sint64()) {
    clear_has_kind();
      ::feature_proto::ListDoubleSint64* temp = kind_.v_list_double_sint64_;
    kind_.v_list_double_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleSint64& Feature::v_list_double_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_sint64)
  return has_v_list_double_sint64()
      ? *kind_.v_list_double_sint64_
      : *reinterpret_cast< ::feature_proto::ListDoubleSint64*>(&::feature_proto::_ListDoubleSint64_default_instance_);
}
inline ::feature_proto::ListDoubleSint64* Feature::mutable_v_list_double_sint64() {
  if (!has_v_list_double_sint64()) {
    clear_kind();
    set_has_v_list_double_sint64();
    kind_.v_list_double_sint64_ = CreateMaybeMessage< ::feature_proto::ListDoubleSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_sint64)
  return kind_.v_list_double_sint64_;
}

// .feature_proto.ListDoubleFixed32 v_list_double_fixed32 = 219;
inline bool Feature::has_v_list_double_fixed32() const {
  return kind_case() == kVListDoubleFixed32;
}
inline void Feature::set_has_v_list_double_fixed32() {
  _oneof_case_[0] = kVListDoubleFixed32;
}
inline void Feature::clear_v_list_double_fixed32() {
  if (has_v_list_double_fixed32()) {
    delete kind_.v_list_double_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleFixed32& Feature::_internal_v_list_double_fixed32() const {
  return *kind_.v_list_double_fixed32_;
}
inline ::feature_proto::ListDoubleFixed32* Feature::release_v_list_double_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_fixed32)
  if (has_v_list_double_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListDoubleFixed32* temp = kind_.v_list_double_fixed32_;
    kind_.v_list_double_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleFixed32& Feature::v_list_double_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_fixed32)
  return has_v_list_double_fixed32()
      ? *kind_.v_list_double_fixed32_
      : *reinterpret_cast< ::feature_proto::ListDoubleFixed32*>(&::feature_proto::_ListDoubleFixed32_default_instance_);
}
inline ::feature_proto::ListDoubleFixed32* Feature::mutable_v_list_double_fixed32() {
  if (!has_v_list_double_fixed32()) {
    clear_kind();
    set_has_v_list_double_fixed32();
    kind_.v_list_double_fixed32_ = CreateMaybeMessage< ::feature_proto::ListDoubleFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_fixed32)
  return kind_.v_list_double_fixed32_;
}

// .feature_proto.ListDoubleFixed64 v_list_double_fixed64 = 220;
inline bool Feature::has_v_list_double_fixed64() const {
  return kind_case() == kVListDoubleFixed64;
}
inline void Feature::set_has_v_list_double_fixed64() {
  _oneof_case_[0] = kVListDoubleFixed64;
}
inline void Feature::clear_v_list_double_fixed64() {
  if (has_v_list_double_fixed64()) {
    delete kind_.v_list_double_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleFixed64& Feature::_internal_v_list_double_fixed64() const {
  return *kind_.v_list_double_fixed64_;
}
inline ::feature_proto::ListDoubleFixed64* Feature::release_v_list_double_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_fixed64)
  if (has_v_list_double_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListDoubleFixed64* temp = kind_.v_list_double_fixed64_;
    kind_.v_list_double_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleFixed64& Feature::v_list_double_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_fixed64)
  return has_v_list_double_fixed64()
      ? *kind_.v_list_double_fixed64_
      : *reinterpret_cast< ::feature_proto::ListDoubleFixed64*>(&::feature_proto::_ListDoubleFixed64_default_instance_);
}
inline ::feature_proto::ListDoubleFixed64* Feature::mutable_v_list_double_fixed64() {
  if (!has_v_list_double_fixed64()) {
    clear_kind();
    set_has_v_list_double_fixed64();
    kind_.v_list_double_fixed64_ = CreateMaybeMessage< ::feature_proto::ListDoubleFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_fixed64)
  return kind_.v_list_double_fixed64_;
}

// .feature_proto.ListDoubleSfixed32 v_list_double_sfixed32 = 221;
inline bool Feature::has_v_list_double_sfixed32() const {
  return kind_case() == kVListDoubleSfixed32;
}
inline void Feature::set_has_v_list_double_sfixed32() {
  _oneof_case_[0] = kVListDoubleSfixed32;
}
inline void Feature::clear_v_list_double_sfixed32() {
  if (has_v_list_double_sfixed32()) {
    delete kind_.v_list_double_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleSfixed32& Feature::_internal_v_list_double_sfixed32() const {
  return *kind_.v_list_double_sfixed32_;
}
inline ::feature_proto::ListDoubleSfixed32* Feature::release_v_list_double_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_sfixed32)
  if (has_v_list_double_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListDoubleSfixed32* temp = kind_.v_list_double_sfixed32_;
    kind_.v_list_double_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleSfixed32& Feature::v_list_double_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_sfixed32)
  return has_v_list_double_sfixed32()
      ? *kind_.v_list_double_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListDoubleSfixed32*>(&::feature_proto::_ListDoubleSfixed32_default_instance_);
}
inline ::feature_proto::ListDoubleSfixed32* Feature::mutable_v_list_double_sfixed32() {
  if (!has_v_list_double_sfixed32()) {
    clear_kind();
    set_has_v_list_double_sfixed32();
    kind_.v_list_double_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListDoubleSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_sfixed32)
  return kind_.v_list_double_sfixed32_;
}

// .feature_proto.ListDoubleSfixed64 v_list_double_sfixed64 = 222;
inline bool Feature::has_v_list_double_sfixed64() const {
  return kind_case() == kVListDoubleSfixed64;
}
inline void Feature::set_has_v_list_double_sfixed64() {
  _oneof_case_[0] = kVListDoubleSfixed64;
}
inline void Feature::clear_v_list_double_sfixed64() {
  if (has_v_list_double_sfixed64()) {
    delete kind_.v_list_double_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleSfixed64& Feature::_internal_v_list_double_sfixed64() const {
  return *kind_.v_list_double_sfixed64_;
}
inline ::feature_proto::ListDoubleSfixed64* Feature::release_v_list_double_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_sfixed64)
  if (has_v_list_double_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListDoubleSfixed64* temp = kind_.v_list_double_sfixed64_;
    kind_.v_list_double_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleSfixed64& Feature::v_list_double_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_sfixed64)
  return has_v_list_double_sfixed64()
      ? *kind_.v_list_double_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListDoubleSfixed64*>(&::feature_proto::_ListDoubleSfixed64_default_instance_);
}
inline ::feature_proto::ListDoubleSfixed64* Feature::mutable_v_list_double_sfixed64() {
  if (!has_v_list_double_sfixed64()) {
    clear_kind();
    set_has_v_list_double_sfixed64();
    kind_.v_list_double_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListDoubleSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_sfixed64)
  return kind_.v_list_double_sfixed64_;
}

// .feature_proto.ListDoubleBool v_list_double_bool = 223;
inline bool Feature::has_v_list_double_bool() const {
  return kind_case() == kVListDoubleBool;
}
inline void Feature::set_has_v_list_double_bool() {
  _oneof_case_[0] = kVListDoubleBool;
}
inline void Feature::clear_v_list_double_bool() {
  if (has_v_list_double_bool()) {
    delete kind_.v_list_double_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleBool& Feature::_internal_v_list_double_bool() const {
  return *kind_.v_list_double_bool_;
}
inline ::feature_proto::ListDoubleBool* Feature::release_v_list_double_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_bool)
  if (has_v_list_double_bool()) {
    clear_has_kind();
      ::feature_proto::ListDoubleBool* temp = kind_.v_list_double_bool_;
    kind_.v_list_double_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleBool& Feature::v_list_double_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_bool)
  return has_v_list_double_bool()
      ? *kind_.v_list_double_bool_
      : *reinterpret_cast< ::feature_proto::ListDoubleBool*>(&::feature_proto::_ListDoubleBool_default_instance_);
}
inline ::feature_proto::ListDoubleBool* Feature::mutable_v_list_double_bool() {
  if (!has_v_list_double_bool()) {
    clear_kind();
    set_has_v_list_double_bool();
    kind_.v_list_double_bool_ = CreateMaybeMessage< ::feature_proto::ListDoubleBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_bool)
  return kind_.v_list_double_bool_;
}

// .feature_proto.ListDoubleString v_list_double_string = 224;
inline bool Feature::has_v_list_double_string() const {
  return kind_case() == kVListDoubleString;
}
inline void Feature::set_has_v_list_double_string() {
  _oneof_case_[0] = kVListDoubleString;
}
inline void Feature::clear_v_list_double_string() {
  if (has_v_list_double_string()) {
    delete kind_.v_list_double_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleString& Feature::_internal_v_list_double_string() const {
  return *kind_.v_list_double_string_;
}
inline ::feature_proto::ListDoubleString* Feature::release_v_list_double_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_string)
  if (has_v_list_double_string()) {
    clear_has_kind();
      ::feature_proto::ListDoubleString* temp = kind_.v_list_double_string_;
    kind_.v_list_double_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleString& Feature::v_list_double_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_string)
  return has_v_list_double_string()
      ? *kind_.v_list_double_string_
      : *reinterpret_cast< ::feature_proto::ListDoubleString*>(&::feature_proto::_ListDoubleString_default_instance_);
}
inline ::feature_proto::ListDoubleString* Feature::mutable_v_list_double_string() {
  if (!has_v_list_double_string()) {
    clear_kind();
    set_has_v_list_double_string();
    kind_.v_list_double_string_ = CreateMaybeMessage< ::feature_proto::ListDoubleString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_string)
  return kind_.v_list_double_string_;
}

// .feature_proto.ListDoubleBytes v_list_double_bytes = 225;
inline bool Feature::has_v_list_double_bytes() const {
  return kind_case() == kVListDoubleBytes;
}
inline void Feature::set_has_v_list_double_bytes() {
  _oneof_case_[0] = kVListDoubleBytes;
}
inline void Feature::clear_v_list_double_bytes() {
  if (has_v_list_double_bytes()) {
    delete kind_.v_list_double_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListDoubleBytes& Feature::_internal_v_list_double_bytes() const {
  return *kind_.v_list_double_bytes_;
}
inline ::feature_proto::ListDoubleBytes* Feature::release_v_list_double_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_double_bytes)
  if (has_v_list_double_bytes()) {
    clear_has_kind();
      ::feature_proto::ListDoubleBytes* temp = kind_.v_list_double_bytes_;
    kind_.v_list_double_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListDoubleBytes& Feature::v_list_double_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_double_bytes)
  return has_v_list_double_bytes()
      ? *kind_.v_list_double_bytes_
      : *reinterpret_cast< ::feature_proto::ListDoubleBytes*>(&::feature_proto::_ListDoubleBytes_default_instance_);
}
inline ::feature_proto::ListDoubleBytes* Feature::mutable_v_list_double_bytes() {
  if (!has_v_list_double_bytes()) {
    clear_kind();
    set_has_v_list_double_bytes();
    kind_.v_list_double_bytes_ = CreateMaybeMessage< ::feature_proto::ListDoubleBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_double_bytes)
  return kind_.v_list_double_bytes_;
}

// .feature_proto.ListFloatDouble v_list_float_double = 226;
inline bool Feature::has_v_list_float_double() const {
  return kind_case() == kVListFloatDouble;
}
inline void Feature::set_has_v_list_float_double() {
  _oneof_case_[0] = kVListFloatDouble;
}
inline void Feature::clear_v_list_float_double() {
  if (has_v_list_float_double()) {
    delete kind_.v_list_float_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatDouble& Feature::_internal_v_list_float_double() const {
  return *kind_.v_list_float_double_;
}
inline ::feature_proto::ListFloatDouble* Feature::release_v_list_float_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_double)
  if (has_v_list_float_double()) {
    clear_has_kind();
      ::feature_proto::ListFloatDouble* temp = kind_.v_list_float_double_;
    kind_.v_list_float_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatDouble& Feature::v_list_float_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_double)
  return has_v_list_float_double()
      ? *kind_.v_list_float_double_
      : *reinterpret_cast< ::feature_proto::ListFloatDouble*>(&::feature_proto::_ListFloatDouble_default_instance_);
}
inline ::feature_proto::ListFloatDouble* Feature::mutable_v_list_float_double() {
  if (!has_v_list_float_double()) {
    clear_kind();
    set_has_v_list_float_double();
    kind_.v_list_float_double_ = CreateMaybeMessage< ::feature_proto::ListFloatDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_double)
  return kind_.v_list_float_double_;
}

// .feature_proto.ListFloatFloat v_list_float_float = 227;
inline bool Feature::has_v_list_float_float() const {
  return kind_case() == kVListFloatFloat;
}
inline void Feature::set_has_v_list_float_float() {
  _oneof_case_[0] = kVListFloatFloat;
}
inline void Feature::clear_v_list_float_float() {
  if (has_v_list_float_float()) {
    delete kind_.v_list_float_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatFloat& Feature::_internal_v_list_float_float() const {
  return *kind_.v_list_float_float_;
}
inline ::feature_proto::ListFloatFloat* Feature::release_v_list_float_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_float)
  if (has_v_list_float_float()) {
    clear_has_kind();
      ::feature_proto::ListFloatFloat* temp = kind_.v_list_float_float_;
    kind_.v_list_float_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatFloat& Feature::v_list_float_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_float)
  return has_v_list_float_float()
      ? *kind_.v_list_float_float_
      : *reinterpret_cast< ::feature_proto::ListFloatFloat*>(&::feature_proto::_ListFloatFloat_default_instance_);
}
inline ::feature_proto::ListFloatFloat* Feature::mutable_v_list_float_float() {
  if (!has_v_list_float_float()) {
    clear_kind();
    set_has_v_list_float_float();
    kind_.v_list_float_float_ = CreateMaybeMessage< ::feature_proto::ListFloatFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_float)
  return kind_.v_list_float_float_;
}

// .feature_proto.ListFloatInt32 v_list_float_int32 = 228;
inline bool Feature::has_v_list_float_int32() const {
  return kind_case() == kVListFloatInt32;
}
inline void Feature::set_has_v_list_float_int32() {
  _oneof_case_[0] = kVListFloatInt32;
}
inline void Feature::clear_v_list_float_int32() {
  if (has_v_list_float_int32()) {
    delete kind_.v_list_float_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatInt32& Feature::_internal_v_list_float_int32() const {
  return *kind_.v_list_float_int32_;
}
inline ::feature_proto::ListFloatInt32* Feature::release_v_list_float_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_int32)
  if (has_v_list_float_int32()) {
    clear_has_kind();
      ::feature_proto::ListFloatInt32* temp = kind_.v_list_float_int32_;
    kind_.v_list_float_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatInt32& Feature::v_list_float_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_int32)
  return has_v_list_float_int32()
      ? *kind_.v_list_float_int32_
      : *reinterpret_cast< ::feature_proto::ListFloatInt32*>(&::feature_proto::_ListFloatInt32_default_instance_);
}
inline ::feature_proto::ListFloatInt32* Feature::mutable_v_list_float_int32() {
  if (!has_v_list_float_int32()) {
    clear_kind();
    set_has_v_list_float_int32();
    kind_.v_list_float_int32_ = CreateMaybeMessage< ::feature_proto::ListFloatInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_int32)
  return kind_.v_list_float_int32_;
}

// .feature_proto.ListFloatInt64 v_list_float_int64 = 229;
inline bool Feature::has_v_list_float_int64() const {
  return kind_case() == kVListFloatInt64;
}
inline void Feature::set_has_v_list_float_int64() {
  _oneof_case_[0] = kVListFloatInt64;
}
inline void Feature::clear_v_list_float_int64() {
  if (has_v_list_float_int64()) {
    delete kind_.v_list_float_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatInt64& Feature::_internal_v_list_float_int64() const {
  return *kind_.v_list_float_int64_;
}
inline ::feature_proto::ListFloatInt64* Feature::release_v_list_float_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_int64)
  if (has_v_list_float_int64()) {
    clear_has_kind();
      ::feature_proto::ListFloatInt64* temp = kind_.v_list_float_int64_;
    kind_.v_list_float_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatInt64& Feature::v_list_float_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_int64)
  return has_v_list_float_int64()
      ? *kind_.v_list_float_int64_
      : *reinterpret_cast< ::feature_proto::ListFloatInt64*>(&::feature_proto::_ListFloatInt64_default_instance_);
}
inline ::feature_proto::ListFloatInt64* Feature::mutable_v_list_float_int64() {
  if (!has_v_list_float_int64()) {
    clear_kind();
    set_has_v_list_float_int64();
    kind_.v_list_float_int64_ = CreateMaybeMessage< ::feature_proto::ListFloatInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_int64)
  return kind_.v_list_float_int64_;
}

// .feature_proto.ListFloatUint32 v_list_float_uint32 = 230;
inline bool Feature::has_v_list_float_uint32() const {
  return kind_case() == kVListFloatUint32;
}
inline void Feature::set_has_v_list_float_uint32() {
  _oneof_case_[0] = kVListFloatUint32;
}
inline void Feature::clear_v_list_float_uint32() {
  if (has_v_list_float_uint32()) {
    delete kind_.v_list_float_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatUint32& Feature::_internal_v_list_float_uint32() const {
  return *kind_.v_list_float_uint32_;
}
inline ::feature_proto::ListFloatUint32* Feature::release_v_list_float_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_uint32)
  if (has_v_list_float_uint32()) {
    clear_has_kind();
      ::feature_proto::ListFloatUint32* temp = kind_.v_list_float_uint32_;
    kind_.v_list_float_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatUint32& Feature::v_list_float_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_uint32)
  return has_v_list_float_uint32()
      ? *kind_.v_list_float_uint32_
      : *reinterpret_cast< ::feature_proto::ListFloatUint32*>(&::feature_proto::_ListFloatUint32_default_instance_);
}
inline ::feature_proto::ListFloatUint32* Feature::mutable_v_list_float_uint32() {
  if (!has_v_list_float_uint32()) {
    clear_kind();
    set_has_v_list_float_uint32();
    kind_.v_list_float_uint32_ = CreateMaybeMessage< ::feature_proto::ListFloatUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_uint32)
  return kind_.v_list_float_uint32_;
}

// .feature_proto.ListFloatUint64 v_list_float_uint64 = 231;
inline bool Feature::has_v_list_float_uint64() const {
  return kind_case() == kVListFloatUint64;
}
inline void Feature::set_has_v_list_float_uint64() {
  _oneof_case_[0] = kVListFloatUint64;
}
inline void Feature::clear_v_list_float_uint64() {
  if (has_v_list_float_uint64()) {
    delete kind_.v_list_float_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatUint64& Feature::_internal_v_list_float_uint64() const {
  return *kind_.v_list_float_uint64_;
}
inline ::feature_proto::ListFloatUint64* Feature::release_v_list_float_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_uint64)
  if (has_v_list_float_uint64()) {
    clear_has_kind();
      ::feature_proto::ListFloatUint64* temp = kind_.v_list_float_uint64_;
    kind_.v_list_float_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatUint64& Feature::v_list_float_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_uint64)
  return has_v_list_float_uint64()
      ? *kind_.v_list_float_uint64_
      : *reinterpret_cast< ::feature_proto::ListFloatUint64*>(&::feature_proto::_ListFloatUint64_default_instance_);
}
inline ::feature_proto::ListFloatUint64* Feature::mutable_v_list_float_uint64() {
  if (!has_v_list_float_uint64()) {
    clear_kind();
    set_has_v_list_float_uint64();
    kind_.v_list_float_uint64_ = CreateMaybeMessage< ::feature_proto::ListFloatUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_uint64)
  return kind_.v_list_float_uint64_;
}

// .feature_proto.ListFloatSint32 v_list_float_sint32 = 232;
inline bool Feature::has_v_list_float_sint32() const {
  return kind_case() == kVListFloatSint32;
}
inline void Feature::set_has_v_list_float_sint32() {
  _oneof_case_[0] = kVListFloatSint32;
}
inline void Feature::clear_v_list_float_sint32() {
  if (has_v_list_float_sint32()) {
    delete kind_.v_list_float_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatSint32& Feature::_internal_v_list_float_sint32() const {
  return *kind_.v_list_float_sint32_;
}
inline ::feature_proto::ListFloatSint32* Feature::release_v_list_float_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_sint32)
  if (has_v_list_float_sint32()) {
    clear_has_kind();
      ::feature_proto::ListFloatSint32* temp = kind_.v_list_float_sint32_;
    kind_.v_list_float_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatSint32& Feature::v_list_float_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_sint32)
  return has_v_list_float_sint32()
      ? *kind_.v_list_float_sint32_
      : *reinterpret_cast< ::feature_proto::ListFloatSint32*>(&::feature_proto::_ListFloatSint32_default_instance_);
}
inline ::feature_proto::ListFloatSint32* Feature::mutable_v_list_float_sint32() {
  if (!has_v_list_float_sint32()) {
    clear_kind();
    set_has_v_list_float_sint32();
    kind_.v_list_float_sint32_ = CreateMaybeMessage< ::feature_proto::ListFloatSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_sint32)
  return kind_.v_list_float_sint32_;
}

// .feature_proto.ListFloatSint64 v_list_float_sint64 = 233;
inline bool Feature::has_v_list_float_sint64() const {
  return kind_case() == kVListFloatSint64;
}
inline void Feature::set_has_v_list_float_sint64() {
  _oneof_case_[0] = kVListFloatSint64;
}
inline void Feature::clear_v_list_float_sint64() {
  if (has_v_list_float_sint64()) {
    delete kind_.v_list_float_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatSint64& Feature::_internal_v_list_float_sint64() const {
  return *kind_.v_list_float_sint64_;
}
inline ::feature_proto::ListFloatSint64* Feature::release_v_list_float_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_sint64)
  if (has_v_list_float_sint64()) {
    clear_has_kind();
      ::feature_proto::ListFloatSint64* temp = kind_.v_list_float_sint64_;
    kind_.v_list_float_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatSint64& Feature::v_list_float_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_sint64)
  return has_v_list_float_sint64()
      ? *kind_.v_list_float_sint64_
      : *reinterpret_cast< ::feature_proto::ListFloatSint64*>(&::feature_proto::_ListFloatSint64_default_instance_);
}
inline ::feature_proto::ListFloatSint64* Feature::mutable_v_list_float_sint64() {
  if (!has_v_list_float_sint64()) {
    clear_kind();
    set_has_v_list_float_sint64();
    kind_.v_list_float_sint64_ = CreateMaybeMessage< ::feature_proto::ListFloatSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_sint64)
  return kind_.v_list_float_sint64_;
}

// .feature_proto.ListFloatFixed32 v_list_float_fixed32 = 234;
inline bool Feature::has_v_list_float_fixed32() const {
  return kind_case() == kVListFloatFixed32;
}
inline void Feature::set_has_v_list_float_fixed32() {
  _oneof_case_[0] = kVListFloatFixed32;
}
inline void Feature::clear_v_list_float_fixed32() {
  if (has_v_list_float_fixed32()) {
    delete kind_.v_list_float_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatFixed32& Feature::_internal_v_list_float_fixed32() const {
  return *kind_.v_list_float_fixed32_;
}
inline ::feature_proto::ListFloatFixed32* Feature::release_v_list_float_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_fixed32)
  if (has_v_list_float_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListFloatFixed32* temp = kind_.v_list_float_fixed32_;
    kind_.v_list_float_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatFixed32& Feature::v_list_float_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_fixed32)
  return has_v_list_float_fixed32()
      ? *kind_.v_list_float_fixed32_
      : *reinterpret_cast< ::feature_proto::ListFloatFixed32*>(&::feature_proto::_ListFloatFixed32_default_instance_);
}
inline ::feature_proto::ListFloatFixed32* Feature::mutable_v_list_float_fixed32() {
  if (!has_v_list_float_fixed32()) {
    clear_kind();
    set_has_v_list_float_fixed32();
    kind_.v_list_float_fixed32_ = CreateMaybeMessage< ::feature_proto::ListFloatFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_fixed32)
  return kind_.v_list_float_fixed32_;
}

// .feature_proto.ListFloatFixed64 v_list_float_fixed64 = 235;
inline bool Feature::has_v_list_float_fixed64() const {
  return kind_case() == kVListFloatFixed64;
}
inline void Feature::set_has_v_list_float_fixed64() {
  _oneof_case_[0] = kVListFloatFixed64;
}
inline void Feature::clear_v_list_float_fixed64() {
  if (has_v_list_float_fixed64()) {
    delete kind_.v_list_float_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatFixed64& Feature::_internal_v_list_float_fixed64() const {
  return *kind_.v_list_float_fixed64_;
}
inline ::feature_proto::ListFloatFixed64* Feature::release_v_list_float_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_fixed64)
  if (has_v_list_float_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListFloatFixed64* temp = kind_.v_list_float_fixed64_;
    kind_.v_list_float_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatFixed64& Feature::v_list_float_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_fixed64)
  return has_v_list_float_fixed64()
      ? *kind_.v_list_float_fixed64_
      : *reinterpret_cast< ::feature_proto::ListFloatFixed64*>(&::feature_proto::_ListFloatFixed64_default_instance_);
}
inline ::feature_proto::ListFloatFixed64* Feature::mutable_v_list_float_fixed64() {
  if (!has_v_list_float_fixed64()) {
    clear_kind();
    set_has_v_list_float_fixed64();
    kind_.v_list_float_fixed64_ = CreateMaybeMessage< ::feature_proto::ListFloatFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_fixed64)
  return kind_.v_list_float_fixed64_;
}

// .feature_proto.ListFloatSfixed32 v_list_float_sfixed32 = 236;
inline bool Feature::has_v_list_float_sfixed32() const {
  return kind_case() == kVListFloatSfixed32;
}
inline void Feature::set_has_v_list_float_sfixed32() {
  _oneof_case_[0] = kVListFloatSfixed32;
}
inline void Feature::clear_v_list_float_sfixed32() {
  if (has_v_list_float_sfixed32()) {
    delete kind_.v_list_float_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatSfixed32& Feature::_internal_v_list_float_sfixed32() const {
  return *kind_.v_list_float_sfixed32_;
}
inline ::feature_proto::ListFloatSfixed32* Feature::release_v_list_float_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_sfixed32)
  if (has_v_list_float_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListFloatSfixed32* temp = kind_.v_list_float_sfixed32_;
    kind_.v_list_float_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatSfixed32& Feature::v_list_float_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_sfixed32)
  return has_v_list_float_sfixed32()
      ? *kind_.v_list_float_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListFloatSfixed32*>(&::feature_proto::_ListFloatSfixed32_default_instance_);
}
inline ::feature_proto::ListFloatSfixed32* Feature::mutable_v_list_float_sfixed32() {
  if (!has_v_list_float_sfixed32()) {
    clear_kind();
    set_has_v_list_float_sfixed32();
    kind_.v_list_float_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListFloatSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_sfixed32)
  return kind_.v_list_float_sfixed32_;
}

// .feature_proto.ListFloatSfixed64 v_list_float_sfixed64 = 237;
inline bool Feature::has_v_list_float_sfixed64() const {
  return kind_case() == kVListFloatSfixed64;
}
inline void Feature::set_has_v_list_float_sfixed64() {
  _oneof_case_[0] = kVListFloatSfixed64;
}
inline void Feature::clear_v_list_float_sfixed64() {
  if (has_v_list_float_sfixed64()) {
    delete kind_.v_list_float_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatSfixed64& Feature::_internal_v_list_float_sfixed64() const {
  return *kind_.v_list_float_sfixed64_;
}
inline ::feature_proto::ListFloatSfixed64* Feature::release_v_list_float_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_sfixed64)
  if (has_v_list_float_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListFloatSfixed64* temp = kind_.v_list_float_sfixed64_;
    kind_.v_list_float_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatSfixed64& Feature::v_list_float_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_sfixed64)
  return has_v_list_float_sfixed64()
      ? *kind_.v_list_float_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListFloatSfixed64*>(&::feature_proto::_ListFloatSfixed64_default_instance_);
}
inline ::feature_proto::ListFloatSfixed64* Feature::mutable_v_list_float_sfixed64() {
  if (!has_v_list_float_sfixed64()) {
    clear_kind();
    set_has_v_list_float_sfixed64();
    kind_.v_list_float_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListFloatSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_sfixed64)
  return kind_.v_list_float_sfixed64_;
}

// .feature_proto.ListFloatBool v_list_float_bool = 238;
inline bool Feature::has_v_list_float_bool() const {
  return kind_case() == kVListFloatBool;
}
inline void Feature::set_has_v_list_float_bool() {
  _oneof_case_[0] = kVListFloatBool;
}
inline void Feature::clear_v_list_float_bool() {
  if (has_v_list_float_bool()) {
    delete kind_.v_list_float_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatBool& Feature::_internal_v_list_float_bool() const {
  return *kind_.v_list_float_bool_;
}
inline ::feature_proto::ListFloatBool* Feature::release_v_list_float_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_bool)
  if (has_v_list_float_bool()) {
    clear_has_kind();
      ::feature_proto::ListFloatBool* temp = kind_.v_list_float_bool_;
    kind_.v_list_float_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatBool& Feature::v_list_float_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_bool)
  return has_v_list_float_bool()
      ? *kind_.v_list_float_bool_
      : *reinterpret_cast< ::feature_proto::ListFloatBool*>(&::feature_proto::_ListFloatBool_default_instance_);
}
inline ::feature_proto::ListFloatBool* Feature::mutable_v_list_float_bool() {
  if (!has_v_list_float_bool()) {
    clear_kind();
    set_has_v_list_float_bool();
    kind_.v_list_float_bool_ = CreateMaybeMessage< ::feature_proto::ListFloatBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_bool)
  return kind_.v_list_float_bool_;
}

// .feature_proto.ListFloatString v_list_float_string = 239;
inline bool Feature::has_v_list_float_string() const {
  return kind_case() == kVListFloatString;
}
inline void Feature::set_has_v_list_float_string() {
  _oneof_case_[0] = kVListFloatString;
}
inline void Feature::clear_v_list_float_string() {
  if (has_v_list_float_string()) {
    delete kind_.v_list_float_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatString& Feature::_internal_v_list_float_string() const {
  return *kind_.v_list_float_string_;
}
inline ::feature_proto::ListFloatString* Feature::release_v_list_float_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_string)
  if (has_v_list_float_string()) {
    clear_has_kind();
      ::feature_proto::ListFloatString* temp = kind_.v_list_float_string_;
    kind_.v_list_float_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatString& Feature::v_list_float_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_string)
  return has_v_list_float_string()
      ? *kind_.v_list_float_string_
      : *reinterpret_cast< ::feature_proto::ListFloatString*>(&::feature_proto::_ListFloatString_default_instance_);
}
inline ::feature_proto::ListFloatString* Feature::mutable_v_list_float_string() {
  if (!has_v_list_float_string()) {
    clear_kind();
    set_has_v_list_float_string();
    kind_.v_list_float_string_ = CreateMaybeMessage< ::feature_proto::ListFloatString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_string)
  return kind_.v_list_float_string_;
}

// .feature_proto.ListFloatBytes v_list_float_bytes = 240;
inline bool Feature::has_v_list_float_bytes() const {
  return kind_case() == kVListFloatBytes;
}
inline void Feature::set_has_v_list_float_bytes() {
  _oneof_case_[0] = kVListFloatBytes;
}
inline void Feature::clear_v_list_float_bytes() {
  if (has_v_list_float_bytes()) {
    delete kind_.v_list_float_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListFloatBytes& Feature::_internal_v_list_float_bytes() const {
  return *kind_.v_list_float_bytes_;
}
inline ::feature_proto::ListFloatBytes* Feature::release_v_list_float_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_float_bytes)
  if (has_v_list_float_bytes()) {
    clear_has_kind();
      ::feature_proto::ListFloatBytes* temp = kind_.v_list_float_bytes_;
    kind_.v_list_float_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListFloatBytes& Feature::v_list_float_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_float_bytes)
  return has_v_list_float_bytes()
      ? *kind_.v_list_float_bytes_
      : *reinterpret_cast< ::feature_proto::ListFloatBytes*>(&::feature_proto::_ListFloatBytes_default_instance_);
}
inline ::feature_proto::ListFloatBytes* Feature::mutable_v_list_float_bytes() {
  if (!has_v_list_float_bytes()) {
    clear_kind();
    set_has_v_list_float_bytes();
    kind_.v_list_float_bytes_ = CreateMaybeMessage< ::feature_proto::ListFloatBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_float_bytes)
  return kind_.v_list_float_bytes_;
}

// .feature_proto.ListBoolDouble v_list_bool_double = 241;
inline bool Feature::has_v_list_bool_double() const {
  return kind_case() == kVListBoolDouble;
}
inline void Feature::set_has_v_list_bool_double() {
  _oneof_case_[0] = kVListBoolDouble;
}
inline void Feature::clear_v_list_bool_double() {
  if (has_v_list_bool_double()) {
    delete kind_.v_list_bool_double_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolDouble& Feature::_internal_v_list_bool_double() const {
  return *kind_.v_list_bool_double_;
}
inline ::feature_proto::ListBoolDouble* Feature::release_v_list_bool_double() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_double)
  if (has_v_list_bool_double()) {
    clear_has_kind();
      ::feature_proto::ListBoolDouble* temp = kind_.v_list_bool_double_;
    kind_.v_list_bool_double_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolDouble& Feature::v_list_bool_double() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_double)
  return has_v_list_bool_double()
      ? *kind_.v_list_bool_double_
      : *reinterpret_cast< ::feature_proto::ListBoolDouble*>(&::feature_proto::_ListBoolDouble_default_instance_);
}
inline ::feature_proto::ListBoolDouble* Feature::mutable_v_list_bool_double() {
  if (!has_v_list_bool_double()) {
    clear_kind();
    set_has_v_list_bool_double();
    kind_.v_list_bool_double_ = CreateMaybeMessage< ::feature_proto::ListBoolDouble >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_double)
  return kind_.v_list_bool_double_;
}

// .feature_proto.ListBoolFloat v_list_bool_float = 242;
inline bool Feature::has_v_list_bool_float() const {
  return kind_case() == kVListBoolFloat;
}
inline void Feature::set_has_v_list_bool_float() {
  _oneof_case_[0] = kVListBoolFloat;
}
inline void Feature::clear_v_list_bool_float() {
  if (has_v_list_bool_float()) {
    delete kind_.v_list_bool_float_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolFloat& Feature::_internal_v_list_bool_float() const {
  return *kind_.v_list_bool_float_;
}
inline ::feature_proto::ListBoolFloat* Feature::release_v_list_bool_float() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_float)
  if (has_v_list_bool_float()) {
    clear_has_kind();
      ::feature_proto::ListBoolFloat* temp = kind_.v_list_bool_float_;
    kind_.v_list_bool_float_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolFloat& Feature::v_list_bool_float() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_float)
  return has_v_list_bool_float()
      ? *kind_.v_list_bool_float_
      : *reinterpret_cast< ::feature_proto::ListBoolFloat*>(&::feature_proto::_ListBoolFloat_default_instance_);
}
inline ::feature_proto::ListBoolFloat* Feature::mutable_v_list_bool_float() {
  if (!has_v_list_bool_float()) {
    clear_kind();
    set_has_v_list_bool_float();
    kind_.v_list_bool_float_ = CreateMaybeMessage< ::feature_proto::ListBoolFloat >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_float)
  return kind_.v_list_bool_float_;
}

// .feature_proto.ListBoolInt32 v_list_bool_int32 = 243;
inline bool Feature::has_v_list_bool_int32() const {
  return kind_case() == kVListBoolInt32;
}
inline void Feature::set_has_v_list_bool_int32() {
  _oneof_case_[0] = kVListBoolInt32;
}
inline void Feature::clear_v_list_bool_int32() {
  if (has_v_list_bool_int32()) {
    delete kind_.v_list_bool_int32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolInt32& Feature::_internal_v_list_bool_int32() const {
  return *kind_.v_list_bool_int32_;
}
inline ::feature_proto::ListBoolInt32* Feature::release_v_list_bool_int32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_int32)
  if (has_v_list_bool_int32()) {
    clear_has_kind();
      ::feature_proto::ListBoolInt32* temp = kind_.v_list_bool_int32_;
    kind_.v_list_bool_int32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolInt32& Feature::v_list_bool_int32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_int32)
  return has_v_list_bool_int32()
      ? *kind_.v_list_bool_int32_
      : *reinterpret_cast< ::feature_proto::ListBoolInt32*>(&::feature_proto::_ListBoolInt32_default_instance_);
}
inline ::feature_proto::ListBoolInt32* Feature::mutable_v_list_bool_int32() {
  if (!has_v_list_bool_int32()) {
    clear_kind();
    set_has_v_list_bool_int32();
    kind_.v_list_bool_int32_ = CreateMaybeMessage< ::feature_proto::ListBoolInt32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_int32)
  return kind_.v_list_bool_int32_;
}

// .feature_proto.ListBoolInt64 v_list_bool_int64 = 244;
inline bool Feature::has_v_list_bool_int64() const {
  return kind_case() == kVListBoolInt64;
}
inline void Feature::set_has_v_list_bool_int64() {
  _oneof_case_[0] = kVListBoolInt64;
}
inline void Feature::clear_v_list_bool_int64() {
  if (has_v_list_bool_int64()) {
    delete kind_.v_list_bool_int64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolInt64& Feature::_internal_v_list_bool_int64() const {
  return *kind_.v_list_bool_int64_;
}
inline ::feature_proto::ListBoolInt64* Feature::release_v_list_bool_int64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_int64)
  if (has_v_list_bool_int64()) {
    clear_has_kind();
      ::feature_proto::ListBoolInt64* temp = kind_.v_list_bool_int64_;
    kind_.v_list_bool_int64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolInt64& Feature::v_list_bool_int64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_int64)
  return has_v_list_bool_int64()
      ? *kind_.v_list_bool_int64_
      : *reinterpret_cast< ::feature_proto::ListBoolInt64*>(&::feature_proto::_ListBoolInt64_default_instance_);
}
inline ::feature_proto::ListBoolInt64* Feature::mutable_v_list_bool_int64() {
  if (!has_v_list_bool_int64()) {
    clear_kind();
    set_has_v_list_bool_int64();
    kind_.v_list_bool_int64_ = CreateMaybeMessage< ::feature_proto::ListBoolInt64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_int64)
  return kind_.v_list_bool_int64_;
}

// .feature_proto.ListBoolUint32 v_list_bool_uint32 = 245;
inline bool Feature::has_v_list_bool_uint32() const {
  return kind_case() == kVListBoolUint32;
}
inline void Feature::set_has_v_list_bool_uint32() {
  _oneof_case_[0] = kVListBoolUint32;
}
inline void Feature::clear_v_list_bool_uint32() {
  if (has_v_list_bool_uint32()) {
    delete kind_.v_list_bool_uint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolUint32& Feature::_internal_v_list_bool_uint32() const {
  return *kind_.v_list_bool_uint32_;
}
inline ::feature_proto::ListBoolUint32* Feature::release_v_list_bool_uint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_uint32)
  if (has_v_list_bool_uint32()) {
    clear_has_kind();
      ::feature_proto::ListBoolUint32* temp = kind_.v_list_bool_uint32_;
    kind_.v_list_bool_uint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolUint32& Feature::v_list_bool_uint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_uint32)
  return has_v_list_bool_uint32()
      ? *kind_.v_list_bool_uint32_
      : *reinterpret_cast< ::feature_proto::ListBoolUint32*>(&::feature_proto::_ListBoolUint32_default_instance_);
}
inline ::feature_proto::ListBoolUint32* Feature::mutable_v_list_bool_uint32() {
  if (!has_v_list_bool_uint32()) {
    clear_kind();
    set_has_v_list_bool_uint32();
    kind_.v_list_bool_uint32_ = CreateMaybeMessage< ::feature_proto::ListBoolUint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_uint32)
  return kind_.v_list_bool_uint32_;
}

// .feature_proto.ListBoolUint64 v_list_bool_uint64 = 246;
inline bool Feature::has_v_list_bool_uint64() const {
  return kind_case() == kVListBoolUint64;
}
inline void Feature::set_has_v_list_bool_uint64() {
  _oneof_case_[0] = kVListBoolUint64;
}
inline void Feature::clear_v_list_bool_uint64() {
  if (has_v_list_bool_uint64()) {
    delete kind_.v_list_bool_uint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolUint64& Feature::_internal_v_list_bool_uint64() const {
  return *kind_.v_list_bool_uint64_;
}
inline ::feature_proto::ListBoolUint64* Feature::release_v_list_bool_uint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_uint64)
  if (has_v_list_bool_uint64()) {
    clear_has_kind();
      ::feature_proto::ListBoolUint64* temp = kind_.v_list_bool_uint64_;
    kind_.v_list_bool_uint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolUint64& Feature::v_list_bool_uint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_uint64)
  return has_v_list_bool_uint64()
      ? *kind_.v_list_bool_uint64_
      : *reinterpret_cast< ::feature_proto::ListBoolUint64*>(&::feature_proto::_ListBoolUint64_default_instance_);
}
inline ::feature_proto::ListBoolUint64* Feature::mutable_v_list_bool_uint64() {
  if (!has_v_list_bool_uint64()) {
    clear_kind();
    set_has_v_list_bool_uint64();
    kind_.v_list_bool_uint64_ = CreateMaybeMessage< ::feature_proto::ListBoolUint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_uint64)
  return kind_.v_list_bool_uint64_;
}

// .feature_proto.ListBoolSint32 v_list_bool_sint32 = 247;
inline bool Feature::has_v_list_bool_sint32() const {
  return kind_case() == kVListBoolSint32;
}
inline void Feature::set_has_v_list_bool_sint32() {
  _oneof_case_[0] = kVListBoolSint32;
}
inline void Feature::clear_v_list_bool_sint32() {
  if (has_v_list_bool_sint32()) {
    delete kind_.v_list_bool_sint32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolSint32& Feature::_internal_v_list_bool_sint32() const {
  return *kind_.v_list_bool_sint32_;
}
inline ::feature_proto::ListBoolSint32* Feature::release_v_list_bool_sint32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_sint32)
  if (has_v_list_bool_sint32()) {
    clear_has_kind();
      ::feature_proto::ListBoolSint32* temp = kind_.v_list_bool_sint32_;
    kind_.v_list_bool_sint32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolSint32& Feature::v_list_bool_sint32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_sint32)
  return has_v_list_bool_sint32()
      ? *kind_.v_list_bool_sint32_
      : *reinterpret_cast< ::feature_proto::ListBoolSint32*>(&::feature_proto::_ListBoolSint32_default_instance_);
}
inline ::feature_proto::ListBoolSint32* Feature::mutable_v_list_bool_sint32() {
  if (!has_v_list_bool_sint32()) {
    clear_kind();
    set_has_v_list_bool_sint32();
    kind_.v_list_bool_sint32_ = CreateMaybeMessage< ::feature_proto::ListBoolSint32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_sint32)
  return kind_.v_list_bool_sint32_;
}

// .feature_proto.ListBoolSint64 v_list_bool_sint64 = 248;
inline bool Feature::has_v_list_bool_sint64() const {
  return kind_case() == kVListBoolSint64;
}
inline void Feature::set_has_v_list_bool_sint64() {
  _oneof_case_[0] = kVListBoolSint64;
}
inline void Feature::clear_v_list_bool_sint64() {
  if (has_v_list_bool_sint64()) {
    delete kind_.v_list_bool_sint64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolSint64& Feature::_internal_v_list_bool_sint64() const {
  return *kind_.v_list_bool_sint64_;
}
inline ::feature_proto::ListBoolSint64* Feature::release_v_list_bool_sint64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_sint64)
  if (has_v_list_bool_sint64()) {
    clear_has_kind();
      ::feature_proto::ListBoolSint64* temp = kind_.v_list_bool_sint64_;
    kind_.v_list_bool_sint64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolSint64& Feature::v_list_bool_sint64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_sint64)
  return has_v_list_bool_sint64()
      ? *kind_.v_list_bool_sint64_
      : *reinterpret_cast< ::feature_proto::ListBoolSint64*>(&::feature_proto::_ListBoolSint64_default_instance_);
}
inline ::feature_proto::ListBoolSint64* Feature::mutable_v_list_bool_sint64() {
  if (!has_v_list_bool_sint64()) {
    clear_kind();
    set_has_v_list_bool_sint64();
    kind_.v_list_bool_sint64_ = CreateMaybeMessage< ::feature_proto::ListBoolSint64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_sint64)
  return kind_.v_list_bool_sint64_;
}

// .feature_proto.ListBoolFixed32 v_list_bool_fixed32 = 249;
inline bool Feature::has_v_list_bool_fixed32() const {
  return kind_case() == kVListBoolFixed32;
}
inline void Feature::set_has_v_list_bool_fixed32() {
  _oneof_case_[0] = kVListBoolFixed32;
}
inline void Feature::clear_v_list_bool_fixed32() {
  if (has_v_list_bool_fixed32()) {
    delete kind_.v_list_bool_fixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolFixed32& Feature::_internal_v_list_bool_fixed32() const {
  return *kind_.v_list_bool_fixed32_;
}
inline ::feature_proto::ListBoolFixed32* Feature::release_v_list_bool_fixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_fixed32)
  if (has_v_list_bool_fixed32()) {
    clear_has_kind();
      ::feature_proto::ListBoolFixed32* temp = kind_.v_list_bool_fixed32_;
    kind_.v_list_bool_fixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolFixed32& Feature::v_list_bool_fixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_fixed32)
  return has_v_list_bool_fixed32()
      ? *kind_.v_list_bool_fixed32_
      : *reinterpret_cast< ::feature_proto::ListBoolFixed32*>(&::feature_proto::_ListBoolFixed32_default_instance_);
}
inline ::feature_proto::ListBoolFixed32* Feature::mutable_v_list_bool_fixed32() {
  if (!has_v_list_bool_fixed32()) {
    clear_kind();
    set_has_v_list_bool_fixed32();
    kind_.v_list_bool_fixed32_ = CreateMaybeMessage< ::feature_proto::ListBoolFixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_fixed32)
  return kind_.v_list_bool_fixed32_;
}

// .feature_proto.ListBoolFixed64 v_list_bool_fixed64 = 250;
inline bool Feature::has_v_list_bool_fixed64() const {
  return kind_case() == kVListBoolFixed64;
}
inline void Feature::set_has_v_list_bool_fixed64() {
  _oneof_case_[0] = kVListBoolFixed64;
}
inline void Feature::clear_v_list_bool_fixed64() {
  if (has_v_list_bool_fixed64()) {
    delete kind_.v_list_bool_fixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolFixed64& Feature::_internal_v_list_bool_fixed64() const {
  return *kind_.v_list_bool_fixed64_;
}
inline ::feature_proto::ListBoolFixed64* Feature::release_v_list_bool_fixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_fixed64)
  if (has_v_list_bool_fixed64()) {
    clear_has_kind();
      ::feature_proto::ListBoolFixed64* temp = kind_.v_list_bool_fixed64_;
    kind_.v_list_bool_fixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolFixed64& Feature::v_list_bool_fixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_fixed64)
  return has_v_list_bool_fixed64()
      ? *kind_.v_list_bool_fixed64_
      : *reinterpret_cast< ::feature_proto::ListBoolFixed64*>(&::feature_proto::_ListBoolFixed64_default_instance_);
}
inline ::feature_proto::ListBoolFixed64* Feature::mutable_v_list_bool_fixed64() {
  if (!has_v_list_bool_fixed64()) {
    clear_kind();
    set_has_v_list_bool_fixed64();
    kind_.v_list_bool_fixed64_ = CreateMaybeMessage< ::feature_proto::ListBoolFixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_fixed64)
  return kind_.v_list_bool_fixed64_;
}

// .feature_proto.ListBoolSfixed32 v_list_bool_sfixed32 = 251;
inline bool Feature::has_v_list_bool_sfixed32() const {
  return kind_case() == kVListBoolSfixed32;
}
inline void Feature::set_has_v_list_bool_sfixed32() {
  _oneof_case_[0] = kVListBoolSfixed32;
}
inline void Feature::clear_v_list_bool_sfixed32() {
  if (has_v_list_bool_sfixed32()) {
    delete kind_.v_list_bool_sfixed32_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolSfixed32& Feature::_internal_v_list_bool_sfixed32() const {
  return *kind_.v_list_bool_sfixed32_;
}
inline ::feature_proto::ListBoolSfixed32* Feature::release_v_list_bool_sfixed32() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_sfixed32)
  if (has_v_list_bool_sfixed32()) {
    clear_has_kind();
      ::feature_proto::ListBoolSfixed32* temp = kind_.v_list_bool_sfixed32_;
    kind_.v_list_bool_sfixed32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolSfixed32& Feature::v_list_bool_sfixed32() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_sfixed32)
  return has_v_list_bool_sfixed32()
      ? *kind_.v_list_bool_sfixed32_
      : *reinterpret_cast< ::feature_proto::ListBoolSfixed32*>(&::feature_proto::_ListBoolSfixed32_default_instance_);
}
inline ::feature_proto::ListBoolSfixed32* Feature::mutable_v_list_bool_sfixed32() {
  if (!has_v_list_bool_sfixed32()) {
    clear_kind();
    set_has_v_list_bool_sfixed32();
    kind_.v_list_bool_sfixed32_ = CreateMaybeMessage< ::feature_proto::ListBoolSfixed32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_sfixed32)
  return kind_.v_list_bool_sfixed32_;
}

// .feature_proto.ListBoolSfixed64 v_list_bool_sfixed64 = 252;
inline bool Feature::has_v_list_bool_sfixed64() const {
  return kind_case() == kVListBoolSfixed64;
}
inline void Feature::set_has_v_list_bool_sfixed64() {
  _oneof_case_[0] = kVListBoolSfixed64;
}
inline void Feature::clear_v_list_bool_sfixed64() {
  if (has_v_list_bool_sfixed64()) {
    delete kind_.v_list_bool_sfixed64_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolSfixed64& Feature::_internal_v_list_bool_sfixed64() const {
  return *kind_.v_list_bool_sfixed64_;
}
inline ::feature_proto::ListBoolSfixed64* Feature::release_v_list_bool_sfixed64() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_sfixed64)
  if (has_v_list_bool_sfixed64()) {
    clear_has_kind();
      ::feature_proto::ListBoolSfixed64* temp = kind_.v_list_bool_sfixed64_;
    kind_.v_list_bool_sfixed64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolSfixed64& Feature::v_list_bool_sfixed64() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_sfixed64)
  return has_v_list_bool_sfixed64()
      ? *kind_.v_list_bool_sfixed64_
      : *reinterpret_cast< ::feature_proto::ListBoolSfixed64*>(&::feature_proto::_ListBoolSfixed64_default_instance_);
}
inline ::feature_proto::ListBoolSfixed64* Feature::mutable_v_list_bool_sfixed64() {
  if (!has_v_list_bool_sfixed64()) {
    clear_kind();
    set_has_v_list_bool_sfixed64();
    kind_.v_list_bool_sfixed64_ = CreateMaybeMessage< ::feature_proto::ListBoolSfixed64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_sfixed64)
  return kind_.v_list_bool_sfixed64_;
}

// .feature_proto.ListBoolBool v_list_bool_bool = 253;
inline bool Feature::has_v_list_bool_bool() const {
  return kind_case() == kVListBoolBool;
}
inline void Feature::set_has_v_list_bool_bool() {
  _oneof_case_[0] = kVListBoolBool;
}
inline void Feature::clear_v_list_bool_bool() {
  if (has_v_list_bool_bool()) {
    delete kind_.v_list_bool_bool_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolBool& Feature::_internal_v_list_bool_bool() const {
  return *kind_.v_list_bool_bool_;
}
inline ::feature_proto::ListBoolBool* Feature::release_v_list_bool_bool() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_bool)
  if (has_v_list_bool_bool()) {
    clear_has_kind();
      ::feature_proto::ListBoolBool* temp = kind_.v_list_bool_bool_;
    kind_.v_list_bool_bool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolBool& Feature::v_list_bool_bool() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_bool)
  return has_v_list_bool_bool()
      ? *kind_.v_list_bool_bool_
      : *reinterpret_cast< ::feature_proto::ListBoolBool*>(&::feature_proto::_ListBoolBool_default_instance_);
}
inline ::feature_proto::ListBoolBool* Feature::mutable_v_list_bool_bool() {
  if (!has_v_list_bool_bool()) {
    clear_kind();
    set_has_v_list_bool_bool();
    kind_.v_list_bool_bool_ = CreateMaybeMessage< ::feature_proto::ListBoolBool >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_bool)
  return kind_.v_list_bool_bool_;
}

// .feature_proto.ListBoolString v_list_bool_string = 254;
inline bool Feature::has_v_list_bool_string() const {
  return kind_case() == kVListBoolString;
}
inline void Feature::set_has_v_list_bool_string() {
  _oneof_case_[0] = kVListBoolString;
}
inline void Feature::clear_v_list_bool_string() {
  if (has_v_list_bool_string()) {
    delete kind_.v_list_bool_string_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolString& Feature::_internal_v_list_bool_string() const {
  return *kind_.v_list_bool_string_;
}
inline ::feature_proto::ListBoolString* Feature::release_v_list_bool_string() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_string)
  if (has_v_list_bool_string()) {
    clear_has_kind();
      ::feature_proto::ListBoolString* temp = kind_.v_list_bool_string_;
    kind_.v_list_bool_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolString& Feature::v_list_bool_string() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_string)
  return has_v_list_bool_string()
      ? *kind_.v_list_bool_string_
      : *reinterpret_cast< ::feature_proto::ListBoolString*>(&::feature_proto::_ListBoolString_default_instance_);
}
inline ::feature_proto::ListBoolString* Feature::mutable_v_list_bool_string() {
  if (!has_v_list_bool_string()) {
    clear_kind();
    set_has_v_list_bool_string();
    kind_.v_list_bool_string_ = CreateMaybeMessage< ::feature_proto::ListBoolString >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_string)
  return kind_.v_list_bool_string_;
}

// .feature_proto.ListBoolBytes v_list_bool_bytes = 255;
inline bool Feature::has_v_list_bool_bytes() const {
  return kind_case() == kVListBoolBytes;
}
inline void Feature::set_has_v_list_bool_bytes() {
  _oneof_case_[0] = kVListBoolBytes;
}
inline void Feature::clear_v_list_bool_bytes() {
  if (has_v_list_bool_bytes()) {
    delete kind_.v_list_bool_bytes_;
    clear_has_kind();
  }
}
inline const ::feature_proto::ListBoolBytes& Feature::_internal_v_list_bool_bytes() const {
  return *kind_.v_list_bool_bytes_;
}
inline ::feature_proto::ListBoolBytes* Feature::release_v_list_bool_bytes() {
  // @@protoc_insertion_point(field_release:feature_proto.Feature.v_list_bool_bytes)
  if (has_v_list_bool_bytes()) {
    clear_has_kind();
      ::feature_proto::ListBoolBytes* temp = kind_.v_list_bool_bytes_;
    kind_.v_list_bool_bytes_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::feature_proto::ListBoolBytes& Feature::v_list_bool_bytes() const {
  // @@protoc_insertion_point(field_get:feature_proto.Feature.v_list_bool_bytes)
  return has_v_list_bool_bytes()
      ? *kind_.v_list_bool_bytes_
      : *reinterpret_cast< ::feature_proto::ListBoolBytes*>(&::feature_proto::_ListBoolBytes_default_instance_);
}
inline ::feature_proto::ListBoolBytes* Feature::mutable_v_list_bool_bytes() {
  if (!has_v_list_bool_bytes()) {
    clear_kind();
    set_has_v_list_bool_bytes();
    kind_.v_list_bool_bytes_ = CreateMaybeMessage< ::feature_proto::ListBoolBytes >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:feature_proto.Feature.v_list_bool_bytes)
  return kind_.v_list_bool_bytes_;
}

inline bool Feature::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void Feature::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline Feature::KindCase Feature::kind_case() const {
  return Feature::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Features

// repeated .feature_proto.Feature f = 1;
inline int Features::f_size() const {
  return f_.size();
}
inline void Features::clear_f() {
  f_.Clear();
}
inline ::feature_proto::Feature* Features::mutable_f(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.Features.f)
  return f_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::feature_proto::Feature >*
Features::mutable_f() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.Features.f)
  return &f_;
}
inline const ::feature_proto::Feature& Features::f(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.Features.f)
  return f_.Get(index);
}
inline ::feature_proto::Feature* Features::add_f() {
  // @@protoc_insertion_point(field_add:feature_proto.Features.f)
  return f_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_proto::Feature >&
Features::f() const {
  // @@protoc_insertion_point(field_list:feature_proto.Features.f)
  return f_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FeaturesMap

// map<int32, .feature_proto.Feature> f = 1;
inline int FeaturesMap::f_size() const {
  return f_.size();
}
inline void FeaturesMap::clear_f() {
  f_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >&
FeaturesMap::f() const {
  // @@protoc_insertion_point(field_map:feature_proto.FeaturesMap.f)
  return f_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::feature_proto::Feature >*
FeaturesMap::mutable_f() {
  // @@protoc_insertion_point(field_mutable_map:feature_proto.FeaturesMap.f)
  return f_.MutableMap();
}

// -------------------------------------------------------------------

// FeaturesList

// repeated .feature_proto.FeaturesMap features = 1;
inline int FeaturesList::features_size() const {
  return features_.size();
}
inline void FeaturesList::clear_features() {
  features_.Clear();
}
inline ::feature_proto::FeaturesMap* FeaturesList::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:feature_proto.FeaturesList.features)
  return features_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::feature_proto::FeaturesMap >*
FeaturesList::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:feature_proto.FeaturesList.features)
  return &features_;
}
inline const ::feature_proto::FeaturesMap& FeaturesList::features(int index) const {
  // @@protoc_insertion_point(field_get:feature_proto.FeaturesList.features)
  return features_.Get(index);
}
inline ::feature_proto::FeaturesMap* FeaturesList::add_features() {
  // @@protoc_insertion_point(field_add:feature_proto.FeaturesList.features)
  return features_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::feature_proto::FeaturesMap >&
FeaturesList::features() const {
  // @@protoc_insertion_point(field_list:feature_proto.FeaturesList.features)
  return features_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace feature_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_feature_2eproto
